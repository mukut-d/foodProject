import {
  _defineProperty,
  init_defineProperty
} from "./chunk-BMAZ3NZK.js";
import {
  AlertTitle_default,
  Alert_default,
  Autocomplete_default,
  AvatarGroup_default,
  ButtonGroupContext_default,
  Button_default,
  Button_exports,
  Checkbox_exports,
  Chip_exports,
  CircularProgress_default,
  CircularProgress_exports,
  FormControlLabel_exports,
  FormControl_exports,
  FormGroup_exports,
  FormHelperText_exports,
  Hidden_exports,
  IconButton_exports,
  Icon_exports,
  InputAdornment_exports,
  InputLabel_exports,
  Input_exports,
  LinearProgress_exports,
  ListItemText_exports,
  MenuItem_exports,
  Menu_exports,
  PaginationItem_default,
  Pagination_default,
  Paper_exports,
  Rating_default,
  Select_exports,
  Skeleton_default,
  SpeedDialAction_default,
  SpeedDialIcon_default,
  SpeedDial_default,
  TableBody_exports,
  TableCell_exports,
  TableFooter_exports,
  TableHead_exports,
  TablePagination_exports,
  TableRow_exports,
  TableSortLabel_exports,
  Table_exports,
  Tabs_default,
  TextField_exports,
  ThemeProvider_default,
  ToggleButtonGroup_default,
  ToggleButton_default,
  Toolbar_exports,
  Tooltip_exports,
  Typography_default,
  Typography_exports,
  _assertThisInitialized,
  _extends,
  _inheritsLoose,
  _objectWithoutPropertiesLoose,
  capitalize,
  capitalize_default,
  chainPropTypes,
  composeClasses,
  createUnarySpacing,
  deepmerge,
  exactProp,
  generateUtilityClass,
  generateUtilityClasses,
  getDisplayName,
  getValue,
  handleBreakpoints,
  init_Alert,
  init_AlertTitle,
  init_Autocomplete,
  init_AvatarGroup,
  init_Button,
  init_ButtonGroup,
  init_Checkbox,
  init_Chip,
  init_CircularProgress,
  init_FormControl,
  init_FormControlLabel,
  init_FormGroup,
  init_FormHelperText,
  init_Hidden,
  init_Icon,
  init_IconButton,
  init_Input,
  init_InputAdornment,
  init_InputLabel,
  init_LinearProgress,
  init_ListItemText,
  init_Menu,
  init_MenuItem,
  init_Pagination,
  init_PaginationItem,
  init_Paper,
  init_Rating,
  init_Select,
  init_Skeleton,
  init_SpeedDial,
  init_SpeedDialAction,
  init_SpeedDialIcon,
  init_Table,
  init_TableBody,
  init_TableCell,
  init_TableFooter,
  init_TableHead,
  init_TablePagination,
  init_TableRow,
  init_TableSortLabel,
  init_Tabs,
  init_TextField,
  init_ThemeProvider,
  init_ToggleButton,
  init_ToggleButtonGroup,
  init_Toolbar,
  init_Tooltip,
  init_Typography,
  init_assertThisInitialized,
  init_base,
  init_esm,
  init_extends,
  init_generateUtilityClass,
  init_generateUtilityClasses,
  init_inheritsLoose,
  init_material,
  init_objectWithoutPropertiesLoose,
  init_resolveProps,
  init_styles,
  init_usePagination,
  init_useTheme,
  init_utils,
  init_utils2,
  isMuiElement_default,
  material_exports,
  nested_default,
  ponyfillGlobal_default,
  require_extends,
  require_hoist_non_react_statics_cjs,
  require_interopRequireDefault,
  require_objectWithoutPropertiesLoose,
  require_object_assign,
  require_prop_types,
  resolveBreakpointValues,
  resolveProps,
  styled_default,
  styles_exports,
  useAutocomplete,
  useEnhancedEffect_default,
  useForkRef,
  useId_default,
  usePagination,
  useTheme,
  useThemeProps
} from "./chunk-LWJ6X5NJ.js";
import {
  init_toPropertyKey,
  toPropertyKey
} from "./chunk-P5VZZMNN.js";
import {
  require_react_dom
} from "./chunk-ZW7WJ6XU.js";
import {
  require_jsx_runtime
} from "./chunk-DT77FM6J.js";
import {
  require_react
} from "./chunk-4D5CYJYK.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-CEQRFMJQ.js";

// node_modules/material-table/dist/utils/polyfill/array.find.js
var require_array_find = __commonJS({
  "node_modules/material-table/dist/utils/polyfill/array.find.js"() {
    "use strict";
    Object.defineProperty(Array.prototype, "find", {
      value: function value(predicate) {
        if (this == null) {
          throw new TypeError('"this" is null or not defined');
        }
        var o2 = Object(this);
        var len = o2.length >>> 0;
        if (typeof predicate !== "function") {
          throw new TypeError("predicate must be a function");
        }
        var thisArg = arguments[1];
        var k2 = 0;
        while (k2 < len) {
          var kValue = o2[k2];
          if (predicate.call(thisArg, kValue, k2, o2)) {
            return kValue;
          }
          k2++;
        }
        return void 0;
      }
    });
  }
});

// node_modules/material-table/dist/utils/polyfill/index.js
var require_polyfill = __commonJS({
  "node_modules/material-table/dist/utils/polyfill/index.js"() {
    "use strict";
    if (!Array.prototype.find) {
      require_array_find();
    }
  }
});

// node_modules/@babel/runtime/helpers/typeof.js
var require_typeof = __commonJS({
  "node_modules/@babel/runtime/helpers/typeof.js"(exports, module) {
    function _typeof2(o2) {
      "@babel/helpers - typeof";
      return module.exports = _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof2(o2);
    }
    module.exports = _typeof2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toPrimitive.js
var require_toPrimitive = __commonJS({
  "node_modules/@babel/runtime/helpers/toPrimitive.js"(exports, module) {
    var _typeof2 = require_typeof()["default"];
    function toPrimitive(t2, r4) {
      if ("object" != _typeof2(t2) || !t2)
        return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i2 = e2.call(t2, r4 || "default");
        if ("object" != _typeof2(i2))
          return i2;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r4 ? String : Number)(t2);
    }
    module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toPropertyKey.js
var require_toPropertyKey = __commonJS({
  "node_modules/@babel/runtime/helpers/toPropertyKey.js"(exports, module) {
    var _typeof2 = require_typeof()["default"];
    var toPrimitive = require_toPrimitive();
    function toPropertyKey2(t2) {
      var i2 = toPrimitive(t2, "string");
      return "symbol" == _typeof2(i2) ? i2 : i2 + "";
    }
    module.exports = toPropertyKey2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/@babel/runtime/helpers/defineProperty.js"(exports, module) {
    var toPropertyKey2 = require_toPropertyKey();
    function _defineProperty2(obj, key, value) {
      key = toPropertyKey2(key);
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    module.exports = _defineProperty2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/objectSpread.js
var require_objectSpread = __commonJS({
  "node_modules/@babel/runtime/helpers/objectSpread.js"(exports, module) {
    var defineProperty = require_defineProperty();
    function _objectSpread(target) {
      for (var i2 = 1; i2 < arguments.length; i2++) {
        var source = arguments[i2] != null ? Object(arguments[i2]) : {};
        var ownKeys2 = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
          ownKeys2.push.apply(ownKeys2, Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys2.forEach(function(key) {
          defineProperty(target, key, source[key]);
        });
      }
      return target;
    }
    module.exports = _objectSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/classCallCheck.js
var require_classCallCheck = __commonJS({
  "node_modules/@babel/runtime/helpers/classCallCheck.js"(exports, module) {
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/createClass.js
var require_createClass = __commonJS({
  "node_modules/@babel/runtime/helpers/createClass.js"(exports, module) {
    var toPropertyKey2 = require_toPropertyKey();
    function _defineProperties2(target, props) {
      for (var i2 = 0; i2 < props.length; i2++) {
        var descriptor = props[i2];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, toPropertyKey2(descriptor.key), descriptor);
      }
    }
    function _createClass2(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties2(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties2(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", {
        writable: false
      });
      return Constructor;
    }
    module.exports = _createClass2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/setPrototypeOf.js
var require_setPrototypeOf = __commonJS({
  "node_modules/@babel/runtime/helpers/setPrototypeOf.js"(exports, module) {
    function _setPrototypeOf(o2, p2) {
      module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
        o3.__proto__ = p3;
        return o3;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _setPrototypeOf(o2, p2);
    }
    module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/inherits.js
var require_inherits = __commonJS({
  "node_modules/@babel/runtime/helpers/inherits.js"(exports, module) {
    var setPrototypeOf = require_setPrototypeOf();
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      Object.defineProperty(subClass, "prototype", {
        writable: false
      });
      if (superClass)
        setPrototypeOf(subClass, superClass);
    }
    module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/assertThisInitialized.js
var require_assertThisInitialized = __commonJS({
  "node_modules/@babel/runtime/helpers/assertThisInitialized.js"(exports, module) {
    function _assertThisInitialized2(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    module.exports = _assertThisInitialized2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var require_possibleConstructorReturn = __commonJS({
  "node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"(exports, module) {
    var _typeof2 = require_typeof()["default"];
    var assertThisInitialized = require_assertThisInitialized();
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return assertThisInitialized(self2);
    }
    module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/getPrototypeOf.js
var require_getPrototypeOf = __commonJS({
  "node_modules/@babel/runtime/helpers/getPrototypeOf.js"(exports, module) {
    function _getPrototypeOf(o2) {
      module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
        return o3.__proto__ || Object.getPrototypeOf(o3);
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _getPrototypeOf(o2);
    }
    module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/material-table/node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/material-table/node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/material-table/node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/material-table/node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x2) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    function checkPropTypes(typeSpecs, values2, location2, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (typeSpecs.hasOwnProperty(typeSpecName)) {
            var error2;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location2 + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error2 = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location2, null, ReactPropTypesSecret);
            } catch (ex) {
              error2 = ex;
            }
            if (error2 && !(error2 instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location2 + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error2 + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error2 instanceof Error && !(error2.message in loggedTypeFailures)) {
              loggedTypeFailures[error2.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location2 + " type: " + error2.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    module.exports = checkPropTypes;
  }
});

// node_modules/material-table/node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/material-table/node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x2) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement2, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is2(x2, y2) {
        if (x2 === y2) {
          return x2 !== 0 || 1 / x2 === 1 / y2;
        } else {
          return x2 !== x2 && y2 !== y2;
        }
      }
      function PropTypeError(message) {
        this.message = message;
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location2, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location2 + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location2 + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location2, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location2, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError("Invalid " + location2 + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location2, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location2 + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i2 = 0; i2 < propValue.length; i2++) {
            var error2 = typeChecker(propValue, i2, componentName, location2, propFullName + "[" + i2 + "]", ReactPropTypesSecret);
            if (error2 instanceof Error) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location2, propFullName) {
          var propValue = props[propName];
          if (!isValidElement2(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location2 + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location2, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location2 + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          true ? printWarning("Invalid argument supplied to oneOf, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location2, propFullName) {
          var propValue = props[propName];
          for (var i2 = 0; i2 < expectedValues.length; i2++) {
            if (is2(propValue, expectedValues[i2])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues);
          return new PropTypeError("Invalid " + location2 + " `" + propFullName + "` of value `" + propValue + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location2, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location2 + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (propValue.hasOwnProperty(key)) {
              var error2 = typeChecker(propValue, key, componentName, location2, propFullName + "." + key, ReactPropTypesSecret);
              if (error2 instanceof Error) {
                return error2;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
          var checker = arrayOfTypeCheckers[i2];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i2 + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location2, propFullName) {
          for (var i3 = 0; i3 < arrayOfTypeCheckers.length; i3++) {
            var checker2 = arrayOfTypeCheckers[i3];
            if (checker2(props, propName, componentName, location2, propFullName, ReactPropTypesSecret) == null) {
              return null;
            }
          }
          return new PropTypeError("Invalid " + location2 + " `" + propFullName + "` supplied to " + ("`" + componentName + "`."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location2, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location2 + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location2, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location2 + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (!checker) {
              continue;
            }
            var error2 = checker(propValue, key, componentName, location2, propFullName + "." + key, ReactPropTypesSecret);
            if (error2) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location2, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location2 + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location2 + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error2 = checker(propValue, key, componentName, location2, propFullName + "." + key, ReactPropTypesSecret);
            if (error2) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement2(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/material-table/node_modules/prop-types/index.js
var require_prop_types2 = __commonJS({
  "node_modules/material-table/node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 60103;
      isValidElement2 = function(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      };
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(isValidElement2, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var REACT_ELEMENT_TYPE;
    var isValidElement2;
    var throwOnDirectAccess;
  }
});

// node_modules/material-table/dist/components/m-table-action.js
var require_m_table_action = __commonJS({
  "node_modules/material-table/dist/components/m-table-action.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var React62 = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var _Icon = _interopRequireDefault((init_Icon(), __toCommonJS(Icon_exports)));
    var _IconButton = _interopRequireDefault((init_IconButton(), __toCommonJS(IconButton_exports)));
    var _Tooltip = _interopRequireDefault((init_Tooltip(), __toCommonJS(Tooltip_exports)));
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTableAction = function(_React$Component) {
      (0, _inherits2.default)(MTableAction2, _React$Component);
      var _super = _createSuper(MTableAction2);
      function MTableAction2() {
        (0, _classCallCheck2.default)(this, MTableAction2);
        return _super.apply(this, arguments);
      }
      (0, _createClass2.default)(MTableAction2, [{
        key: "render",
        value: function render() {
          var _this = this;
          var action = this.props.action;
          if (typeof action === "function") {
            action = action(this.props.data);
            if (!action) {
              return null;
            }
          }
          if (action.action) {
            action = action.action(this.props.data);
            if (!action) {
              return null;
            }
          }
          if (action.hidden) {
            return null;
          }
          var disabled = action.disabled || this.props.disabled;
          var handleOnClick = function handleOnClick2(event) {
            if (action.onClick) {
              action.onClick(event, _this.props.data);
              event.stopPropagation();
            }
          };
          var icon = typeof action.icon === "string" ? React62.createElement(_Icon.default, action.iconProps, action.icon) : typeof action.icon === "function" ? action.icon((0, _objectSpread22.default)({}, action.iconProps, {
            disabled
          })) : React62.createElement(action.icon, null);
          var button = React62.createElement(_IconButton.default, {
            size: this.props.size,
            color: "inherit",
            disabled,
            onClick: handleOnClick
          }, icon);
          if (action.tooltip) {
            return disabled ? React62.createElement(_Tooltip.default, {
              title: action.tooltip
            }, React62.createElement("span", null, button)) : React62.createElement(_Tooltip.default, {
              title: action.tooltip
            }, button);
          } else {
            return button;
          }
        }
      }]);
      return MTableAction2;
    }(React62.Component);
    MTableAction.defaultProps = {
      action: {},
      data: {}
    };
    MTableAction.propTypes = {
      action: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]).isRequired,
      data: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.object)]),
      disabled: _propTypes.default.bool,
      size: _propTypes.default.string
    };
    var _default = MTableAction;
    exports.default = _default;
  }
});

// node_modules/material-table/dist/components/m-table-actions.js
var require_m_table_actions = __commonJS({
  "node_modules/material-table/dist/components/m-table-actions.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var React62 = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types2());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTableActions = function(_React$Component) {
      (0, _inherits2.default)(MTableActions2, _React$Component);
      var _super = _createSuper(MTableActions2);
      function MTableActions2() {
        (0, _classCallCheck2.default)(this, MTableActions2);
        return _super.apply(this, arguments);
      }
      (0, _createClass2.default)(MTableActions2, [{
        key: "render",
        value: function render() {
          var _this = this;
          if (this.props.actions) {
            return this.props.actions.map(function(action, index2) {
              return React62.createElement(_this.props.components.Action, {
                action,
                key: "action-" + index2,
                data: _this.props.data,
                size: _this.props.size,
                disabled: _this.props.disabled
              });
            });
          }
          return null;
        }
      }]);
      return MTableActions2;
    }(React62.Component);
    MTableActions.defaultProps = {
      actions: [],
      data: {}
    };
    MTableActions.propTypes = {
      components: _propTypes.default.object.isRequired,
      actions: _propTypes.default.array.isRequired,
      data: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.object)]),
      disabled: _propTypes.default.bool,
      size: _propTypes.default.string
    };
    var _default = MTableActions;
    exports.default = _default;
  }
});

// node_modules/@babel/runtime/helpers/arrayLikeToArray.js
var require_arrayLikeToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/arrayLikeToArray.js"(exports, module) {
    function _arrayLikeToArray2(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
        arr2[i2] = arr[i2];
      return arr2;
    }
    module.exports = _arrayLikeToArray2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/arrayWithoutHoles.js
var require_arrayWithoutHoles = __commonJS({
  "node_modules/@babel/runtime/helpers/arrayWithoutHoles.js"(exports, module) {
    var arrayLikeToArray = require_arrayLikeToArray();
    function _arrayWithoutHoles2(arr) {
      if (Array.isArray(arr))
        return arrayLikeToArray(arr);
    }
    module.exports = _arrayWithoutHoles2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/iterableToArray.js
var require_iterableToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/iterableToArray.js"(exports, module) {
    function _iterableToArray2(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    module.exports = _iterableToArray2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js
var require_unsupportedIterableToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"(exports, module) {
    var arrayLikeToArray = require_arrayLikeToArray();
    function _unsupportedIterableToArray2(o2, minLen) {
      if (!o2)
        return;
      if (typeof o2 === "string")
        return arrayLikeToArray(o2, minLen);
      var n2 = Object.prototype.toString.call(o2).slice(8, -1);
      if (n2 === "Object" && o2.constructor)
        n2 = o2.constructor.name;
      if (n2 === "Map" || n2 === "Set")
        return Array.from(o2);
      if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
        return arrayLikeToArray(o2, minLen);
    }
    module.exports = _unsupportedIterableToArray2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/nonIterableSpread.js
var require_nonIterableSpread = __commonJS({
  "node_modules/@babel/runtime/helpers/nonIterableSpread.js"(exports, module) {
    function _nonIterableSpread2() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    module.exports = _nonIterableSpread2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toConsumableArray.js
var require_toConsumableArray = __commonJS({
  "node_modules/@babel/runtime/helpers/toConsumableArray.js"(exports, module) {
    var arrayWithoutHoles = require_arrayWithoutHoles();
    var iterableToArray = require_iterableToArray();
    var unsupportedIterableToArray = require_unsupportedIterableToArray();
    var nonIterableSpread = require_nonIterableSpread();
    function _toConsumableArray2(arr) {
      return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
    }
    module.exports = _toConsumableArray2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/material-table/dist/components/m-table-body.js
var require_m_table_body = __commonJS({
  "node_modules/material-table/dist/components/m-table-body.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _toConsumableArray2 = _interopRequireDefault(require_toConsumableArray());
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _TableBody = _interopRequireDefault((init_TableBody(), __toCommonJS(TableBody_exports)));
    var _TableCell = _interopRequireDefault((init_TableCell(), __toCommonJS(TableCell_exports)));
    var _TableRow = _interopRequireDefault((init_TableRow(), __toCommonJS(TableRow_exports)));
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var React62 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTableBody = function(_React$Component) {
      (0, _inherits2.default)(MTableBody2, _React$Component);
      var _super = _createSuper(MTableBody2);
      function MTableBody2() {
        (0, _classCallCheck2.default)(this, MTableBody2);
        return _super.apply(this, arguments);
      }
      (0, _createClass2.default)(MTableBody2, [{
        key: "renderEmpty",
        value: function renderEmpty(emptyRowCount, renderData) {
          var rowHeight = this.props.options.padding === "default" ? 49 : 36;
          var localization = (0, _objectSpread22.default)({}, MTableBody2.defaultProps.localization, this.props.localization);
          if (this.props.options.showEmptyDataSourceMessage && renderData.length === 0) {
            var addColumn = 0;
            if (this.props.options.selection) {
              addColumn++;
            }
            if (this.props.actions && this.props.actions.filter(function(a2) {
              return a2.position === "row" || typeof a2 === "function";
            }).length > 0) {
              addColumn++;
            }
            if (this.props.hasDetailPanel) {
              addColumn++;
            }
            if (this.props.isTreeData) {
              addColumn++;
            }
            return React62.createElement(_TableRow.default, {
              style: {
                height: rowHeight * (this.props.options.paging && this.props.options.emptyRowsWhenPaging ? this.props.pageSize : 1)
              },
              key: "empty-0"
            }, React62.createElement(_TableCell.default, {
              style: {
                paddingTop: 0,
                paddingBottom: 0,
                textAlign: "center"
              },
              colSpan: this.props.columns.reduce(function(currentVal, columnDef) {
                return columnDef.hidden ? currentVal : currentVal + 1;
              }, addColumn),
              key: "empty-"
            }, localization.emptyDataSourceMessage));
          } else if (this.props.options.emptyRowsWhenPaging) {
            return React62.createElement(React62.Fragment, null, (0, _toConsumableArray2.default)(Array(emptyRowCount)).map(function(r4, index2) {
              return React62.createElement(_TableRow.default, {
                style: {
                  height: rowHeight
                },
                key: "empty-" + index2
              });
            }), emptyRowCount > 0 && React62.createElement(_TableRow.default, {
              style: {
                height: 1
              },
              key: "empty-last1"
            }));
          }
        }
      }, {
        key: "renderUngroupedRows",
        value: function renderUngroupedRows(renderData) {
          var _this = this;
          return renderData.map(function(data, index2) {
            if (data.tableData.editing || _this.props.bulkEditOpen) {
              return React62.createElement(_this.props.components.EditRow, {
                columns: _this.props.columns.filter(function(columnDef) {
                  return !columnDef.hidden;
                }),
                components: _this.props.components,
                data,
                errorState: _this.props.errorState,
                icons: _this.props.icons,
                localization: (0, _objectSpread22.default)({}, MTableBody2.defaultProps.localization.editRow, _this.props.localization.editRow, {
                  dateTimePickerLocalization: _this.props.localization.dateTimePickerLocalization
                }),
                key: "row-" + data.tableData.id,
                mode: _this.props.bulkEditOpen ? "bulk" : data.tableData.editing,
                options: _this.props.options,
                isTreeData: _this.props.isTreeData,
                detailPanel: _this.props.detailPanel,
                onEditingCanceled: _this.props.onEditingCanceled,
                onEditingApproved: _this.props.onEditingApproved,
                getFieldValue: _this.props.getFieldValue,
                onBulkEditRowChanged: _this.props.onBulkEditRowChanged,
                scrollWidth: _this.props.scrollWidth
              });
            } else {
              return React62.createElement(_this.props.components.Row, {
                components: _this.props.components,
                icons: _this.props.icons,
                data,
                index: index2,
                errorState: _this.props.errorState,
                key: "row-" + data.tableData.id,
                level: 0,
                options: _this.props.options,
                localization: (0, _objectSpread22.default)({}, MTableBody2.defaultProps.localization.editRow, _this.props.localization.editRow, {
                  dateTimePickerLocalization: _this.props.localization.dateTimePickerLocalization
                }),
                onRowSelected: _this.props.onRowSelected,
                actions: _this.props.actions,
                columns: _this.props.columns,
                getFieldValue: _this.props.getFieldValue,
                detailPanel: _this.props.detailPanel,
                path: [index2 + _this.props.pageSize * _this.props.currentPage],
                onToggleDetailPanel: _this.props.onToggleDetailPanel,
                onRowClick: _this.props.onRowClick,
                isTreeData: _this.props.isTreeData,
                onTreeExpandChanged: _this.props.onTreeExpandChanged,
                onEditingCanceled: _this.props.onEditingCanceled,
                onEditingApproved: _this.props.onEditingApproved,
                hasAnyEditingRow: _this.props.hasAnyEditingRow,
                treeDataMaxLevel: _this.props.treeDataMaxLevel,
                cellEditable: _this.props.cellEditable,
                onCellEditStarted: _this.props.onCellEditStarted,
                onCellEditFinished: _this.props.onCellEditFinished,
                scrollWidth: _this.props.scrollWidth
              });
            }
          });
        }
      }, {
        key: "renderGroupedRows",
        value: function renderGroupedRows(groups, renderData) {
          var _this2 = this;
          return renderData.map(function(groupData, index2) {
            return React62.createElement(_this2.props.components.GroupRow, {
              actions: _this2.props.actions,
              key: groupData.value == null ? "" + index2 : groupData.value,
              columns: _this2.props.columns,
              components: _this2.props.components,
              detailPanel: _this2.props.detailPanel,
              getFieldValue: _this2.props.getFieldValue,
              groupData,
              groups,
              icons: _this2.props.icons,
              level: 0,
              path: [index2 + _this2.props.pageSize * _this2.props.currentPage],
              onGroupExpandChanged: _this2.props.onGroupExpandChanged,
              onRowSelected: _this2.props.onRowSelected,
              onRowClick: _this2.props.onRowClick,
              onEditingCanceled: _this2.props.onEditingCanceled,
              onEditingApproved: _this2.props.onEditingApproved,
              onToggleDetailPanel: _this2.props.onToggleDetailPanel,
              onTreeExpandChanged: _this2.props.onTreeExpandChanged,
              options: _this2.props.options,
              isTreeData: _this2.props.isTreeData,
              hasAnyEditingRow: _this2.props.hasAnyEditingRow,
              localization: (0, _objectSpread22.default)({}, MTableBody2.defaultProps.localization.editRow, _this2.props.localization.editRow, {
                dateTimePickerLocalization: _this2.props.localization.dateTimePickerLocalization
              }),
              cellEditable: _this2.props.cellEditable,
              onCellEditStarted: _this2.props.onCellEditStarted,
              onCellEditFinished: _this2.props.onCellEditFinished,
              onBulkEditRowChanged: _this2.props.onBulkEditRowChanged,
              scrollWidth: _this2.props.scrollWidth
            });
          });
        }
      }, {
        key: "render",
        value: function render() {
          var renderData = this.props.renderData;
          var groups = this.props.columns.filter(function(col) {
            return col.tableData.groupOrder > -1;
          }).sort(function(col1, col2) {
            return col1.tableData.groupOrder - col2.tableData.groupOrder;
          });
          var emptyRowCount = 0;
          if (this.props.options.paging) {
            emptyRowCount = this.props.pageSize - renderData.length;
          }
          return React62.createElement(_TableBody.default, null, this.props.options.filtering && React62.createElement(this.props.components.FilterRow, {
            columns: this.props.columns.filter(function(columnDef) {
              return !columnDef.hidden;
            }),
            icons: this.props.icons,
            hasActions: this.props.actions.filter(function(a2) {
              return a2.position === "row" || typeof a2 === "function";
            }).length > 0,
            actionsColumnIndex: this.props.options.actionsColumnIndex,
            onFilterChanged: this.props.onFilterChanged,
            selection: this.props.options.selection,
            localization: (0, _objectSpread22.default)({}, MTableBody2.defaultProps.localization.filterRow, this.props.localization.filterRow, {
              dateTimePickerLocalization: this.props.localization.dateTimePickerLocalization
            }),
            hasDetailPanel: !!this.props.detailPanel,
            detailPanelColumnAlignment: this.props.options.detailPanelColumnAlignment,
            isTreeData: this.props.isTreeData,
            filterCellStyle: this.props.options.filterCellStyle,
            filterRowStyle: this.props.options.filterRowStyle,
            hideFilterIcons: this.props.options.hideFilterIcons,
            scrollWidth: this.props.scrollWidth
          }), this.props.showAddRow && this.props.options.addRowPosition === "first" && React62.createElement(this.props.components.EditRow, {
            columns: this.props.columns.filter(function(columnDef) {
              return !columnDef.hidden;
            }),
            data: this.props.initialFormData,
            components: this.props.components,
            errorState: this.props.errorState,
            icons: this.props.icons,
            key: "key-add-row",
            mode: "add",
            localization: (0, _objectSpread22.default)({}, MTableBody2.defaultProps.localization.editRow, this.props.localization.editRow, {
              dateTimePickerLocalization: this.props.localization.dateTimePickerLocalization
            }),
            options: this.props.options,
            isTreeData: this.props.isTreeData,
            detailPanel: this.props.detailPanel,
            onEditingCanceled: this.props.onEditingCanceled,
            onEditingApproved: this.props.onEditingApproved,
            getFieldValue: this.props.getFieldValue,
            scrollWidth: this.props.scrollWidth
          }), groups.length > 0 ? this.renderGroupedRows(groups, renderData) : this.renderUngroupedRows(renderData), this.props.showAddRow && this.props.options.addRowPosition === "last" && React62.createElement(this.props.components.EditRow, {
            columns: this.props.columns.filter(function(columnDef) {
              return !columnDef.hidden;
            }),
            data: this.props.initialFormData,
            components: this.props.components,
            errorState: this.props.errorState,
            icons: this.props.icons,
            key: "key-add-row",
            mode: "add",
            localization: (0, _objectSpread22.default)({}, MTableBody2.defaultProps.localization.editRow, this.props.localization.editRow, {
              dateTimePickerLocalization: this.props.localization.dateTimePickerLocalization
            }),
            options: this.props.options,
            isTreeData: this.props.isTreeData,
            detailPanel: this.props.detailPanel,
            onEditingCanceled: this.props.onEditingCanceled,
            onEditingApproved: this.props.onEditingApproved,
            getFieldValue: this.props.getFieldValue,
            scrollWidth: this.props.scrollWidth
          }), this.renderEmpty(emptyRowCount, renderData));
        }
      }]);
      return MTableBody2;
    }(React62.Component);
    MTableBody.defaultProps = {
      actions: [],
      currentPage: 0,
      pageSize: 5,
      renderData: [],
      selection: false,
      localization: {
        emptyDataSourceMessage: "No records to display",
        filterRow: {},
        editRow: {}
      }
    };
    MTableBody.propTypes = {
      actions: _propTypes.default.array,
      components: _propTypes.default.object.isRequired,
      columns: _propTypes.default.array.isRequired,
      currentPage: _propTypes.default.number,
      detailPanel: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]))]),
      getFieldValue: _propTypes.default.func.isRequired,
      hasAnyEditingRow: _propTypes.default.bool,
      hasDetailPanel: _propTypes.default.bool.isRequired,
      icons: _propTypes.default.object.isRequired,
      isTreeData: _propTypes.default.bool.isRequired,
      onRowSelected: _propTypes.default.func,
      options: _propTypes.default.object.isRequired,
      pageSize: _propTypes.default.number,
      renderData: _propTypes.default.array,
      initialFormData: _propTypes.default.object,
      selection: _propTypes.default.bool.isRequired,
      scrollWidth: _propTypes.default.number.isRequired,
      showAddRow: _propTypes.default.bool,
      treeDataMaxLevel: _propTypes.default.number,
      localization: _propTypes.default.object,
      onFilterChanged: _propTypes.default.func,
      onGroupExpandChanged: _propTypes.default.func,
      onToggleDetailPanel: _propTypes.default.func.isRequired,
      onTreeExpandChanged: _propTypes.default.func.isRequired,
      onRowClick: _propTypes.default.func,
      onEditingCanceled: _propTypes.default.func,
      onEditingApproved: _propTypes.default.func,
      errorState: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.bool]),
      cellEditable: _propTypes.default.object,
      onCellEditStarted: _propTypes.default.func,
      onCellEditFinished: _propTypes.default.func,
      bulkEditOpen: _propTypes.default.bool,
      onBulkEditRowChanged: _propTypes.default.func
    };
    var _default = MTableBody;
    exports.default = _default;
  }
});

// node_modules/@babel/runtime/helpers/objectWithoutProperties.js
var require_objectWithoutProperties = __commonJS({
  "node_modules/@babel/runtime/helpers/objectWithoutProperties.js"(exports, module) {
    var objectWithoutPropertiesLoose = require_objectWithoutPropertiesLoose();
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = objectWithoutPropertiesLoose(source, excluded);
      var key, i2;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
          key = sourceSymbolKeys[i2];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    module.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/material-table/dist/utils/common-values.js
var require_common_values = __commonJS({
  "node_modules/material-table/dist/utils/common-values.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.selectionMaxWidth = exports.rowActions = exports.reducePercentsInCalc = exports.elementSize = exports.baseIconSize = exports.actionsColumnWidth = void 0;
    var elementSize = function elementSize2(props) {
      return props.options.padding === "default" ? "medium" : "small";
    };
    exports.elementSize = elementSize;
    var baseIconSize = function baseIconSize2(props) {
      return elementSize(props) === "medium" ? 48 : 32;
    };
    exports.baseIconSize = baseIconSize;
    var rowActions = function rowActions2(props) {
      return props.actions.filter(function(a2) {
        return a2.position === "row" || typeof a2 === "function";
      });
    };
    exports.rowActions = rowActions;
    var actionsColumnWidth = function actionsColumnWidth2(props) {
      return rowActions(props).length * baseIconSize(props);
    };
    exports.actionsColumnWidth = actionsColumnWidth;
    var selectionMaxWidth = function selectionMaxWidth2(props, maxTreeLevel) {
      return baseIconSize(props) + 9 * maxTreeLevel;
    };
    exports.selectionMaxWidth = selectionMaxWidth;
    var reducePercentsInCalc = function reducePercentsInCalc2(calc, fullValue) {
      var captureGroups = calc.match(/(\d*)%/);
      if (captureGroups && captureGroups.length > 1) {
        var percentage = captureGroups[1];
        return calc.replace(/\d*%/, "".concat(fullValue * (percentage / 100), "px"));
      }
      return calc.replace(/\d*%/, "".concat(fullValue, "px"));
    };
    exports.reducePercentsInCalc = reducePercentsInCalc;
  }
});

// node_modules/material-table/dist/components/m-table-body-row.js
var require_m_table_body_row = __commonJS({
  "node_modules/material-table/dist/components/m-table-body-row.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _toConsumableArray2 = _interopRequireDefault(require_toConsumableArray());
    var _objectWithoutProperties2 = _interopRequireDefault(require_objectWithoutProperties());
    var _extends2 = _interopRequireDefault(require_extends());
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _Checkbox = _interopRequireDefault((init_Checkbox(), __toCommonJS(Checkbox_exports)));
    var _TableCell = _interopRequireDefault((init_TableCell(), __toCommonJS(TableCell_exports)));
    var _TableRow = _interopRequireDefault((init_TableRow(), __toCommonJS(TableRow_exports)));
    var _IconButton = _interopRequireDefault((init_IconButton(), __toCommonJS(IconButton_exports)));
    var _Icon = _interopRequireDefault((init_Icon(), __toCommonJS(Icon_exports)));
    var _Tooltip = _interopRequireDefault((init_Tooltip(), __toCommonJS(Tooltip_exports)));
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var React62 = _interopRequireWildcard(require_react());
    var CommonValues = _interopRequireWildcard(require_common_values());
    var _excluded21 = ["icons", "data", "columns", "components", "detailPanel", "getFieldValue", "isTreeData", "onRowClick", "onRowSelected", "onTreeExpandChanged", "onToggleDetailPanel", "onEditingCanceled", "onEditingApproved", "options", "hasAnyEditingRow", "treeDataMaxLevel", "localization", "actions", "errorState", "cellEditable", "onCellEditStarted", "onCellEditFinished", "scrollWidth"];
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTableBodyRow = function(_React$Component) {
      (0, _inherits2.default)(MTableBodyRow2, _React$Component);
      var _super = _createSuper(MTableBodyRow2);
      function MTableBodyRow2() {
        var _this;
        (0, _classCallCheck2.default)(this, MTableBodyRow2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rotateIconStyle", function(isOpen) {
          return {
            transform: isOpen ? "rotate(90deg)" : "none"
          };
        });
        return _this;
      }
      (0, _createClass2.default)(MTableBodyRow2, [{
        key: "renderColumns",
        value: function renderColumns() {
          var _this2 = this;
          var size = CommonValues.elementSize(this.props);
          var mapArr = this.props.columns.filter(function(columnDef) {
            return !columnDef.hidden && !(columnDef.tableData.groupOrder > -1);
          }).sort(function(a2, b2) {
            return a2.tableData.columnOrder - b2.tableData.columnOrder;
          }).map(function(columnDef, index2) {
            var value = _this2.props.getFieldValue(_this2.props.data, columnDef);
            if (_this2.props.data.tableData.editCellList && _this2.props.data.tableData.editCellList.find(function(c2) {
              return c2.tableData.id === columnDef.tableData.id;
            })) {
              return React62.createElement(_this2.props.components.EditCell, {
                components: _this2.props.components,
                icons: _this2.props.icons,
                localization: _this2.props.localization,
                columnDef,
                size,
                key: "cell-" + _this2.props.data.tableData.id + "-" + columnDef.tableData.id,
                rowData: _this2.props.data,
                cellEditable: _this2.props.cellEditable,
                onCellEditFinished: _this2.props.onCellEditFinished,
                scrollWidth: _this2.props.scrollWidth
              });
            } else {
              return React62.createElement(_this2.props.components.Cell, {
                size,
                errorState: _this2.props.errorState,
                icons: _this2.props.icons,
                columnDef: (0, _objectSpread22.default)({
                  cellStyle: _this2.props.options.cellStyle
                }, columnDef),
                value,
                key: "cell-" + _this2.props.data.tableData.id + "-" + columnDef.tableData.id,
                rowData: _this2.props.data,
                cellEditable: columnDef.editable !== "never" && !!_this2.props.cellEditable,
                onCellEditStarted: _this2.props.onCellEditStarted,
                scrollWidth: _this2.props.scrollWidth
              });
            }
          });
          return mapArr;
        }
      }, {
        key: "renderActions",
        value: function renderActions() {
          var size = CommonValues.elementSize(this.props);
          var actions = CommonValues.rowActions(this.props);
          var width = actions.length * CommonValues.baseIconSize(this.props);
          return React62.createElement(_TableCell.default, {
            size,
            padding: "none",
            key: "key-actions-column",
            style: (0, _objectSpread22.default)({
              width,
              padding: "0px 5px",
              boxSizing: "border-box"
            }, this.props.options.actionsCellStyle)
          }, React62.createElement("div", {
            style: {
              display: "flex"
            }
          }, React62.createElement(this.props.components.Actions, {
            data: this.props.data,
            actions,
            components: this.props.components,
            size,
            disabled: this.props.hasAnyEditingRow
          })));
        }
      }, {
        key: "renderSelectionColumn",
        value: function renderSelectionColumn() {
          var _this3 = this;
          var checkboxProps = this.props.options.selectionProps || {};
          if (typeof checkboxProps === "function") {
            checkboxProps = checkboxProps(this.props.data);
          }
          var size = CommonValues.elementSize(this.props);
          var selectionWidth = CommonValues.selectionMaxWidth(this.props, this.props.treeDataMaxLevel);
          var styles = size === "medium" ? {
            marginLeft: this.props.level * 9
          } : {
            padding: "4px",
            marginLeft: 5 + this.props.level * 9
          };
          return React62.createElement(_TableCell.default, {
            size,
            padding: "none",
            key: "key-selection-column",
            style: {
              width: selectionWidth
            }
          }, React62.createElement(_Checkbox.default, (0, _extends2.default)({
            size,
            checked: this.props.data.tableData.checked === true,
            onClick: function onClick(e2) {
              return e2.stopPropagation();
            },
            value: this.props.data.tableData.id.toString(),
            onChange: function onChange(event) {
              return _this3.props.onRowSelected(event, _this3.props.path, _this3.props.data);
            },
            style: styles
          }, checkboxProps)));
        }
      }, {
        key: "renderDetailPanelColumn",
        value: function renderDetailPanelColumn() {
          var _this4 = this;
          var size = CommonValues.elementSize(this.props);
          var CustomIcon = function CustomIcon2(_ref) {
            var icon = _ref.icon, iconProps = _ref.iconProps;
            return typeof icon === "string" ? React62.createElement(_Icon.default, iconProps, icon) : React62.createElement(icon, (0, _objectSpread22.default)({}, iconProps));
          };
          if (typeof this.props.detailPanel == "function") {
            return React62.createElement(_TableCell.default, {
              size,
              padding: "none",
              key: "key-detail-panel-column",
              style: (0, _objectSpread22.default)({
                width: 42,
                textAlign: "center"
              }, this.props.options.detailPanelColumnStyle)
            }, React62.createElement(_IconButton.default, {
              size,
              style: (0, _objectSpread22.default)({
                transition: "all ease 200ms"
              }, this.rotateIconStyle(this.props.data.tableData.showDetailPanel)),
              onClick: function onClick(event) {
                _this4.props.onToggleDetailPanel(_this4.props.path, _this4.props.detailPanel);
                event.stopPropagation();
              }
            }, React62.createElement(this.props.icons.DetailPanel, null)));
          } else {
            return React62.createElement(_TableCell.default, {
              size,
              padding: "none",
              key: "key-detail-panel-column"
            }, React62.createElement("div", {
              style: (0, _objectSpread22.default)({
                width: 42 * this.props.detailPanel.length,
                textAlign: "center",
                display: "flex"
              }, this.props.options.detailPanelColumnStyle)
            }, this.props.detailPanel.map(function(panel, index2) {
              if (typeof panel === "function") {
                panel = panel(_this4.props.data);
              }
              var isOpen = (_this4.props.data.tableData.showDetailPanel || "").toString() === panel.render.toString();
              var iconButton = React62.createElement(_this4.props.icons.DetailPanel, null);
              var animation = true;
              if (isOpen) {
                if (panel.openIcon) {
                  iconButton = React62.createElement(CustomIcon, {
                    icon: panel.openIcon,
                    iconProps: panel.iconProps
                  });
                  animation = false;
                } else if (panel.icon) {
                  iconButton = React62.createElement(CustomIcon, {
                    icon: panel.icon,
                    iconProps: panel.iconProps
                  });
                }
              } else if (panel.icon) {
                iconButton = React62.createElement(CustomIcon, {
                  icon: panel.icon,
                  iconProps: panel.iconProps
                });
                animation = false;
              }
              iconButton = React62.createElement(_IconButton.default, {
                size,
                key: "key-detail-panel-" + index2,
                style: (0, _objectSpread22.default)({
                  transition: "all ease 200ms"
                }, _this4.rotateIconStyle(animation && isOpen)),
                disabled: panel.disabled,
                onClick: function onClick(event) {
                  _this4.props.onToggleDetailPanel(_this4.props.path, panel.render);
                  event.stopPropagation();
                }
              }, iconButton);
              if (panel.tooltip) {
                iconButton = React62.createElement(_Tooltip.default, {
                  key: "key-detail-panel-" + index2,
                  title: panel.tooltip
                }, iconButton);
              }
              return iconButton;
            })));
          }
        }
      }, {
        key: "renderTreeDataColumn",
        value: function renderTreeDataColumn() {
          var _this5 = this;
          var size = CommonValues.elementSize(this.props);
          if (this.props.data.tableData.childRows && this.props.data.tableData.childRows.length > 0) {
            return React62.createElement(_TableCell.default, {
              size,
              padding: "none",
              key: "key-tree-data-column",
              style: {
                width: 48 + 9 * (this.props.treeDataMaxLevel - 2)
              }
            }, React62.createElement(_IconButton.default, {
              size,
              style: (0, _objectSpread22.default)({
                transition: "all ease 200ms",
                marginLeft: this.props.level * 9
              }, this.rotateIconStyle(this.props.data.tableData.isTreeExpanded)),
              onClick: function onClick(event) {
                _this5.props.onTreeExpandChanged(_this5.props.path, _this5.props.data);
                event.stopPropagation();
              }
            }, React62.createElement(this.props.icons.DetailPanel, null)));
          } else {
            return React62.createElement(_TableCell.default, {
              padding: "none",
              key: "key-tree-data-column"
            });
          }
        }
      }, {
        key: "getStyle",
        value: function getStyle4(index2, level) {
          var style2 = {
            transition: "all ease 300ms"
          };
          if (typeof this.props.options.rowStyle === "function") {
            style2 = (0, _objectSpread22.default)({}, style2, this.props.options.rowStyle(this.props.data, index2, level, this.props.hasAnyEditingRow));
          } else if (this.props.options.rowStyle) {
            style2 = (0, _objectSpread22.default)({}, style2, this.props.options.rowStyle);
          }
          if (this.props.onRowClick) {
            style2.cursor = "pointer";
          }
          if (this.props.hasAnyEditingRow) {
            style2.opacity = style2.opacity ? style2.opacity : 0.2;
          }
          return style2;
        }
      }, {
        key: "render",
        value: function render() {
          var _this6 = this;
          var size = CommonValues.elementSize(this.props);
          var renderColumns = this.renderColumns();
          if (this.props.options.selection) {
            renderColumns.splice(0, 0, this.renderSelectionColumn());
          }
          if (this.props.actions && this.props.actions.filter(function(a2) {
            return a2.position === "row" || typeof a2 === "function";
          }).length > 0) {
            if (this.props.options.actionsColumnIndex === -1) {
              renderColumns.push(this.renderActions());
            } else if (this.props.options.actionsColumnIndex >= 0) {
              var endPos = 0;
              if (this.props.options.selection) {
                endPos = 1;
              }
              renderColumns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());
            }
          }
          if (this.props.detailPanel) {
            if (this.props.options.detailPanelColumnAlignment === "right") {
              renderColumns.push(this.renderDetailPanelColumn());
            } else {
              renderColumns.splice(0, 0, this.renderDetailPanelColumn());
            }
          }
          if (this.props.isTreeData) {
            renderColumns.splice(0, 0, this.renderTreeDataColumn());
          }
          this.props.columns.filter(function(columnDef) {
            return columnDef.tableData.groupOrder > -1;
          }).forEach(function(columnDef) {
            renderColumns.splice(0, 0, React62.createElement(_TableCell.default, {
              size,
              padding: "none",
              key: "key-group-cell" + columnDef.tableData.id
            }));
          });
          var _this$props = this.props, icons = _this$props.icons, data = _this$props.data, columns = _this$props.columns, components = _this$props.components, detailPanel = _this$props.detailPanel, getFieldValue = _this$props.getFieldValue, isTreeData = _this$props.isTreeData, onRowClick = _this$props.onRowClick, onRowSelected = _this$props.onRowSelected, onTreeExpandChanged = _this$props.onTreeExpandChanged, onToggleDetailPanel = _this$props.onToggleDetailPanel, onEditingCanceled = _this$props.onEditingCanceled, onEditingApproved = _this$props.onEditingApproved, options = _this$props.options, hasAnyEditingRow = _this$props.hasAnyEditingRow, treeDataMaxLevel = _this$props.treeDataMaxLevel, localization = _this$props.localization, actions = _this$props.actions, errorState = _this$props.errorState, cellEditable = _this$props.cellEditable, onCellEditStarted = _this$props.onCellEditStarted, onCellEditFinished = _this$props.onCellEditFinished, scrollWidth = _this$props.scrollWidth, rowProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded21);
          return React62.createElement(React62.Fragment, null, React62.createElement(_TableRow.default, (0, _extends2.default)({
            selected: hasAnyEditingRow
          }, rowProps, {
            hover: onRowClick ? true : false,
            style: this.getStyle(this.props.index, this.props.level),
            onClick: function onClick(event) {
              onRowClick && onRowClick(event, _this6.props.data, function(panelIndex) {
                var panel = detailPanel;
                if (Array.isArray(panel)) {
                  panel = panel[panelIndex || 0];
                  if (typeof panel === "function") {
                    panel = panel(_this6.props.data);
                  }
                  panel = panel.render;
                }
                onToggleDetailPanel(_this6.props.path, panel);
              });
            }
          }), renderColumns), this.props.data.tableData && this.props.data.tableData.showDetailPanel && React62.createElement(
            _TableRow.default,
            null,
            React62.createElement(_TableCell.default, {
              size,
              colSpan: renderColumns.length,
              padding: "none"
            }, this.props.data.tableData.showDetailPanel(this.props.data))
          ), this.props.data.tableData.childRows && this.props.data.tableData.isTreeExpanded && this.props.data.tableData.childRows.map(function(data2, index2) {
            if (data2.tableData.editing) {
              return React62.createElement(_this6.props.components.EditRow, {
                columns: _this6.props.columns.filter(function(columnDef) {
                  return !columnDef.hidden;
                }),
                components: _this6.props.components,
                data: data2,
                icons: _this6.props.icons,
                localization: _this6.props.localization,
                getFieldValue: _this6.props.getFieldValue,
                key: index2,
                mode: data2.tableData.editing,
                options: _this6.props.options,
                isTreeData: _this6.props.isTreeData,
                detailPanel: _this6.props.detailPanel,
                onEditingCanceled,
                onEditingApproved,
                errorState: _this6.props.errorState
              });
            } else {
              return React62.createElement(_this6.props.components.Row, (0, _extends2.default)({}, _this6.props, {
                data: data2,
                index: index2,
                key: index2,
                level: _this6.props.level + 1,
                path: [].concat((0, _toConsumableArray2.default)(_this6.props.path), [index2]),
                onEditingCanceled,
                onEditingApproved,
                hasAnyEditingRow: _this6.props.hasAnyEditingRow,
                treeDataMaxLevel,
                errorState: _this6.props.errorState,
                cellEditable,
                onCellEditStarted,
                onCellEditFinished
              }));
            }
          }));
        }
      }]);
      return MTableBodyRow2;
    }(React62.Component);
    exports.default = MTableBodyRow;
    MTableBodyRow.defaultProps = {
      actions: [],
      index: 0,
      data: {},
      options: {},
      path: []
    };
    MTableBodyRow.propTypes = {
      actions: _propTypes.default.array,
      icons: _propTypes.default.any.isRequired,
      index: _propTypes.default.number.isRequired,
      data: _propTypes.default.object.isRequired,
      detailPanel: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]))]),
      hasAnyEditingRow: _propTypes.default.bool,
      options: _propTypes.default.object.isRequired,
      onRowSelected: _propTypes.default.func,
      path: _propTypes.default.arrayOf(_propTypes.default.number),
      treeDataMaxLevel: _propTypes.default.number,
      getFieldValue: _propTypes.default.func.isRequired,
      columns: _propTypes.default.array,
      onToggleDetailPanel: _propTypes.default.func.isRequired,
      onRowClick: _propTypes.default.func,
      onEditingApproved: _propTypes.default.func,
      onEditingCanceled: _propTypes.default.func,
      errorState: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.bool])
    };
  }
});

// node_modules/@babel/runtime/helpers/esm/objectSpread2.js
function ownKeys(e2, r4) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e2);
    r4 && (o2 = o2.filter(function(r5) {
      return Object.getOwnPropertyDescriptor(e2, r5).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread2(e2) {
  for (var r4 = 1; r4 < arguments.length; r4++) {
    var t2 = null != arguments[r4] ? arguments[r4] : {};
    r4 % 2 ? ownKeys(Object(t2), true).forEach(function(r5) {
      _defineProperty(e2, r5, t2[r5]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r5) {
      Object.defineProperty(e2, r5, Object.getOwnPropertyDescriptor(t2, r5));
    });
  }
  return e2;
}
var init_objectSpread2 = __esm({
  "node_modules/@babel/runtime/helpers/esm/objectSpread2.js"() {
    init_defineProperty();
  }
});

// node_modules/react-beautiful-dnd/node_modules/redux/es/redux.js
function isPlainObject(obj) {
  if (typeof obj !== "object" || obj === null)
    return false;
  var proto = obj;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(obj) === proto;
}
function miniKindOf(val) {
  if (val === void 0)
    return "undefined";
  if (val === null)
    return "null";
  var type = typeof val;
  switch (type) {
    case "boolean":
    case "string":
    case "number":
    case "symbol":
    case "function": {
      return type;
    }
  }
  if (Array.isArray(val))
    return "array";
  if (isDate(val))
    return "date";
  if (isError(val))
    return "error";
  var constructorName = ctorName(val);
  switch (constructorName) {
    case "Symbol":
    case "Promise":
    case "WeakMap":
    case "WeakSet":
    case "Map":
    case "Set":
      return constructorName;
  }
  return type.slice(8, -1).toLowerCase().replace(/\s/g, "");
}
function ctorName(val) {
  return typeof val.constructor === "function" ? val.constructor.name : null;
}
function isError(val) {
  return val instanceof Error || typeof val.message === "string" && val.constructor && typeof val.constructor.stackTraceLimit === "number";
}
function isDate(val) {
  if (val instanceof Date)
    return true;
  return typeof val.toDateString === "function" && typeof val.getDate === "function" && typeof val.setDate === "function";
}
function kindOf(val) {
  var typeOfVal = typeof val;
  if (true) {
    typeOfVal = miniKindOf(val);
  }
  return typeOfVal;
}
function createStore(reducer2, preloadedState, enhancer) {
  var _ref2;
  if (typeof preloadedState === "function" && typeof enhancer === "function" || typeof enhancer === "function" && typeof arguments[3] === "function") {
    throw new Error(false ? formatProdErrorMessage(0) : "It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.");
  }
  if (typeof preloadedState === "function" && typeof enhancer === "undefined") {
    enhancer = preloadedState;
    preloadedState = void 0;
  }
  if (typeof enhancer !== "undefined") {
    if (typeof enhancer !== "function") {
      throw new Error(false ? formatProdErrorMessage(1) : "Expected the enhancer to be a function. Instead, received: '" + kindOf(enhancer) + "'");
    }
    return enhancer(createStore)(reducer2, preloadedState);
  }
  if (typeof reducer2 !== "function") {
    throw new Error(false ? formatProdErrorMessage(2) : "Expected the root reducer to be a function. Instead, received: '" + kindOf(reducer2) + "'");
  }
  var currentReducer = reducer2;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  function getState() {
    if (isDispatching) {
      throw new Error(false ? formatProdErrorMessage(3) : "You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
    }
    return currentState;
  }
  function subscribe(listener) {
    if (typeof listener !== "function") {
      throw new Error(false ? formatProdErrorMessage(4) : "Expected the listener to be a function. Instead, received: '" + kindOf(listener) + "'");
    }
    if (isDispatching) {
      throw new Error(false ? formatProdErrorMessage(5) : "You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api/store#subscribelistener for more details.");
    }
    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }
      if (isDispatching) {
        throw new Error(false ? formatProdErrorMessage(6) : "You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api/store#subscribelistener for more details.");
      }
      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index2 = nextListeners.indexOf(listener);
      nextListeners.splice(index2, 1);
      currentListeners = null;
    };
  }
  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error(false ? formatProdErrorMessage(7) : "Actions must be plain objects. Instead, the actual type was: '" + kindOf(action) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    }
    if (typeof action.type === "undefined") {
      throw new Error(false ? formatProdErrorMessage(8) : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    }
    if (isDispatching) {
      throw new Error(false ? formatProdErrorMessage(9) : "Reducers may not dispatch actions.");
    }
    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }
    var listeners = currentListeners = nextListeners;
    for (var i2 = 0; i2 < listeners.length; i2++) {
      var listener = listeners[i2];
      listener();
    }
    return action;
  }
  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== "function") {
      throw new Error(false ? formatProdErrorMessage(10) : "Expected the nextReducer to be a function. Instead, received: '" + kindOf(nextReducer));
    }
    currentReducer = nextReducer;
    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  function observable() {
    var _ref;
    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe2(observer) {
        if (typeof observer !== "object" || observer === null) {
          throw new Error(false ? formatProdErrorMessage(11) : "Expected the observer to be an object. Instead, received: '" + kindOf(observer) + "'");
        }
        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }
        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe
        };
      }
    }, _ref[$$observable] = function() {
      return this;
    }, _ref;
  }
  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch,
    subscribe,
    getState,
    replaceReducer
  }, _ref2[$$observable] = observable, _ref2;
}
function bindActionCreator(actionCreator, dispatch) {
  return function() {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === "function") {
    return bindActionCreator(actionCreators, dispatch);
  }
  if (typeof actionCreators !== "object" || actionCreators === null) {
    throw new Error(false ? formatProdErrorMessage(16) : "bindActionCreators expected an object or a function, but instead received: '" + kindOf(actionCreators) + `'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?`);
  }
  var boundActionCreators = {};
  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];
    if (typeof actionCreator === "function") {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }
  return boundActionCreators;
}
function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }
  if (funcs.length === 0) {
    return function(arg) {
      return arg;
    };
  }
  if (funcs.length === 1) {
    return funcs[0];
  }
  return funcs.reduce(function(a2, b2) {
    return function() {
      return a2(b2.apply(void 0, arguments));
    };
  });
}
function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }
  return function(createStore3) {
    return function() {
      var store = createStore3.apply(void 0, arguments);
      var _dispatch = function dispatch() {
        throw new Error(false ? formatProdErrorMessage(15) : "Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.");
      };
      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function(middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return _objectSpread2(_objectSpread2({}, store), {}, {
        dispatch: _dispatch
      });
    };
  };
}
var $$observable, randomString, ActionTypes;
var init_redux = __esm({
  "node_modules/react-beautiful-dnd/node_modules/redux/es/redux.js"() {
    init_objectSpread2();
    $$observable = function() {
      return typeof Symbol === "function" && Symbol.observable || "@@observable";
    }();
    randomString = function randomString2() {
      return Math.random().toString(36).substring(7).split("").join(".");
    };
    ActionTypes = {
      INIT: "@@redux/INIT" + randomString(),
      REPLACE: "@@redux/REPLACE" + randomString(),
      PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
        return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
      }
    };
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/components/Context.js
var import_react, ReactReduxContext;
var init_Context = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/components/Context.js"() {
    import_react = __toESM(require_react());
    ReactReduxContext = import_react.default.createContext(null);
    if (true) {
      ReactReduxContext.displayName = "ReactRedux";
    }
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/batch.js
function defaultNoopBatch(callback) {
  callback();
}
var batch, setBatch, getBatch;
var init_batch = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/batch.js"() {
    batch = defaultNoopBatch;
    setBatch = function setBatch2(newBatch) {
      return batch = newBatch;
    };
    getBatch = function getBatch2() {
      return batch;
    };
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/Subscription.js
function createListenerCollection() {
  var batch2 = getBatch();
  var first = null;
  var last = null;
  return {
    clear: function clear() {
      first = null;
      last = null;
    },
    notify: function notify2() {
      batch2(function() {
        var listener = first;
        while (listener) {
          listener.callback();
          listener = listener.next;
        }
      });
    },
    get: function get2() {
      var listeners = [];
      var listener = first;
      while (listener) {
        listeners.push(listener);
        listener = listener.next;
      }
      return listeners;
    },
    subscribe: function subscribe(callback) {
      var isSubscribed = true;
      var listener = last = {
        callback,
        next: null,
        prev: last
      };
      if (listener.prev) {
        listener.prev.next = listener;
      } else {
        first = listener;
      }
      return function unsubscribe() {
        if (!isSubscribed || first === null)
          return;
        isSubscribed = false;
        if (listener.next) {
          listener.next.prev = listener.prev;
        } else {
          last = listener.prev;
        }
        if (listener.prev) {
          listener.prev.next = listener.next;
        } else {
          first = listener.next;
        }
      };
    }
  };
}
function createSubscription(store, parentSub) {
  var unsubscribe;
  var listeners = nullListeners;
  function addNestedSub(listener) {
    trySubscribe();
    return listeners.subscribe(listener);
  }
  function notifyNestedSubs() {
    listeners.notify();
  }
  function handleChangeWrapper() {
    if (subscription.onStateChange) {
      subscription.onStateChange();
    }
  }
  function isSubscribed() {
    return Boolean(unsubscribe);
  }
  function trySubscribe() {
    if (!unsubscribe) {
      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);
      listeners = createListenerCollection();
    }
  }
  function tryUnsubscribe() {
    if (unsubscribe) {
      unsubscribe();
      unsubscribe = void 0;
      listeners.clear();
      listeners = nullListeners;
    }
  }
  var subscription = {
    addNestedSub,
    notifyNestedSubs,
    handleChangeWrapper,
    isSubscribed,
    trySubscribe,
    tryUnsubscribe,
    getListeners: function getListeners() {
      return listeners;
    }
  };
  return subscription;
}
var nullListeners;
var init_Subscription = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/Subscription.js"() {
    init_batch();
    nullListeners = {
      notify: function notify() {
      },
      get: function get() {
        return [];
      }
    };
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js
var import_react2, useIsomorphicLayoutEffect;
var init_useIsomorphicLayoutEffect = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js"() {
    import_react2 = __toESM(require_react());
    useIsomorphicLayoutEffect = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined" ? import_react2.useLayoutEffect : import_react2.useEffect;
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/components/Provider.js
function Provider(_ref) {
  var store = _ref.store, context = _ref.context, children = _ref.children;
  var contextValue = (0, import_react3.useMemo)(function() {
    var subscription = createSubscription(store);
    return {
      store,
      subscription
    };
  }, [store]);
  var previousState = (0, import_react3.useMemo)(function() {
    return store.getState();
  }, [store]);
  useIsomorphicLayoutEffect(function() {
    var subscription = contextValue.subscription;
    subscription.onStateChange = subscription.notifyNestedSubs;
    subscription.trySubscribe();
    if (previousState !== store.getState()) {
      subscription.notifyNestedSubs();
    }
    return function() {
      subscription.tryUnsubscribe();
      subscription.onStateChange = null;
    };
  }, [contextValue, previousState]);
  var Context2 = context || ReactReduxContext;
  return import_react3.default.createElement(Context2.Provider, {
    value: contextValue
  }, children);
}
var import_react3, import_prop_types, Provider_default;
var init_Provider = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/components/Provider.js"() {
    import_react3 = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    init_Context();
    init_Subscription();
    init_useIsomorphicLayoutEffect();
    if (true) {
      Provider.propTypes = {
        store: import_prop_types.default.shape({
          subscribe: import_prop_types.default.func.isRequired,
          dispatch: import_prop_types.default.func.isRequired,
          getState: import_prop_types.default.func.isRequired
        }),
        context: import_prop_types.default.object,
        children: import_prop_types.default.any
      };
    }
    Provider_default = Provider;
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-beautiful-dnd/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = 60103;
        var REACT_PORTAL_TYPE = 60106;
        var REACT_FRAGMENT_TYPE = 60107;
        var REACT_STRICT_MODE_TYPE = 60108;
        var REACT_PROFILER_TYPE = 60114;
        var REACT_PROVIDER_TYPE = 60109;
        var REACT_CONTEXT_TYPE = 60110;
        var REACT_FORWARD_REF_TYPE = 60112;
        var REACT_SUSPENSE_TYPE = 60113;
        var REACT_SUSPENSE_LIST_TYPE = 60120;
        var REACT_MEMO_TYPE = 60115;
        var REACT_LAZY_TYPE = 60116;
        var REACT_BLOCK_TYPE = 60121;
        var REACT_SERVER_BLOCK_TYPE = 60122;
        var REACT_FUNDAMENTAL_TYPE = 60117;
        var REACT_SCOPE_TYPE = 60119;
        var REACT_OPAQUE_ID_TYPE = 60128;
        var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
        var REACT_OFFSCREEN_TYPE = 60130;
        var REACT_LEGACY_HIDDEN_TYPE = 60131;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          REACT_ELEMENT_TYPE = symbolFor("react.element");
          REACT_PORTAL_TYPE = symbolFor("react.portal");
          REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
          REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
          REACT_PROFILER_TYPE = symbolFor("react.profiler");
          REACT_PROVIDER_TYPE = symbolFor("react.provider");
          REACT_CONTEXT_TYPE = symbolFor("react.context");
          REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
          REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
          REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
          REACT_MEMO_TYPE = symbolFor("react.memo");
          REACT_LAZY_TYPE = symbolFor("react.lazy");
          REACT_BLOCK_TYPE = symbolFor("react.block");
          REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
          REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
          REACT_SCOPE_TYPE = symbolFor("react.scope");
          REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
          REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
          REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
          REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
        }
        var enableScopeAPI = false;
        function isValidElementType2(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer2(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer2;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType2;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-beautiful-dnd/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/components/connectAdvanced.js
function storeStateUpdatesReducer(state, action) {
  var updateCount = state[1];
  return [action.payload, updateCount + 1];
}
function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
  useIsomorphicLayoutEffect(function() {
    return effectFunc.apply(void 0, effectArgs);
  }, dependencies);
}
function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs) {
  lastWrapperProps.current = wrapperProps;
  lastChildProps.current = actualChildProps;
  renderIsScheduled.current = false;
  if (childPropsFromStoreUpdate.current) {
    childPropsFromStoreUpdate.current = null;
    notifyNestedSubs();
  }
}
function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch) {
  if (!shouldHandleStateChanges)
    return;
  var didUnsubscribe = false;
  var lastThrownError = null;
  var checkForUpdates = function checkForUpdates2() {
    if (didUnsubscribe) {
      return;
    }
    var latestStoreState = store.getState();
    var newChildProps, error2;
    try {
      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
    } catch (e2) {
      error2 = e2;
      lastThrownError = e2;
    }
    if (!error2) {
      lastThrownError = null;
    }
    if (newChildProps === lastChildProps.current) {
      if (!renderIsScheduled.current) {
        notifyNestedSubs();
      }
    } else {
      lastChildProps.current = newChildProps;
      childPropsFromStoreUpdate.current = newChildProps;
      renderIsScheduled.current = true;
      forceComponentUpdateDispatch({
        type: "STORE_UPDATED",
        payload: {
          error: error2
        }
      });
    }
  };
  subscription.onStateChange = checkForUpdates;
  subscription.trySubscribe();
  checkForUpdates();
  var unsubscribeWrapper = function unsubscribeWrapper2() {
    didUnsubscribe = true;
    subscription.tryUnsubscribe();
    subscription.onStateChange = null;
    if (lastThrownError) {
      throw lastThrownError;
    }
  };
  return unsubscribeWrapper;
}
function connectAdvanced(selectorFactory, _ref) {
  if (_ref === void 0) {
    _ref = {};
  }
  var _ref2 = _ref, _ref2$getDisplayName = _ref2.getDisplayName, getDisplayName2 = _ref2$getDisplayName === void 0 ? function(name) {
    return "ConnectAdvanced(" + name + ")";
  } : _ref2$getDisplayName, _ref2$methodName = _ref2.methodName, methodName = _ref2$methodName === void 0 ? "connectAdvanced" : _ref2$methodName, _ref2$renderCountProp = _ref2.renderCountProp, renderCountProp = _ref2$renderCountProp === void 0 ? void 0 : _ref2$renderCountProp, _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges, shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta, _ref2$storeKey = _ref2.storeKey, storeKey = _ref2$storeKey === void 0 ? "store" : _ref2$storeKey, _ref2$withRef = _ref2.withRef, withRef = _ref2$withRef === void 0 ? false : _ref2$withRef, _ref2$forwardRef = _ref2.forwardRef, forwardRef53 = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef, _ref2$context = _ref2.context, context = _ref2$context === void 0 ? ReactReduxContext : _ref2$context, connectOptions = _objectWithoutPropertiesLoose(_ref2, _excluded);
  if (true) {
    if (renderCountProp !== void 0) {
      throw new Error("renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension");
    }
    if (withRef) {
      throw new Error("withRef is removed. To access the wrapped instance, use a ref on the connected component");
    }
    var customStoreWarningMessage = "To use a custom Redux store for specific components, create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. You may also pass a {context : MyContext} option to connect";
    if (storeKey !== "store") {
      throw new Error("storeKey has been removed and does not do anything. " + customStoreWarningMessage);
    }
  }
  var Context2 = context;
  return function wrapWithConnect(WrappedComponent) {
    if (!(0, import_react_is.isValidElementType)(WrappedComponent)) {
      throw new Error("You must pass a component to the function returned by " + (methodName + ". Instead received " + stringifyComponent(WrappedComponent)));
    }
    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || "Component";
    var displayName = getDisplayName2(wrappedComponentName);
    var selectorFactoryOptions = _extends({}, connectOptions, {
      getDisplayName: getDisplayName2,
      methodName,
      renderCountProp,
      shouldHandleStateChanges,
      storeKey,
      displayName,
      wrappedComponentName,
      WrappedComponent
    });
    var pure = connectOptions.pure;
    function createChildSelector(store) {
      return selectorFactory(store.dispatch, selectorFactoryOptions);
    }
    var usePureOnlyMemo = pure ? import_react4.useMemo : function(callback) {
      return callback();
    };
    function ConnectFunction(props) {
      var _useMemo = (0, import_react4.useMemo)(function() {
        var reactReduxForwardedRef2 = props.reactReduxForwardedRef, wrapperProps2 = _objectWithoutPropertiesLoose(props, _excluded2);
        return [props.context, reactReduxForwardedRef2, wrapperProps2];
      }, [props]), propsContext = _useMemo[0], reactReduxForwardedRef = _useMemo[1], wrapperProps = _useMemo[2];
      var ContextToUse = (0, import_react4.useMemo)(function() {
        return propsContext && propsContext.Consumer && (0, import_react_is.isContextConsumer)(import_react4.default.createElement(propsContext.Consumer, null)) ? propsContext : Context2;
      }, [propsContext, Context2]);
      var contextValue = (0, import_react4.useContext)(ContextToUse);
      var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
      var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);
      if (!didStoreComeFromProps && !didStoreComeFromContext) {
        throw new Error('Could not find "store" in the context of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + "or pass a custom React context provider to <Provider> and the corresponding " + ("React context consumer to " + displayName + " in connect options."));
      }
      var store = didStoreComeFromProps ? props.store : contextValue.store;
      var childPropsSelector = (0, import_react4.useMemo)(function() {
        return createChildSelector(store);
      }, [store]);
      var _useMemo2 = (0, import_react4.useMemo)(function() {
        if (!shouldHandleStateChanges)
          return NO_SUBSCRIPTION_ARRAY;
        var subscription2 = createSubscription(store, didStoreComeFromProps ? null : contextValue.subscription);
        var notifyNestedSubs2 = subscription2.notifyNestedSubs.bind(subscription2);
        return [subscription2, notifyNestedSubs2];
      }, [store, didStoreComeFromProps, contextValue]), subscription = _useMemo2[0], notifyNestedSubs = _useMemo2[1];
      var overriddenContextValue = (0, import_react4.useMemo)(function() {
        if (didStoreComeFromProps) {
          return contextValue;
        }
        return _extends({}, contextValue, {
          subscription
        });
      }, [didStoreComeFromProps, contextValue, subscription]);
      var _useReducer = (0, import_react4.useReducer)(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates), _useReducer$ = _useReducer[0], previousStateUpdateResult = _useReducer$[0], forceComponentUpdateDispatch = _useReducer[1];
      if (previousStateUpdateResult && previousStateUpdateResult.error) {
        throw previousStateUpdateResult.error;
      }
      var lastChildProps = (0, import_react4.useRef)();
      var lastWrapperProps = (0, import_react4.useRef)(wrapperProps);
      var childPropsFromStoreUpdate = (0, import_react4.useRef)();
      var renderIsScheduled = (0, import_react4.useRef)(false);
      var actualChildProps = usePureOnlyMemo(function() {
        if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
          return childPropsFromStoreUpdate.current;
        }
        return childPropsSelector(store.getState(), wrapperProps);
      }, [store, previousStateUpdateResult, wrapperProps]);
      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs]);
      useIsomorphicLayoutEffectWithArgs(subscribeUpdates, [shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch], [store, subscription, childPropsSelector]);
      var renderedWrappedComponent = (0, import_react4.useMemo)(function() {
        return import_react4.default.createElement(WrappedComponent, _extends({}, actualChildProps, {
          ref: reactReduxForwardedRef
        }));
      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]);
      var renderedChild = (0, import_react4.useMemo)(function() {
        if (shouldHandleStateChanges) {
          return import_react4.default.createElement(ContextToUse.Provider, {
            value: overriddenContextValue
          }, renderedWrappedComponent);
        }
        return renderedWrappedComponent;
      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
      return renderedChild;
    }
    var Connect = pure ? import_react4.default.memo(ConnectFunction) : ConnectFunction;
    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = ConnectFunction.displayName = displayName;
    if (forwardRef53) {
      var forwarded = import_react4.default.forwardRef(function forwardConnectRef(props, ref2) {
        return import_react4.default.createElement(Connect, _extends({}, props, {
          reactReduxForwardedRef: ref2
        }));
      });
      forwarded.displayName = displayName;
      forwarded.WrappedComponent = WrappedComponent;
      return (0, import_hoist_non_react_statics.default)(forwarded, WrappedComponent);
    }
    return (0, import_hoist_non_react_statics.default)(Connect, WrappedComponent);
  };
}
var import_hoist_non_react_statics, import_react4, import_react_is, _excluded, _excluded2, EMPTY_ARRAY, NO_SUBSCRIPTION_ARRAY, stringifyComponent, initStateUpdates;
var init_connectAdvanced = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/components/connectAdvanced.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());
    import_react4 = __toESM(require_react());
    import_react_is = __toESM(require_react_is());
    init_Subscription();
    init_useIsomorphicLayoutEffect();
    init_Context();
    _excluded = ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"];
    _excluded2 = ["reactReduxForwardedRef"];
    EMPTY_ARRAY = [];
    NO_SUBSCRIPTION_ARRAY = [null, null];
    stringifyComponent = function stringifyComponent2(Comp) {
      try {
        return JSON.stringify(Comp);
      } catch (err) {
        return String(Comp);
      }
    };
    initStateUpdates = function initStateUpdates2() {
      return [null, 0];
    };
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/shallowEqual.js
function is(x2, y2) {
  if (x2 === y2) {
    return x2 !== 0 || y2 !== 0 || 1 / x2 === 1 / y2;
  } else {
    return x2 !== x2 && y2 !== y2;
  }
}
function shallowEqual(objA, objB) {
  if (is(objA, objB))
    return true;
  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
    return false;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length)
    return false;
  for (var i2 = 0; i2 < keysA.length; i2++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i2]) || !is(objA[keysA[i2]], objB[keysA[i2]])) {
      return false;
    }
  }
  return true;
}
var init_shallowEqual = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/shallowEqual.js"() {
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/bindActionCreators.js
function bindActionCreators2(actionCreators, dispatch) {
  var boundActionCreators = {};
  var _loop = function _loop2(key2) {
    var actionCreator = actionCreators[key2];
    if (typeof actionCreator === "function") {
      boundActionCreators[key2] = function() {
        return dispatch(actionCreator.apply(void 0, arguments));
      };
    }
  };
  for (var key in actionCreators) {
    _loop(key);
  }
  return boundActionCreators;
}
var init_bindActionCreators = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/bindActionCreators.js"() {
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/isPlainObject.js
function isPlainObject2(obj) {
  if (typeof obj !== "object" || obj === null)
    return false;
  var proto = Object.getPrototypeOf(obj);
  if (proto === null)
    return true;
  var baseProto = proto;
  while (Object.getPrototypeOf(baseProto) !== null) {
    baseProto = Object.getPrototypeOf(baseProto);
  }
  return proto === baseProto;
}
var init_isPlainObject = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/isPlainObject.js"() {
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/warning.js
function warning(message) {
  if (typeof console !== "undefined" && typeof console.error === "function") {
    console.error(message);
  }
  try {
    throw new Error(message);
  } catch (e2) {
  }
}
var init_warning = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/warning.js"() {
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/verifyPlainObject.js
function verifyPlainObject(value, displayName, methodName) {
  if (!isPlainObject2(value)) {
    warning(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
  }
}
var init_verifyPlainObject = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/verifyPlainObject.js"() {
    init_isPlainObject();
    init_warning();
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/wrapMapToProps.js
function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);
    function constantSelector() {
      return constant;
    }
    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
}
function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== void 0 ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
}
function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;
    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    };
    proxy.dependsOnOwnProps = true;
    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);
      if (typeof props === "function") {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }
      if (true)
        verifyPlainObject(props, displayName, methodName);
      return props;
    };
    return proxy;
  };
}
var init_wrapMapToProps = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/wrapMapToProps.js"() {
    init_verifyPlainObject();
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/mapDispatchToProps.js
function whenMapDispatchToPropsIsFunction(mapDispatchToProps2) {
  return typeof mapDispatchToProps2 === "function" ? wrapMapToPropsFunc(mapDispatchToProps2, "mapDispatchToProps") : void 0;
}
function whenMapDispatchToPropsIsMissing(mapDispatchToProps2) {
  return !mapDispatchToProps2 ? wrapMapToPropsConstant(function(dispatch) {
    return {
      dispatch
    };
  }) : void 0;
}
function whenMapDispatchToPropsIsObject(mapDispatchToProps2) {
  return mapDispatchToProps2 && typeof mapDispatchToProps2 === "object" ? wrapMapToPropsConstant(function(dispatch) {
    return bindActionCreators2(mapDispatchToProps2, dispatch);
  }) : void 0;
}
var mapDispatchToProps_default;
var init_mapDispatchToProps = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/mapDispatchToProps.js"() {
    init_bindActionCreators();
    init_wrapMapToProps();
    mapDispatchToProps_default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/mapStateToProps.js
function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === "function" ? wrapMapToPropsFunc(mapStateToProps, "mapStateToProps") : void 0;
}
function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? wrapMapToPropsConstant(function() {
    return {};
  }) : void 0;
}
var mapStateToProps_default;
var init_mapStateToProps = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/mapStateToProps.js"() {
    init_wrapMapToProps();
    mapStateToProps_default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/mergeProps.js
function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return _extends({}, ownProps, stateProps, dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName, pure = _ref.pure, areMergedPropsEqual = _ref.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps))
          mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (true)
          verifyPlainObject(mergedProps, displayName, "mergeProps");
      }
      return mergedProps;
    };
  };
}
function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === "function" ? wrapMergePropsFunc(mergeProps) : void 0;
}
function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function() {
    return defaultMergeProps;
  } : void 0;
}
var mergeProps_default;
var init_mergeProps = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/mergeProps.js"() {
    init_extends();
    init_verifyPlainObject();
    mergeProps_default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/verifySubselectors.js
function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
  } else if (methodName === "mapStateToProps" || methodName === "mapDispatchToProps") {
    if (!Object.prototype.hasOwnProperty.call(selector, "dependsOnOwnProps")) {
      warning("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
    }
  }
}
function verifySubselectors(mapStateToProps, mapDispatchToProps2, mergeProps, displayName) {
  verify(mapStateToProps, "mapStateToProps", displayName);
  verify(mapDispatchToProps2, "mapDispatchToProps", displayName);
  verify(mergeProps, "mergeProps", displayName);
}
var init_verifySubselectors = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/verifySubselectors.js"() {
    init_warning();
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/selectorFactory.js
function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps2, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps2(dispatch, ownProps), ownProps);
  };
}
function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps2, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual, areOwnPropsEqual = _ref.areOwnPropsEqual, areStatePropsEqual = _ref.areStatePropsEqual;
  var hasRunAtLeastOnce = false;
  var state;
  var ownProps;
  var stateProps;
  var dispatchProps;
  var mergedProps;
  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps2(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }
  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps2.dependsOnOwnProps)
      dispatchProps = mapDispatchToProps2(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }
  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps)
      stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps2.dependsOnOwnProps)
      dispatchProps = mapDispatchToProps2(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }
  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;
    if (statePropsChanged)
      mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }
  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state, nextOwnProps, ownProps);
    state = nextState;
    ownProps = nextOwnProps;
    if (propsChanged && stateChanged)
      return handleNewPropsAndNewState();
    if (propsChanged)
      return handleNewProps();
    if (stateChanged)
      return handleNewState();
    return mergedProps;
  }
  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
}
function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps, initMapDispatchToProps = _ref2.initMapDispatchToProps, initMergeProps = _ref2.initMergeProps, options = _objectWithoutPropertiesLoose(_ref2, _excluded3);
  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps2 = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);
  if (true) {
    verifySubselectors(mapStateToProps, mapDispatchToProps2, mergeProps, options.displayName);
  }
  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
  return selectorFactory(mapStateToProps, mapDispatchToProps2, mergeProps, dispatch, options);
}
var _excluded3;
var init_selectorFactory = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/selectorFactory.js"() {
    init_objectWithoutPropertiesLoose();
    init_verifySubselectors();
    _excluded3 = ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"];
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/connect.js
function match(arg, factories, name) {
  for (var i2 = factories.length - 1; i2 >= 0; i2--) {
    var result = factories[i2](arg);
    if (result)
      return result;
  }
  return function(dispatch, options) {
    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
  };
}
function strictEqual(a2, b2) {
  return a2 === b2;
}
function createConnect(_temp) {
  var _ref = _temp === void 0 ? {} : _temp, _ref$connectHOC = _ref.connectHOC, connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC, _ref$mapStateToPropsF = _ref.mapStateToPropsFactories, mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? mapStateToProps_default : _ref$mapStateToPropsF, _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories, mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? mapDispatchToProps_default : _ref$mapDispatchToPro, _ref$mergePropsFactor = _ref.mergePropsFactories, mergePropsFactories = _ref$mergePropsFactor === void 0 ? mergeProps_default : _ref$mergePropsFactor, _ref$selectorFactory = _ref.selectorFactory, selectorFactory = _ref$selectorFactory === void 0 ? finalPropsSelectorFactory : _ref$selectorFactory;
  return function connect(mapStateToProps, mapDispatchToProps2, mergeProps, _ref2) {
    if (_ref2 === void 0) {
      _ref2 = {};
    }
    var _ref3 = _ref2, _ref3$pure = _ref3.pure, pure = _ref3$pure === void 0 ? true : _ref3$pure, _ref3$areStatesEqual = _ref3.areStatesEqual, areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual, _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual, areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua, _ref3$areStatePropsEq = _ref3.areStatePropsEqual, areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq, _ref3$areMergedPropsE = _ref3.areMergedPropsEqual, areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE, extraOptions = _objectWithoutPropertiesLoose(_ref3, _excluded4);
    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, "mapStateToProps");
    var initMapDispatchToProps = match(mapDispatchToProps2, mapDispatchToPropsFactories, "mapDispatchToProps");
    var initMergeProps = match(mergeProps, mergePropsFactories, "mergeProps");
    return connectHOC(selectorFactory, _extends({
      // used in error messages
      methodName: "connect",
      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName2(name) {
        return "Connect(" + name + ")";
      },
      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),
      // passed through to selectorFactory
      initMapStateToProps,
      initMapDispatchToProps,
      initMergeProps,
      pure,
      areStatesEqual,
      areOwnPropsEqual,
      areStatePropsEqual,
      areMergedPropsEqual
    }, extraOptions));
  };
}
var _excluded4, connect_default;
var init_connect = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/connect/connect.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    init_connectAdvanced();
    init_shallowEqual();
    init_mapDispatchToProps();
    init_mapStateToProps();
    init_mergeProps();
    init_selectorFactory();
    _excluded4 = ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"];
    connect_default = createConnect();
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/hooks/useReduxContext.js
function useReduxContext() {
  var contextValue = (0, import_react5.useContext)(ReactReduxContext);
  if (!contextValue) {
    throw new Error("could not find react-redux context value; please ensure the component is wrapped in a <Provider>");
  }
  return contextValue;
}
var import_react5;
var init_useReduxContext = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/hooks/useReduxContext.js"() {
    import_react5 = __toESM(require_react());
    init_Context();
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/hooks/useStore.js
function createStoreHook(context) {
  if (context === void 0) {
    context = ReactReduxContext;
  }
  var useReduxContext2 = context === ReactReduxContext ? useReduxContext : function() {
    return (0, import_react6.useContext)(context);
  };
  return function useStore2() {
    var _useReduxContext = useReduxContext2(), store = _useReduxContext.store;
    return store;
  };
}
var import_react6, useStore;
var init_useStore = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/hooks/useStore.js"() {
    import_react6 = __toESM(require_react());
    init_Context();
    init_useReduxContext();
    useStore = createStoreHook();
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/hooks/useDispatch.js
function createDispatchHook(context) {
  if (context === void 0) {
    context = ReactReduxContext;
  }
  var useStore2 = context === ReactReduxContext ? useStore : createStoreHook(context);
  return function useDispatch2() {
    var store = useStore2();
    return store.dispatch;
  };
}
var useDispatch;
var init_useDispatch = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/hooks/useDispatch.js"() {
    init_Context();
    init_useStore();
    useDispatch = createDispatchHook();
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/hooks/useSelector.js
function useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {
  var _useReducer = (0, import_react7.useReducer)(function(s2) {
    return s2 + 1;
  }, 0), forceRender = _useReducer[1];
  var subscription = (0, import_react7.useMemo)(function() {
    return createSubscription(store, contextSub);
  }, [store, contextSub]);
  var latestSubscriptionCallbackError = (0, import_react7.useRef)();
  var latestSelector = (0, import_react7.useRef)();
  var latestStoreState = (0, import_react7.useRef)();
  var latestSelectedState = (0, import_react7.useRef)();
  var storeState = store.getState();
  var selectedState;
  try {
    if (selector !== latestSelector.current || storeState !== latestStoreState.current || latestSubscriptionCallbackError.current) {
      var newSelectedState = selector(storeState);
      if (latestSelectedState.current === void 0 || !equalityFn(newSelectedState, latestSelectedState.current)) {
        selectedState = newSelectedState;
      } else {
        selectedState = latestSelectedState.current;
      }
    } else {
      selectedState = latestSelectedState.current;
    }
  } catch (err) {
    if (latestSubscriptionCallbackError.current) {
      err.message += "\nThe error may be correlated with this previous error:\n" + latestSubscriptionCallbackError.current.stack + "\n\n";
    }
    throw err;
  }
  useIsomorphicLayoutEffect(function() {
    latestSelector.current = selector;
    latestStoreState.current = storeState;
    latestSelectedState.current = selectedState;
    latestSubscriptionCallbackError.current = void 0;
  });
  useIsomorphicLayoutEffect(function() {
    function checkForUpdates() {
      try {
        var newStoreState = store.getState();
        if (newStoreState === latestStoreState.current) {
          return;
        }
        var _newSelectedState = latestSelector.current(newStoreState);
        if (equalityFn(_newSelectedState, latestSelectedState.current)) {
          return;
        }
        latestSelectedState.current = _newSelectedState;
        latestStoreState.current = newStoreState;
      } catch (err) {
        latestSubscriptionCallbackError.current = err;
      }
      forceRender();
    }
    subscription.onStateChange = checkForUpdates;
    subscription.trySubscribe();
    checkForUpdates();
    return function() {
      return subscription.tryUnsubscribe();
    };
  }, [store, subscription]);
  return selectedState;
}
function createSelectorHook(context) {
  if (context === void 0) {
    context = ReactReduxContext;
  }
  var useReduxContext2 = context === ReactReduxContext ? useReduxContext : function() {
    return (0, import_react7.useContext)(context);
  };
  return function useSelector2(selector, equalityFn) {
    if (equalityFn === void 0) {
      equalityFn = refEquality;
    }
    if (true) {
      if (!selector) {
        throw new Error("You must pass a selector to useSelector");
      }
      if (typeof selector !== "function") {
        throw new Error("You must pass a function as a selector to useSelector");
      }
      if (typeof equalityFn !== "function") {
        throw new Error("You must pass a function as an equality function to useSelector");
      }
    }
    var _useReduxContext = useReduxContext2(), store = _useReduxContext.store, contextSub = _useReduxContext.subscription;
    var selectedState = useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);
    (0, import_react7.useDebugValue)(selectedState);
    return selectedState;
  };
}
var import_react7, refEquality, useSelector;
var init_useSelector = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/hooks/useSelector.js"() {
    import_react7 = __toESM(require_react());
    init_useReduxContext();
    init_Subscription();
    init_useIsomorphicLayoutEffect();
    init_Context();
    refEquality = function refEquality2(a2, b2) {
      return a2 === b2;
    };
    useSelector = createSelectorHook();
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/exports.js
var init_exports = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/exports.js"() {
    init_Provider();
    init_connectAdvanced();
    init_Context();
    init_connect();
    init_useDispatch();
    init_useSelector();
    init_useStore();
    init_shallowEqual();
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/reactBatchedUpdates.js
var import_react_dom;
var init_reactBatchedUpdates = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/utils/reactBatchedUpdates.js"() {
    import_react_dom = __toESM(require_react_dom());
  }
});

// node_modules/react-beautiful-dnd/node_modules/react-redux/es/index.js
var init_es = __esm({
  "node_modules/react-beautiful-dnd/node_modules/react-redux/es/index.js"() {
    init_exports();
    init_reactBatchedUpdates();
    init_batch();
    setBatch(import_react_dom.unstable_batchedUpdates);
  }
});

// node_modules/use-memo-one/dist/use-memo-one.esm.js
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i2 = 0; i2 < newInputs.length; i2++) {
    if (newInputs[i2] !== lastInputs[i2]) {
      return false;
    }
  }
  return true;
}
function useMemoOne(getResult, inputs) {
  var initial = (0, import_react8.useState)(function() {
    return {
      inputs,
      result: getResult()
    };
  })[0];
  var isFirstRun = (0, import_react8.useRef)(true);
  var committed = (0, import_react8.useRef)(initial);
  var useCache = isFirstRun.current || Boolean(inputs && committed.current.inputs && areInputsEqual(inputs, committed.current.inputs));
  var cache3 = useCache ? committed.current : {
    inputs,
    result: getResult()
  };
  (0, import_react8.useEffect)(function() {
    isFirstRun.current = false;
    committed.current = cache3;
  }, [cache3]);
  return cache3.result;
}
function useCallbackOne(callback, inputs) {
  return useMemoOne(function() {
    return callback;
  }, inputs);
}
var import_react8, useMemo4, useCallback;
var init_use_memo_one_esm = __esm({
  "node_modules/use-memo-one/dist/use-memo-one.esm.js"() {
    import_react8 = __toESM(require_react());
    useMemo4 = useMemoOne;
    useCallback = useCallbackOne;
  }
});

// node_modules/tiny-invariant/dist/esm/tiny-invariant.js
function invariant(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction) {
    throw new Error(prefix);
  }
  var provided = typeof message === "function" ? message() : message;
  var value = provided ? "".concat(prefix, ": ").concat(provided) : prefix;
  throw new Error(value);
}
var isProduction, prefix;
var init_tiny_invariant = __esm({
  "node_modules/tiny-invariant/dist/esm/tiny-invariant.js"() {
    isProduction = false;
    prefix = "Invariant failed";
  }
});

// node_modules/css-box-model/dist/css-box-model.esm.js
var getRect, expand, shrink, shift, noSpacing, createBox, parse, getWindowScroll, offset, withScroll, calculateBox, getBox;
var init_css_box_model_esm = __esm({
  "node_modules/css-box-model/dist/css-box-model.esm.js"() {
    init_tiny_invariant();
    getRect = function getRect2(_ref) {
      var top = _ref.top, right = _ref.right, bottom = _ref.bottom, left = _ref.left;
      var width = right - left;
      var height = bottom - top;
      var rect = {
        top,
        right,
        bottom,
        left,
        width,
        height,
        x: left,
        y: top,
        center: {
          x: (right + left) / 2,
          y: (bottom + top) / 2
        }
      };
      return rect;
    };
    expand = function expand2(target, expandBy) {
      return {
        top: target.top - expandBy.top,
        left: target.left - expandBy.left,
        bottom: target.bottom + expandBy.bottom,
        right: target.right + expandBy.right
      };
    };
    shrink = function shrink2(target, shrinkBy) {
      return {
        top: target.top + shrinkBy.top,
        left: target.left + shrinkBy.left,
        bottom: target.bottom - shrinkBy.bottom,
        right: target.right - shrinkBy.right
      };
    };
    shift = function shift2(target, shiftBy) {
      return {
        top: target.top + shiftBy.y,
        left: target.left + shiftBy.x,
        bottom: target.bottom + shiftBy.y,
        right: target.right + shiftBy.x
      };
    };
    noSpacing = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    };
    createBox = function createBox2(_ref2) {
      var borderBox = _ref2.borderBox, _ref2$margin = _ref2.margin, margin = _ref2$margin === void 0 ? noSpacing : _ref2$margin, _ref2$border = _ref2.border, border = _ref2$border === void 0 ? noSpacing : _ref2$border, _ref2$padding = _ref2.padding, padding = _ref2$padding === void 0 ? noSpacing : _ref2$padding;
      var marginBox = getRect(expand(borderBox, margin));
      var paddingBox = getRect(shrink(borderBox, border));
      var contentBox = getRect(shrink(paddingBox, padding));
      return {
        marginBox,
        borderBox: getRect(borderBox),
        paddingBox,
        contentBox,
        margin,
        border,
        padding
      };
    };
    parse = function parse2(raw) {
      var value = raw.slice(0, -2);
      var suffix2 = raw.slice(-2);
      if (suffix2 !== "px") {
        return 0;
      }
      var result = Number(value);
      !!isNaN(result) ? true ? invariant(false, "Could not parse value [raw: " + raw + ", without suffix: " + value + "]") : invariant(false) : void 0;
      return result;
    };
    getWindowScroll = function getWindowScroll2() {
      return {
        x: window.pageXOffset,
        y: window.pageYOffset
      };
    };
    offset = function offset2(original, change) {
      var borderBox = original.borderBox, border = original.border, margin = original.margin, padding = original.padding;
      var shifted = shift(borderBox, change);
      return createBox({
        borderBox: shifted,
        border,
        margin,
        padding
      });
    };
    withScroll = function withScroll2(original, scroll3) {
      if (scroll3 === void 0) {
        scroll3 = getWindowScroll();
      }
      return offset(original, scroll3);
    };
    calculateBox = function calculateBox2(borderBox, styles) {
      var margin = {
        top: parse(styles.marginTop),
        right: parse(styles.marginRight),
        bottom: parse(styles.marginBottom),
        left: parse(styles.marginLeft)
      };
      var padding = {
        top: parse(styles.paddingTop),
        right: parse(styles.paddingRight),
        bottom: parse(styles.paddingBottom),
        left: parse(styles.paddingLeft)
      };
      var border = {
        top: parse(styles.borderTopWidth),
        right: parse(styles.borderRightWidth),
        bottom: parse(styles.borderBottomWidth),
        left: parse(styles.borderLeftWidth)
      };
      return createBox({
        borderBox,
        margin,
        padding,
        border
      });
    };
    getBox = function getBox2(el2) {
      var borderBox = el2.getBoundingClientRect();
      var styles = window.getComputedStyle(el2);
      return calculateBox(borderBox, styles);
    };
  }
});

// node_modules/memoize-one/dist/memoize-one.esm.js
function isEqual(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual2(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i2 = 0; i2 < newInputs.length; i2++) {
    if (!isEqual(newInputs[i2], lastInputs[i2])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual5) {
  if (isEqual5 === void 0) {
    isEqual5 = areInputsEqual2;
  }
  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (calledOnce && lastThis === this && isEqual5(newArgs, lastArgs)) {
      return lastResult;
    }
    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }
  return memoized;
}
var safeIsNaN, memoize_one_esm_default;
var init_memoize_one_esm = __esm({
  "node_modules/memoize-one/dist/memoize-one.esm.js"() {
    safeIsNaN = Number.isNaN || function ponyfill(value) {
      return typeof value === "number" && value !== value;
    };
    memoize_one_esm_default = memoizeOne;
  }
});

// node_modules/raf-schd/dist/raf-schd.esm.js
var rafSchd, raf_schd_esm_default;
var init_raf_schd_esm = __esm({
  "node_modules/raf-schd/dist/raf-schd.esm.js"() {
    rafSchd = function rafSchd2(fn) {
      var lastArgs = [];
      var frameId = null;
      var wrapperFn = function wrapperFn2() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        lastArgs = args;
        if (frameId) {
          return;
        }
        frameId = requestAnimationFrame(function() {
          frameId = null;
          fn.apply(void 0, lastArgs);
        });
      };
      wrapperFn.cancel = function() {
        if (!frameId) {
          return;
        }
        cancelAnimationFrame(frameId);
        frameId = null;
      };
      return wrapperFn;
    };
    raf_schd_esm_default = rafSchd;
  }
});

// node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js
var react_beautiful_dnd_esm_exports = {};
__export(react_beautiful_dnd_esm_exports, {
  DragDropContext: () => DragDropContext,
  Draggable: () => PublicDraggable,
  Droppable: () => ConnectedDroppable,
  resetServerContext: () => resetServerContext,
  useKeyboardSensor: () => useKeyboardSensor,
  useMouseSensor: () => useMouseSensor,
  useTouchSensor: () => useTouchSensor
});
function log(type, message) {
  var _console;
  if (isProduction2) {
    return;
  }
  if (typeof window !== "undefined" && window[isDisabledFlag]) {
    return;
  }
  (_console = console)[type].apply(_console, getFormattedMessage(message));
}
function noop() {
}
function getOptions(shared2, fromBinding) {
  return _extends({}, shared2, {}, fromBinding);
}
function bindEvents(el2, bindings, sharedOptions) {
  var unbindings = bindings.map(function(binding) {
    var options = getOptions(sharedOptions, binding.options);
    el2.addEventListener(binding.eventName, binding.fn, options);
    return function unbind() {
      el2.removeEventListener(binding.eventName, binding.fn, options);
    };
  });
  return function unbindAll() {
    unbindings.forEach(function(unbind) {
      unbind();
    });
  };
}
function RbdInvariant(message) {
  this.message = message;
}
function invariant2(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction$1) {
    throw new RbdInvariant(prefix2);
  } else {
    throw new RbdInvariant(prefix2 + ": " + (message || ""));
  }
}
function isInteger(value) {
  if (Number.isInteger) {
    return Number.isInteger(value);
  }
  return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
}
function values(map) {
  if (Object.values) {
    return Object.values(map);
  }
  return Object.keys(map).map(function(key) {
    return map[key];
  });
}
function findIndex(list, predicate) {
  if (list.findIndex) {
    return list.findIndex(predicate);
  }
  for (var i2 = 0; i2 < list.length; i2++) {
    if (predicate(list[i2])) {
      return i2;
    }
  }
  return -1;
}
function find(list, predicate) {
  if (list.find) {
    return list.find(predicate);
  }
  var index2 = findIndex(list, predicate);
  if (index2 !== -1) {
    return list[index2];
  }
  return void 0;
}
function toArray(list) {
  return Array.prototype.slice.call(list);
}
function tryGetDestination(impact) {
  if (impact.at && impact.at.type === "REORDER") {
    return impact.at.destination;
  }
  return null;
}
function tryGetCombine(impact) {
  if (impact.at && impact.at.type === "COMBINE") {
    return impact.at.combine;
  }
  return null;
}
function getTarget(draggable2, displacedBy) {
  var marginBox = draggable2.page.marginBox;
  var expandBy = {
    top: displacedBy.point.y,
    right: 0,
    bottom: 0,
    left: displacedBy.point.x
  };
  return getRect(expand(marginBox, expandBy));
}
function getDisplacementGroups(_ref) {
  var afterDragging = _ref.afterDragging, destination = _ref.destination, displacedBy = _ref.displacedBy, viewport = _ref.viewport, forceShouldAnimate = _ref.forceShouldAnimate, last = _ref.last;
  return afterDragging.reduce(function process2(groups, draggable2) {
    var target = getTarget(draggable2, displacedBy);
    var id = draggable2.descriptor.id;
    groups.all.push(id);
    var isVisible3 = isPartiallyVisible({
      target,
      destination,
      viewport,
      withDroppableDisplacement: true
    });
    if (!isVisible3) {
      groups.invisible[draggable2.descriptor.id] = true;
      return groups;
    }
    var shouldAnimate = getShouldAnimate(id, last, forceShouldAnimate);
    var displacement = {
      draggableId: id,
      shouldAnimate
    };
    groups.visible[id] = displacement;
    return groups;
  }, {
    all: [],
    visible: {},
    invisible: {}
  });
}
function getIndexOfLastItem(draggables, options) {
  if (!draggables.length) {
    return 0;
  }
  var indexOfLastItem = draggables[draggables.length - 1].descriptor.index;
  return options.inHomeList ? indexOfLastItem : indexOfLastItem + 1;
}
function goAtEnd(_ref) {
  var insideDestination = _ref.insideDestination, inHomeList = _ref.inHomeList, displacedBy = _ref.displacedBy, destination = _ref.destination;
  var newIndex = getIndexOfLastItem(insideDestination, {
    inHomeList
  });
  return {
    displaced: emptyGroups,
    displacedBy,
    at: {
      type: "REORDER",
      destination: {
        droppableId: destination.descriptor.id,
        index: newIndex
      }
    }
  };
}
function calculateReorderImpact(_ref2) {
  var draggable2 = _ref2.draggable, insideDestination = _ref2.insideDestination, destination = _ref2.destination, viewport = _ref2.viewport, displacedBy = _ref2.displacedBy, last = _ref2.last, index2 = _ref2.index, forceShouldAnimate = _ref2.forceShouldAnimate;
  var inHomeList = isHomeOf(draggable2, destination);
  if (index2 == null) {
    return goAtEnd({
      insideDestination,
      inHomeList,
      displacedBy,
      destination
    });
  }
  var match3 = find(insideDestination, function(item) {
    return item.descriptor.index === index2;
  });
  if (!match3) {
    return goAtEnd({
      insideDestination,
      inHomeList,
      displacedBy,
      destination
    });
  }
  var withoutDragging = removeDraggableFromList(draggable2, insideDestination);
  var sliceFrom = insideDestination.indexOf(match3);
  var impacted = withoutDragging.slice(sliceFrom);
  var displaced = getDisplacementGroups({
    afterDragging: impacted,
    destination,
    displacedBy,
    last,
    viewport: viewport.frame,
    forceShouldAnimate
  });
  return {
    displaced,
    displacedBy,
    at: {
      type: "REORDER",
      destination: {
        droppableId: destination.descriptor.id,
        index: index2
      }
    }
  };
}
function didStartAfterCritical(draggableId, afterCritical) {
  return Boolean(afterCritical.effected[draggableId]);
}
function getDraggables(ids, draggables) {
  return ids.map(function(id) {
    return draggables[id];
  });
}
function tryGetVisible(id, groups) {
  for (var i2 = 0; i2 < groups.length; i2++) {
    var displacement = groups[i2].visible[id];
    if (displacement) {
      return displacement;
    }
  }
  return null;
}
function isMovementAllowed(state) {
  return state.phase === "DRAGGING" || state.phase === "COLLECTING";
}
function isPositionInFrame(frame) {
  var isWithinVertical = isWithin(frame.top, frame.bottom);
  var isWithinHorizontal = isWithin(frame.left, frame.right);
  return function run(point) {
    return isWithinVertical(point.y) && isWithinHorizontal(point.x);
  };
}
function getHasOverlap(first, second) {
  return first.left < second.right && first.right > second.left && first.top < second.bottom && first.bottom > second.top;
}
function getFurthestAway(_ref) {
  var pageBorderBox = _ref.pageBorderBox, draggable2 = _ref.draggable, candidates = _ref.candidates;
  var startCenter = draggable2.page.borderBox.center;
  var sorted = candidates.map(function(candidate) {
    var axis = candidate.axis;
    var target = patch(candidate.axis.line, pageBorderBox.center[axis.line], candidate.page.borderBox.center[axis.crossAxisLine]);
    return {
      id: candidate.descriptor.id,
      distance: distance(startCenter, target)
    };
  }).sort(function(a2, b2) {
    return b2.distance - a2.distance;
  });
  return sorted[0] ? sorted[0].id : null;
}
function getDroppableOver$1(_ref2) {
  var pageBorderBox = _ref2.pageBorderBox, draggable2 = _ref2.draggable, droppables = _ref2.droppables;
  var candidates = toDroppableList(droppables).filter(function(item) {
    if (!item.isEnabled) {
      return false;
    }
    var active = item.subject.active;
    if (!active) {
      return false;
    }
    if (!getHasOverlap(pageBorderBox, active)) {
      return false;
    }
    if (isPositionInFrame(active)(pageBorderBox.center)) {
      return true;
    }
    var axis = item.axis;
    var childCenter = active.center[axis.crossAxisLine];
    var crossAxisStart = pageBorderBox[axis.crossAxisStart];
    var crossAxisEnd = pageBorderBox[axis.crossAxisEnd];
    var isContained = isWithin(active[axis.crossAxisStart], active[axis.crossAxisEnd]);
    var isStartContained = isContained(crossAxisStart);
    var isEndContained = isContained(crossAxisEnd);
    if (!isStartContained && !isEndContained) {
      return true;
    }
    if (isStartContained) {
      return crossAxisStart < childCenter;
    }
    return crossAxisEnd > childCenter;
  });
  if (!candidates.length) {
    return null;
  }
  if (candidates.length === 1) {
    return candidates[0].descriptor.id;
  }
  return getFurthestAway({
    pageBorderBox,
    draggable: draggable2,
    candidates
  });
}
function getIsDisplaced(_ref) {
  var displaced = _ref.displaced, id = _ref.id;
  return Boolean(displaced.visible[id] || displaced.invisible[id]);
}
function atIndex(_ref) {
  var draggable2 = _ref.draggable, closest3 = _ref.closest, inHomeList = _ref.inHomeList;
  if (!closest3) {
    return null;
  }
  if (!inHomeList) {
    return closest3.descriptor.index;
  }
  if (closest3.descriptor.index > draggable2.descriptor.index) {
    return closest3.descriptor.index - 1;
  }
  return closest3.descriptor.index;
}
function getDraggables$1(ids, draggables) {
  return ids.map(function(id) {
    return draggables[id];
  });
}
function removeScrollJumpRequest(state) {
  if (state.isDragging && state.movementMode === "SNAP") {
    return _extends({
      phase: "DRAGGING"
    }, state, {
      scrollJumpRequest: null
    });
  }
  return state;
}
function checkIndexes(insideDestination) {
  if (insideDestination.length <= 1) {
    return;
  }
  var indexes = insideDestination.map(function(d2) {
    return d2.descriptor.index;
  });
  var errors = {};
  for (var i2 = 1; i2 < indexes.length; i2++) {
    var current = indexes[i2];
    var previous = indexes[i2 - 1];
    if (current !== previous + 1) {
      errors[current] = true;
    }
  }
  if (!Object.keys(errors).length) {
    return;
  }
  var formatted = indexes.map(function(index2) {
    var hasError = Boolean(errors[index2]);
    return hasError ? "[🔥" + index2 + "]" : "" + index2;
  }).join(", ");
  true ? warning2("\n    Detected non-consecutive <Draggable /> indexes.\n\n    (This can cause unexpected bugs)\n\n    " + formatted + "\n  ") : void 0;
}
function validateDimensions(critical, dimensions) {
  if (true) {
    var insideDestination = getDraggablesInsideDroppable(critical.droppable.id, dimensions.draggables);
    checkIndexes(insideDestination);
  }
}
function getWindowScrollBinding(update3) {
  return {
    eventName: "scroll",
    options: {
      passive: true,
      capture: false
    },
    fn: function fn(event) {
      if (event.target !== window && event.target !== window.document) {
        return;
      }
      update3();
    }
  };
}
function getScrollListener(_ref) {
  var onWindowScroll = _ref.onWindowScroll;
  function updateScroll() {
    onWindowScroll(getWindowScroll3());
  }
  var scheduled = raf_schd_esm_default(updateScroll);
  var binding = getWindowScrollBinding(scheduled);
  var unbind = noop;
  function isActive() {
    return unbind !== noop;
  }
  function start3() {
    !!isActive() ? true ? invariant2(false, "Cannot start scroll listener when already active") : invariant2(false) : void 0;
    unbind = bindEvents(window, [binding]);
  }
  function stop() {
    !isActive() ? true ? invariant2(false, "Cannot stop scroll listener when not active") : invariant2(false) : void 0;
    scheduled.cancel();
    unbind();
    unbind = noop;
  }
  return {
    start: start3,
    stop,
    isActive
  };
}
function createPublisher(_ref) {
  var registry = _ref.registry, callbacks = _ref.callbacks;
  var staging = clean$1();
  var frameId = null;
  var collect = function collect2() {
    if (frameId) {
      return;
    }
    callbacks.collectionStarting();
    frameId = requestAnimationFrame(function() {
      frameId = null;
      start();
      var _staging = staging, additions = _staging.additions, removals = _staging.removals, modified = _staging.modified;
      var added = Object.keys(additions).map(function(id) {
        return registry.draggable.getById(id).getDimension(origin);
      }).sort(function(a2, b2) {
        return a2.descriptor.index - b2.descriptor.index;
      });
      var updated = Object.keys(modified).map(function(id) {
        var entry = registry.droppable.getById(id);
        var scroll3 = entry.callbacks.getScrollWhileDragging();
        return {
          droppableId: id,
          scroll: scroll3
        };
      });
      var result = {
        additions: added,
        removals: Object.keys(removals),
        modified: updated
      };
      staging = clean$1();
      finish();
      callbacks.publish(result);
    });
  };
  var add3 = function add4(entry) {
    var id = entry.descriptor.id;
    staging.additions[id] = entry;
    staging.modified[entry.descriptor.droppableId] = true;
    if (staging.removals[id]) {
      delete staging.removals[id];
    }
    collect();
  };
  var remove = function remove2(entry) {
    var descriptor = entry.descriptor;
    staging.removals[descriptor.id] = true;
    staging.modified[descriptor.droppableId] = true;
    if (staging.additions[descriptor.id]) {
      delete staging.additions[descriptor.id];
    }
    collect();
  };
  var stop = function stop2() {
    if (!frameId) {
      return;
    }
    cancelAnimationFrame(frameId);
    frameId = null;
    staging = clean$1();
  };
  return {
    add: add3,
    remove,
    stop
  };
}
function shouldPublishUpdate(registry, dragging, entry) {
  if (entry.descriptor.id === dragging.id) {
    return false;
  }
  if (entry.descriptor.type !== dragging.type) {
    return false;
  }
  var home2 = registry.droppable.getById(entry.descriptor.droppableId);
  if (home2.descriptor.mode !== "virtual") {
    true ? warning2("\n      You are attempting to add or remove a Draggable [id: " + entry.descriptor.id + "]\n      while a drag is occurring. This is only supported for virtual lists.\n\n      See https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/patterns/virtual-lists.md\n    ") : void 0;
    return false;
  }
  return true;
}
function useStyleMarshal(contextId, nonce) {
  var styles = useMemo4(function() {
    return getStyles$1(contextId);
  }, [contextId]);
  var alwaysRef = (0, import_react9.useRef)(null);
  var dynamicRef = (0, import_react9.useRef)(null);
  var setDynamicStyle = useCallback(memoize_one_esm_default(function(proposed) {
    var el2 = dynamicRef.current;
    !el2 ? true ? invariant2(false, "Cannot set dynamic style element if it is not set") : invariant2(false) : void 0;
    el2.textContent = proposed;
  }), []);
  var setAlwaysStyle = useCallback(function(proposed) {
    var el2 = alwaysRef.current;
    !el2 ? true ? invariant2(false, "Cannot set dynamic style element if it is not set") : invariant2(false) : void 0;
    el2.textContent = proposed;
  }, []);
  useIsomorphicLayoutEffect2(function() {
    !(!alwaysRef.current && !dynamicRef.current) ? true ? invariant2(false, "style elements already mounted") : invariant2(false) : void 0;
    var always = createStyleEl(nonce);
    var dynamic = createStyleEl(nonce);
    alwaysRef.current = always;
    dynamicRef.current = dynamic;
    always.setAttribute(prefix$1 + "-always", contextId);
    dynamic.setAttribute(prefix$1 + "-dynamic", contextId);
    getHead().appendChild(always);
    getHead().appendChild(dynamic);
    setAlwaysStyle(styles.always);
    setDynamicStyle(styles.resting);
    return function() {
      var remove = function remove2(ref2) {
        var current = ref2.current;
        !current ? true ? invariant2(false, "Cannot unmount ref as it is not set") : invariant2(false) : void 0;
        getHead().removeChild(current);
        ref2.current = null;
      };
      remove(alwaysRef);
      remove(dynamicRef);
    };
  }, [nonce, setAlwaysStyle, setDynamicStyle, styles.always, styles.resting, contextId]);
  var dragging = useCallback(function() {
    return setDynamicStyle(styles.dragging);
  }, [setDynamicStyle, styles.dragging]);
  var dropping = useCallback(function(reason) {
    if (reason === "DROP") {
      setDynamicStyle(styles.dropAnimating);
      return;
    }
    setDynamicStyle(styles.userCancel);
  }, [setDynamicStyle, styles.dropAnimating, styles.userCancel]);
  var resting = useCallback(function() {
    if (!dynamicRef.current) {
      return;
    }
    setDynamicStyle(styles.resting);
  }, [setDynamicStyle, styles.resting]);
  var marshal = useMemo4(function() {
    return {
      dragging,
      dropping,
      resting
    };
  }, [dragging, dropping, resting]);
  return marshal;
}
function isHtmlElement(el2) {
  return el2 instanceof getWindowFromEl(el2).HTMLElement;
}
function findDragHandle(contextId, draggableId) {
  var selector = "[" + dragHandle.contextId + '="' + contextId + '"]';
  var possible = toArray(document.querySelectorAll(selector));
  if (!possible.length) {
    true ? warning2('Unable to find any drag handles in the context "' + contextId + '"') : void 0;
    return null;
  }
  var handle = find(possible, function(el2) {
    return el2.getAttribute(dragHandle.draggableId) === draggableId;
  });
  if (!handle) {
    true ? warning2('Unable to find drag handle with id "' + draggableId + '" as no handle with a matching id was found') : void 0;
    return null;
  }
  if (!isHtmlElement(handle)) {
    true ? warning2("drag handle needs to be a HTMLElement") : void 0;
    return null;
  }
  return handle;
}
function useFocusMarshal(contextId) {
  var entriesRef = (0, import_react9.useRef)({});
  var recordRef = (0, import_react9.useRef)(null);
  var restoreFocusFrameRef = (0, import_react9.useRef)(null);
  var isMountedRef = (0, import_react9.useRef)(false);
  var register = useCallback(function register2(id, focus2) {
    var entry = {
      id,
      focus: focus2
    };
    entriesRef.current[id] = entry;
    return function unregister() {
      var entries = entriesRef.current;
      var current = entries[id];
      if (current !== entry) {
        delete entries[id];
      }
    };
  }, []);
  var tryGiveFocus = useCallback(function tryGiveFocus2(tryGiveFocusTo) {
    var handle = findDragHandle(contextId, tryGiveFocusTo);
    if (handle && handle !== document.activeElement) {
      handle.focus();
    }
  }, [contextId]);
  var tryShiftRecord = useCallback(function tryShiftRecord2(previous, redirectTo) {
    if (recordRef.current === previous) {
      recordRef.current = redirectTo;
    }
  }, []);
  var tryRestoreFocusRecorded = useCallback(function tryRestoreFocusRecorded2() {
    if (restoreFocusFrameRef.current) {
      return;
    }
    if (!isMountedRef.current) {
      return;
    }
    restoreFocusFrameRef.current = requestAnimationFrame(function() {
      restoreFocusFrameRef.current = null;
      var record = recordRef.current;
      if (record) {
        tryGiveFocus(record);
      }
    });
  }, [tryGiveFocus]);
  var tryRecordFocus = useCallback(function tryRecordFocus2(id) {
    recordRef.current = null;
    var focused = document.activeElement;
    if (!focused) {
      return;
    }
    if (focused.getAttribute(dragHandle.draggableId) !== id) {
      return;
    }
    recordRef.current = id;
  }, []);
  useIsomorphicLayoutEffect2(function() {
    isMountedRef.current = true;
    return function clearFrameOnUnmount() {
      isMountedRef.current = false;
      var frameId = restoreFocusFrameRef.current;
      if (frameId) {
        cancelAnimationFrame(frameId);
      }
    };
  }, []);
  var marshal = useMemo4(function() {
    return {
      register,
      tryRecordFocus,
      tryRestoreFocusRecorded,
      tryShiftRecord
    };
  }, [register, tryRecordFocus, tryRestoreFocusRecorded, tryShiftRecord]);
  return marshal;
}
function createRegistry() {
  var entries = {
    draggables: {},
    droppables: {}
  };
  var subscribers = [];
  function subscribe(cb) {
    subscribers.push(cb);
    return function unsubscribe() {
      var index2 = subscribers.indexOf(cb);
      if (index2 === -1) {
        return;
      }
      subscribers.splice(index2, 1);
    };
  }
  function notify2(event) {
    if (subscribers.length) {
      subscribers.forEach(function(cb) {
        return cb(event);
      });
    }
  }
  function findDraggableById(id) {
    return entries.draggables[id] || null;
  }
  function getDraggableById(id) {
    var entry = findDraggableById(id);
    !entry ? true ? invariant2(false, "Cannot find draggable entry with id [" + id + "]") : invariant2(false) : void 0;
    return entry;
  }
  var draggableAPI = {
    register: function register(entry) {
      entries.draggables[entry.descriptor.id] = entry;
      notify2({
        type: "ADDITION",
        value: entry
      });
    },
    update: function update3(entry, last) {
      var current = entries.draggables[last.descriptor.id];
      if (!current) {
        return;
      }
      if (current.uniqueId !== entry.uniqueId) {
        return;
      }
      delete entries.draggables[last.descriptor.id];
      entries.draggables[entry.descriptor.id] = entry;
    },
    unregister: function unregister(entry) {
      var draggableId = entry.descriptor.id;
      var current = findDraggableById(draggableId);
      if (!current) {
        return;
      }
      if (entry.uniqueId !== current.uniqueId) {
        return;
      }
      delete entries.draggables[draggableId];
      notify2({
        type: "REMOVAL",
        value: entry
      });
    },
    getById: getDraggableById,
    findById: findDraggableById,
    exists: function exists(id) {
      return Boolean(findDraggableById(id));
    },
    getAllByType: function getAllByType(type) {
      return values(entries.draggables).filter(function(entry) {
        return entry.descriptor.type === type;
      });
    }
  };
  function findDroppableById(id) {
    return entries.droppables[id] || null;
  }
  function getDroppableById(id) {
    var entry = findDroppableById(id);
    !entry ? true ? invariant2(false, "Cannot find droppable entry with id [" + id + "]") : invariant2(false) : void 0;
    return entry;
  }
  var droppableAPI = {
    register: function register(entry) {
      entries.droppables[entry.descriptor.id] = entry;
    },
    unregister: function unregister(entry) {
      var current = findDroppableById(entry.descriptor.id);
      if (!current) {
        return;
      }
      if (entry.uniqueId !== current.uniqueId) {
        return;
      }
      delete entries.droppables[entry.descriptor.id];
    },
    getById: getDroppableById,
    findById: findDroppableById,
    exists: function exists(id) {
      return Boolean(findDroppableById(id));
    },
    getAllByType: function getAllByType(type) {
      return values(entries.droppables).filter(function(entry) {
        return entry.descriptor.type === type;
      });
    }
  };
  function clean4() {
    entries.draggables = {};
    entries.droppables = {};
    subscribers.length = 0;
  }
  return {
    draggable: draggableAPI,
    droppable: droppableAPI,
    subscribe,
    clean: clean4
  };
}
function useRegistry() {
  var registry = useMemo4(createRegistry, []);
  (0, import_react9.useEffect)(function() {
    return function unmount() {
      requestAnimationFrame(registry.clean);
    };
  }, [registry]);
  return registry;
}
function useAnnouncer(contextId) {
  var id = useMemo4(function() {
    return getId(contextId);
  }, [contextId]);
  var ref2 = (0, import_react9.useRef)(null);
  (0, import_react9.useEffect)(function setup() {
    var el2 = document.createElement("div");
    ref2.current = el2;
    el2.id = id;
    el2.setAttribute("aria-live", "assertive");
    el2.setAttribute("aria-atomic", "true");
    _extends(el2.style, visuallyHidden);
    getBodyElement().appendChild(el2);
    return function cleanup() {
      setTimeout(function remove() {
        var body = getBodyElement();
        if (body.contains(el2)) {
          body.removeChild(el2);
        }
        if (el2 === ref2.current) {
          ref2.current = null;
        }
      });
    };
  }, [id]);
  var announce = useCallback(function(message) {
    var el2 = ref2.current;
    if (el2) {
      el2.textContent = message;
      return;
    }
    true ? warning2('\n      A screen reader message was trying to be announced but it was unable to do so.\n      This can occur if you unmount your <DragDropContext /> in your onDragEnd.\n      Consider calling provided.announce() before the unmount so that the instruction will\n      not be lost for users relying on a screen reader.\n\n      Message not passed to screen reader:\n\n      "' + message + '"\n    ') : void 0;
  }, []);
  return announce;
}
function reset() {
  count = 0;
}
function useUniqueId(prefix4, options) {
  if (options === void 0) {
    options = defaults;
  }
  return useMemo4(function() {
    return "" + prefix4 + options.separator + count++;
  }, [options.separator, prefix4]);
}
function getElementId(_ref) {
  var contextId = _ref.contextId, uniqueId = _ref.uniqueId;
  return "rbd-hidden-text-" + contextId + "-" + uniqueId;
}
function useHiddenTextElement(_ref2) {
  var contextId = _ref2.contextId, text = _ref2.text;
  var uniqueId = useUniqueId("hidden-text", {
    separator: "-"
  });
  var id = useMemo4(function() {
    return getElementId({
      contextId,
      uniqueId
    });
  }, [uniqueId, contextId]);
  (0, import_react9.useEffect)(function mount() {
    var el2 = document.createElement("div");
    el2.id = id;
    el2.textContent = text;
    el2.style.display = "none";
    getBodyElement().appendChild(el2);
    return function unmount() {
      var body = getBodyElement();
      if (body.contains(el2)) {
        body.removeChild(el2);
      }
    };
  }, [id, text]);
  return id;
}
function useDev(useHook) {
  if (true) {
    useHook();
  }
}
function useDevSetupWarning(fn, inputs) {
  useDev(function() {
    (0, import_react9.useEffect)(function() {
      try {
        fn();
      } catch (e2) {
        error("\n          A setup problem was encountered.\n\n          > " + e2.message + "\n        ");
      }
    }, inputs);
  });
}
function useStartupValidation() {
  useDevSetupWarning(function() {
    checkReactVersion(peerDependencies.react, import_react9.default.version);
    checkDoctype(document);
  }, []);
}
function usePrevious(current) {
  var ref2 = (0, import_react9.useRef)(current);
  (0, import_react9.useEffect)(function() {
    ref2.current = current;
  });
  return ref2;
}
function create() {
  var lock = null;
  function isClaimed() {
    return Boolean(lock);
  }
  function isActive(value) {
    return value === lock;
  }
  function claim(abandon) {
    !!lock ? true ? invariant2(false, "Cannot claim lock as it is already claimed") : invariant2(false) : void 0;
    var newLock = {
      abandon
    };
    lock = newLock;
    return newLock;
  }
  function release() {
    !lock ? true ? invariant2(false, "Cannot release lock when there is no lock") : invariant2(false) : void 0;
    lock = null;
  }
  function tryAbandon() {
    if (lock) {
      lock.abandon();
      release();
    }
  }
  return {
    isClaimed,
    isActive,
    claim,
    release,
    tryAbandon
  };
}
function isSloppyClickThresholdExceeded(original, current) {
  return Math.abs(current.x - original.x) >= sloppyClickThreshold || Math.abs(current.y - original.y) >= sloppyClickThreshold;
}
function getCaptureBindings(_ref) {
  var cancel = _ref.cancel, completed = _ref.completed, getPhase = _ref.getPhase, setPhase = _ref.setPhase;
  return [{
    eventName: "mousemove",
    fn: function fn(event) {
      var button = event.button, clientX = event.clientX, clientY = event.clientY;
      if (button !== primaryButton) {
        return;
      }
      var point = {
        x: clientX,
        y: clientY
      };
      var phase = getPhase();
      if (phase.type === "DRAGGING") {
        event.preventDefault();
        phase.actions.move(point);
        return;
      }
      !(phase.type === "PENDING") ? true ? invariant2(false, "Cannot be IDLE") : invariant2(false) : void 0;
      var pending = phase.point;
      if (!isSloppyClickThresholdExceeded(pending, point)) {
        return;
      }
      event.preventDefault();
      var actions = phase.actions.fluidLift(point);
      setPhase({
        type: "DRAGGING",
        actions
      });
    }
  }, {
    eventName: "mouseup",
    fn: function fn(event) {
      var phase = getPhase();
      if (phase.type !== "DRAGGING") {
        cancel();
        return;
      }
      event.preventDefault();
      phase.actions.drop({
        shouldBlockNextClick: true
      });
      completed();
    }
  }, {
    eventName: "mousedown",
    fn: function fn(event) {
      if (getPhase().type === "DRAGGING") {
        event.preventDefault();
      }
      cancel();
    }
  }, {
    eventName: "keydown",
    fn: function fn(event) {
      var phase = getPhase();
      if (phase.type === "PENDING") {
        cancel();
        return;
      }
      if (event.keyCode === escape) {
        event.preventDefault();
        cancel();
        return;
      }
      preventStandardKeyEvents(event);
    }
  }, {
    eventName: "resize",
    fn: cancel
  }, {
    eventName: "scroll",
    options: {
      passive: true,
      capture: false
    },
    fn: function fn() {
      if (getPhase().type === "PENDING") {
        cancel();
      }
    }
  }, {
    eventName: "webkitmouseforcedown",
    fn: function fn(event) {
      var phase = getPhase();
      !(phase.type !== "IDLE") ? true ? invariant2(false, "Unexpected phase") : invariant2(false) : void 0;
      if (phase.actions.shouldRespectForcePress()) {
        cancel();
        return;
      }
      event.preventDefault();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}
function useMouseSensor(api) {
  var phaseRef = (0, import_react9.useRef)(idle$1);
  var unbindEventsRef = (0, import_react9.useRef)(noop);
  var startCaptureBinding = useMemo4(function() {
    return {
      eventName: "mousedown",
      fn: function onMouseDown(event) {
        if (event.defaultPrevented) {
          return;
        }
        if (event.button !== primaryButton) {
          return;
        }
        if (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey) {
          return;
        }
        var draggableId = api.findClosestDraggableId(event);
        if (!draggableId) {
          return;
        }
        var actions = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });
        if (!actions) {
          return;
        }
        event.preventDefault();
        var point = {
          x: event.clientX,
          y: event.clientY
        };
        unbindEventsRef.current();
        startPendingDrag(actions, point);
      }
    };
  }, [api]);
  var preventForcePressBinding = useMemo4(function() {
    return {
      eventName: "webkitmouseforcewillbegin",
      fn: function fn(event) {
        if (event.defaultPrevented) {
          return;
        }
        var id = api.findClosestDraggableId(event);
        if (!id) {
          return;
        }
        var options = api.findOptionsForDraggable(id);
        if (!options) {
          return;
        }
        if (options.shouldRespectForcePress) {
          return;
        }
        if (!api.canGetLock(id)) {
          return;
        }
        event.preventDefault();
      }
    };
  }, [api]);
  var listenForCapture = useCallback(function listenForCapture2() {
    var options = {
      passive: false,
      capture: true
    };
    unbindEventsRef.current = bindEvents(window, [preventForcePressBinding, startCaptureBinding], options);
  }, [preventForcePressBinding, startCaptureBinding]);
  var stop = useCallback(function() {
    var current = phaseRef.current;
    if (current.type === "IDLE") {
      return;
    }
    phaseRef.current = idle$1;
    unbindEventsRef.current();
    listenForCapture();
  }, [listenForCapture]);
  var cancel = useCallback(function() {
    var phase = phaseRef.current;
    stop();
    if (phase.type === "DRAGGING") {
      phase.actions.cancel({
        shouldBlockNextClick: true
      });
    }
    if (phase.type === "PENDING") {
      phase.actions.abort();
    }
  }, [stop]);
  var bindCapturingEvents = useCallback(function bindCapturingEvents2() {
    var options = {
      capture: true,
      passive: false
    };
    var bindings = getCaptureBindings({
      cancel,
      completed: stop,
      getPhase: function getPhase() {
        return phaseRef.current;
      },
      setPhase: function setPhase(phase) {
        phaseRef.current = phase;
      }
    });
    unbindEventsRef.current = bindEvents(window, bindings, options);
  }, [cancel, stop]);
  var startPendingDrag = useCallback(function startPendingDrag2(actions, point) {
    !(phaseRef.current.type === "IDLE") ? true ? invariant2(false, "Expected to move from IDLE to PENDING drag") : invariant2(false) : void 0;
    phaseRef.current = {
      type: "PENDING",
      point,
      actions
    };
    bindCapturingEvents();
  }, [bindCapturingEvents]);
  useIsomorphicLayoutEffect2(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
    };
  }, [listenForCapture]);
}
function noop$1() {
}
function getDraggingBindings(actions, stop) {
  function cancel() {
    stop();
    actions.cancel();
  }
  function drop5() {
    stop();
    actions.drop();
  }
  return [{
    eventName: "keydown",
    fn: function fn(event) {
      if (event.keyCode === escape) {
        event.preventDefault();
        cancel();
        return;
      }
      if (event.keyCode === space) {
        event.preventDefault();
        drop5();
        return;
      }
      if (event.keyCode === arrowDown) {
        event.preventDefault();
        actions.moveDown();
        return;
      }
      if (event.keyCode === arrowUp) {
        event.preventDefault();
        actions.moveUp();
        return;
      }
      if (event.keyCode === arrowRight) {
        event.preventDefault();
        actions.moveRight();
        return;
      }
      if (event.keyCode === arrowLeft) {
        event.preventDefault();
        actions.moveLeft();
        return;
      }
      if (scrollJumpKeys[event.keyCode]) {
        event.preventDefault();
        return;
      }
      preventStandardKeyEvents(event);
    }
  }, {
    eventName: "mousedown",
    fn: cancel
  }, {
    eventName: "mouseup",
    fn: cancel
  }, {
    eventName: "click",
    fn: cancel
  }, {
    eventName: "touchstart",
    fn: cancel
  }, {
    eventName: "resize",
    fn: cancel
  }, {
    eventName: "wheel",
    fn: cancel,
    options: {
      passive: true
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}
function useKeyboardSensor(api) {
  var unbindEventsRef = (0, import_react9.useRef)(noop$1);
  var startCaptureBinding = useMemo4(function() {
    return {
      eventName: "keydown",
      fn: function onKeyDown(event) {
        if (event.defaultPrevented) {
          return;
        }
        if (event.keyCode !== space) {
          return;
        }
        var draggableId = api.findClosestDraggableId(event);
        if (!draggableId) {
          return;
        }
        var preDrag = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });
        if (!preDrag) {
          return;
        }
        event.preventDefault();
        var isCapturing = true;
        var actions = preDrag.snapLift();
        unbindEventsRef.current();
        function stop() {
          !isCapturing ? true ? invariant2(false, "Cannot stop capturing a keyboard drag when not capturing") : invariant2(false) : void 0;
          isCapturing = false;
          unbindEventsRef.current();
          listenForCapture();
        }
        unbindEventsRef.current = bindEvents(window, getDraggingBindings(actions, stop), {
          capture: true,
          passive: false
        });
      }
    };
  }, [api]);
  var listenForCapture = useCallback(function tryStartCapture() {
    var options = {
      passive: false,
      capture: true
    };
    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);
  }, [startCaptureBinding]);
  useIsomorphicLayoutEffect2(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
    };
  }, [listenForCapture]);
}
function getWindowBindings(_ref) {
  var cancel = _ref.cancel, getPhase = _ref.getPhase;
  return [{
    eventName: "orientationchange",
    fn: cancel
  }, {
    eventName: "resize",
    fn: cancel
  }, {
    eventName: "contextmenu",
    fn: function fn(event) {
      event.preventDefault();
    }
  }, {
    eventName: "keydown",
    fn: function fn(event) {
      if (getPhase().type !== "DRAGGING") {
        cancel();
        return;
      }
      if (event.keyCode === escape) {
        event.preventDefault();
      }
      cancel();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}
function getHandleBindings(_ref2) {
  var cancel = _ref2.cancel, completed = _ref2.completed, getPhase = _ref2.getPhase;
  return [{
    eventName: "touchmove",
    options: {
      capture: false
    },
    fn: function fn(event) {
      var phase = getPhase();
      if (phase.type !== "DRAGGING") {
        cancel();
        return;
      }
      phase.hasMoved = true;
      var _event$touches$ = event.touches[0], clientX = _event$touches$.clientX, clientY = _event$touches$.clientY;
      var point = {
        x: clientX,
        y: clientY
      };
      event.preventDefault();
      phase.actions.move(point);
    }
  }, {
    eventName: "touchend",
    fn: function fn(event) {
      var phase = getPhase();
      if (phase.type !== "DRAGGING") {
        cancel();
        return;
      }
      event.preventDefault();
      phase.actions.drop({
        shouldBlockNextClick: true
      });
      completed();
    }
  }, {
    eventName: "touchcancel",
    fn: function fn(event) {
      if (getPhase().type !== "DRAGGING") {
        cancel();
        return;
      }
      event.preventDefault();
      cancel();
    }
  }, {
    eventName: "touchforcechange",
    fn: function fn(event) {
      var phase = getPhase();
      !(phase.type !== "IDLE") ? true ? invariant2(false) : invariant2(false) : void 0;
      var touch = event.touches[0];
      if (!touch) {
        return;
      }
      var isForcePress = touch.force >= forcePressThreshold;
      if (!isForcePress) {
        return;
      }
      var shouldRespect = phase.actions.shouldRespectForcePress();
      if (phase.type === "PENDING") {
        if (shouldRespect) {
          cancel();
        }
        return;
      }
      if (shouldRespect) {
        if (phase.hasMoved) {
          event.preventDefault();
          return;
        }
        cancel();
        return;
      }
      event.preventDefault();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}
function useTouchSensor(api) {
  var phaseRef = (0, import_react9.useRef)(idle$2);
  var unbindEventsRef = (0, import_react9.useRef)(noop);
  var getPhase = useCallback(function getPhase2() {
    return phaseRef.current;
  }, []);
  var setPhase = useCallback(function setPhase2(phase) {
    phaseRef.current = phase;
  }, []);
  var startCaptureBinding = useMemo4(function() {
    return {
      eventName: "touchstart",
      fn: function onTouchStart(event) {
        if (event.defaultPrevented) {
          return;
        }
        var draggableId = api.findClosestDraggableId(event);
        if (!draggableId) {
          return;
        }
        var actions = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });
        if (!actions) {
          return;
        }
        var touch = event.touches[0];
        var clientX = touch.clientX, clientY = touch.clientY;
        var point = {
          x: clientX,
          y: clientY
        };
        unbindEventsRef.current();
        startPendingDrag(actions, point);
      }
    };
  }, [api]);
  var listenForCapture = useCallback(function listenForCapture2() {
    var options = {
      capture: true,
      passive: false
    };
    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);
  }, [startCaptureBinding]);
  var stop = useCallback(function() {
    var current = phaseRef.current;
    if (current.type === "IDLE") {
      return;
    }
    if (current.type === "PENDING") {
      clearTimeout(current.longPressTimerId);
    }
    setPhase(idle$2);
    unbindEventsRef.current();
    listenForCapture();
  }, [listenForCapture, setPhase]);
  var cancel = useCallback(function() {
    var phase = phaseRef.current;
    stop();
    if (phase.type === "DRAGGING") {
      phase.actions.cancel({
        shouldBlockNextClick: true
      });
    }
    if (phase.type === "PENDING") {
      phase.actions.abort();
    }
  }, [stop]);
  var bindCapturingEvents = useCallback(function bindCapturingEvents2() {
    var options = {
      capture: true,
      passive: false
    };
    var args = {
      cancel,
      completed: stop,
      getPhase
    };
    var unbindTarget = bindEvents(window, getHandleBindings(args), options);
    var unbindWindow = bindEvents(window, getWindowBindings(args), options);
    unbindEventsRef.current = function unbindAll() {
      unbindTarget();
      unbindWindow();
    };
  }, [cancel, getPhase, stop]);
  var startDragging = useCallback(function startDragging2() {
    var phase = getPhase();
    !(phase.type === "PENDING") ? true ? invariant2(false, "Cannot start dragging from phase " + phase.type) : invariant2(false) : void 0;
    var actions = phase.actions.fluidLift(phase.point);
    setPhase({
      type: "DRAGGING",
      actions,
      hasMoved: false
    });
  }, [getPhase, setPhase]);
  var startPendingDrag = useCallback(function startPendingDrag2(actions, point) {
    !(getPhase().type === "IDLE") ? true ? invariant2(false, "Expected to move from IDLE to PENDING drag") : invariant2(false) : void 0;
    var longPressTimerId = setTimeout(startDragging, timeForLongPress);
    setPhase({
      type: "PENDING",
      point,
      actions,
      longPressTimerId
    });
    bindCapturingEvents();
  }, [bindCapturingEvents, getPhase, setPhase, startDragging]);
  useIsomorphicLayoutEffect2(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
      var phase = getPhase();
      if (phase.type === "PENDING") {
        clearTimeout(phase.longPressTimerId);
        setPhase(idle$2);
      }
    };
  }, [getPhase, listenForCapture, setPhase]);
  useIsomorphicLayoutEffect2(function webkitHack() {
    var unbind = bindEvents(window, [{
      eventName: "touchmove",
      fn: function fn() {
      },
      options: {
        capture: false,
        passive: false
      }
    }]);
    return unbind;
  }, []);
}
function useValidateSensorHooks(sensorHooks) {
  useDev(function() {
    var previousRef = usePrevious(sensorHooks);
    useDevSetupWarning(function() {
      !(previousRef.current.length === sensorHooks.length) ? true ? invariant2(false, "Cannot change the amount of sensor hooks after mounting") : invariant2(false) : void 0;
    });
  });
}
function isAnInteractiveElement(parent, current) {
  if (current == null) {
    return false;
  }
  var hasAnInteractiveTag = Boolean(interactiveTagNames[current.tagName.toLowerCase()]);
  if (hasAnInteractiveTag) {
    return true;
  }
  var attribute = current.getAttribute("contenteditable");
  if (attribute === "true" || attribute === "") {
    return true;
  }
  if (current === parent) {
    return false;
  }
  return isAnInteractiveElement(parent, current.parentElement);
}
function isEventInInteractiveElement(draggable2, event) {
  var target = event.target;
  if (!isHtmlElement(target)) {
    return false;
  }
  return isAnInteractiveElement(draggable2, target);
}
function isElement(el2) {
  return el2 instanceof getWindowFromEl(el2).Element;
}
function closestPonyfill(el2, selector) {
  if (el2 == null) {
    return null;
  }
  if (el2[supportedMatchesName](selector)) {
    return el2;
  }
  return closestPonyfill(el2.parentElement, selector);
}
function closest$1(el2, selector) {
  if (el2.closest) {
    return el2.closest(selector);
  }
  return closestPonyfill(el2, selector);
}
function getSelector(contextId) {
  return "[" + dragHandle.contextId + '="' + contextId + '"]';
}
function findClosestDragHandleFromEvent(contextId, event) {
  var target = event.target;
  if (!isElement(target)) {
    true ? warning2("event.target must be a Element") : void 0;
    return null;
  }
  var selector = getSelector(contextId);
  var handle = closest$1(target, selector);
  if (!handle) {
    return null;
  }
  if (!isHtmlElement(handle)) {
    true ? warning2("drag handle must be a HTMLElement") : void 0;
    return null;
  }
  return handle;
}
function tryGetClosestDraggableIdFromEvent(contextId, event) {
  var handle = findClosestDragHandleFromEvent(contextId, event);
  if (!handle) {
    return null;
  }
  return handle.getAttribute(dragHandle.draggableId);
}
function findDraggable(contextId, draggableId) {
  var selector = "[" + draggable.contextId + '="' + contextId + '"]';
  var possible = toArray(document.querySelectorAll(selector));
  var draggable$1 = find(possible, function(el2) {
    return el2.getAttribute(draggable.id) === draggableId;
  });
  if (!draggable$1) {
    return null;
  }
  if (!isHtmlElement(draggable$1)) {
    true ? warning2("Draggable element is not a HTMLElement") : void 0;
    return null;
  }
  return draggable$1;
}
function preventDefault(event) {
  event.preventDefault();
}
function _isActive(_ref) {
  var expected = _ref.expected, phase = _ref.phase, isLockActive = _ref.isLockActive, shouldWarn = _ref.shouldWarn;
  if (!isLockActive()) {
    if (shouldWarn) {
      true ? warning2("\n        Cannot perform action.\n        The sensor no longer has an action lock.\n\n        Tips:\n\n        - Throw away your action handlers when forceStop() is called\n        - Check actions.isActive() if you really need to\n      ") : void 0;
    }
    return false;
  }
  if (expected !== phase) {
    if (shouldWarn) {
      true ? warning2("\n        Cannot perform action.\n        The actions you used belong to an outdated phase\n\n        Current phase: " + expected + "\n        You called an action from outdated phase: " + phase + "\n\n        Tips:\n\n        - Do not use preDragActions actions after calling preDragActions.lift()\n      ") : void 0;
    }
    return false;
  }
  return true;
}
function canStart(_ref2) {
  var lockAPI = _ref2.lockAPI, store = _ref2.store, registry = _ref2.registry, draggableId = _ref2.draggableId;
  if (lockAPI.isClaimed()) {
    return false;
  }
  var entry = registry.draggable.findById(draggableId);
  if (!entry) {
    true ? warning2("Unable to find draggable with id: " + draggableId) : void 0;
    return false;
  }
  if (!entry.options.isEnabled) {
    return false;
  }
  if (!canStartDrag(store.getState(), draggableId)) {
    return false;
  }
  return true;
}
function tryStart(_ref3) {
  var lockAPI = _ref3.lockAPI, contextId = _ref3.contextId, store = _ref3.store, registry = _ref3.registry, draggableId = _ref3.draggableId, forceSensorStop = _ref3.forceSensorStop, sourceEvent = _ref3.sourceEvent;
  var shouldStart = canStart({
    lockAPI,
    store,
    registry,
    draggableId
  });
  if (!shouldStart) {
    return null;
  }
  var entry = registry.draggable.getById(draggableId);
  var el2 = findDraggable(contextId, entry.descriptor.id);
  if (!el2) {
    true ? warning2("Unable to find draggable element with id: " + draggableId) : void 0;
    return null;
  }
  if (sourceEvent && !entry.options.canDragInteractiveElements && isEventInInteractiveElement(el2, sourceEvent)) {
    return null;
  }
  var lock = lockAPI.claim(forceSensorStop || noop);
  var phase = "PRE_DRAG";
  function getShouldRespectForcePress() {
    return entry.options.shouldRespectForcePress;
  }
  function isLockActive() {
    return lockAPI.isActive(lock);
  }
  function tryDispatch(expected, getAction) {
    if (_isActive({
      expected,
      phase,
      isLockActive,
      shouldWarn: true
    })) {
      store.dispatch(getAction());
    }
  }
  var tryDispatchWhenDragging = tryDispatch.bind(null, "DRAGGING");
  function lift$12(args) {
    function completed() {
      lockAPI.release();
      phase = "COMPLETED";
    }
    if (phase !== "PRE_DRAG") {
      completed();
      !(phase === "PRE_DRAG") ? true ? invariant2(false, "Cannot lift in phase " + phase) : invariant2(false) : void 0;
    }
    store.dispatch(lift(args.liftActionArgs));
    phase = "DRAGGING";
    function finish3(reason, options) {
      if (options === void 0) {
        options = {
          shouldBlockNextClick: false
        };
      }
      args.cleanup();
      if (options.shouldBlockNextClick) {
        var unbind = bindEvents(window, [{
          eventName: "click",
          fn: preventDefault,
          options: {
            once: true,
            passive: false,
            capture: true
          }
        }]);
        setTimeout(unbind);
      }
      completed();
      store.dispatch(drop({
        reason
      }));
    }
    return _extends({
      isActive: function isActive() {
        return _isActive({
          expected: "DRAGGING",
          phase,
          isLockActive,
          shouldWarn: false
        });
      },
      shouldRespectForcePress: getShouldRespectForcePress,
      drop: function drop5(options) {
        return finish3("DROP", options);
      },
      cancel: function cancel(options) {
        return finish3("CANCEL", options);
      }
    }, args.actions);
  }
  function fluidLift(clientSelection) {
    var move$1 = raf_schd_esm_default(function(client) {
      tryDispatchWhenDragging(function() {
        return move({
          client
        });
      });
    });
    var api = lift$12({
      liftActionArgs: {
        id: draggableId,
        clientSelection,
        movementMode: "FLUID"
      },
      cleanup: function cleanup() {
        return move$1.cancel();
      },
      actions: {
        move: move$1
      }
    });
    return _extends({}, api, {
      move: move$1
    });
  }
  function snapLift() {
    var actions = {
      moveUp: function moveUp$1() {
        return tryDispatchWhenDragging(moveUp);
      },
      moveRight: function moveRight$1() {
        return tryDispatchWhenDragging(moveRight);
      },
      moveDown: function moveDown$1() {
        return tryDispatchWhenDragging(moveDown);
      },
      moveLeft: function moveLeft$1() {
        return tryDispatchWhenDragging(moveLeft);
      }
    };
    return lift$12({
      liftActionArgs: {
        id: draggableId,
        clientSelection: getBorderBoxCenterPosition(el2),
        movementMode: "SNAP"
      },
      cleanup: noop,
      actions
    });
  }
  function abortPreDrag() {
    var shouldRelease = _isActive({
      expected: "PRE_DRAG",
      phase,
      isLockActive,
      shouldWarn: true
    });
    if (shouldRelease) {
      lockAPI.release();
    }
  }
  var preDrag = {
    isActive: function isActive() {
      return _isActive({
        expected: "PRE_DRAG",
        phase,
        isLockActive,
        shouldWarn: false
      });
    },
    shouldRespectForcePress: getShouldRespectForcePress,
    fluidLift,
    snapLift,
    abort: abortPreDrag
  };
  return preDrag;
}
function useSensorMarshal(_ref4) {
  var contextId = _ref4.contextId, store = _ref4.store, registry = _ref4.registry, customSensors = _ref4.customSensors, enableDefaultSensors = _ref4.enableDefaultSensors;
  var useSensors = [].concat(enableDefaultSensors ? defaultSensors : [], customSensors || []);
  var lockAPI = (0, import_react9.useState)(function() {
    return create();
  })[0];
  var tryAbandonLock = useCallback(function tryAbandonLock2(previous, current) {
    if (previous.isDragging && !current.isDragging) {
      lockAPI.tryAbandon();
    }
  }, [lockAPI]);
  useIsomorphicLayoutEffect2(function listenToStore() {
    var previous = store.getState();
    var unsubscribe = store.subscribe(function() {
      var current = store.getState();
      tryAbandonLock(previous, current);
      previous = current;
    });
    return unsubscribe;
  }, [lockAPI, store, tryAbandonLock]);
  useIsomorphicLayoutEffect2(function() {
    return lockAPI.tryAbandon;
  }, [lockAPI.tryAbandon]);
  var canGetLock = useCallback(function(draggableId) {
    return canStart({
      lockAPI,
      registry,
      store,
      draggableId
    });
  }, [lockAPI, registry, store]);
  var tryGetLock = useCallback(function(draggableId, forceStop, options) {
    return tryStart({
      lockAPI,
      registry,
      contextId,
      store,
      draggableId,
      forceSensorStop: forceStop,
      sourceEvent: options && options.sourceEvent ? options.sourceEvent : null
    });
  }, [contextId, lockAPI, registry, store]);
  var findClosestDraggableId = useCallback(function(event) {
    return tryGetClosestDraggableIdFromEvent(contextId, event);
  }, [contextId]);
  var findOptionsForDraggable = useCallback(function(id) {
    var entry = registry.draggable.findById(id);
    return entry ? entry.options : null;
  }, [registry.draggable]);
  var tryReleaseLock = useCallback(function tryReleaseLock2() {
    if (!lockAPI.isClaimed()) {
      return;
    }
    lockAPI.tryAbandon();
    if (store.getState().phase !== "IDLE") {
      store.dispatch(flush());
    }
  }, [lockAPI, store]);
  var isLockClaimed = useCallback(lockAPI.isClaimed, [lockAPI]);
  var api = useMemo4(function() {
    return {
      canGetLock,
      tryGetLock,
      findClosestDraggableId,
      findOptionsForDraggable,
      tryReleaseLock,
      isLockClaimed
    };
  }, [canGetLock, tryGetLock, findClosestDraggableId, findOptionsForDraggable, tryReleaseLock, isLockClaimed]);
  useValidateSensorHooks(useSensors);
  for (var i2 = 0; i2 < useSensors.length; i2++) {
    useSensors[i2](api);
  }
}
function getStore(lazyRef) {
  !lazyRef.current ? true ? invariant2(false, "Could not find store from lazy ref") : invariant2(false) : void 0;
  return lazyRef.current;
}
function App(props) {
  var contextId = props.contextId, setCallbacks = props.setCallbacks, sensors = props.sensors, nonce = props.nonce, dragHandleUsageInstructions2 = props.dragHandleUsageInstructions;
  var lazyStoreRef = (0, import_react9.useRef)(null);
  useStartupValidation();
  var lastPropsRef = usePrevious(props);
  var getResponders = useCallback(function() {
    return createResponders(lastPropsRef.current);
  }, [lastPropsRef]);
  var announce = useAnnouncer(contextId);
  var dragHandleUsageInstructionsId = useHiddenTextElement({
    contextId,
    text: dragHandleUsageInstructions2
  });
  var styleMarshal = useStyleMarshal(contextId, nonce);
  var lazyDispatch = useCallback(function(action) {
    getStore(lazyStoreRef).dispatch(action);
  }, []);
  var marshalCallbacks = useMemo4(function() {
    return bindActionCreators({
      publishWhileDragging,
      updateDroppableScroll,
      updateDroppableIsEnabled,
      updateDroppableIsCombineEnabled,
      collectionStarting
    }, lazyDispatch);
  }, [lazyDispatch]);
  var registry = useRegistry();
  var dimensionMarshal = useMemo4(function() {
    return createDimensionMarshal(registry, marshalCallbacks);
  }, [registry, marshalCallbacks]);
  var autoScroller = useMemo4(function() {
    return createAutoScroller(_extends({
      scrollWindow,
      scrollDroppable: dimensionMarshal.scrollDroppable
    }, bindActionCreators({
      move
    }, lazyDispatch)));
  }, [dimensionMarshal.scrollDroppable, lazyDispatch]);
  var focusMarshal = useFocusMarshal(contextId);
  var store = useMemo4(function() {
    return createStore2({
      announce,
      autoScroller,
      dimensionMarshal,
      focusMarshal,
      getResponders,
      styleMarshal
    });
  }, [announce, autoScroller, dimensionMarshal, focusMarshal, getResponders, styleMarshal]);
  if (true) {
    if (lazyStoreRef.current && lazyStoreRef.current !== store) {
      true ? warning2("unexpected store change") : void 0;
    }
  }
  lazyStoreRef.current = store;
  var tryResetStore = useCallback(function() {
    var current = getStore(lazyStoreRef);
    var state = current.getState();
    if (state.phase !== "IDLE") {
      current.dispatch(flush());
    }
  }, []);
  var isDragging = useCallback(function() {
    var state = getStore(lazyStoreRef).getState();
    return state.isDragging || state.phase === "DROP_ANIMATING";
  }, []);
  var appCallbacks = useMemo4(function() {
    return {
      isDragging,
      tryAbort: tryResetStore
    };
  }, [isDragging, tryResetStore]);
  setCallbacks(appCallbacks);
  var getCanLift = useCallback(function(id) {
    return canStartDrag(getStore(lazyStoreRef).getState(), id);
  }, []);
  var getIsMovementAllowed = useCallback(function() {
    return isMovementAllowed(getStore(lazyStoreRef).getState());
  }, []);
  var appContext = useMemo4(function() {
    return {
      marshal: dimensionMarshal,
      focus: focusMarshal,
      contextId,
      canLift: getCanLift,
      isMovementAllowed: getIsMovementAllowed,
      dragHandleUsageInstructionsId,
      registry
    };
  }, [contextId, dimensionMarshal, dragHandleUsageInstructionsId, focusMarshal, getCanLift, getIsMovementAllowed, registry]);
  useSensorMarshal({
    contextId,
    store,
    registry,
    customSensors: sensors,
    enableDefaultSensors: props.enableDefaultSensors !== false
  });
  (0, import_react9.useEffect)(function() {
    return tryResetStore;
  }, [tryResetStore]);
  return import_react9.default.createElement(AppContext.Provider, {
    value: appContext
  }, import_react9.default.createElement(Provider_default, {
    context: StoreContext,
    store
  }, props.children));
}
function reset$1() {
  count$1 = 0;
}
function useInstanceCount() {
  return useMemo4(function() {
    return "" + count$1++;
  }, []);
}
function resetServerContext() {
  reset$1();
  reset();
}
function DragDropContext(props) {
  var contextId = useInstanceCount();
  var dragHandleUsageInstructions2 = props.dragHandleUsageInstructions || preset.dragHandleUsageInstructions;
  return import_react9.default.createElement(ErrorBoundary, null, function(setCallbacks) {
    return import_react9.default.createElement(App, {
      nonce: props.nonce,
      contextId,
      setCallbacks,
      dragHandleUsageInstructions: dragHandleUsageInstructions2,
      enableDefaultSensors: props.enableDefaultSensors,
      sensors: props.sensors,
      onBeforeCapture: props.onBeforeCapture,
      onBeforeDragStart: props.onBeforeDragStart,
      onDragStart: props.onDragStart,
      onDragUpdate: props.onDragUpdate,
      onDragEnd: props.onDragEnd
    }, props.children);
  });
}
function useRequiredContext(Context2) {
  var result = (0, import_react9.useContext)(Context2);
  !result ? true ? invariant2(false, "Could not find required context") : invariant2(false) : void 0;
  return result;
}
function useDroppablePublisher(args) {
  var whileDraggingRef = (0, import_react9.useRef)(null);
  var appContext = useRequiredContext(AppContext);
  var uniqueId = useUniqueId("droppable");
  var registry = appContext.registry, marshal = appContext.marshal;
  var previousRef = usePrevious(args);
  var descriptor = useMemo4(function() {
    return {
      id: args.droppableId,
      type: args.type,
      mode: args.mode
    };
  }, [args.droppableId, args.mode, args.type]);
  var publishedDescriptorRef = (0, import_react9.useRef)(descriptor);
  var memoizedUpdateScroll = useMemo4(function() {
    return memoize_one_esm_default(function(x2, y2) {
      !whileDraggingRef.current ? true ? invariant2(false, "Can only update scroll when dragging") : invariant2(false) : void 0;
      var scroll4 = {
        x: x2,
        y: y2
      };
      marshal.updateDroppableScroll(descriptor.id, scroll4);
    });
  }, [descriptor.id, marshal]);
  var getClosestScroll = useCallback(function() {
    var dragging = whileDraggingRef.current;
    if (!dragging || !dragging.env.closestScrollable) {
      return origin;
    }
    return getScroll$1(dragging.env.closestScrollable);
  }, []);
  var updateScroll = useCallback(function() {
    var scroll4 = getClosestScroll();
    memoizedUpdateScroll(scroll4.x, scroll4.y);
  }, [getClosestScroll, memoizedUpdateScroll]);
  var scheduleScrollUpdate = useMemo4(function() {
    return raf_schd_esm_default(updateScroll);
  }, [updateScroll]);
  var onClosestScroll = useCallback(function() {
    var dragging = whileDraggingRef.current;
    var closest3 = getClosestScrollableFromDrag(dragging);
    !(dragging && closest3) ? true ? invariant2(false, "Could not find scroll options while scrolling") : invariant2(false) : void 0;
    var options = dragging.scrollOptions;
    if (options.shouldPublishImmediately) {
      updateScroll();
      return;
    }
    scheduleScrollUpdate();
  }, [scheduleScrollUpdate, updateScroll]);
  var getDimensionAndWatchScroll = useCallback(function(windowScroll, options) {
    !!whileDraggingRef.current ? true ? invariant2(false, "Cannot collect a droppable while a drag is occurring") : invariant2(false) : void 0;
    var previous = previousRef.current;
    var ref2 = previous.getDroppableRef();
    !ref2 ? true ? invariant2(false, "Cannot collect without a droppable ref") : invariant2(false) : void 0;
    var env = getEnv(ref2);
    var dragging = {
      ref: ref2,
      descriptor,
      env,
      scrollOptions: options
    };
    whileDraggingRef.current = dragging;
    var dimension = getDimension({
      ref: ref2,
      descriptor,
      env,
      windowScroll,
      direction: previous.direction,
      isDropDisabled: previous.isDropDisabled,
      isCombineEnabled: previous.isCombineEnabled,
      shouldClipSubject: !previous.ignoreContainerClipping
    });
    var scrollable = env.closestScrollable;
    if (scrollable) {
      scrollable.setAttribute(scrollContainer.contextId, appContext.contextId);
      scrollable.addEventListener("scroll", onClosestScroll, getListenerOptions(dragging.scrollOptions));
      if (true) {
        checkForNestedScrollContainers(scrollable);
      }
    }
    return dimension;
  }, [appContext.contextId, descriptor, onClosestScroll, previousRef]);
  var getScrollWhileDragging = useCallback(function() {
    var dragging = whileDraggingRef.current;
    var closest3 = getClosestScrollableFromDrag(dragging);
    !(dragging && closest3) ? true ? invariant2(false, "Can only recollect Droppable client for Droppables that have a scroll container") : invariant2(false) : void 0;
    return getScroll$1(closest3);
  }, []);
  var dragStopped = useCallback(function() {
    var dragging = whileDraggingRef.current;
    !dragging ? true ? invariant2(false, "Cannot stop drag when no active drag") : invariant2(false) : void 0;
    var closest3 = getClosestScrollableFromDrag(dragging);
    whileDraggingRef.current = null;
    if (!closest3) {
      return;
    }
    scheduleScrollUpdate.cancel();
    closest3.removeAttribute(scrollContainer.contextId);
    closest3.removeEventListener("scroll", onClosestScroll, getListenerOptions(dragging.scrollOptions));
  }, [onClosestScroll, scheduleScrollUpdate]);
  var scroll3 = useCallback(function(change) {
    var dragging = whileDraggingRef.current;
    !dragging ? true ? invariant2(false, "Cannot scroll when there is no drag") : invariant2(false) : void 0;
    var closest3 = getClosestScrollableFromDrag(dragging);
    !closest3 ? true ? invariant2(false, "Cannot scroll a droppable with no closest scrollable") : invariant2(false) : void 0;
    closest3.scrollTop += change.y;
    closest3.scrollLeft += change.x;
  }, []);
  var callbacks = useMemo4(function() {
    return {
      getDimensionAndWatchScroll,
      getScrollWhileDragging,
      dragStopped,
      scroll: scroll3
    };
  }, [dragStopped, getDimensionAndWatchScroll, getScrollWhileDragging, scroll3]);
  var entry = useMemo4(function() {
    return {
      uniqueId,
      descriptor,
      callbacks
    };
  }, [callbacks, descriptor, uniqueId]);
  useIsomorphicLayoutEffect2(function() {
    publishedDescriptorRef.current = entry.descriptor;
    registry.droppable.register(entry);
    return function() {
      if (whileDraggingRef.current) {
        true ? warning2("Unsupported: changing the droppableId or type of a Droppable during a drag") : void 0;
        dragStopped();
      }
      registry.droppable.unregister(entry);
    };
  }, [callbacks, descriptor, dragStopped, entry, marshal, registry.droppable]);
  useIsomorphicLayoutEffect2(function() {
    if (!whileDraggingRef.current) {
      return;
    }
    marshal.updateDroppableIsEnabled(publishedDescriptorRef.current.id, !args.isDropDisabled);
  }, [args.isDropDisabled, marshal]);
  useIsomorphicLayoutEffect2(function() {
    if (!whileDraggingRef.current) {
      return;
    }
    marshal.updateDroppableIsCombineEnabled(publishedDescriptorRef.current.id, args.isCombineEnabled);
  }, [args.isCombineEnabled, marshal]);
}
function noop$2() {
}
function Placeholder(props) {
  var animateOpenTimerRef = (0, import_react9.useRef)(null);
  var tryClearAnimateOpenTimer = useCallback(function() {
    if (!animateOpenTimerRef.current) {
      return;
    }
    clearTimeout(animateOpenTimerRef.current);
    animateOpenTimerRef.current = null;
  }, []);
  var animate = props.animate, onTransitionEnd = props.onTransitionEnd, onClose = props.onClose, contextId = props.contextId;
  var _useState = (0, import_react9.useState)(props.animate === "open"), isAnimatingOpenOnMount = _useState[0], setIsAnimatingOpenOnMount = _useState[1];
  (0, import_react9.useEffect)(function() {
    if (!isAnimatingOpenOnMount) {
      return noop$2;
    }
    if (animate !== "open") {
      tryClearAnimateOpenTimer();
      setIsAnimatingOpenOnMount(false);
      return noop$2;
    }
    if (animateOpenTimerRef.current) {
      return noop$2;
    }
    animateOpenTimerRef.current = setTimeout(function() {
      animateOpenTimerRef.current = null;
      setIsAnimatingOpenOnMount(false);
    });
    return tryClearAnimateOpenTimer;
  }, [animate, isAnimatingOpenOnMount, tryClearAnimateOpenTimer]);
  var onSizeChangeEnd = useCallback(function(event) {
    if (event.propertyName !== "height") {
      return;
    }
    onTransitionEnd();
    if (animate === "close") {
      onClose();
    }
  }, [animate, onClose, onTransitionEnd]);
  var style2 = getStyle({
    isAnimatingOpenOnMount,
    animate: props.animate,
    placeholder: props.placeholder
  });
  return import_react9.default.createElement(props.placeholder.tagName, {
    style: style2,
    "data-rbd-placeholder-context-id": contextId,
    onTransitionEnd: onSizeChangeEnd,
    ref: props.innerRef
  });
}
function checkIsValidInnerRef(el2) {
  !(el2 && isHtmlElement(el2)) ? true ? invariant2(false, "\n    provided.innerRef has not been provided with a HTMLElement.\n\n    You can find a guide on using the innerRef callback functions at:\n    https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/using-inner-ref.md\n  ") : invariant2(false) : void 0;
}
function isBoolean(value) {
  return typeof value === "boolean";
}
function runChecks(args, checks) {
  checks.forEach(function(check) {
    return check(args);
  });
}
function useValidation(args) {
  useDevSetupWarning(function() {
    runChecks(args, shared);
    if (args.props.mode === "standard") {
      runChecks(args, standard);
    }
    if (args.props.mode === "virtual") {
      runChecks(args, virtual);
    }
  });
}
function getDraggingStyle(dragging) {
  var dimension = dragging.dimension;
  var box = dimension.client;
  var offset3 = dragging.offset, combineWith = dragging.combineWith, dropping = dragging.dropping;
  var isCombining = Boolean(combineWith);
  var shouldAnimate = getShouldDraggingAnimate(dragging);
  var isDropAnimating = Boolean(dropping);
  var transform2 = isDropAnimating ? transforms.drop(offset3, isCombining) : transforms.moveTo(offset3);
  var style2 = {
    position: "fixed",
    top: box.marginBox.top,
    left: box.marginBox.left,
    boxSizing: "border-box",
    width: box.borderBox.width,
    height: box.borderBox.height,
    transition: getDraggingTransition(shouldAnimate, dropping),
    transform: transform2,
    opacity: getDraggingOpacity(isCombining, isDropAnimating),
    zIndex: isDropAnimating ? zIndexOptions.dropAnimating : zIndexOptions.dragging,
    pointerEvents: "none"
  };
  return style2;
}
function getSecondaryStyle(secondary) {
  return {
    transform: transforms.moveTo(secondary.offset),
    transition: secondary.shouldAnimateDisplacement ? null : "none"
  };
}
function getStyle$1(mapped) {
  return mapped.type === "DRAGGING" ? getDraggingStyle(mapped) : getSecondaryStyle(mapped);
}
function getDimension$1(descriptor, el2, windowScroll) {
  if (windowScroll === void 0) {
    windowScroll = origin;
  }
  var computedStyles = window.getComputedStyle(el2);
  var borderBox = el2.getBoundingClientRect();
  var client = calculateBox(borderBox, computedStyles);
  var page = withScroll(client, windowScroll);
  var placeholder2 = {
    client,
    tagName: el2.tagName.toLowerCase(),
    display: computedStyles.display
  };
  var displaceBy = {
    x: client.marginBox.width,
    y: client.marginBox.height
  };
  var dimension = {
    descriptor,
    placeholder: placeholder2,
    displaceBy,
    client,
    page
  };
  return dimension;
}
function useDraggablePublisher(args) {
  var uniqueId = useUniqueId("draggable");
  var descriptor = args.descriptor, registry = args.registry, getDraggableRef = args.getDraggableRef, canDragInteractiveElements = args.canDragInteractiveElements, shouldRespectForcePress = args.shouldRespectForcePress, isEnabled = args.isEnabled;
  var options = useMemo4(function() {
    return {
      canDragInteractiveElements,
      shouldRespectForcePress,
      isEnabled
    };
  }, [canDragInteractiveElements, isEnabled, shouldRespectForcePress]);
  var getDimension2 = useCallback(function(windowScroll) {
    var el2 = getDraggableRef();
    !el2 ? true ? invariant2(false, "Cannot get dimension when no ref is set") : invariant2(false) : void 0;
    return getDimension$1(descriptor, el2, windowScroll);
  }, [descriptor, getDraggableRef]);
  var entry = useMemo4(function() {
    return {
      uniqueId,
      descriptor,
      options,
      getDimension: getDimension2
    };
  }, [descriptor, getDimension2, options, uniqueId]);
  var publishedRef = (0, import_react9.useRef)(entry);
  var isFirstPublishRef = (0, import_react9.useRef)(true);
  useIsomorphicLayoutEffect2(function() {
    registry.draggable.register(publishedRef.current);
    return function() {
      return registry.draggable.unregister(publishedRef.current);
    };
  }, [registry.draggable]);
  useIsomorphicLayoutEffect2(function() {
    if (isFirstPublishRef.current) {
      isFirstPublishRef.current = false;
      return;
    }
    var last = publishedRef.current;
    publishedRef.current = entry;
    registry.draggable.update(entry, last);
  }, [entry, registry.draggable]);
}
function useValidation$1(props, contextId, getRef) {
  useDevSetupWarning(function() {
    function prefix4(id2) {
      return "Draggable[id: " + id2 + "]: ";
    }
    var id = props.draggableId;
    !id ? true ? invariant2(false, "Draggable requires a draggableId") : invariant2(false) : void 0;
    !(typeof id === "string") ? true ? invariant2(false, "Draggable requires a [string] draggableId.\n      Provided: [type: " + typeof id + "] (value: " + id + ")") : invariant2(false) : void 0;
    !isInteger(props.index) ? true ? invariant2(false, prefix4(id) + " requires an integer index prop") : invariant2(false) : void 0;
    if (props.mapped.type === "DRAGGING") {
      return;
    }
    checkIsValidInnerRef(getRef());
    if (props.isEnabled) {
      !findDragHandle(contextId, id) ? true ? invariant2(false, prefix4(id) + " Unable to find drag handle") : invariant2(false) : void 0;
    }
  });
}
function useClonePropValidation(isClone) {
  useDev(function() {
    var initialRef = (0, import_react9.useRef)(isClone);
    useDevSetupWarning(function() {
      !(isClone === initialRef.current) ? true ? invariant2(false, "Draggable isClone prop value changed during component life") : invariant2(false) : void 0;
    }, [isClone]);
  });
}
function preventHtml5Dnd(event) {
  event.preventDefault();
}
function Draggable(props) {
  var ref2 = (0, import_react9.useRef)(null);
  var setRef = useCallback(function(el2) {
    ref2.current = el2;
  }, []);
  var getRef = useCallback(function() {
    return ref2.current;
  }, []);
  var _useRequiredContext = useRequiredContext(AppContext), contextId = _useRequiredContext.contextId, dragHandleUsageInstructionsId = _useRequiredContext.dragHandleUsageInstructionsId, registry = _useRequiredContext.registry;
  var _useRequiredContext2 = useRequiredContext(DroppableContext), type = _useRequiredContext2.type, droppableId = _useRequiredContext2.droppableId;
  var descriptor = useMemo4(function() {
    return {
      id: props.draggableId,
      index: props.index,
      type,
      droppableId
    };
  }, [props.draggableId, props.index, type, droppableId]);
  var children = props.children, draggableId = props.draggableId, isEnabled = props.isEnabled, shouldRespectForcePress = props.shouldRespectForcePress, canDragInteractiveElements = props.canDragInteractiveElements, isClone = props.isClone, mapped = props.mapped, dropAnimationFinishedAction = props.dropAnimationFinished;
  useValidation$1(props, contextId, getRef);
  useClonePropValidation(isClone);
  if (!isClone) {
    var forPublisher = useMemo4(function() {
      return {
        descriptor,
        registry,
        getDraggableRef: getRef,
        canDragInteractiveElements,
        shouldRespectForcePress,
        isEnabled
      };
    }, [descriptor, registry, getRef, canDragInteractiveElements, shouldRespectForcePress, isEnabled]);
    useDraggablePublisher(forPublisher);
  }
  var dragHandleProps = useMemo4(function() {
    return isEnabled ? {
      tabIndex: 0,
      role: "button",
      "aria-describedby": dragHandleUsageInstructionsId,
      "data-rbd-drag-handle-draggable-id": draggableId,
      "data-rbd-drag-handle-context-id": contextId,
      draggable: false,
      onDragStart: preventHtml5Dnd
    } : null;
  }, [contextId, dragHandleUsageInstructionsId, draggableId, isEnabled]);
  var onMoveEnd = useCallback(function(event) {
    if (mapped.type !== "DRAGGING") {
      return;
    }
    if (!mapped.dropping) {
      return;
    }
    if (event.propertyName !== "transform") {
      return;
    }
    dropAnimationFinishedAction();
  }, [dropAnimationFinishedAction, mapped]);
  var provided = useMemo4(function() {
    var style2 = getStyle$1(mapped);
    var onTransitionEnd = mapped.type === "DRAGGING" && mapped.dropping ? onMoveEnd : null;
    var result = {
      innerRef: setRef,
      draggableProps: {
        "data-rbd-draggable-context-id": contextId,
        "data-rbd-draggable-id": draggableId,
        style: style2,
        onTransitionEnd
      },
      dragHandleProps
    };
    return result;
  }, [contextId, dragHandleProps, draggableId, mapped, onMoveEnd, setRef]);
  var rubric = useMemo4(function() {
    return {
      draggableId: descriptor.id,
      type: descriptor.type,
      source: {
        index: descriptor.index,
        droppableId: descriptor.droppableId
      }
    };
  }, [descriptor.droppableId, descriptor.id, descriptor.index, descriptor.type]);
  return children(provided, mapped.snapshot, rubric);
}
function getDraggableSelector() {
  var memoizedOffset = memoize_one_esm_default(function(x2, y2) {
    return {
      x: x2,
      y: y2
    };
  });
  var getMemoizedSnapshot = memoize_one_esm_default(function(mode, isClone, draggingOver, combineWith, dropping) {
    return {
      isDragging: true,
      isClone,
      isDropAnimating: Boolean(dropping),
      dropAnimation: dropping,
      mode,
      draggingOver,
      combineWith,
      combineTargetFor: null
    };
  });
  var getMemoizedProps = memoize_one_esm_default(function(offset3, mode, dimension, isClone, draggingOver, combineWith, forceShouldAnimate) {
    return {
      mapped: {
        type: "DRAGGING",
        dropping: null,
        draggingOver,
        combineWith,
        mode,
        offset: offset3,
        dimension,
        forceShouldAnimate,
        snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, null)
      }
    };
  });
  var selector = function selector2(state, ownProps) {
    if (state.isDragging) {
      if (state.critical.draggable.id !== ownProps.draggableId) {
        return null;
      }
      var offset3 = state.current.client.offset;
      var dimension = state.dimensions.draggables[ownProps.draggableId];
      var draggingOver = whatIsDraggedOver(state.impact);
      var combineWith = getCombineWithFromImpact(state.impact);
      var forceShouldAnimate = state.forceShouldAnimate;
      return getMemoizedProps(memoizedOffset(offset3.x, offset3.y), state.movementMode, dimension, ownProps.isClone, draggingOver, combineWith, forceShouldAnimate);
    }
    if (state.phase === "DROP_ANIMATING") {
      var completed = state.completed;
      if (completed.result.draggableId !== ownProps.draggableId) {
        return null;
      }
      var isClone = ownProps.isClone;
      var _dimension = state.dimensions.draggables[ownProps.draggableId];
      var result = completed.result;
      var mode = result.mode;
      var _draggingOver = whatIsDraggedOverFromResult(result);
      var _combineWith = getCombineWithFromResult(result);
      var duration = state.dropDuration;
      var dropping = {
        duration,
        curve: curves.drop,
        moveTo: state.newHomeClientOffset,
        opacity: _combineWith ? combine.opacity.drop : null,
        scale: _combineWith ? combine.scale.drop : null
      };
      return {
        mapped: {
          type: "DRAGGING",
          offset: state.newHomeClientOffset,
          dimension: _dimension,
          dropping,
          draggingOver: _draggingOver,
          combineWith: _combineWith,
          mode,
          forceShouldAnimate: null,
          snapshot: getMemoizedSnapshot(mode, isClone, _draggingOver, _combineWith, dropping)
        }
      };
    }
    return null;
  };
  return selector;
}
function getSecondarySnapshot(combineTargetFor) {
  return {
    isDragging: false,
    isDropAnimating: false,
    isClone: false,
    dropAnimation: null,
    mode: null,
    draggingOver: null,
    combineTargetFor,
    combineWith: null
  };
}
function getSecondarySelector() {
  var memoizedOffset = memoize_one_esm_default(function(x2, y2) {
    return {
      x: x2,
      y: y2
    };
  });
  var getMemoizedSnapshot = memoize_one_esm_default(getSecondarySnapshot);
  var getMemoizedProps = memoize_one_esm_default(function(offset3, combineTargetFor, shouldAnimateDisplacement) {
    if (combineTargetFor === void 0) {
      combineTargetFor = null;
    }
    return {
      mapped: {
        type: "SECONDARY",
        offset: offset3,
        combineTargetFor,
        shouldAnimateDisplacement,
        snapshot: getMemoizedSnapshot(combineTargetFor)
      }
    };
  });
  var getFallback = function getFallback2(combineTargetFor) {
    return combineTargetFor ? getMemoizedProps(origin, combineTargetFor, true) : null;
  };
  var getProps = function getProps2(ownId, draggingId, impact, afterCritical) {
    var visualDisplacement = impact.displaced.visible[ownId];
    var isAfterCriticalInVirtualList = Boolean(afterCritical.inVirtualList && afterCritical.effected[ownId]);
    var combine2 = tryGetCombine(impact);
    var combineTargetFor = combine2 && combine2.draggableId === ownId ? draggingId : null;
    if (!visualDisplacement) {
      if (!isAfterCriticalInVirtualList) {
        return getFallback(combineTargetFor);
      }
      if (impact.displaced.invisible[ownId]) {
        return null;
      }
      var change = negate(afterCritical.displacedBy.point);
      var _offset = memoizedOffset(change.x, change.y);
      return getMemoizedProps(_offset, combineTargetFor, true);
    }
    if (isAfterCriticalInVirtualList) {
      return getFallback(combineTargetFor);
    }
    var displaceBy = impact.displacedBy.point;
    var offset3 = memoizedOffset(displaceBy.x, displaceBy.y);
    return getMemoizedProps(offset3, combineTargetFor, visualDisplacement.shouldAnimate);
  };
  var selector = function selector2(state, ownProps) {
    if (state.isDragging) {
      if (state.critical.draggable.id === ownProps.draggableId) {
        return null;
      }
      return getProps(ownProps.draggableId, state.critical.draggable.id, state.impact, state.afterCritical);
    }
    if (state.phase === "DROP_ANIMATING") {
      var completed = state.completed;
      if (completed.result.draggableId === ownProps.draggableId) {
        return null;
      }
      return getProps(ownProps.draggableId, completed.result.draggableId, completed.impact, completed.afterCritical);
    }
    return null;
  };
  return selector;
}
function PrivateDraggable(props) {
  var droppableContext = useRequiredContext(DroppableContext);
  var isUsingCloneFor = droppableContext.isUsingCloneFor;
  if (isUsingCloneFor === props.draggableId && !props.isClone) {
    return null;
  }
  return import_react9.default.createElement(ConnectedDraggable, props);
}
function PublicDraggable(props) {
  var isEnabled = typeof props.isDragDisabled === "boolean" ? !props.isDragDisabled : true;
  var canDragInteractiveElements = Boolean(props.disableInteractiveElementBlocking);
  var shouldRespectForcePress = Boolean(props.shouldRespectForcePress);
  return import_react9.default.createElement(PrivateDraggable, _extends({}, props, {
    isClone: false,
    isEnabled,
    canDragInteractiveElements,
    shouldRespectForcePress
  }));
}
function Droppable(props) {
  var appContext = (0, import_react9.useContext)(AppContext);
  !appContext ? true ? invariant2(false, "Could not find app context") : invariant2(false) : void 0;
  var contextId = appContext.contextId, isMovementAllowed2 = appContext.isMovementAllowed;
  var droppableRef = (0, import_react9.useRef)(null);
  var placeholderRef = (0, import_react9.useRef)(null);
  var children = props.children, droppableId = props.droppableId, type = props.type, mode = props.mode, direction = props.direction, ignoreContainerClipping = props.ignoreContainerClipping, isDropDisabled = props.isDropDisabled, isCombineEnabled = props.isCombineEnabled, snapshot = props.snapshot, useClone = props.useClone, updateViewportMaxScroll3 = props.updateViewportMaxScroll, getContainerForClone = props.getContainerForClone;
  var getDroppableRef = useCallback(function() {
    return droppableRef.current;
  }, []);
  var setDroppableRef = useCallback(function(value) {
    droppableRef.current = value;
  }, []);
  var getPlaceholderRef = useCallback(function() {
    return placeholderRef.current;
  }, []);
  var setPlaceholderRef = useCallback(function(value) {
    placeholderRef.current = value;
  }, []);
  useValidation({
    props,
    getDroppableRef,
    getPlaceholderRef
  });
  var onPlaceholderTransitionEnd = useCallback(function() {
    if (isMovementAllowed2()) {
      updateViewportMaxScroll3({
        maxScroll: getMaxWindowScroll()
      });
    }
  }, [isMovementAllowed2, updateViewportMaxScroll3]);
  useDroppablePublisher({
    droppableId,
    type,
    mode,
    direction,
    isDropDisabled,
    isCombineEnabled,
    ignoreContainerClipping,
    getDroppableRef
  });
  var placeholder2 = import_react9.default.createElement(AnimateInOut, {
    on: props.placeholder,
    shouldAnimate: props.shouldAnimatePlaceholder
  }, function(_ref) {
    var onClose = _ref.onClose, data = _ref.data, animate = _ref.animate;
    return import_react9.default.createElement(Placeholder$1, {
      placeholder: data,
      onClose,
      innerRef: setPlaceholderRef,
      animate,
      contextId,
      onTransitionEnd: onPlaceholderTransitionEnd
    });
  });
  var provided = useMemo4(function() {
    return {
      innerRef: setDroppableRef,
      placeholder: placeholder2,
      droppableProps: {
        "data-rbd-droppable-id": droppableId,
        "data-rbd-droppable-context-id": contextId
      }
    };
  }, [contextId, droppableId, placeholder2, setDroppableRef]);
  var isUsingCloneFor = useClone ? useClone.dragging.draggableId : null;
  var droppableContext = useMemo4(function() {
    return {
      droppableId,
      type,
      isUsingCloneFor
    };
  }, [droppableId, isUsingCloneFor, type]);
  function getClone() {
    if (!useClone) {
      return null;
    }
    var dragging = useClone.dragging, render = useClone.render;
    var node = import_react9.default.createElement(PrivateDraggable, {
      draggableId: dragging.draggableId,
      index: dragging.source.index,
      isClone: true,
      isEnabled: true,
      shouldRespectForcePress: false,
      canDragInteractiveElements: true
    }, function(draggableProvided, draggableSnapshot) {
      return render(draggableProvided, draggableSnapshot, dragging);
    });
    return import_react_dom2.default.createPortal(node, getContainerForClone());
  }
  return import_react9.default.createElement(DroppableContext.Provider, {
    value: droppableContext
  }, children(provided, snapshot), getClone());
}
function getBody() {
  !document.body ? true ? invariant2(false, "document.body is not ready") : invariant2(false) : void 0;
  return document.body;
}
var import_react9, import_react_dom2, isProduction2, spacesAndTabs, lineStartWithSpaces, clean, getDevMessage, getFormattedMessage, isDisabledFlag, warning2, error, isProduction$1, prefix2, ErrorBoundary, dragHandleUsageInstructions, position, onDragStart, withLocation, withCombine, onDragUpdate, returnedToStart, onDragEnd, preset, origin, add, subtract, isEqual2, negate, patch, distance, closest, apply, executeClip, offsetByPosition, getCorners, noSpacing2, scroll, increase, clip, getSubject, scrollDroppable, toDroppableMap, toDraggableMap, toDroppableList, toDraggableList, getDraggablesInsideDroppable, removeDraggableFromList, moveToNextCombine, isHomeOf, noDisplacedBy, emptyGroups, noImpact, isWithin, isPartiallyVisibleThroughFrame, isTotallyVisibleThroughFrame, vertical, horizontal, isTotallyVisibleThroughFrameOnAxis, getDroppableDisplaced, isVisibleInDroppable, isVisibleInViewport, isVisible, isPartiallyVisible, isTotallyVisible, isTotallyVisibleOnAxis, getShouldAnimate, fromCombine, fromReorder, moveToNextIndex, getCombinedItemDisplacement, whenCombining, distanceFromStartToBorderBoxCenter, distanceFromEndToBorderBoxCenter, getCrossAxisBorderBoxCenter, goAfter, goBefore, goIntoStart, whenReordering, withDroppableDisplacement, getResultWithoutDroppableDisplacement, getPageBorderBoxCenterFromImpact, scrollViewport, speculativelyIncrease, withViewportDisplacement, getClientFromPageBorderBoxCenter, isTotallyVisibleInNewLocation, moveToNextPlace, getKnownActive, getBestCrossAxisDroppable, getCurrentPageBorderBoxCenter, getCurrentPageBorderBox, getClosestDraggable, getDisplacedBy, getRequiredGrowthForPlaceholder, withMaxScroll, addPlaceholder, removePlaceholder, moveToNewDroppable, moveCrossAxis, whatIsDraggedOver, getDroppableOver, moveInDirection, offsetRectByPosition, withDroppableScroll, getReorderImpact, combineThresholdDivisor, getCombineImpact, getDragImpact, patchDroppableMap, clearUnusedPlaceholder, recomputePlaceholders, update, recompute, getClientBorderBoxCenter, refreshSnap, getHomeLocation, getLiftEffect, patchDimensionMap, start, finish, offsetDraggable, getFrame, adjustAdditionsForScrollChanges, publishWhileDraggingInVirtual, isSnapping, postDroppableChange, idle, reducer, beforeInitialCapture, lift, initialPublish, publishWhileDragging, collectionStarting, updateDroppableScroll, updateDroppableIsEnabled, updateDroppableIsCombineEnabled, move, moveByWindowScroll, updateViewportMaxScroll, moveUp, moveDown, moveRight, moveLeft, flush, animateDrop, completeDrop, drop, dropPending, dropAnimationFinished, lift$1, style, curves, combine, timings, outOfTheWayTiming, transitions, moveTo, transforms, minDropTime, maxDropTime, dropTimeRange, maxDropTimeAtDistance, cancelDropModifier, getDropDuration, getNewHomeClientOffset, getDropImpact, drop$1, getWindowScroll3, shouldEnd, scrollListener, getExpiringAnnounce, getAsyncMarshal, areLocationsEqual, isCombineEqual, isCriticalEqual, withTimings, getDragStart, execute, getPublisher, responders, dropAnimationFinish, dropAnimationFlushOnScroll, dimensionMarshalStopper, focus, shouldStop, autoScroll, pendingDrop, composeEnhancers, createStore2, clean$1, getMaxScroll, getDocumentElement, getMaxWindowScroll, getViewport, getInitialPublish, createDimensionMarshal, canStartDrag, scrollWindow, getScrollableDroppables, getScrollableDroppableOver, getBestScrollableDroppable, config, getDistanceThresholds, getPercentage, minScroll, getValueFromDistance, accelerateAt, stopAt, dampenValueByTime, getValue2, getScrollOnAxis, adjustForSizeLimits, clean$2, getScroll, smallestSigned, getOverlap, canPartiallyScroll, canScrollWindow, getWindowOverlap, canScrollDroppable, getDroppableOverlap, getWindowScrollChange, getDroppableScrollChange, scroll$1, createFluidScroller, createJumpScroller, createAutoScroller, prefix$1, dragHandle, draggable, droppable, scrollContainer, makeGetSelector, getStyles, noPointerEvents, getStyles$1, useIsomorphicLayoutEffect2, getHead, createStyleEl, getWindowFromEl, StoreContext, getBodyElement, visuallyHidden, getId, count, defaults, AppContext, peerDependencies, semver, getVersion, isSatisfied, checkReactVersion, suffix, checkDoctype, tab, enter, escape, space, pageUp, pageDown, end, home, arrowLeft, arrowUp, arrowRight, arrowDown, _preventedKeys, preventedKeys, preventStandardKeyEvents, supportedEventName, primaryButton, sloppyClickThreshold, idle$1, _scrollJumpKeys, scrollJumpKeys, idle$2, timeForLongPress, forcePressThreshold, interactiveTagNames, getBorderBoxCenterPosition, supportedMatchesName, defaultSensors, createResponders, count$1, isEqual$1, isScroll, isAuto, isVisible$1, isEither, isBoth, isElementScrollable, isBodyScrollable, getClosestScrollable, checkForNestedScrollContainers, getScroll$1, getIsFixed, getEnv, getDroppableDimension, getClient, getDimension, immediate, delayed, getListenerOptions, getClosestScrollableFromDrag, empty, getSize, getStyle, Placeholder$1, DroppableContext, shared, standard, virtual, AnimateInOut, zIndexOptions, getDraggingTransition, getDraggingOpacity, getShouldDraggingAnimate, isStrictEqual, whatIsDraggedOverFromResult, getCombineWithFromResult, getCombineWithFromImpact, atRest, makeMapStateToProps, mapDispatchToProps, ConnectedDraggable, isMatchingType, getDraggable, makeMapStateToProps$1, mapDispatchToProps$1, defaultProps, ConnectedDroppable;
var init_react_beautiful_dnd_esm = __esm({
  "node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js"() {
    import_react9 = __toESM(require_react());
    init_inheritsLoose();
    init_extends();
    init_redux();
    init_es();
    init_use_memo_one_esm();
    init_css_box_model_esm();
    init_memoize_one_esm();
    init_raf_schd_esm();
    import_react_dom2 = __toESM(require_react_dom());
    isProduction2 = false;
    spacesAndTabs = /[ \t]{2,}/g;
    lineStartWithSpaces = /^[ \t]*/gm;
    clean = function clean2(value) {
      return value.replace(spacesAndTabs, " ").replace(lineStartWithSpaces, "").trim();
    };
    getDevMessage = function getDevMessage2(message) {
      return clean("\n  %creact-beautiful-dnd\n\n  %c" + clean(message) + "\n\n  %c👷‍ This is a development only message. It will be removed in production builds.\n");
    };
    getFormattedMessage = function getFormattedMessage2(message) {
      return [getDevMessage(message), "color: #00C584; font-size: 1.2em; font-weight: bold;", "line-height: 1.5", "color: #723874;"];
    };
    isDisabledFlag = "__react-beautiful-dnd-disable-dev-warnings";
    warning2 = log.bind(null, "warn");
    error = log.bind(null, "error");
    isProduction$1 = false;
    prefix2 = "Invariant failed";
    RbdInvariant.prototype.toString = function toString() {
      return this.message;
    };
    ErrorBoundary = function(_React$Component) {
      _inheritsLoose(ErrorBoundary2, _React$Component);
      function ErrorBoundary2() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
        _this.callbacks = null;
        _this.unbind = noop;
        _this.onWindowError = function(event) {
          var callbacks = _this.getCallbacks();
          if (callbacks.isDragging()) {
            callbacks.tryAbort();
            true ? warning2("\n        An error was caught by our window 'error' event listener while a drag was occurring.\n        The active drag has been aborted.\n      ") : void 0;
          }
          var err = event.error;
          if (err instanceof RbdInvariant) {
            event.preventDefault();
            if (true) {
              error(err.message);
            }
          }
        };
        _this.getCallbacks = function() {
          if (!_this.callbacks) {
            throw new Error("Unable to find AppCallbacks in <ErrorBoundary/>");
          }
          return _this.callbacks;
        };
        _this.setCallbacks = function(callbacks) {
          _this.callbacks = callbacks;
        };
        return _this;
      }
      var _proto = ErrorBoundary2.prototype;
      _proto.componentDidMount = function componentDidMount() {
        this.unbind = bindEvents(window, [{
          eventName: "error",
          fn: this.onWindowError
        }]);
      };
      _proto.componentDidCatch = function componentDidCatch(err) {
        if (err instanceof RbdInvariant) {
          if (true) {
            error(err.message);
          }
          this.setState({});
          return;
        }
        throw err;
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.unbind();
      };
      _proto.render = function render() {
        return this.props.children(this.setCallbacks);
      };
      return ErrorBoundary2;
    }(import_react9.default.Component);
    dragHandleUsageInstructions = "\n  Press space bar to start a drag.\n  When dragging you can use the arrow keys to move the item around and escape to cancel.\n  Some screen readers may require you to be in focus mode or to use your pass through key\n";
    position = function position2(index2) {
      return index2 + 1;
    };
    onDragStart = function onDragStart2(start3) {
      return "\n  You have lifted an item in position " + position(start3.source.index) + "\n";
    };
    withLocation = function withLocation2(source, destination) {
      var isInHomeList = source.droppableId === destination.droppableId;
      var startPosition = position(source.index);
      var endPosition = position(destination.index);
      if (isInHomeList) {
        return "\n      You have moved the item from position " + startPosition + "\n      to position " + endPosition + "\n    ";
      }
      return "\n    You have moved the item from position " + startPosition + "\n    in list " + source.droppableId + "\n    to list " + destination.droppableId + "\n    in position " + endPosition + "\n  ";
    };
    withCombine = function withCombine2(id, source, combine2) {
      var inHomeList = source.droppableId === combine2.droppableId;
      if (inHomeList) {
        return "\n      The item " + id + "\n      has been combined with " + combine2.draggableId;
      }
      return "\n      The item " + id + "\n      in list " + source.droppableId + "\n      has been combined with " + combine2.draggableId + "\n      in list " + combine2.droppableId + "\n    ";
    };
    onDragUpdate = function onDragUpdate2(update3) {
      var location2 = update3.destination;
      if (location2) {
        return withLocation(update3.source, location2);
      }
      var combine2 = update3.combine;
      if (combine2) {
        return withCombine(update3.draggableId, update3.source, combine2);
      }
      return "You are over an area that cannot be dropped on";
    };
    returnedToStart = function returnedToStart2(source) {
      return "\n  The item has returned to its starting position\n  of " + position(source.index) + "\n";
    };
    onDragEnd = function onDragEnd2(result) {
      if (result.reason === "CANCEL") {
        return "\n      Movement cancelled.\n      " + returnedToStart(result.source) + "\n    ";
      }
      var location2 = result.destination;
      var combine2 = result.combine;
      if (location2) {
        return "\n      You have dropped the item.\n      " + withLocation(result.source, location2) + "\n    ";
      }
      if (combine2) {
        return "\n      You have dropped the item.\n      " + withCombine(result.draggableId, result.source, combine2) + "\n    ";
      }
      return "\n    The item has been dropped while not over a drop area.\n    " + returnedToStart(result.source) + "\n  ";
    };
    preset = {
      dragHandleUsageInstructions,
      onDragStart,
      onDragUpdate,
      onDragEnd
    };
    origin = {
      x: 0,
      y: 0
    };
    add = function add2(point1, point2) {
      return {
        x: point1.x + point2.x,
        y: point1.y + point2.y
      };
    };
    subtract = function subtract2(point1, point2) {
      return {
        x: point1.x - point2.x,
        y: point1.y - point2.y
      };
    };
    isEqual2 = function isEqual3(point1, point2) {
      return point1.x === point2.x && point1.y === point2.y;
    };
    negate = function negate2(point) {
      return {
        x: point.x !== 0 ? -point.x : 0,
        y: point.y !== 0 ? -point.y : 0
      };
    };
    patch = function patch2(line, value, otherValue) {
      var _ref;
      if (otherValue === void 0) {
        otherValue = 0;
      }
      return _ref = {}, _ref[line] = value, _ref[line === "x" ? "y" : "x"] = otherValue, _ref;
    };
    distance = function distance2(point1, point2) {
      return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));
    };
    closest = function closest2(target, points) {
      return Math.min.apply(Math, points.map(function(point) {
        return distance(target, point);
      }));
    };
    apply = function apply2(fn) {
      return function(point) {
        return {
          x: fn(point.x),
          y: fn(point.y)
        };
      };
    };
    executeClip = function(frame, subject) {
      var result = getRect({
        top: Math.max(subject.top, frame.top),
        right: Math.min(subject.right, frame.right),
        bottom: Math.min(subject.bottom, frame.bottom),
        left: Math.max(subject.left, frame.left)
      });
      if (result.width <= 0 || result.height <= 0) {
        return null;
      }
      return result;
    };
    offsetByPosition = function offsetByPosition2(spacing, point) {
      return {
        top: spacing.top + point.y,
        left: spacing.left + point.x,
        bottom: spacing.bottom + point.y,
        right: spacing.right + point.x
      };
    };
    getCorners = function getCorners2(spacing) {
      return [{
        x: spacing.left,
        y: spacing.top
      }, {
        x: spacing.right,
        y: spacing.top
      }, {
        x: spacing.left,
        y: spacing.bottom
      }, {
        x: spacing.right,
        y: spacing.bottom
      }];
    };
    noSpacing2 = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    };
    scroll = function scroll2(target, frame) {
      if (!frame) {
        return target;
      }
      return offsetByPosition(target, frame.scroll.diff.displacement);
    };
    increase = function increase2(target, axis, withPlaceholder) {
      if (withPlaceholder && withPlaceholder.increasedBy) {
        var _extends2;
        return _extends({}, target, (_extends2 = {}, _extends2[axis.end] = target[axis.end] + withPlaceholder.increasedBy[axis.line], _extends2));
      }
      return target;
    };
    clip = function clip2(target, frame) {
      if (frame && frame.shouldClipSubject) {
        return executeClip(frame.pageMarginBox, target);
      }
      return getRect(target);
    };
    getSubject = function(_ref) {
      var page = _ref.page, withPlaceholder = _ref.withPlaceholder, axis = _ref.axis, frame = _ref.frame;
      var scrolled = scroll(page.marginBox, frame);
      var increased = increase(scrolled, axis, withPlaceholder);
      var clipped = clip(increased, frame);
      return {
        page,
        withPlaceholder,
        active: clipped
      };
    };
    scrollDroppable = function(droppable2, newScroll) {
      !droppable2.frame ? true ? invariant2(false) : invariant2(false) : void 0;
      var scrollable = droppable2.frame;
      var scrollDiff = subtract(newScroll, scrollable.scroll.initial);
      var scrollDisplacement = negate(scrollDiff);
      var frame = _extends({}, scrollable, {
        scroll: {
          initial: scrollable.scroll.initial,
          current: newScroll,
          diff: {
            value: scrollDiff,
            displacement: scrollDisplacement
          },
          max: scrollable.scroll.max
        }
      });
      var subject = getSubject({
        page: droppable2.subject.page,
        withPlaceholder: droppable2.subject.withPlaceholder,
        axis: droppable2.axis,
        frame
      });
      var result = _extends({}, droppable2, {
        frame,
        subject
      });
      return result;
    };
    toDroppableMap = memoize_one_esm_default(function(droppables) {
      return droppables.reduce(function(previous, current) {
        previous[current.descriptor.id] = current;
        return previous;
      }, {});
    });
    toDraggableMap = memoize_one_esm_default(function(draggables) {
      return draggables.reduce(function(previous, current) {
        previous[current.descriptor.id] = current;
        return previous;
      }, {});
    });
    toDroppableList = memoize_one_esm_default(function(droppables) {
      return values(droppables);
    });
    toDraggableList = memoize_one_esm_default(function(draggables) {
      return values(draggables);
    });
    getDraggablesInsideDroppable = memoize_one_esm_default(function(droppableId, draggables) {
      var result = toDraggableList(draggables).filter(function(draggable2) {
        return droppableId === draggable2.descriptor.droppableId;
      }).sort(function(a2, b2) {
        return a2.descriptor.index - b2.descriptor.index;
      });
      return result;
    });
    removeDraggableFromList = memoize_one_esm_default(function(remove, list) {
      return list.filter(function(item) {
        return item.descriptor.id !== remove.descriptor.id;
      });
    });
    moveToNextCombine = function(_ref) {
      var isMovingForward = _ref.isMovingForward, draggable2 = _ref.draggable, destination = _ref.destination, insideDestination = _ref.insideDestination, previousImpact = _ref.previousImpact;
      if (!destination.isCombineEnabled) {
        return null;
      }
      var location2 = tryGetDestination(previousImpact);
      if (!location2) {
        return null;
      }
      function getImpact(target) {
        var at3 = {
          type: "COMBINE",
          combine: {
            draggableId: target,
            droppableId: destination.descriptor.id
          }
        };
        return _extends({}, previousImpact, {
          at: at3
        });
      }
      var all = previousImpact.displaced.all;
      var closestId = all.length ? all[0] : null;
      if (isMovingForward) {
        return closestId ? getImpact(closestId) : null;
      }
      var withoutDraggable = removeDraggableFromList(draggable2, insideDestination);
      if (!closestId) {
        if (!withoutDraggable.length) {
          return null;
        }
        var last = withoutDraggable[withoutDraggable.length - 1];
        return getImpact(last.descriptor.id);
      }
      var indexOfClosest = findIndex(withoutDraggable, function(d2) {
        return d2.descriptor.id === closestId;
      });
      !(indexOfClosest !== -1) ? true ? invariant2(false, "Could not find displaced item in set") : invariant2(false) : void 0;
      var proposedIndex = indexOfClosest - 1;
      if (proposedIndex < 0) {
        return null;
      }
      var before = withoutDraggable[proposedIndex];
      return getImpact(before.descriptor.id);
    };
    isHomeOf = function(draggable2, destination) {
      return draggable2.descriptor.droppableId === destination.descriptor.id;
    };
    noDisplacedBy = {
      point: origin,
      value: 0
    };
    emptyGroups = {
      invisible: {},
      visible: {},
      all: []
    };
    noImpact = {
      displaced: emptyGroups,
      displacedBy: noDisplacedBy,
      at: null
    };
    isWithin = function(lowerBound, upperBound) {
      return function(value) {
        return lowerBound <= value && value <= upperBound;
      };
    };
    isPartiallyVisibleThroughFrame = function(frame) {
      var isWithinVertical = isWithin(frame.top, frame.bottom);
      var isWithinHorizontal = isWithin(frame.left, frame.right);
      return function(subject) {
        var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
        if (isContained) {
          return true;
        }
        var isPartiallyVisibleVertically = isWithinVertical(subject.top) || isWithinVertical(subject.bottom);
        var isPartiallyVisibleHorizontally = isWithinHorizontal(subject.left) || isWithinHorizontal(subject.right);
        var isPartiallyContained = isPartiallyVisibleVertically && isPartiallyVisibleHorizontally;
        if (isPartiallyContained) {
          return true;
        }
        var isBiggerVertically = subject.top < frame.top && subject.bottom > frame.bottom;
        var isBiggerHorizontally = subject.left < frame.left && subject.right > frame.right;
        var isTargetBiggerThanFrame = isBiggerVertically && isBiggerHorizontally;
        if (isTargetBiggerThanFrame) {
          return true;
        }
        var isTargetBiggerOnOneAxis = isBiggerVertically && isPartiallyVisibleHorizontally || isBiggerHorizontally && isPartiallyVisibleVertically;
        return isTargetBiggerOnOneAxis;
      };
    };
    isTotallyVisibleThroughFrame = function(frame) {
      var isWithinVertical = isWithin(frame.top, frame.bottom);
      var isWithinHorizontal = isWithin(frame.left, frame.right);
      return function(subject) {
        var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
        return isContained;
      };
    };
    vertical = {
      direction: "vertical",
      line: "y",
      crossAxisLine: "x",
      start: "top",
      end: "bottom",
      size: "height",
      crossAxisStart: "left",
      crossAxisEnd: "right",
      crossAxisSize: "width"
    };
    horizontal = {
      direction: "horizontal",
      line: "x",
      crossAxisLine: "y",
      start: "left",
      end: "right",
      size: "width",
      crossAxisStart: "top",
      crossAxisEnd: "bottom",
      crossAxisSize: "height"
    };
    isTotallyVisibleThroughFrameOnAxis = function(axis) {
      return function(frame) {
        var isWithinVertical = isWithin(frame.top, frame.bottom);
        var isWithinHorizontal = isWithin(frame.left, frame.right);
        return function(subject) {
          if (axis === vertical) {
            return isWithinVertical(subject.top) && isWithinVertical(subject.bottom);
          }
          return isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
        };
      };
    };
    getDroppableDisplaced = function getDroppableDisplaced2(target, destination) {
      var displacement = destination.frame ? destination.frame.scroll.diff.displacement : origin;
      return offsetByPosition(target, displacement);
    };
    isVisibleInDroppable = function isVisibleInDroppable2(target, destination, isVisibleThroughFrameFn) {
      if (!destination.subject.active) {
        return false;
      }
      return isVisibleThroughFrameFn(destination.subject.active)(target);
    };
    isVisibleInViewport = function isVisibleInViewport2(target, viewport, isVisibleThroughFrameFn) {
      return isVisibleThroughFrameFn(viewport)(target);
    };
    isVisible = function isVisible2(_ref) {
      var toBeDisplaced = _ref.target, destination = _ref.destination, viewport = _ref.viewport, withDroppableDisplacement2 = _ref.withDroppableDisplacement, isVisibleThroughFrameFn = _ref.isVisibleThroughFrameFn;
      var displacedTarget = withDroppableDisplacement2 ? getDroppableDisplaced(toBeDisplaced, destination) : toBeDisplaced;
      return isVisibleInDroppable(displacedTarget, destination, isVisibleThroughFrameFn) && isVisibleInViewport(displacedTarget, viewport, isVisibleThroughFrameFn);
    };
    isPartiallyVisible = function isPartiallyVisible2(args) {
      return isVisible(_extends({}, args, {
        isVisibleThroughFrameFn: isPartiallyVisibleThroughFrame
      }));
    };
    isTotallyVisible = function isTotallyVisible2(args) {
      return isVisible(_extends({}, args, {
        isVisibleThroughFrameFn: isTotallyVisibleThroughFrame
      }));
    };
    isTotallyVisibleOnAxis = function isTotallyVisibleOnAxis2(args) {
      return isVisible(_extends({}, args, {
        isVisibleThroughFrameFn: isTotallyVisibleThroughFrameOnAxis(args.destination.axis)
      }));
    };
    getShouldAnimate = function getShouldAnimate2(id, last, forceShouldAnimate) {
      if (typeof forceShouldAnimate === "boolean") {
        return forceShouldAnimate;
      }
      if (!last) {
        return true;
      }
      var invisible = last.invisible, visible = last.visible;
      if (invisible[id]) {
        return false;
      }
      var previous = visible[id];
      return previous ? previous.shouldAnimate : true;
    };
    fromCombine = function(_ref) {
      var isMovingForward = _ref.isMovingForward, destination = _ref.destination, draggables = _ref.draggables, combine2 = _ref.combine, afterCritical = _ref.afterCritical;
      if (!destination.isCombineEnabled) {
        return null;
      }
      var combineId = combine2.draggableId;
      var combineWith = draggables[combineId];
      var combineWithIndex = combineWith.descriptor.index;
      var didCombineWithStartAfterCritical = didStartAfterCritical(combineId, afterCritical);
      if (didCombineWithStartAfterCritical) {
        if (isMovingForward) {
          return combineWithIndex;
        }
        return combineWithIndex - 1;
      }
      if (isMovingForward) {
        return combineWithIndex + 1;
      }
      return combineWithIndex;
    };
    fromReorder = function(_ref) {
      var isMovingForward = _ref.isMovingForward, isInHomeList = _ref.isInHomeList, insideDestination = _ref.insideDestination, location2 = _ref.location;
      if (!insideDestination.length) {
        return null;
      }
      var currentIndex = location2.index;
      var proposedIndex = isMovingForward ? currentIndex + 1 : currentIndex - 1;
      var firstIndex = insideDestination[0].descriptor.index;
      var lastIndex = insideDestination[insideDestination.length - 1].descriptor.index;
      var upperBound = isInHomeList ? lastIndex : lastIndex + 1;
      if (proposedIndex < firstIndex) {
        return null;
      }
      if (proposedIndex > upperBound) {
        return null;
      }
      return proposedIndex;
    };
    moveToNextIndex = function(_ref) {
      var isMovingForward = _ref.isMovingForward, isInHomeList = _ref.isInHomeList, draggable2 = _ref.draggable, draggables = _ref.draggables, destination = _ref.destination, insideDestination = _ref.insideDestination, previousImpact = _ref.previousImpact, viewport = _ref.viewport, afterCritical = _ref.afterCritical;
      var wasAt = previousImpact.at;
      !wasAt ? true ? invariant2(false, "Cannot move in direction without previous impact location") : invariant2(false) : void 0;
      if (wasAt.type === "REORDER") {
        var _newIndex = fromReorder({
          isMovingForward,
          isInHomeList,
          location: wasAt.destination,
          insideDestination
        });
        if (_newIndex == null) {
          return null;
        }
        return calculateReorderImpact({
          draggable: draggable2,
          insideDestination,
          destination,
          viewport,
          last: previousImpact.displaced,
          displacedBy: previousImpact.displacedBy,
          index: _newIndex
        });
      }
      var newIndex = fromCombine({
        isMovingForward,
        destination,
        displaced: previousImpact.displaced,
        draggables,
        combine: wasAt.combine,
        afterCritical
      });
      if (newIndex == null) {
        return null;
      }
      return calculateReorderImpact({
        draggable: draggable2,
        insideDestination,
        destination,
        viewport,
        last: previousImpact.displaced,
        displacedBy: previousImpact.displacedBy,
        index: newIndex
      });
    };
    getCombinedItemDisplacement = function(_ref) {
      var displaced = _ref.displaced, afterCritical = _ref.afterCritical, combineWith = _ref.combineWith, displacedBy = _ref.displacedBy;
      var isDisplaced = Boolean(displaced.visible[combineWith] || displaced.invisible[combineWith]);
      if (didStartAfterCritical(combineWith, afterCritical)) {
        return isDisplaced ? origin : negate(displacedBy.point);
      }
      return isDisplaced ? displacedBy.point : origin;
    };
    whenCombining = function(_ref) {
      var afterCritical = _ref.afterCritical, impact = _ref.impact, draggables = _ref.draggables;
      var combine2 = tryGetCombine(impact);
      !combine2 ? true ? invariant2(false) : invariant2(false) : void 0;
      var combineWith = combine2.draggableId;
      var center = draggables[combineWith].page.borderBox.center;
      var displaceBy = getCombinedItemDisplacement({
        displaced: impact.displaced,
        afterCritical,
        combineWith,
        displacedBy: impact.displacedBy
      });
      return add(center, displaceBy);
    };
    distanceFromStartToBorderBoxCenter = function distanceFromStartToBorderBoxCenter2(axis, box) {
      return box.margin[axis.start] + box.borderBox[axis.size] / 2;
    };
    distanceFromEndToBorderBoxCenter = function distanceFromEndToBorderBoxCenter2(axis, box) {
      return box.margin[axis.end] + box.borderBox[axis.size] / 2;
    };
    getCrossAxisBorderBoxCenter = function getCrossAxisBorderBoxCenter2(axis, target, isMoving) {
      return target[axis.crossAxisStart] + isMoving.margin[axis.crossAxisStart] + isMoving.borderBox[axis.crossAxisSize] / 2;
    };
    goAfter = function goAfter2(_ref) {
      var axis = _ref.axis, moveRelativeTo = _ref.moveRelativeTo, isMoving = _ref.isMoving;
      return patch(axis.line, moveRelativeTo.marginBox[axis.end] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));
    };
    goBefore = function goBefore2(_ref2) {
      var axis = _ref2.axis, moveRelativeTo = _ref2.moveRelativeTo, isMoving = _ref2.isMoving;
      return patch(axis.line, moveRelativeTo.marginBox[axis.start] - distanceFromEndToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));
    };
    goIntoStart = function goIntoStart2(_ref3) {
      var axis = _ref3.axis, moveInto = _ref3.moveInto, isMoving = _ref3.isMoving;
      return patch(axis.line, moveInto.contentBox[axis.start] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveInto.contentBox, isMoving));
    };
    whenReordering = function(_ref) {
      var impact = _ref.impact, draggable2 = _ref.draggable, draggables = _ref.draggables, droppable2 = _ref.droppable, afterCritical = _ref.afterCritical;
      var insideDestination = getDraggablesInsideDroppable(droppable2.descriptor.id, draggables);
      var draggablePage = draggable2.page;
      var axis = droppable2.axis;
      if (!insideDestination.length) {
        return goIntoStart({
          axis,
          moveInto: droppable2.page,
          isMoving: draggablePage
        });
      }
      var displaced = impact.displaced, displacedBy = impact.displacedBy;
      var closestAfter = displaced.all[0];
      if (closestAfter) {
        var closest3 = draggables[closestAfter];
        if (didStartAfterCritical(closestAfter, afterCritical)) {
          return goBefore({
            axis,
            moveRelativeTo: closest3.page,
            isMoving: draggablePage
          });
        }
        var withDisplacement = offset(closest3.page, displacedBy.point);
        return goBefore({
          axis,
          moveRelativeTo: withDisplacement,
          isMoving: draggablePage
        });
      }
      var last = insideDestination[insideDestination.length - 1];
      if (last.descriptor.id === draggable2.descriptor.id) {
        return draggablePage.borderBox.center;
      }
      if (didStartAfterCritical(last.descriptor.id, afterCritical)) {
        var page = offset(last.page, negate(afterCritical.displacedBy.point));
        return goAfter({
          axis,
          moveRelativeTo: page,
          isMoving: draggablePage
        });
      }
      return goAfter({
        axis,
        moveRelativeTo: last.page,
        isMoving: draggablePage
      });
    };
    withDroppableDisplacement = function(droppable2, point) {
      var frame = droppable2.frame;
      if (!frame) {
        return point;
      }
      return add(point, frame.scroll.diff.displacement);
    };
    getResultWithoutDroppableDisplacement = function getResultWithoutDroppableDisplacement2(_ref) {
      var impact = _ref.impact, draggable2 = _ref.draggable, droppable2 = _ref.droppable, draggables = _ref.draggables, afterCritical = _ref.afterCritical;
      var original = draggable2.page.borderBox.center;
      var at3 = impact.at;
      if (!droppable2) {
        return original;
      }
      if (!at3) {
        return original;
      }
      if (at3.type === "REORDER") {
        return whenReordering({
          impact,
          draggable: draggable2,
          draggables,
          droppable: droppable2,
          afterCritical
        });
      }
      return whenCombining({
        impact,
        draggables,
        afterCritical
      });
    };
    getPageBorderBoxCenterFromImpact = function(args) {
      var withoutDisplacement = getResultWithoutDroppableDisplacement(args);
      var droppable2 = args.droppable;
      var withDisplacement = droppable2 ? withDroppableDisplacement(droppable2, withoutDisplacement) : withoutDisplacement;
      return withDisplacement;
    };
    scrollViewport = function(viewport, newScroll) {
      var diff = subtract(newScroll, viewport.scroll.initial);
      var displacement = negate(diff);
      var frame = getRect({
        top: newScroll.y,
        bottom: newScroll.y + viewport.frame.height,
        left: newScroll.x,
        right: newScroll.x + viewport.frame.width
      });
      var updated = {
        frame,
        scroll: {
          initial: viewport.scroll.initial,
          max: viewport.scroll.max,
          current: newScroll,
          diff: {
            value: diff,
            displacement
          }
        }
      };
      return updated;
    };
    speculativelyIncrease = function(_ref) {
      var impact = _ref.impact, viewport = _ref.viewport, destination = _ref.destination, draggables = _ref.draggables, maxScrollChange = _ref.maxScrollChange;
      var scrolledViewport = scrollViewport(viewport, add(viewport.scroll.current, maxScrollChange));
      var scrolledDroppable = destination.frame ? scrollDroppable(destination, add(destination.frame.scroll.current, maxScrollChange)) : destination;
      var last = impact.displaced;
      var withViewportScroll = getDisplacementGroups({
        afterDragging: getDraggables(last.all, draggables),
        destination,
        displacedBy: impact.displacedBy,
        viewport: scrolledViewport.frame,
        last,
        forceShouldAnimate: false
      });
      var withDroppableScroll2 = getDisplacementGroups({
        afterDragging: getDraggables(last.all, draggables),
        destination: scrolledDroppable,
        displacedBy: impact.displacedBy,
        viewport: viewport.frame,
        last,
        forceShouldAnimate: false
      });
      var invisible = {};
      var visible = {};
      var groups = [last, withViewportScroll, withDroppableScroll2];
      last.all.forEach(function(id) {
        var displacement = tryGetVisible(id, groups);
        if (displacement) {
          visible[id] = displacement;
          return;
        }
        invisible[id] = true;
      });
      var newImpact = _extends({}, impact, {
        displaced: {
          all: last.all,
          invisible,
          visible
        }
      });
      return newImpact;
    };
    withViewportDisplacement = function(viewport, point) {
      return add(viewport.scroll.diff.displacement, point);
    };
    getClientFromPageBorderBoxCenter = function(_ref) {
      var pageBorderBoxCenter = _ref.pageBorderBoxCenter, draggable2 = _ref.draggable, viewport = _ref.viewport;
      var withoutPageScrollChange = withViewportDisplacement(viewport, pageBorderBoxCenter);
      var offset3 = subtract(withoutPageScrollChange, draggable2.page.borderBox.center);
      return add(draggable2.client.borderBox.center, offset3);
    };
    isTotallyVisibleInNewLocation = function(_ref) {
      var draggable2 = _ref.draggable, destination = _ref.destination, newPageBorderBoxCenter = _ref.newPageBorderBoxCenter, viewport = _ref.viewport, withDroppableDisplacement2 = _ref.withDroppableDisplacement, _ref$onlyOnMainAxis = _ref.onlyOnMainAxis, onlyOnMainAxis = _ref$onlyOnMainAxis === void 0 ? false : _ref$onlyOnMainAxis;
      var changeNeeded = subtract(newPageBorderBoxCenter, draggable2.page.borderBox.center);
      var shifted = offsetByPosition(draggable2.page.borderBox, changeNeeded);
      var args = {
        target: shifted,
        destination,
        withDroppableDisplacement: withDroppableDisplacement2,
        viewport
      };
      return onlyOnMainAxis ? isTotallyVisibleOnAxis(args) : isTotallyVisible(args);
    };
    moveToNextPlace = function(_ref) {
      var isMovingForward = _ref.isMovingForward, draggable2 = _ref.draggable, destination = _ref.destination, draggables = _ref.draggables, previousImpact = _ref.previousImpact, viewport = _ref.viewport, previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter, previousClientSelection = _ref.previousClientSelection, afterCritical = _ref.afterCritical;
      if (!destination.isEnabled) {
        return null;
      }
      var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
      var isInHomeList = isHomeOf(draggable2, destination);
      var impact = moveToNextCombine({
        isMovingForward,
        draggable: draggable2,
        destination,
        insideDestination,
        previousImpact
      }) || moveToNextIndex({
        isMovingForward,
        isInHomeList,
        draggable: draggable2,
        draggables,
        destination,
        insideDestination,
        previousImpact,
        viewport,
        afterCritical
      });
      if (!impact) {
        return null;
      }
      var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
        impact,
        draggable: draggable2,
        droppable: destination,
        draggables,
        afterCritical
      });
      var isVisibleInNewLocation = isTotallyVisibleInNewLocation({
        draggable: draggable2,
        destination,
        newPageBorderBoxCenter: pageBorderBoxCenter,
        viewport: viewport.frame,
        withDroppableDisplacement: false,
        onlyOnMainAxis: true
      });
      if (isVisibleInNewLocation) {
        var clientSelection = getClientFromPageBorderBoxCenter({
          pageBorderBoxCenter,
          draggable: draggable2,
          viewport
        });
        return {
          clientSelection,
          impact,
          scrollJumpRequest: null
        };
      }
      var distance3 = subtract(pageBorderBoxCenter, previousPageBorderBoxCenter);
      var cautious = speculativelyIncrease({
        impact,
        viewport,
        destination,
        draggables,
        maxScrollChange: distance3
      });
      return {
        clientSelection: previousClientSelection,
        impact: cautious,
        scrollJumpRequest: distance3
      };
    };
    getKnownActive = function getKnownActive2(droppable2) {
      var rect = droppable2.subject.active;
      !rect ? true ? invariant2(false, "Cannot get clipped area from droppable") : invariant2(false) : void 0;
      return rect;
    };
    getBestCrossAxisDroppable = function(_ref) {
      var isMovingForward = _ref.isMovingForward, pageBorderBoxCenter = _ref.pageBorderBoxCenter, source = _ref.source, droppables = _ref.droppables, viewport = _ref.viewport;
      var active = source.subject.active;
      if (!active) {
        return null;
      }
      var axis = source.axis;
      var isBetweenSourceClipped = isWithin(active[axis.start], active[axis.end]);
      var candidates = toDroppableList(droppables).filter(function(droppable2) {
        return droppable2 !== source;
      }).filter(function(droppable2) {
        return droppable2.isEnabled;
      }).filter(function(droppable2) {
        return Boolean(droppable2.subject.active);
      }).filter(function(droppable2) {
        return isPartiallyVisibleThroughFrame(viewport.frame)(getKnownActive(droppable2));
      }).filter(function(droppable2) {
        var activeOfTarget = getKnownActive(droppable2);
        if (isMovingForward) {
          return active[axis.crossAxisEnd] < activeOfTarget[axis.crossAxisEnd];
        }
        return activeOfTarget[axis.crossAxisStart] < active[axis.crossAxisStart];
      }).filter(function(droppable2) {
        var activeOfTarget = getKnownActive(droppable2);
        var isBetweenDestinationClipped = isWithin(activeOfTarget[axis.start], activeOfTarget[axis.end]);
        return isBetweenSourceClipped(activeOfTarget[axis.start]) || isBetweenSourceClipped(activeOfTarget[axis.end]) || isBetweenDestinationClipped(active[axis.start]) || isBetweenDestinationClipped(active[axis.end]);
      }).sort(function(a2, b2) {
        var first = getKnownActive(a2)[axis.crossAxisStart];
        var second = getKnownActive(b2)[axis.crossAxisStart];
        if (isMovingForward) {
          return first - second;
        }
        return second - first;
      }).filter(function(droppable2, index2, array) {
        return getKnownActive(droppable2)[axis.crossAxisStart] === getKnownActive(array[0])[axis.crossAxisStart];
      });
      if (!candidates.length) {
        return null;
      }
      if (candidates.length === 1) {
        return candidates[0];
      }
      var contains = candidates.filter(function(droppable2) {
        var isWithinDroppable = isWithin(getKnownActive(droppable2)[axis.start], getKnownActive(droppable2)[axis.end]);
        return isWithinDroppable(pageBorderBoxCenter[axis.line]);
      });
      if (contains.length === 1) {
        return contains[0];
      }
      if (contains.length > 1) {
        return contains.sort(function(a2, b2) {
          return getKnownActive(a2)[axis.start] - getKnownActive(b2)[axis.start];
        })[0];
      }
      return candidates.sort(function(a2, b2) {
        var first = closest(pageBorderBoxCenter, getCorners(getKnownActive(a2)));
        var second = closest(pageBorderBoxCenter, getCorners(getKnownActive(b2)));
        if (first !== second) {
          return first - second;
        }
        return getKnownActive(a2)[axis.start] - getKnownActive(b2)[axis.start];
      })[0];
    };
    getCurrentPageBorderBoxCenter = function getCurrentPageBorderBoxCenter2(draggable2, afterCritical) {
      var original = draggable2.page.borderBox.center;
      return didStartAfterCritical(draggable2.descriptor.id, afterCritical) ? subtract(original, afterCritical.displacedBy.point) : original;
    };
    getCurrentPageBorderBox = function getCurrentPageBorderBox2(draggable2, afterCritical) {
      var original = draggable2.page.borderBox;
      return didStartAfterCritical(draggable2.descriptor.id, afterCritical) ? offsetByPosition(original, negate(afterCritical.displacedBy.point)) : original;
    };
    getClosestDraggable = function(_ref) {
      var pageBorderBoxCenter = _ref.pageBorderBoxCenter, viewport = _ref.viewport, destination = _ref.destination, insideDestination = _ref.insideDestination, afterCritical = _ref.afterCritical;
      var sorted = insideDestination.filter(function(draggable2) {
        return isTotallyVisible({
          target: getCurrentPageBorderBox(draggable2, afterCritical),
          destination,
          viewport: viewport.frame,
          withDroppableDisplacement: true
        });
      }).sort(function(a2, b2) {
        var distanceToA = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(a2, afterCritical)));
        var distanceToB = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(b2, afterCritical)));
        if (distanceToA < distanceToB) {
          return -1;
        }
        if (distanceToB < distanceToA) {
          return 1;
        }
        return a2.descriptor.index - b2.descriptor.index;
      });
      return sorted[0] || null;
    };
    getDisplacedBy = memoize_one_esm_default(function getDisplacedBy2(axis, displaceBy) {
      var displacement = displaceBy[axis.line];
      return {
        value: displacement,
        point: patch(axis.line, displacement)
      };
    });
    getRequiredGrowthForPlaceholder = function getRequiredGrowthForPlaceholder2(droppable2, placeholderSize, draggables) {
      var axis = droppable2.axis;
      if (droppable2.descriptor.mode === "virtual") {
        return patch(axis.line, placeholderSize[axis.line]);
      }
      var availableSpace = droppable2.subject.page.contentBox[axis.size];
      var insideDroppable = getDraggablesInsideDroppable(droppable2.descriptor.id, draggables);
      var spaceUsed = insideDroppable.reduce(function(sum, dimension) {
        return sum + dimension.client.marginBox[axis.size];
      }, 0);
      var requiredSpace = spaceUsed + placeholderSize[axis.line];
      var needsToGrowBy = requiredSpace - availableSpace;
      if (needsToGrowBy <= 0) {
        return null;
      }
      return patch(axis.line, needsToGrowBy);
    };
    withMaxScroll = function withMaxScroll2(frame, max) {
      return _extends({}, frame, {
        scroll: _extends({}, frame.scroll, {
          max
        })
      });
    };
    addPlaceholder = function addPlaceholder2(droppable2, draggable2, draggables) {
      var frame = droppable2.frame;
      !!isHomeOf(draggable2, droppable2) ? true ? invariant2(false, "Should not add placeholder space to home list") : invariant2(false) : void 0;
      !!droppable2.subject.withPlaceholder ? true ? invariant2(false, "Cannot add placeholder size to a subject when it already has one") : invariant2(false) : void 0;
      var placeholderSize = getDisplacedBy(droppable2.axis, draggable2.displaceBy).point;
      var requiredGrowth = getRequiredGrowthForPlaceholder(droppable2, placeholderSize, draggables);
      var added = {
        placeholderSize,
        increasedBy: requiredGrowth,
        oldFrameMaxScroll: droppable2.frame ? droppable2.frame.scroll.max : null
      };
      if (!frame) {
        var _subject = getSubject({
          page: droppable2.subject.page,
          withPlaceholder: added,
          axis: droppable2.axis,
          frame: droppable2.frame
        });
        return _extends({}, droppable2, {
          subject: _subject
        });
      }
      var maxScroll = requiredGrowth ? add(frame.scroll.max, requiredGrowth) : frame.scroll.max;
      var newFrame = withMaxScroll(frame, maxScroll);
      var subject = getSubject({
        page: droppable2.subject.page,
        withPlaceholder: added,
        axis: droppable2.axis,
        frame: newFrame
      });
      return _extends({}, droppable2, {
        subject,
        frame: newFrame
      });
    };
    removePlaceholder = function removePlaceholder2(droppable2) {
      var added = droppable2.subject.withPlaceholder;
      !added ? true ? invariant2(false, "Cannot remove placeholder form subject when there was none") : invariant2(false) : void 0;
      var frame = droppable2.frame;
      if (!frame) {
        var _subject2 = getSubject({
          page: droppable2.subject.page,
          axis: droppable2.axis,
          frame: null,
          withPlaceholder: null
        });
        return _extends({}, droppable2, {
          subject: _subject2
        });
      }
      var oldMaxScroll = added.oldFrameMaxScroll;
      !oldMaxScroll ? true ? invariant2(false, "Expected droppable with frame to have old max frame scroll when removing placeholder") : invariant2(false) : void 0;
      var newFrame = withMaxScroll(frame, oldMaxScroll);
      var subject = getSubject({
        page: droppable2.subject.page,
        axis: droppable2.axis,
        frame: newFrame,
        withPlaceholder: null
      });
      return _extends({}, droppable2, {
        subject,
        frame: newFrame
      });
    };
    moveToNewDroppable = function(_ref) {
      var previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter, moveRelativeTo = _ref.moveRelativeTo, insideDestination = _ref.insideDestination, draggable2 = _ref.draggable, draggables = _ref.draggables, destination = _ref.destination, viewport = _ref.viewport, afterCritical = _ref.afterCritical;
      if (!moveRelativeTo) {
        if (insideDestination.length) {
          return null;
        }
        var proposed = {
          displaced: emptyGroups,
          displacedBy: noDisplacedBy,
          at: {
            type: "REORDER",
            destination: {
              droppableId: destination.descriptor.id,
              index: 0
            }
          }
        };
        var proposedPageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
          impact: proposed,
          draggable: draggable2,
          droppable: destination,
          draggables,
          afterCritical
        });
        var withPlaceholder = isHomeOf(draggable2, destination) ? destination : addPlaceholder(destination, draggable2, draggables);
        var isVisibleInNewLocation = isTotallyVisibleInNewLocation({
          draggable: draggable2,
          destination: withPlaceholder,
          newPageBorderBoxCenter: proposedPageBorderBoxCenter,
          viewport: viewport.frame,
          withDroppableDisplacement: false,
          onlyOnMainAxis: true
        });
        return isVisibleInNewLocation ? proposed : null;
      }
      var isGoingBeforeTarget = Boolean(previousPageBorderBoxCenter[destination.axis.line] <= moveRelativeTo.page.borderBox.center[destination.axis.line]);
      var proposedIndex = function() {
        var relativeTo = moveRelativeTo.descriptor.index;
        if (moveRelativeTo.descriptor.id === draggable2.descriptor.id) {
          return relativeTo;
        }
        if (isGoingBeforeTarget) {
          return relativeTo;
        }
        return relativeTo + 1;
      }();
      var displacedBy = getDisplacedBy(destination.axis, draggable2.displaceBy);
      return calculateReorderImpact({
        draggable: draggable2,
        insideDestination,
        destination,
        viewport,
        displacedBy,
        last: emptyGroups,
        index: proposedIndex
      });
    };
    moveCrossAxis = function(_ref) {
      var isMovingForward = _ref.isMovingForward, previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter, draggable2 = _ref.draggable, isOver = _ref.isOver, draggables = _ref.draggables, droppables = _ref.droppables, viewport = _ref.viewport, afterCritical = _ref.afterCritical;
      var destination = getBestCrossAxisDroppable({
        isMovingForward,
        pageBorderBoxCenter: previousPageBorderBoxCenter,
        source: isOver,
        droppables,
        viewport
      });
      if (!destination) {
        return null;
      }
      var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
      var moveRelativeTo = getClosestDraggable({
        pageBorderBoxCenter: previousPageBorderBoxCenter,
        viewport,
        destination,
        insideDestination,
        afterCritical
      });
      var impact = moveToNewDroppable({
        previousPageBorderBoxCenter,
        destination,
        draggable: draggable2,
        draggables,
        moveRelativeTo,
        insideDestination,
        viewport,
        afterCritical
      });
      if (!impact) {
        return null;
      }
      var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
        impact,
        draggable: draggable2,
        droppable: destination,
        draggables,
        afterCritical
      });
      var clientSelection = getClientFromPageBorderBoxCenter({
        pageBorderBoxCenter,
        draggable: draggable2,
        viewport
      });
      return {
        clientSelection,
        impact,
        scrollJumpRequest: null
      };
    };
    whatIsDraggedOver = function(impact) {
      var at3 = impact.at;
      if (!at3) {
        return null;
      }
      if (at3.type === "REORDER") {
        return at3.destination.droppableId;
      }
      return at3.combine.droppableId;
    };
    getDroppableOver = function getDroppableOver2(impact, droppables) {
      var id = whatIsDraggedOver(impact);
      return id ? droppables[id] : null;
    };
    moveInDirection = function(_ref) {
      var state = _ref.state, type = _ref.type;
      var isActuallyOver = getDroppableOver(state.impact, state.dimensions.droppables);
      var isMainAxisMovementAllowed = Boolean(isActuallyOver);
      var home2 = state.dimensions.droppables[state.critical.droppable.id];
      var isOver = isActuallyOver || home2;
      var direction = isOver.axis.direction;
      var isMovingOnMainAxis = direction === "vertical" && (type === "MOVE_UP" || type === "MOVE_DOWN") || direction === "horizontal" && (type === "MOVE_LEFT" || type === "MOVE_RIGHT");
      if (isMovingOnMainAxis && !isMainAxisMovementAllowed) {
        return null;
      }
      var isMovingForward = type === "MOVE_DOWN" || type === "MOVE_RIGHT";
      var draggable2 = state.dimensions.draggables[state.critical.draggable.id];
      var previousPageBorderBoxCenter = state.current.page.borderBoxCenter;
      var _state$dimensions = state.dimensions, draggables = _state$dimensions.draggables, droppables = _state$dimensions.droppables;
      return isMovingOnMainAxis ? moveToNextPlace({
        isMovingForward,
        previousPageBorderBoxCenter,
        draggable: draggable2,
        destination: isOver,
        draggables,
        viewport: state.viewport,
        previousClientSelection: state.current.client.selection,
        previousImpact: state.impact,
        afterCritical: state.afterCritical
      }) : moveCrossAxis({
        isMovingForward,
        previousPageBorderBoxCenter,
        draggable: draggable2,
        isOver,
        draggables,
        droppables,
        viewport: state.viewport,
        afterCritical: state.afterCritical
      });
    };
    offsetRectByPosition = function offsetRectByPosition2(rect, point) {
      return getRect(offsetByPosition(rect, point));
    };
    withDroppableScroll = function(droppable2, area) {
      var frame = droppable2.frame;
      if (!frame) {
        return area;
      }
      return offsetRectByPosition(area, frame.scroll.diff.value);
    };
    getReorderImpact = function(_ref2) {
      var targetRect = _ref2.pageBorderBoxWithDroppableScroll, draggable2 = _ref2.draggable, destination = _ref2.destination, insideDestination = _ref2.insideDestination, last = _ref2.last, viewport = _ref2.viewport, afterCritical = _ref2.afterCritical;
      var axis = destination.axis;
      var displacedBy = getDisplacedBy(destination.axis, draggable2.displaceBy);
      var displacement = displacedBy.value;
      var targetStart = targetRect[axis.start];
      var targetEnd = targetRect[axis.end];
      var withoutDragging = removeDraggableFromList(draggable2, insideDestination);
      var closest3 = find(withoutDragging, function(child) {
        var id = child.descriptor.id;
        var childCenter = child.page.borderBox.center[axis.line];
        var didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);
        var isDisplaced = getIsDisplaced({
          displaced: last,
          id
        });
        if (didStartAfterCritical$1) {
          if (isDisplaced) {
            return targetEnd <= childCenter;
          }
          return targetStart < childCenter - displacement;
        }
        if (isDisplaced) {
          return targetEnd <= childCenter + displacement;
        }
        return targetStart < childCenter;
      });
      var newIndex = atIndex({
        draggable: draggable2,
        closest: closest3,
        inHomeList: isHomeOf(draggable2, destination)
      });
      return calculateReorderImpact({
        draggable: draggable2,
        insideDestination,
        destination,
        viewport,
        last,
        displacedBy,
        index: newIndex
      });
    };
    combineThresholdDivisor = 4;
    getCombineImpact = function(_ref) {
      var draggable2 = _ref.draggable, targetRect = _ref.pageBorderBoxWithDroppableScroll, previousImpact = _ref.previousImpact, destination = _ref.destination, insideDestination = _ref.insideDestination, afterCritical = _ref.afterCritical;
      if (!destination.isCombineEnabled) {
        return null;
      }
      var axis = destination.axis;
      var displacedBy = getDisplacedBy(destination.axis, draggable2.displaceBy);
      var displacement = displacedBy.value;
      var targetStart = targetRect[axis.start];
      var targetEnd = targetRect[axis.end];
      var withoutDragging = removeDraggableFromList(draggable2, insideDestination);
      var combineWith = find(withoutDragging, function(child) {
        var id = child.descriptor.id;
        var childRect = child.page.borderBox;
        var childSize = childRect[axis.size];
        var threshold = childSize / combineThresholdDivisor;
        var didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);
        var isDisplaced = getIsDisplaced({
          displaced: previousImpact.displaced,
          id
        });
        if (didStartAfterCritical$1) {
          if (isDisplaced) {
            return targetEnd > childRect[axis.start] + threshold && targetEnd < childRect[axis.end] - threshold;
          }
          return targetStart > childRect[axis.start] - displacement + threshold && targetStart < childRect[axis.end] - displacement - threshold;
        }
        if (isDisplaced) {
          return targetEnd > childRect[axis.start] + displacement + threshold && targetEnd < childRect[axis.end] + displacement - threshold;
        }
        return targetStart > childRect[axis.start] + threshold && targetStart < childRect[axis.end] - threshold;
      });
      if (!combineWith) {
        return null;
      }
      var impact = {
        displacedBy,
        displaced: previousImpact.displaced,
        at: {
          type: "COMBINE",
          combine: {
            draggableId: combineWith.descriptor.id,
            droppableId: destination.descriptor.id
          }
        }
      };
      return impact;
    };
    getDragImpact = function(_ref) {
      var pageOffset = _ref.pageOffset, draggable2 = _ref.draggable, draggables = _ref.draggables, droppables = _ref.droppables, previousImpact = _ref.previousImpact, viewport = _ref.viewport, afterCritical = _ref.afterCritical;
      var pageBorderBox = offsetRectByPosition(draggable2.page.borderBox, pageOffset);
      var destinationId = getDroppableOver$1({
        pageBorderBox,
        draggable: draggable2,
        droppables
      });
      if (!destinationId) {
        return noImpact;
      }
      var destination = droppables[destinationId];
      var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
      var pageBorderBoxWithDroppableScroll = withDroppableScroll(destination, pageBorderBox);
      return getCombineImpact({
        pageBorderBoxWithDroppableScroll,
        draggable: draggable2,
        previousImpact,
        destination,
        insideDestination,
        afterCritical
      }) || getReorderImpact({
        pageBorderBoxWithDroppableScroll,
        draggable: draggable2,
        destination,
        insideDestination,
        last: previousImpact.displaced,
        viewport,
        afterCritical
      });
    };
    patchDroppableMap = function(droppables, updated) {
      var _extends2;
      return _extends({}, droppables, (_extends2 = {}, _extends2[updated.descriptor.id] = updated, _extends2));
    };
    clearUnusedPlaceholder = function clearUnusedPlaceholder2(_ref) {
      var previousImpact = _ref.previousImpact, impact = _ref.impact, droppables = _ref.droppables;
      var last = whatIsDraggedOver(previousImpact);
      var now2 = whatIsDraggedOver(impact);
      if (!last) {
        return droppables;
      }
      if (last === now2) {
        return droppables;
      }
      var lastDroppable = droppables[last];
      if (!lastDroppable.subject.withPlaceholder) {
        return droppables;
      }
      var updated = removePlaceholder(lastDroppable);
      return patchDroppableMap(droppables, updated);
    };
    recomputePlaceholders = function(_ref2) {
      var draggable2 = _ref2.draggable, draggables = _ref2.draggables, droppables = _ref2.droppables, previousImpact = _ref2.previousImpact, impact = _ref2.impact;
      var cleaned = clearUnusedPlaceholder({
        previousImpact,
        impact,
        droppables
      });
      var isOver = whatIsDraggedOver(impact);
      if (!isOver) {
        return cleaned;
      }
      var droppable2 = droppables[isOver];
      if (isHomeOf(draggable2, droppable2)) {
        return cleaned;
      }
      if (droppable2.subject.withPlaceholder) {
        return cleaned;
      }
      var patched = addPlaceholder(droppable2, draggable2, draggables);
      return patchDroppableMap(cleaned, patched);
    };
    update = function(_ref) {
      var state = _ref.state, forcedClientSelection = _ref.clientSelection, forcedDimensions = _ref.dimensions, forcedViewport = _ref.viewport, forcedImpact = _ref.impact, scrollJumpRequest = _ref.scrollJumpRequest;
      var viewport = forcedViewport || state.viewport;
      var dimensions = forcedDimensions || state.dimensions;
      var clientSelection = forcedClientSelection || state.current.client.selection;
      var offset3 = subtract(clientSelection, state.initial.client.selection);
      var client = {
        offset: offset3,
        selection: clientSelection,
        borderBoxCenter: add(state.initial.client.borderBoxCenter, offset3)
      };
      var page = {
        selection: add(client.selection, viewport.scroll.current),
        borderBoxCenter: add(client.borderBoxCenter, viewport.scroll.current),
        offset: add(client.offset, viewport.scroll.diff.value)
      };
      var current = {
        client,
        page
      };
      if (state.phase === "COLLECTING") {
        return _extends({
          phase: "COLLECTING"
        }, state, {
          dimensions,
          viewport,
          current
        });
      }
      var draggable2 = dimensions.draggables[state.critical.draggable.id];
      var newImpact = forcedImpact || getDragImpact({
        pageOffset: page.offset,
        draggable: draggable2,
        draggables: dimensions.draggables,
        droppables: dimensions.droppables,
        previousImpact: state.impact,
        viewport,
        afterCritical: state.afterCritical
      });
      var withUpdatedPlaceholders = recomputePlaceholders({
        draggable: draggable2,
        impact: newImpact,
        previousImpact: state.impact,
        draggables: dimensions.draggables,
        droppables: dimensions.droppables
      });
      var result = _extends({}, state, {
        current,
        dimensions: {
          draggables: dimensions.draggables,
          droppables: withUpdatedPlaceholders
        },
        impact: newImpact,
        viewport,
        scrollJumpRequest: scrollJumpRequest || null,
        forceShouldAnimate: scrollJumpRequest ? false : null
      });
      return result;
    };
    recompute = function(_ref) {
      var impact = _ref.impact, viewport = _ref.viewport, draggables = _ref.draggables, destination = _ref.destination, forceShouldAnimate = _ref.forceShouldAnimate;
      var last = impact.displaced;
      var afterDragging = getDraggables$1(last.all, draggables);
      var displaced = getDisplacementGroups({
        afterDragging,
        destination,
        displacedBy: impact.displacedBy,
        viewport: viewport.frame,
        forceShouldAnimate,
        last
      });
      return _extends({}, impact, {
        displaced
      });
    };
    getClientBorderBoxCenter = function(_ref) {
      var impact = _ref.impact, draggable2 = _ref.draggable, droppable2 = _ref.droppable, draggables = _ref.draggables, viewport = _ref.viewport, afterCritical = _ref.afterCritical;
      var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
        impact,
        draggable: draggable2,
        draggables,
        droppable: droppable2,
        afterCritical
      });
      return getClientFromPageBorderBoxCenter({
        pageBorderBoxCenter,
        draggable: draggable2,
        viewport
      });
    };
    refreshSnap = function(_ref) {
      var state = _ref.state, forcedDimensions = _ref.dimensions, forcedViewport = _ref.viewport;
      !(state.movementMode === "SNAP") ? true ? invariant2(false) : invariant2(false) : void 0;
      var needsVisibilityCheck = state.impact;
      var viewport = forcedViewport || state.viewport;
      var dimensions = forcedDimensions || state.dimensions;
      var draggables = dimensions.draggables, droppables = dimensions.droppables;
      var draggable2 = draggables[state.critical.draggable.id];
      var isOver = whatIsDraggedOver(needsVisibilityCheck);
      !isOver ? true ? invariant2(false, "Must be over a destination in SNAP movement mode") : invariant2(false) : void 0;
      var destination = droppables[isOver];
      var impact = recompute({
        impact: needsVisibilityCheck,
        viewport,
        destination,
        draggables
      });
      var clientSelection = getClientBorderBoxCenter({
        impact,
        draggable: draggable2,
        droppable: destination,
        draggables,
        viewport,
        afterCritical: state.afterCritical
      });
      return update({
        impact,
        clientSelection,
        state,
        dimensions,
        viewport
      });
    };
    getHomeLocation = function(descriptor) {
      return {
        index: descriptor.index,
        droppableId: descriptor.droppableId
      };
    };
    getLiftEffect = function(_ref) {
      var draggable2 = _ref.draggable, home2 = _ref.home, draggables = _ref.draggables, viewport = _ref.viewport;
      var displacedBy = getDisplacedBy(home2.axis, draggable2.displaceBy);
      var insideHome = getDraggablesInsideDroppable(home2.descriptor.id, draggables);
      var rawIndex = insideHome.indexOf(draggable2);
      !(rawIndex !== -1) ? true ? invariant2(false, "Expected draggable to be inside home list") : invariant2(false) : void 0;
      var afterDragging = insideHome.slice(rawIndex + 1);
      var effected = afterDragging.reduce(function(previous, item) {
        previous[item.descriptor.id] = true;
        return previous;
      }, {});
      var afterCritical = {
        inVirtualList: home2.descriptor.mode === "virtual",
        displacedBy,
        effected
      };
      var displaced = getDisplacementGroups({
        afterDragging,
        destination: home2,
        displacedBy,
        last: null,
        viewport: viewport.frame,
        forceShouldAnimate: false
      });
      var impact = {
        displaced,
        displacedBy,
        at: {
          type: "REORDER",
          destination: getHomeLocation(draggable2.descriptor)
        }
      };
      return {
        impact,
        afterCritical
      };
    };
    patchDimensionMap = function(dimensions, updated) {
      return {
        draggables: dimensions.draggables,
        droppables: patchDroppableMap(dimensions.droppables, updated)
      };
    };
    start = function start2(key) {
      if (true) {
        {
          return;
        }
      }
    };
    finish = function finish2(key) {
      if (true) {
        {
          return;
        }
      }
    };
    offsetDraggable = function(_ref) {
      var draggable2 = _ref.draggable, offset$1 = _ref.offset, initialWindowScroll = _ref.initialWindowScroll;
      var client = offset(draggable2.client, offset$1);
      var page = withScroll(client, initialWindowScroll);
      var moved = _extends({}, draggable2, {
        placeholder: _extends({}, draggable2.placeholder, {
          client
        }),
        client,
        page
      });
      return moved;
    };
    getFrame = function(droppable2) {
      var frame = droppable2.frame;
      !frame ? true ? invariant2(false, "Expected Droppable to have a frame") : invariant2(false) : void 0;
      return frame;
    };
    adjustAdditionsForScrollChanges = function(_ref) {
      var additions = _ref.additions, updatedDroppables = _ref.updatedDroppables, viewport = _ref.viewport;
      var windowScrollChange = viewport.scroll.diff.value;
      return additions.map(function(draggable2) {
        var droppableId = draggable2.descriptor.droppableId;
        var modified = updatedDroppables[droppableId];
        var frame = getFrame(modified);
        var droppableScrollChange = frame.scroll.diff.value;
        var totalChange = add(windowScrollChange, droppableScrollChange);
        var moved = offsetDraggable({
          draggable: draggable2,
          offset: totalChange,
          initialWindowScroll: viewport.scroll.initial
        });
        return moved;
      });
    };
    publishWhileDraggingInVirtual = function(_ref) {
      var state = _ref.state, published = _ref.published;
      start();
      var withScrollChange = published.modified.map(function(update3) {
        var existing = state.dimensions.droppables[update3.droppableId];
        var scrolled = scrollDroppable(existing, update3.scroll);
        return scrolled;
      });
      var droppables = _extends({}, state.dimensions.droppables, {}, toDroppableMap(withScrollChange));
      var updatedAdditions = toDraggableMap(adjustAdditionsForScrollChanges({
        additions: published.additions,
        updatedDroppables: droppables,
        viewport: state.viewport
      }));
      var draggables = _extends({}, state.dimensions.draggables, {}, updatedAdditions);
      published.removals.forEach(function(id) {
        delete draggables[id];
      });
      var dimensions = {
        droppables,
        draggables
      };
      var wasOverId = whatIsDraggedOver(state.impact);
      var wasOver = wasOverId ? dimensions.droppables[wasOverId] : null;
      var draggable2 = dimensions.draggables[state.critical.draggable.id];
      var home2 = dimensions.droppables[state.critical.droppable.id];
      var _getLiftEffect = getLiftEffect({
        draggable: draggable2,
        home: home2,
        draggables,
        viewport: state.viewport
      }), onLiftImpact = _getLiftEffect.impact, afterCritical = _getLiftEffect.afterCritical;
      var previousImpact = wasOver && wasOver.isCombineEnabled ? state.impact : onLiftImpact;
      var impact = getDragImpact({
        pageOffset: state.current.page.offset,
        draggable: dimensions.draggables[state.critical.draggable.id],
        draggables: dimensions.draggables,
        droppables: dimensions.droppables,
        previousImpact,
        viewport: state.viewport,
        afterCritical
      });
      finish();
      var draggingState = _extends({
        phase: "DRAGGING"
      }, state, {
        phase: "DRAGGING",
        impact,
        onLiftImpact,
        dimensions,
        afterCritical,
        forceShouldAnimate: false
      });
      if (state.phase === "COLLECTING") {
        return draggingState;
      }
      var dropPending3 = _extends({
        phase: "DROP_PENDING"
      }, draggingState, {
        phase: "DROP_PENDING",
        reason: state.reason,
        isWaiting: false
      });
      return dropPending3;
    };
    isSnapping = function isSnapping2(state) {
      return state.movementMode === "SNAP";
    };
    postDroppableChange = function postDroppableChange2(state, updated, isEnabledChanging) {
      var dimensions = patchDimensionMap(state.dimensions, updated);
      if (!isSnapping(state) || isEnabledChanging) {
        return update({
          state,
          dimensions
        });
      }
      return refreshSnap({
        state,
        dimensions
      });
    };
    idle = {
      phase: "IDLE",
      completed: null,
      shouldFlush: false
    };
    reducer = function(state, action) {
      if (state === void 0) {
        state = idle;
      }
      if (action.type === "FLUSH") {
        return _extends({}, idle, {
          shouldFlush: true
        });
      }
      if (action.type === "INITIAL_PUBLISH") {
        !(state.phase === "IDLE") ? true ? invariant2(false, "INITIAL_PUBLISH must come after a IDLE phase") : invariant2(false) : void 0;
        var _action$payload = action.payload, critical = _action$payload.critical, clientSelection = _action$payload.clientSelection, viewport = _action$payload.viewport, dimensions = _action$payload.dimensions, movementMode = _action$payload.movementMode;
        var draggable2 = dimensions.draggables[critical.draggable.id];
        var home2 = dimensions.droppables[critical.droppable.id];
        var client = {
          selection: clientSelection,
          borderBoxCenter: draggable2.client.borderBox.center,
          offset: origin
        };
        var initial = {
          client,
          page: {
            selection: add(client.selection, viewport.scroll.initial),
            borderBoxCenter: add(client.selection, viewport.scroll.initial),
            offset: add(client.selection, viewport.scroll.diff.value)
          }
        };
        var isWindowScrollAllowed = toDroppableList(dimensions.droppables).every(function(item) {
          return !item.isFixedOnPage;
        });
        var _getLiftEffect = getLiftEffect({
          draggable: draggable2,
          home: home2,
          draggables: dimensions.draggables,
          viewport
        }), impact = _getLiftEffect.impact, afterCritical = _getLiftEffect.afterCritical;
        var result = {
          phase: "DRAGGING",
          isDragging: true,
          critical,
          movementMode,
          dimensions,
          initial,
          current: initial,
          isWindowScrollAllowed,
          impact,
          afterCritical,
          onLiftImpact: impact,
          viewport,
          scrollJumpRequest: null,
          forceShouldAnimate: null
        };
        return result;
      }
      if (action.type === "COLLECTION_STARTING") {
        if (state.phase === "COLLECTING" || state.phase === "DROP_PENDING") {
          return state;
        }
        !(state.phase === "DRAGGING") ? true ? invariant2(false, "Collection cannot start from phase " + state.phase) : invariant2(false) : void 0;
        var _result = _extends({
          phase: "COLLECTING"
        }, state, {
          phase: "COLLECTING"
        });
        return _result;
      }
      if (action.type === "PUBLISH_WHILE_DRAGGING") {
        !(state.phase === "COLLECTING" || state.phase === "DROP_PENDING") ? true ? invariant2(false, "Unexpected " + action.type + " received in phase " + state.phase) : invariant2(false) : void 0;
        return publishWhileDraggingInVirtual({
          state,
          published: action.payload
        });
      }
      if (action.type === "MOVE") {
        if (state.phase === "DROP_PENDING") {
          return state;
        }
        !isMovementAllowed(state) ? true ? invariant2(false, action.type + " not permitted in phase " + state.phase) : invariant2(false) : void 0;
        var _clientSelection = action.payload.client;
        if (isEqual2(_clientSelection, state.current.client.selection)) {
          return state;
        }
        return update({
          state,
          clientSelection: _clientSelection,
          impact: isSnapping(state) ? state.impact : null
        });
      }
      if (action.type === "UPDATE_DROPPABLE_SCROLL") {
        if (state.phase === "DROP_PENDING") {
          return removeScrollJumpRequest(state);
        }
        if (state.phase === "COLLECTING") {
          return removeScrollJumpRequest(state);
        }
        !isMovementAllowed(state) ? true ? invariant2(false, action.type + " not permitted in phase " + state.phase) : invariant2(false) : void 0;
        var _action$payload2 = action.payload, id = _action$payload2.id, newScroll = _action$payload2.newScroll;
        var target = state.dimensions.droppables[id];
        if (!target) {
          return state;
        }
        var scrolled = scrollDroppable(target, newScroll);
        return postDroppableChange(state, scrolled, false);
      }
      if (action.type === "UPDATE_DROPPABLE_IS_ENABLED") {
        if (state.phase === "DROP_PENDING") {
          return state;
        }
        !isMovementAllowed(state) ? true ? invariant2(false, "Attempting to move in an unsupported phase " + state.phase) : invariant2(false) : void 0;
        var _action$payload3 = action.payload, _id = _action$payload3.id, isEnabled = _action$payload3.isEnabled;
        var _target = state.dimensions.droppables[_id];
        !_target ? true ? invariant2(false, "Cannot find Droppable[id: " + _id + "] to toggle its enabled state") : invariant2(false) : void 0;
        !(_target.isEnabled !== isEnabled) ? true ? invariant2(false, "Trying to set droppable isEnabled to " + String(isEnabled) + "\n      but it is already " + String(_target.isEnabled)) : invariant2(false) : void 0;
        var updated = _extends({}, _target, {
          isEnabled
        });
        return postDroppableChange(state, updated, true);
      }
      if (action.type === "UPDATE_DROPPABLE_IS_COMBINE_ENABLED") {
        if (state.phase === "DROP_PENDING") {
          return state;
        }
        !isMovementAllowed(state) ? true ? invariant2(false, "Attempting to move in an unsupported phase " + state.phase) : invariant2(false) : void 0;
        var _action$payload4 = action.payload, _id2 = _action$payload4.id, isCombineEnabled = _action$payload4.isCombineEnabled;
        var _target2 = state.dimensions.droppables[_id2];
        !_target2 ? true ? invariant2(false, "Cannot find Droppable[id: " + _id2 + "] to toggle its isCombineEnabled state") : invariant2(false) : void 0;
        !(_target2.isCombineEnabled !== isCombineEnabled) ? true ? invariant2(false, "Trying to set droppable isCombineEnabled to " + String(isCombineEnabled) + "\n      but it is already " + String(_target2.isCombineEnabled)) : invariant2(false) : void 0;
        var _updated = _extends({}, _target2, {
          isCombineEnabled
        });
        return postDroppableChange(state, _updated, true);
      }
      if (action.type === "MOVE_BY_WINDOW_SCROLL") {
        if (state.phase === "DROP_PENDING" || state.phase === "DROP_ANIMATING") {
          return state;
        }
        !isMovementAllowed(state) ? true ? invariant2(false, "Cannot move by window in phase " + state.phase) : invariant2(false) : void 0;
        !state.isWindowScrollAllowed ? true ? invariant2(false, "Window scrolling is currently not supported for fixed lists") : invariant2(false) : void 0;
        var _newScroll = action.payload.newScroll;
        if (isEqual2(state.viewport.scroll.current, _newScroll)) {
          return removeScrollJumpRequest(state);
        }
        var _viewport = scrollViewport(state.viewport, _newScroll);
        if (isSnapping(state)) {
          return refreshSnap({
            state,
            viewport: _viewport
          });
        }
        return update({
          state,
          viewport: _viewport
        });
      }
      if (action.type === "UPDATE_VIEWPORT_MAX_SCROLL") {
        if (!isMovementAllowed(state)) {
          return state;
        }
        var maxScroll = action.payload.maxScroll;
        if (isEqual2(maxScroll, state.viewport.scroll.max)) {
          return state;
        }
        var withMaxScroll3 = _extends({}, state.viewport, {
          scroll: _extends({}, state.viewport.scroll, {
            max: maxScroll
          })
        });
        return _extends({
          phase: "DRAGGING"
        }, state, {
          viewport: withMaxScroll3
        });
      }
      if (action.type === "MOVE_UP" || action.type === "MOVE_DOWN" || action.type === "MOVE_LEFT" || action.type === "MOVE_RIGHT") {
        if (state.phase === "COLLECTING" || state.phase === "DROP_PENDING") {
          return state;
        }
        !(state.phase === "DRAGGING") ? true ? invariant2(false, action.type + " received while not in DRAGGING phase") : invariant2(false) : void 0;
        var _result2 = moveInDirection({
          state,
          type: action.type
        });
        if (!_result2) {
          return state;
        }
        return update({
          state,
          impact: _result2.impact,
          clientSelection: _result2.clientSelection,
          scrollJumpRequest: _result2.scrollJumpRequest
        });
      }
      if (action.type === "DROP_PENDING") {
        var reason = action.payload.reason;
        !(state.phase === "COLLECTING") ? true ? invariant2(false, "Can only move into the DROP_PENDING phase from the COLLECTING phase") : invariant2(false) : void 0;
        var newState = _extends({
          phase: "DROP_PENDING"
        }, state, {
          phase: "DROP_PENDING",
          isWaiting: true,
          reason
        });
        return newState;
      }
      if (action.type === "DROP_ANIMATE") {
        var _action$payload5 = action.payload, completed = _action$payload5.completed, dropDuration = _action$payload5.dropDuration, newHomeClientOffset = _action$payload5.newHomeClientOffset;
        !(state.phase === "DRAGGING" || state.phase === "DROP_PENDING") ? true ? invariant2(false, "Cannot animate drop from phase " + state.phase) : invariant2(false) : void 0;
        var _result3 = {
          phase: "DROP_ANIMATING",
          completed,
          dropDuration,
          newHomeClientOffset,
          dimensions: state.dimensions
        };
        return _result3;
      }
      if (action.type === "DROP_COMPLETE") {
        var _completed = action.payload.completed;
        return {
          phase: "IDLE",
          completed: _completed,
          shouldFlush: false
        };
      }
      return state;
    };
    beforeInitialCapture = function beforeInitialCapture2(args) {
      return {
        type: "BEFORE_INITIAL_CAPTURE",
        payload: args
      };
    };
    lift = function lift2(args) {
      return {
        type: "LIFT",
        payload: args
      };
    };
    initialPublish = function initialPublish2(args) {
      return {
        type: "INITIAL_PUBLISH",
        payload: args
      };
    };
    publishWhileDragging = function publishWhileDragging2(args) {
      return {
        type: "PUBLISH_WHILE_DRAGGING",
        payload: args
      };
    };
    collectionStarting = function collectionStarting2() {
      return {
        type: "COLLECTION_STARTING",
        payload: null
      };
    };
    updateDroppableScroll = function updateDroppableScroll2(args) {
      return {
        type: "UPDATE_DROPPABLE_SCROLL",
        payload: args
      };
    };
    updateDroppableIsEnabled = function updateDroppableIsEnabled2(args) {
      return {
        type: "UPDATE_DROPPABLE_IS_ENABLED",
        payload: args
      };
    };
    updateDroppableIsCombineEnabled = function updateDroppableIsCombineEnabled2(args) {
      return {
        type: "UPDATE_DROPPABLE_IS_COMBINE_ENABLED",
        payload: args
      };
    };
    move = function move2(args) {
      return {
        type: "MOVE",
        payload: args
      };
    };
    moveByWindowScroll = function moveByWindowScroll2(args) {
      return {
        type: "MOVE_BY_WINDOW_SCROLL",
        payload: args
      };
    };
    updateViewportMaxScroll = function updateViewportMaxScroll2(args) {
      return {
        type: "UPDATE_VIEWPORT_MAX_SCROLL",
        payload: args
      };
    };
    moveUp = function moveUp2() {
      return {
        type: "MOVE_UP",
        payload: null
      };
    };
    moveDown = function moveDown2() {
      return {
        type: "MOVE_DOWN",
        payload: null
      };
    };
    moveRight = function moveRight2() {
      return {
        type: "MOVE_RIGHT",
        payload: null
      };
    };
    moveLeft = function moveLeft2() {
      return {
        type: "MOVE_LEFT",
        payload: null
      };
    };
    flush = function flush2() {
      return {
        type: "FLUSH",
        payload: null
      };
    };
    animateDrop = function animateDrop2(args) {
      return {
        type: "DROP_ANIMATE",
        payload: args
      };
    };
    completeDrop = function completeDrop2(args) {
      return {
        type: "DROP_COMPLETE",
        payload: args
      };
    };
    drop = function drop2(args) {
      return {
        type: "DROP",
        payload: args
      };
    };
    dropPending = function dropPending2(args) {
      return {
        type: "DROP_PENDING",
        payload: args
      };
    };
    dropAnimationFinished = function dropAnimationFinished2() {
      return {
        type: "DROP_ANIMATION_FINISHED",
        payload: null
      };
    };
    lift$1 = function(marshal) {
      return function(_ref) {
        var getState = _ref.getState, dispatch = _ref.dispatch;
        return function(next) {
          return function(action) {
            if (action.type !== "LIFT") {
              next(action);
              return;
            }
            var _action$payload = action.payload, id = _action$payload.id, clientSelection = _action$payload.clientSelection, movementMode = _action$payload.movementMode;
            var initial = getState();
            if (initial.phase === "DROP_ANIMATING") {
              dispatch(completeDrop({
                completed: initial.completed
              }));
            }
            !(getState().phase === "IDLE") ? true ? invariant2(false, "Unexpected phase to start a drag") : invariant2(false) : void 0;
            dispatch(flush());
            dispatch(beforeInitialCapture({
              draggableId: id,
              movementMode
            }));
            var scrollOptions = {
              shouldPublishImmediately: movementMode === "SNAP"
            };
            var request = {
              draggableId: id,
              scrollOptions
            };
            var _marshal$startPublish = marshal.startPublishing(request), critical = _marshal$startPublish.critical, dimensions = _marshal$startPublish.dimensions, viewport = _marshal$startPublish.viewport;
            validateDimensions(critical, dimensions);
            dispatch(initialPublish({
              critical,
              dimensions,
              clientSelection,
              movementMode,
              viewport
            }));
          };
        };
      };
    };
    style = function(marshal) {
      return function() {
        return function(next) {
          return function(action) {
            if (action.type === "INITIAL_PUBLISH") {
              marshal.dragging();
            }
            if (action.type === "DROP_ANIMATE") {
              marshal.dropping(action.payload.completed.result.reason);
            }
            if (action.type === "FLUSH" || action.type === "DROP_COMPLETE") {
              marshal.resting();
            }
            next(action);
          };
        };
      };
    };
    curves = {
      outOfTheWay: "cubic-bezier(0.2, 0, 0, 1)",
      drop: "cubic-bezier(.2,1,.1,1)"
    };
    combine = {
      opacity: {
        drop: 0,
        combining: 0.7
      },
      scale: {
        drop: 0.75
      }
    };
    timings = {
      outOfTheWay: 0.2,
      minDropTime: 0.33,
      maxDropTime: 0.55
    };
    outOfTheWayTiming = timings.outOfTheWay + "s " + curves.outOfTheWay;
    transitions = {
      fluid: "opacity " + outOfTheWayTiming,
      snap: "transform " + outOfTheWayTiming + ", opacity " + outOfTheWayTiming,
      drop: function drop3(duration) {
        var timing = duration + "s " + curves.drop;
        return "transform " + timing + ", opacity " + timing;
      },
      outOfTheWay: "transform " + outOfTheWayTiming,
      placeholder: "height " + outOfTheWayTiming + ", width " + outOfTheWayTiming + ", margin " + outOfTheWayTiming
    };
    moveTo = function moveTo2(offset3) {
      return isEqual2(offset3, origin) ? null : "translate(" + offset3.x + "px, " + offset3.y + "px)";
    };
    transforms = {
      moveTo,
      drop: function drop4(offset3, isCombining) {
        var translate = moveTo(offset3);
        if (!translate) {
          return null;
        }
        if (!isCombining) {
          return translate;
        }
        return translate + " scale(" + combine.scale.drop + ")";
      }
    };
    minDropTime = timings.minDropTime;
    maxDropTime = timings.maxDropTime;
    dropTimeRange = maxDropTime - minDropTime;
    maxDropTimeAtDistance = 1500;
    cancelDropModifier = 0.6;
    getDropDuration = function(_ref) {
      var current = _ref.current, destination = _ref.destination, reason = _ref.reason;
      var distance$1 = distance(current, destination);
      if (distance$1 <= 0) {
        return minDropTime;
      }
      if (distance$1 >= maxDropTimeAtDistance) {
        return maxDropTime;
      }
      var percentage = distance$1 / maxDropTimeAtDistance;
      var duration = minDropTime + dropTimeRange * percentage;
      var withDuration = reason === "CANCEL" ? duration * cancelDropModifier : duration;
      return Number(withDuration.toFixed(2));
    };
    getNewHomeClientOffset = function(_ref) {
      var impact = _ref.impact, draggable2 = _ref.draggable, dimensions = _ref.dimensions, viewport = _ref.viewport, afterCritical = _ref.afterCritical;
      var draggables = dimensions.draggables, droppables = dimensions.droppables;
      var droppableId = whatIsDraggedOver(impact);
      var destination = droppableId ? droppables[droppableId] : null;
      var home2 = droppables[draggable2.descriptor.droppableId];
      var newClientCenter = getClientBorderBoxCenter({
        impact,
        draggable: draggable2,
        draggables,
        afterCritical,
        droppable: destination || home2,
        viewport
      });
      var offset3 = subtract(newClientCenter, draggable2.client.borderBox.center);
      return offset3;
    };
    getDropImpact = function(_ref) {
      var draggables = _ref.draggables, reason = _ref.reason, lastImpact = _ref.lastImpact, home2 = _ref.home, viewport = _ref.viewport, onLiftImpact = _ref.onLiftImpact;
      if (!lastImpact.at || reason !== "DROP") {
        var recomputedHomeImpact = recompute({
          draggables,
          impact: onLiftImpact,
          destination: home2,
          viewport,
          forceShouldAnimate: true
        });
        return {
          impact: recomputedHomeImpact,
          didDropInsideDroppable: false
        };
      }
      if (lastImpact.at.type === "REORDER") {
        return {
          impact: lastImpact,
          didDropInsideDroppable: true
        };
      }
      var withoutMovement = _extends({}, lastImpact, {
        displaced: emptyGroups
      });
      return {
        impact: withoutMovement,
        didDropInsideDroppable: true
      };
    };
    drop$1 = function(_ref) {
      var getState = _ref.getState, dispatch = _ref.dispatch;
      return function(next) {
        return function(action) {
          if (action.type !== "DROP") {
            next(action);
            return;
          }
          var state = getState();
          var reason = action.payload.reason;
          if (state.phase === "COLLECTING") {
            dispatch(dropPending({
              reason
            }));
            return;
          }
          if (state.phase === "IDLE") {
            return;
          }
          var isWaitingForDrop = state.phase === "DROP_PENDING" && state.isWaiting;
          !!isWaitingForDrop ? true ? invariant2(false, "A DROP action occurred while DROP_PENDING and still waiting") : invariant2(false) : void 0;
          !(state.phase === "DRAGGING" || state.phase === "DROP_PENDING") ? true ? invariant2(false, "Cannot drop in phase: " + state.phase) : invariant2(false) : void 0;
          var critical = state.critical;
          var dimensions = state.dimensions;
          var draggable2 = dimensions.draggables[state.critical.draggable.id];
          var _getDropImpact = getDropImpact({
            reason,
            lastImpact: state.impact,
            afterCritical: state.afterCritical,
            onLiftImpact: state.onLiftImpact,
            home: state.dimensions.droppables[state.critical.droppable.id],
            viewport: state.viewport,
            draggables: state.dimensions.draggables
          }), impact = _getDropImpact.impact, didDropInsideDroppable = _getDropImpact.didDropInsideDroppable;
          var destination = didDropInsideDroppable ? tryGetDestination(impact) : null;
          var combine2 = didDropInsideDroppable ? tryGetCombine(impact) : null;
          var source = {
            index: critical.draggable.index,
            droppableId: critical.droppable.id
          };
          var result = {
            draggableId: draggable2.descriptor.id,
            type: draggable2.descriptor.type,
            source,
            reason,
            mode: state.movementMode,
            destination,
            combine: combine2
          };
          var newHomeClientOffset = getNewHomeClientOffset({
            impact,
            draggable: draggable2,
            dimensions,
            viewport: state.viewport,
            afterCritical: state.afterCritical
          });
          var completed = {
            critical: state.critical,
            afterCritical: state.afterCritical,
            result,
            impact
          };
          var isAnimationRequired = !isEqual2(state.current.client.offset, newHomeClientOffset) || Boolean(result.combine);
          if (!isAnimationRequired) {
            dispatch(completeDrop({
              completed
            }));
            return;
          }
          var dropDuration = getDropDuration({
            current: state.current.client.offset,
            destination: newHomeClientOffset,
            reason
          });
          var args = {
            newHomeClientOffset,
            dropDuration,
            completed
          };
          dispatch(animateDrop(args));
        };
      };
    };
    getWindowScroll3 = function() {
      return {
        x: window.pageXOffset,
        y: window.pageYOffset
      };
    };
    shouldEnd = function shouldEnd2(action) {
      return action.type === "DROP_COMPLETE" || action.type === "DROP_ANIMATE" || action.type === "FLUSH";
    };
    scrollListener = function(store) {
      var listener = getScrollListener({
        onWindowScroll: function onWindowScroll(newScroll) {
          store.dispatch(moveByWindowScroll({
            newScroll
          }));
        }
      });
      return function(next) {
        return function(action) {
          if (!listener.isActive() && action.type === "INITIAL_PUBLISH") {
            listener.start();
          }
          if (listener.isActive() && shouldEnd(action)) {
            listener.stop();
          }
          next(action);
        };
      };
    };
    getExpiringAnnounce = function(announce) {
      var wasCalled = false;
      var isExpired = false;
      var timeoutId = setTimeout(function() {
        isExpired = true;
      });
      var result = function result2(message) {
        if (wasCalled) {
          true ? warning2("Announcement already made. Not making a second announcement") : void 0;
          return;
        }
        if (isExpired) {
          true ? warning2("\n        Announcements cannot be made asynchronously.\n        Default message has already been announced.\n      ") : void 0;
          return;
        }
        wasCalled = true;
        announce(message);
        clearTimeout(timeoutId);
      };
      result.wasCalled = function() {
        return wasCalled;
      };
      return result;
    };
    getAsyncMarshal = function() {
      var entries = [];
      var execute3 = function execute4(timerId) {
        var index2 = findIndex(entries, function(item) {
          return item.timerId === timerId;
        });
        !(index2 !== -1) ? true ? invariant2(false, "Could not find timer") : invariant2(false) : void 0;
        var _entries$splice = entries.splice(index2, 1), entry = _entries$splice[0];
        entry.callback();
      };
      var add3 = function add4(fn) {
        var timerId = setTimeout(function() {
          return execute3(timerId);
        });
        var entry = {
          timerId,
          callback: fn
        };
        entries.push(entry);
      };
      var flush3 = function flush4() {
        if (!entries.length) {
          return;
        }
        var shallow = [].concat(entries);
        entries.length = 0;
        shallow.forEach(function(entry) {
          clearTimeout(entry.timerId);
          entry.callback();
        });
      };
      return {
        add: add3,
        flush: flush3
      };
    };
    areLocationsEqual = function areLocationsEqual2(first, second) {
      if (first == null && second == null) {
        return true;
      }
      if (first == null || second == null) {
        return false;
      }
      return first.droppableId === second.droppableId && first.index === second.index;
    };
    isCombineEqual = function isCombineEqual2(first, second) {
      if (first == null && second == null) {
        return true;
      }
      if (first == null || second == null) {
        return false;
      }
      return first.draggableId === second.draggableId && first.droppableId === second.droppableId;
    };
    isCriticalEqual = function isCriticalEqual2(first, second) {
      if (first === second) {
        return true;
      }
      var isDraggableEqual = first.draggable.id === second.draggable.id && first.draggable.droppableId === second.draggable.droppableId && first.draggable.type === second.draggable.type && first.draggable.index === second.draggable.index;
      var isDroppableEqual = first.droppable.id === second.droppable.id && first.droppable.type === second.droppable.type;
      return isDraggableEqual && isDroppableEqual;
    };
    withTimings = function withTimings2(key, fn) {
      start();
      fn();
      finish();
    };
    getDragStart = function getDragStart2(critical, mode) {
      return {
        draggableId: critical.draggable.id,
        type: critical.droppable.type,
        source: {
          droppableId: critical.droppable.id,
          index: critical.draggable.index
        },
        mode
      };
    };
    execute = function execute2(responder, data, announce, getDefaultMessage) {
      if (!responder) {
        announce(getDefaultMessage(data));
        return;
      }
      var willExpire = getExpiringAnnounce(announce);
      var provided = {
        announce: willExpire
      };
      responder(data, provided);
      if (!willExpire.wasCalled()) {
        announce(getDefaultMessage(data));
      }
    };
    getPublisher = function(getResponders, announce) {
      var asyncMarshal = getAsyncMarshal();
      var dragging = null;
      var beforeCapture = function beforeCapture2(draggableId, mode) {
        !!dragging ? true ? invariant2(false, "Cannot fire onBeforeCapture as a drag start has already been published") : invariant2(false) : void 0;
        withTimings("onBeforeCapture", function() {
          var fn = getResponders().onBeforeCapture;
          if (fn) {
            var before = {
              draggableId,
              mode
            };
            fn(before);
          }
        });
      };
      var beforeStart = function beforeStart2(critical, mode) {
        !!dragging ? true ? invariant2(false, "Cannot fire onBeforeDragStart as a drag start has already been published") : invariant2(false) : void 0;
        withTimings("onBeforeDragStart", function() {
          var fn = getResponders().onBeforeDragStart;
          if (fn) {
            fn(getDragStart(critical, mode));
          }
        });
      };
      var start3 = function start4(critical, mode) {
        !!dragging ? true ? invariant2(false, "Cannot fire onBeforeDragStart as a drag start has already been published") : invariant2(false) : void 0;
        var data = getDragStart(critical, mode);
        dragging = {
          mode,
          lastCritical: critical,
          lastLocation: data.source,
          lastCombine: null
        };
        asyncMarshal.add(function() {
          withTimings("onDragStart", function() {
            return execute(getResponders().onDragStart, data, announce, preset.onDragStart);
          });
        });
      };
      var update3 = function update4(critical, impact) {
        var location2 = tryGetDestination(impact);
        var combine2 = tryGetCombine(impact);
        !dragging ? true ? invariant2(false, "Cannot fire onDragMove when onDragStart has not been called") : invariant2(false) : void 0;
        var hasCriticalChanged = !isCriticalEqual(critical, dragging.lastCritical);
        if (hasCriticalChanged) {
          dragging.lastCritical = critical;
        }
        var hasLocationChanged = !areLocationsEqual(dragging.lastLocation, location2);
        if (hasLocationChanged) {
          dragging.lastLocation = location2;
        }
        var hasGroupingChanged = !isCombineEqual(dragging.lastCombine, combine2);
        if (hasGroupingChanged) {
          dragging.lastCombine = combine2;
        }
        if (!hasCriticalChanged && !hasLocationChanged && !hasGroupingChanged) {
          return;
        }
        var data = _extends({}, getDragStart(critical, dragging.mode), {
          combine: combine2,
          destination: location2
        });
        asyncMarshal.add(function() {
          withTimings("onDragUpdate", function() {
            return execute(getResponders().onDragUpdate, data, announce, preset.onDragUpdate);
          });
        });
      };
      var flush3 = function flush4() {
        !dragging ? true ? invariant2(false, "Can only flush responders while dragging") : invariant2(false) : void 0;
        asyncMarshal.flush();
      };
      var drop5 = function drop6(result) {
        !dragging ? true ? invariant2(false, "Cannot fire onDragEnd when there is no matching onDragStart") : invariant2(false) : void 0;
        dragging = null;
        withTimings("onDragEnd", function() {
          return execute(getResponders().onDragEnd, result, announce, preset.onDragEnd);
        });
      };
      var abort = function abort2() {
        if (!dragging) {
          return;
        }
        var result = _extends({}, getDragStart(dragging.lastCritical, dragging.mode), {
          combine: null,
          destination: null,
          reason: "CANCEL"
        });
        drop5(result);
      };
      return {
        beforeCapture,
        beforeStart,
        start: start3,
        update: update3,
        flush: flush3,
        drop: drop5,
        abort
      };
    };
    responders = function(getResponders, announce) {
      var publisher = getPublisher(getResponders, announce);
      return function(store) {
        return function(next) {
          return function(action) {
            if (action.type === "BEFORE_INITIAL_CAPTURE") {
              publisher.beforeCapture(action.payload.draggableId, action.payload.movementMode);
              return;
            }
            if (action.type === "INITIAL_PUBLISH") {
              var critical = action.payload.critical;
              publisher.beforeStart(critical, action.payload.movementMode);
              next(action);
              publisher.start(critical, action.payload.movementMode);
              return;
            }
            if (action.type === "DROP_COMPLETE") {
              var result = action.payload.completed.result;
              publisher.flush();
              next(action);
              publisher.drop(result);
              return;
            }
            next(action);
            if (action.type === "FLUSH") {
              publisher.abort();
              return;
            }
            var state = store.getState();
            if (state.phase === "DRAGGING") {
              publisher.update(state.critical, state.impact);
            }
          };
        };
      };
    };
    dropAnimationFinish = function(store) {
      return function(next) {
        return function(action) {
          if (action.type !== "DROP_ANIMATION_FINISHED") {
            next(action);
            return;
          }
          var state = store.getState();
          !(state.phase === "DROP_ANIMATING") ? true ? invariant2(false, "Cannot finish a drop animating when no drop is occurring") : invariant2(false) : void 0;
          store.dispatch(completeDrop({
            completed: state.completed
          }));
        };
      };
    };
    dropAnimationFlushOnScroll = function(store) {
      var unbind = null;
      var frameId = null;
      function clear() {
        if (frameId) {
          cancelAnimationFrame(frameId);
          frameId = null;
        }
        if (unbind) {
          unbind();
          unbind = null;
        }
      }
      return function(next) {
        return function(action) {
          if (action.type === "FLUSH" || action.type === "DROP_COMPLETE" || action.type === "DROP_ANIMATION_FINISHED") {
            clear();
          }
          next(action);
          if (action.type !== "DROP_ANIMATE") {
            return;
          }
          var binding = {
            eventName: "scroll",
            options: {
              capture: true,
              passive: false,
              once: true
            },
            fn: function flushDropAnimation() {
              var state = store.getState();
              if (state.phase === "DROP_ANIMATING") {
                store.dispatch(dropAnimationFinished());
              }
            }
          };
          frameId = requestAnimationFrame(function() {
            frameId = null;
            unbind = bindEvents(window, [binding]);
          });
        };
      };
    };
    dimensionMarshalStopper = function(marshal) {
      return function() {
        return function(next) {
          return function(action) {
            if (action.type === "DROP_COMPLETE" || action.type === "FLUSH" || action.type === "DROP_ANIMATE") {
              marshal.stopPublishing();
            }
            next(action);
          };
        };
      };
    };
    focus = function(marshal) {
      var isWatching = false;
      return function() {
        return function(next) {
          return function(action) {
            if (action.type === "INITIAL_PUBLISH") {
              isWatching = true;
              marshal.tryRecordFocus(action.payload.critical.draggable.id);
              next(action);
              marshal.tryRestoreFocusRecorded();
              return;
            }
            next(action);
            if (!isWatching) {
              return;
            }
            if (action.type === "FLUSH") {
              isWatching = false;
              marshal.tryRestoreFocusRecorded();
              return;
            }
            if (action.type === "DROP_COMPLETE") {
              isWatching = false;
              var result = action.payload.completed.result;
              if (result.combine) {
                marshal.tryShiftRecord(result.draggableId, result.combine.draggableId);
              }
              marshal.tryRestoreFocusRecorded();
            }
          };
        };
      };
    };
    shouldStop = function shouldStop2(action) {
      return action.type === "DROP_COMPLETE" || action.type === "DROP_ANIMATE" || action.type === "FLUSH";
    };
    autoScroll = function(autoScroller) {
      return function(store) {
        return function(next) {
          return function(action) {
            if (shouldStop(action)) {
              autoScroller.stop();
              next(action);
              return;
            }
            if (action.type === "INITIAL_PUBLISH") {
              next(action);
              var state = store.getState();
              !(state.phase === "DRAGGING") ? true ? invariant2(false, "Expected phase to be DRAGGING after INITIAL_PUBLISH") : invariant2(false) : void 0;
              autoScroller.start(state);
              return;
            }
            next(action);
            autoScroller.scroll(store.getState());
          };
        };
      };
    };
    pendingDrop = function(store) {
      return function(next) {
        return function(action) {
          next(action);
          if (action.type !== "PUBLISH_WHILE_DRAGGING") {
            return;
          }
          var postActionState = store.getState();
          if (postActionState.phase !== "DROP_PENDING") {
            return;
          }
          if (postActionState.isWaiting) {
            return;
          }
          store.dispatch(drop({
            reason: postActionState.reason
          }));
        };
      };
    };
    composeEnhancers = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({
      name: "react-beautiful-dnd"
    }) : compose;
    createStore2 = function(_ref) {
      var dimensionMarshal = _ref.dimensionMarshal, focusMarshal = _ref.focusMarshal, styleMarshal = _ref.styleMarshal, getResponders = _ref.getResponders, announce = _ref.announce, autoScroller = _ref.autoScroller;
      return createStore(reducer, composeEnhancers(applyMiddleware(style(styleMarshal), dimensionMarshalStopper(dimensionMarshal), lift$1(dimensionMarshal), drop$1, dropAnimationFinish, dropAnimationFlushOnScroll, pendingDrop, autoScroll(autoScroller), scrollListener, focus(focusMarshal), responders(getResponders, announce))));
    };
    clean$1 = function clean3() {
      return {
        additions: {},
        removals: {},
        modified: {}
      };
    };
    getMaxScroll = function(_ref) {
      var scrollHeight = _ref.scrollHeight, scrollWidth = _ref.scrollWidth, height = _ref.height, width = _ref.width;
      var maxScroll = subtract({
        x: scrollWidth,
        y: scrollHeight
      }, {
        x: width,
        y: height
      });
      var adjustedMaxScroll = {
        x: Math.max(0, maxScroll.x),
        y: Math.max(0, maxScroll.y)
      };
      return adjustedMaxScroll;
    };
    getDocumentElement = function() {
      var doc = document.documentElement;
      !doc ? true ? invariant2(false, "Cannot find document.documentElement") : invariant2(false) : void 0;
      return doc;
    };
    getMaxWindowScroll = function() {
      var doc = getDocumentElement();
      var maxScroll = getMaxScroll({
        scrollHeight: doc.scrollHeight,
        scrollWidth: doc.scrollWidth,
        width: doc.clientWidth,
        height: doc.clientHeight
      });
      return maxScroll;
    };
    getViewport = function() {
      var scroll3 = getWindowScroll3();
      var maxScroll = getMaxWindowScroll();
      var top = scroll3.y;
      var left = scroll3.x;
      var doc = getDocumentElement();
      var width = doc.clientWidth;
      var height = doc.clientHeight;
      var right = left + width;
      var bottom = top + height;
      var frame = getRect({
        top,
        left,
        right,
        bottom
      });
      var viewport = {
        frame,
        scroll: {
          initial: scroll3,
          current: scroll3,
          max: maxScroll,
          diff: {
            value: origin,
            displacement: origin
          }
        }
      };
      return viewport;
    };
    getInitialPublish = function(_ref) {
      var critical = _ref.critical, scrollOptions = _ref.scrollOptions, registry = _ref.registry;
      start();
      var viewport = getViewport();
      var windowScroll = viewport.scroll.current;
      var home2 = critical.droppable;
      var droppables = registry.droppable.getAllByType(home2.type).map(function(entry) {
        return entry.callbacks.getDimensionAndWatchScroll(windowScroll, scrollOptions);
      });
      var draggables = registry.draggable.getAllByType(critical.draggable.type).map(function(entry) {
        return entry.getDimension(windowScroll);
      });
      var dimensions = {
        draggables: toDraggableMap(draggables),
        droppables: toDroppableMap(droppables)
      };
      finish();
      var result = {
        dimensions,
        critical,
        viewport
      };
      return result;
    };
    createDimensionMarshal = function(registry, callbacks) {
      var collection = null;
      var publisher = createPublisher({
        callbacks: {
          publish: callbacks.publishWhileDragging,
          collectionStarting: callbacks.collectionStarting
        },
        registry
      });
      var updateDroppableIsEnabled3 = function updateDroppableIsEnabled4(id, isEnabled) {
        !registry.droppable.exists(id) ? true ? invariant2(false, "Cannot update is enabled flag of Droppable " + id + " as it is not registered") : invariant2(false) : void 0;
        if (!collection) {
          return;
        }
        callbacks.updateDroppableIsEnabled({
          id,
          isEnabled
        });
      };
      var updateDroppableIsCombineEnabled3 = function updateDroppableIsCombineEnabled4(id, isCombineEnabled) {
        if (!collection) {
          return;
        }
        !registry.droppable.exists(id) ? true ? invariant2(false, "Cannot update isCombineEnabled flag of Droppable " + id + " as it is not registered") : invariant2(false) : void 0;
        callbacks.updateDroppableIsCombineEnabled({
          id,
          isCombineEnabled
        });
      };
      var updateDroppableScroll3 = function updateDroppableScroll4(id, newScroll) {
        if (!collection) {
          return;
        }
        !registry.droppable.exists(id) ? true ? invariant2(false, "Cannot update the scroll on Droppable " + id + " as it is not registered") : invariant2(false) : void 0;
        callbacks.updateDroppableScroll({
          id,
          newScroll
        });
      };
      var scrollDroppable2 = function scrollDroppable3(id, change) {
        if (!collection) {
          return;
        }
        registry.droppable.getById(id).callbacks.scroll(change);
      };
      var stopPublishing = function stopPublishing2() {
        if (!collection) {
          return;
        }
        publisher.stop();
        var home2 = collection.critical.droppable;
        registry.droppable.getAllByType(home2.type).forEach(function(entry) {
          return entry.callbacks.dragStopped();
        });
        collection.unsubscribe();
        collection = null;
      };
      var subscriber = function subscriber2(event) {
        !collection ? true ? invariant2(false, "Should only be subscribed when a collection is occurring") : invariant2(false) : void 0;
        var dragging = collection.critical.draggable;
        if (event.type === "ADDITION") {
          if (shouldPublishUpdate(registry, dragging, event.value)) {
            publisher.add(event.value);
          }
        }
        if (event.type === "REMOVAL") {
          if (shouldPublishUpdate(registry, dragging, event.value)) {
            publisher.remove(event.value);
          }
        }
      };
      var startPublishing = function startPublishing2(request) {
        !!collection ? true ? invariant2(false, "Cannot start capturing critical dimensions as there is already a collection") : invariant2(false) : void 0;
        var entry = registry.draggable.getById(request.draggableId);
        var home2 = registry.droppable.getById(entry.descriptor.droppableId);
        var critical = {
          draggable: entry.descriptor,
          droppable: home2.descriptor
        };
        var unsubscribe = registry.subscribe(subscriber);
        collection = {
          critical,
          unsubscribe
        };
        return getInitialPublish({
          critical,
          registry,
          scrollOptions: request.scrollOptions
        });
      };
      var marshal = {
        updateDroppableIsEnabled: updateDroppableIsEnabled3,
        updateDroppableIsCombineEnabled: updateDroppableIsCombineEnabled3,
        scrollDroppable: scrollDroppable2,
        updateDroppableScroll: updateDroppableScroll3,
        startPublishing,
        stopPublishing
      };
      return marshal;
    };
    canStartDrag = function(state, id) {
      if (state.phase === "IDLE") {
        return true;
      }
      if (state.phase !== "DROP_ANIMATING") {
        return false;
      }
      if (state.completed.result.draggableId === id) {
        return false;
      }
      return state.completed.result.reason === "DROP";
    };
    scrollWindow = function(change) {
      window.scrollBy(change.x, change.y);
    };
    getScrollableDroppables = memoize_one_esm_default(function(droppables) {
      return toDroppableList(droppables).filter(function(droppable2) {
        if (!droppable2.isEnabled) {
          return false;
        }
        if (!droppable2.frame) {
          return false;
        }
        return true;
      });
    });
    getScrollableDroppableOver = function getScrollableDroppableOver2(target, droppables) {
      var maybe = find(getScrollableDroppables(droppables), function(droppable2) {
        !droppable2.frame ? true ? invariant2(false, "Invalid result") : invariant2(false) : void 0;
        return isPositionInFrame(droppable2.frame.pageMarginBox)(target);
      });
      return maybe;
    };
    getBestScrollableDroppable = function(_ref) {
      var center = _ref.center, destination = _ref.destination, droppables = _ref.droppables;
      if (destination) {
        var _dimension = droppables[destination];
        if (!_dimension.frame) {
          return null;
        }
        return _dimension;
      }
      var dimension = getScrollableDroppableOver(center, droppables);
      return dimension;
    };
    config = {
      startFromPercentage: 0.25,
      maxScrollAtPercentage: 0.05,
      maxPixelScroll: 28,
      ease: function ease(percentage) {
        return Math.pow(percentage, 2);
      },
      durationDampening: {
        stopDampeningAt: 1200,
        accelerateAt: 360
      }
    };
    getDistanceThresholds = function(container, axis) {
      var startScrollingFrom = container[axis.size] * config.startFromPercentage;
      var maxScrollValueAt = container[axis.size] * config.maxScrollAtPercentage;
      var thresholds = {
        startScrollingFrom,
        maxScrollValueAt
      };
      return thresholds;
    };
    getPercentage = function(_ref) {
      var startOfRange = _ref.startOfRange, endOfRange = _ref.endOfRange, current = _ref.current;
      var range = endOfRange - startOfRange;
      if (range === 0) {
        true ? warning2("\n      Detected distance range of 0 in the fluid auto scroller\n      This is unexpected and would cause a divide by 0 issue.\n      Not allowing an auto scroll\n    ") : void 0;
        return 0;
      }
      var currentInRange = current - startOfRange;
      var percentage = currentInRange / range;
      return percentage;
    };
    minScroll = 1;
    getValueFromDistance = function(distanceToEdge, thresholds) {
      if (distanceToEdge > thresholds.startScrollingFrom) {
        return 0;
      }
      if (distanceToEdge <= thresholds.maxScrollValueAt) {
        return config.maxPixelScroll;
      }
      if (distanceToEdge === thresholds.startScrollingFrom) {
        return minScroll;
      }
      var percentageFromMaxScrollValueAt = getPercentage({
        startOfRange: thresholds.maxScrollValueAt,
        endOfRange: thresholds.startScrollingFrom,
        current: distanceToEdge
      });
      var percentageFromStartScrollingFrom = 1 - percentageFromMaxScrollValueAt;
      var scroll3 = config.maxPixelScroll * config.ease(percentageFromStartScrollingFrom);
      return Math.ceil(scroll3);
    };
    accelerateAt = config.durationDampening.accelerateAt;
    stopAt = config.durationDampening.stopDampeningAt;
    dampenValueByTime = function(proposedScroll, dragStartTime) {
      var startOfRange = dragStartTime;
      var endOfRange = stopAt;
      var now2 = Date.now();
      var runTime = now2 - startOfRange;
      if (runTime >= stopAt) {
        return proposedScroll;
      }
      if (runTime < accelerateAt) {
        return minScroll;
      }
      var betweenAccelerateAtAndStopAtPercentage = getPercentage({
        startOfRange: accelerateAt,
        endOfRange,
        current: runTime
      });
      var scroll3 = proposedScroll * config.ease(betweenAccelerateAtAndStopAtPercentage);
      return Math.ceil(scroll3);
    };
    getValue2 = function(_ref) {
      var distanceToEdge = _ref.distanceToEdge, thresholds = _ref.thresholds, dragStartTime = _ref.dragStartTime, shouldUseTimeDampening = _ref.shouldUseTimeDampening;
      var scroll3 = getValueFromDistance(distanceToEdge, thresholds);
      if (scroll3 === 0) {
        return 0;
      }
      if (!shouldUseTimeDampening) {
        return scroll3;
      }
      return Math.max(dampenValueByTime(scroll3, dragStartTime), minScroll);
    };
    getScrollOnAxis = function(_ref) {
      var container = _ref.container, distanceToEdges = _ref.distanceToEdges, dragStartTime = _ref.dragStartTime, axis = _ref.axis, shouldUseTimeDampening = _ref.shouldUseTimeDampening;
      var thresholds = getDistanceThresholds(container, axis);
      var isCloserToEnd = distanceToEdges[axis.end] < distanceToEdges[axis.start];
      if (isCloserToEnd) {
        return getValue2({
          distanceToEdge: distanceToEdges[axis.end],
          thresholds,
          dragStartTime,
          shouldUseTimeDampening
        });
      }
      return -1 * getValue2({
        distanceToEdge: distanceToEdges[axis.start],
        thresholds,
        dragStartTime,
        shouldUseTimeDampening
      });
    };
    adjustForSizeLimits = function(_ref) {
      var container = _ref.container, subject = _ref.subject, proposedScroll = _ref.proposedScroll;
      var isTooBigVertically = subject.height > container.height;
      var isTooBigHorizontally = subject.width > container.width;
      if (!isTooBigHorizontally && !isTooBigVertically) {
        return proposedScroll;
      }
      if (isTooBigHorizontally && isTooBigVertically) {
        return null;
      }
      return {
        x: isTooBigHorizontally ? 0 : proposedScroll.x,
        y: isTooBigVertically ? 0 : proposedScroll.y
      };
    };
    clean$2 = apply(function(value) {
      return value === 0 ? 0 : value;
    });
    getScroll = function(_ref) {
      var dragStartTime = _ref.dragStartTime, container = _ref.container, subject = _ref.subject, center = _ref.center, shouldUseTimeDampening = _ref.shouldUseTimeDampening;
      var distanceToEdges = {
        top: center.y - container.top,
        right: container.right - center.x,
        bottom: container.bottom - center.y,
        left: center.x - container.left
      };
      var y2 = getScrollOnAxis({
        container,
        distanceToEdges,
        dragStartTime,
        axis: vertical,
        shouldUseTimeDampening
      });
      var x2 = getScrollOnAxis({
        container,
        distanceToEdges,
        dragStartTime,
        axis: horizontal,
        shouldUseTimeDampening
      });
      var required2 = clean$2({
        x: x2,
        y: y2
      });
      if (isEqual2(required2, origin)) {
        return null;
      }
      var limited = adjustForSizeLimits({
        container,
        subject,
        proposedScroll: required2
      });
      if (!limited) {
        return null;
      }
      return isEqual2(limited, origin) ? null : limited;
    };
    smallestSigned = apply(function(value) {
      if (value === 0) {
        return 0;
      }
      return value > 0 ? 1 : -1;
    });
    getOverlap = /* @__PURE__ */ function() {
      var getRemainder = function getRemainder2(target, max) {
        if (target < 0) {
          return target;
        }
        if (target > max) {
          return target - max;
        }
        return 0;
      };
      return function(_ref) {
        var current = _ref.current, max = _ref.max, change = _ref.change;
        var targetScroll = add(current, change);
        var overlap = {
          x: getRemainder(targetScroll.x, max.x),
          y: getRemainder(targetScroll.y, max.y)
        };
        if (isEqual2(overlap, origin)) {
          return null;
        }
        return overlap;
      };
    }();
    canPartiallyScroll = function canPartiallyScroll2(_ref2) {
      var rawMax = _ref2.max, current = _ref2.current, change = _ref2.change;
      var max = {
        x: Math.max(current.x, rawMax.x),
        y: Math.max(current.y, rawMax.y)
      };
      var smallestChange = smallestSigned(change);
      var overlap = getOverlap({
        max,
        current,
        change: smallestChange
      });
      if (!overlap) {
        return true;
      }
      if (smallestChange.x !== 0 && overlap.x === 0) {
        return true;
      }
      if (smallestChange.y !== 0 && overlap.y === 0) {
        return true;
      }
      return false;
    };
    canScrollWindow = function canScrollWindow2(viewport, change) {
      return canPartiallyScroll({
        current: viewport.scroll.current,
        max: viewport.scroll.max,
        change
      });
    };
    getWindowOverlap = function getWindowOverlap2(viewport, change) {
      if (!canScrollWindow(viewport, change)) {
        return null;
      }
      var max = viewport.scroll.max;
      var current = viewport.scroll.current;
      return getOverlap({
        current,
        max,
        change
      });
    };
    canScrollDroppable = function canScrollDroppable2(droppable2, change) {
      var frame = droppable2.frame;
      if (!frame) {
        return false;
      }
      return canPartiallyScroll({
        current: frame.scroll.current,
        max: frame.scroll.max,
        change
      });
    };
    getDroppableOverlap = function getDroppableOverlap2(droppable2, change) {
      var frame = droppable2.frame;
      if (!frame) {
        return null;
      }
      if (!canScrollDroppable(droppable2, change)) {
        return null;
      }
      return getOverlap({
        current: frame.scroll.current,
        max: frame.scroll.max,
        change
      });
    };
    getWindowScrollChange = function(_ref) {
      var viewport = _ref.viewport, subject = _ref.subject, center = _ref.center, dragStartTime = _ref.dragStartTime, shouldUseTimeDampening = _ref.shouldUseTimeDampening;
      var scroll3 = getScroll({
        dragStartTime,
        container: viewport.frame,
        subject,
        center,
        shouldUseTimeDampening
      });
      return scroll3 && canScrollWindow(viewport, scroll3) ? scroll3 : null;
    };
    getDroppableScrollChange = function(_ref) {
      var droppable2 = _ref.droppable, subject = _ref.subject, center = _ref.center, dragStartTime = _ref.dragStartTime, shouldUseTimeDampening = _ref.shouldUseTimeDampening;
      var frame = droppable2.frame;
      if (!frame) {
        return null;
      }
      var scroll3 = getScroll({
        dragStartTime,
        container: frame.pageMarginBox,
        subject,
        center,
        shouldUseTimeDampening
      });
      return scroll3 && canScrollDroppable(droppable2, scroll3) ? scroll3 : null;
    };
    scroll$1 = function(_ref) {
      var state = _ref.state, dragStartTime = _ref.dragStartTime, shouldUseTimeDampening = _ref.shouldUseTimeDampening, scrollWindow2 = _ref.scrollWindow, scrollDroppable2 = _ref.scrollDroppable;
      var center = state.current.page.borderBoxCenter;
      var draggable2 = state.dimensions.draggables[state.critical.draggable.id];
      var subject = draggable2.page.marginBox;
      if (state.isWindowScrollAllowed) {
        var viewport = state.viewport;
        var _change = getWindowScrollChange({
          dragStartTime,
          viewport,
          subject,
          center,
          shouldUseTimeDampening
        });
        if (_change) {
          scrollWindow2(_change);
          return;
        }
      }
      var droppable2 = getBestScrollableDroppable({
        center,
        destination: whatIsDraggedOver(state.impact),
        droppables: state.dimensions.droppables
      });
      if (!droppable2) {
        return;
      }
      var change = getDroppableScrollChange({
        dragStartTime,
        droppable: droppable2,
        subject,
        center,
        shouldUseTimeDampening
      });
      if (change) {
        scrollDroppable2(droppable2.descriptor.id, change);
      }
    };
    createFluidScroller = function(_ref) {
      var scrollWindow2 = _ref.scrollWindow, scrollDroppable2 = _ref.scrollDroppable;
      var scheduleWindowScroll = raf_schd_esm_default(scrollWindow2);
      var scheduleDroppableScroll = raf_schd_esm_default(scrollDroppable2);
      var dragging = null;
      var tryScroll = function tryScroll2(state) {
        !dragging ? true ? invariant2(false, "Cannot fluid scroll if not dragging") : invariant2(false) : void 0;
        var _dragging = dragging, shouldUseTimeDampening = _dragging.shouldUseTimeDampening, dragStartTime = _dragging.dragStartTime;
        scroll$1({
          state,
          scrollWindow: scheduleWindowScroll,
          scrollDroppable: scheduleDroppableScroll,
          dragStartTime,
          shouldUseTimeDampening
        });
      };
      var start$1 = function start$12(state) {
        start();
        !!dragging ? true ? invariant2(false, "Cannot start auto scrolling when already started") : invariant2(false) : void 0;
        var dragStartTime = Date.now();
        var wasScrollNeeded = false;
        var fakeScrollCallback = function fakeScrollCallback2() {
          wasScrollNeeded = true;
        };
        scroll$1({
          state,
          dragStartTime: 0,
          shouldUseTimeDampening: false,
          scrollWindow: fakeScrollCallback,
          scrollDroppable: fakeScrollCallback
        });
        dragging = {
          dragStartTime,
          shouldUseTimeDampening: wasScrollNeeded
        };
        finish();
        if (wasScrollNeeded) {
          tryScroll(state);
        }
      };
      var stop = function stop2() {
        if (!dragging) {
          return;
        }
        scheduleWindowScroll.cancel();
        scheduleDroppableScroll.cancel();
        dragging = null;
      };
      return {
        start: start$1,
        stop,
        scroll: tryScroll
      };
    };
    createJumpScroller = function(_ref) {
      var move3 = _ref.move, scrollDroppable2 = _ref.scrollDroppable, scrollWindow2 = _ref.scrollWindow;
      var moveByOffset = function moveByOffset2(state, offset3) {
        var client = add(state.current.client.selection, offset3);
        move3({
          client
        });
      };
      var scrollDroppableAsMuchAsItCan = function scrollDroppableAsMuchAsItCan2(droppable2, change) {
        if (!canScrollDroppable(droppable2, change)) {
          return change;
        }
        var overlap = getDroppableOverlap(droppable2, change);
        if (!overlap) {
          scrollDroppable2(droppable2.descriptor.id, change);
          return null;
        }
        var whatTheDroppableCanScroll = subtract(change, overlap);
        scrollDroppable2(droppable2.descriptor.id, whatTheDroppableCanScroll);
        var remainder = subtract(change, whatTheDroppableCanScroll);
        return remainder;
      };
      var scrollWindowAsMuchAsItCan = function scrollWindowAsMuchAsItCan2(isWindowScrollAllowed, viewport, change) {
        if (!isWindowScrollAllowed) {
          return change;
        }
        if (!canScrollWindow(viewport, change)) {
          return change;
        }
        var overlap = getWindowOverlap(viewport, change);
        if (!overlap) {
          scrollWindow2(change);
          return null;
        }
        var whatTheWindowCanScroll = subtract(change, overlap);
        scrollWindow2(whatTheWindowCanScroll);
        var remainder = subtract(change, whatTheWindowCanScroll);
        return remainder;
      };
      var jumpScroller = function jumpScroller2(state) {
        var request = state.scrollJumpRequest;
        if (!request) {
          return;
        }
        var destination = whatIsDraggedOver(state.impact);
        !destination ? true ? invariant2(false, "Cannot perform a jump scroll when there is no destination") : invariant2(false) : void 0;
        var droppableRemainder = scrollDroppableAsMuchAsItCan(state.dimensions.droppables[destination], request);
        if (!droppableRemainder) {
          return;
        }
        var viewport = state.viewport;
        var windowRemainder = scrollWindowAsMuchAsItCan(state.isWindowScrollAllowed, viewport, droppableRemainder);
        if (!windowRemainder) {
          return;
        }
        moveByOffset(state, windowRemainder);
      };
      return jumpScroller;
    };
    createAutoScroller = function(_ref) {
      var scrollDroppable2 = _ref.scrollDroppable, scrollWindow2 = _ref.scrollWindow, move3 = _ref.move;
      var fluidScroller = createFluidScroller({
        scrollWindow: scrollWindow2,
        scrollDroppable: scrollDroppable2
      });
      var jumpScroll = createJumpScroller({
        move: move3,
        scrollWindow: scrollWindow2,
        scrollDroppable: scrollDroppable2
      });
      var scroll3 = function scroll4(state) {
        if (state.phase !== "DRAGGING") {
          return;
        }
        if (state.movementMode === "FLUID") {
          fluidScroller.scroll(state);
          return;
        }
        if (!state.scrollJumpRequest) {
          return;
        }
        jumpScroll(state);
      };
      var scroller = {
        scroll: scroll3,
        start: fluidScroller.start,
        stop: fluidScroller.stop
      };
      return scroller;
    };
    prefix$1 = "data-rbd";
    dragHandle = function() {
      var base = prefix$1 + "-drag-handle";
      return {
        base,
        draggableId: base + "-draggable-id",
        contextId: base + "-context-id"
      };
    }();
    draggable = function() {
      var base = prefix$1 + "-draggable";
      return {
        base,
        contextId: base + "-context-id",
        id: base + "-id"
      };
    }();
    droppable = function() {
      var base = prefix$1 + "-droppable";
      return {
        base,
        contextId: base + "-context-id",
        id: base + "-id"
      };
    }();
    scrollContainer = {
      contextId: prefix$1 + "-scroll-container-context-id"
    };
    makeGetSelector = function makeGetSelector2(context) {
      return function(attribute) {
        return "[" + attribute + '="' + context + '"]';
      };
    };
    getStyles = function getStyles2(rules, property) {
      return rules.map(function(rule) {
        var value = rule.styles[property];
        if (!value) {
          return "";
        }
        return rule.selector + " { " + value + " }";
      }).join(" ");
    };
    noPointerEvents = "pointer-events: none;";
    getStyles$1 = function(contextId) {
      var getSelector2 = makeGetSelector(contextId);
      var dragHandle$1 = function() {
        var grabCursor = "\n      cursor: -webkit-grab;\n      cursor: grab;\n    ";
        return {
          selector: getSelector2(dragHandle.contextId),
          styles: {
            always: "\n          -webkit-touch-callout: none;\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\n          touch-action: manipulation;\n        ",
            resting: grabCursor,
            dragging: noPointerEvents,
            dropAnimating: grabCursor
          }
        };
      }();
      var draggable$1 = function() {
        var transition2 = "\n      transition: " + transitions.outOfTheWay + ";\n    ";
        return {
          selector: getSelector2(draggable.contextId),
          styles: {
            dragging: transition2,
            dropAnimating: transition2,
            userCancel: transition2
          }
        };
      }();
      var droppable$1 = {
        selector: getSelector2(droppable.contextId),
        styles: {
          always: "overflow-anchor: none;"
        }
      };
      var body = {
        selector: "body",
        styles: {
          dragging: "\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        overflow-anchor: none;\n      "
        }
      };
      var rules = [draggable$1, dragHandle$1, droppable$1, body];
      return {
        always: getStyles(rules, "always"),
        resting: getStyles(rules, "resting"),
        dragging: getStyles(rules, "dragging"),
        dropAnimating: getStyles(rules, "dropAnimating"),
        userCancel: getStyles(rules, "userCancel")
      };
    };
    useIsomorphicLayoutEffect2 = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined" ? import_react9.useLayoutEffect : import_react9.useEffect;
    getHead = function getHead2() {
      var head = document.querySelector("head");
      !head ? true ? invariant2(false, "Cannot find the head to append a style to") : invariant2(false) : void 0;
      return head;
    };
    createStyleEl = function createStyleEl2(nonce) {
      var el2 = document.createElement("style");
      if (nonce) {
        el2.setAttribute("nonce", nonce);
      }
      el2.type = "text/css";
      return el2;
    };
    getWindowFromEl = function(el2) {
      return el2 && el2.ownerDocument ? el2.ownerDocument.defaultView : window;
    };
    StoreContext = import_react9.default.createContext(null);
    getBodyElement = function() {
      var body = document.body;
      !body ? true ? invariant2(false, "Cannot find document.body") : invariant2(false) : void 0;
      return body;
    };
    visuallyHidden = {
      position: "absolute",
      width: "1px",
      height: "1px",
      margin: "-1px",
      border: "0",
      padding: "0",
      overflow: "hidden",
      clip: "rect(0 0 0 0)",
      "clip-path": "inset(100%)"
    };
    getId = function getId2(contextId) {
      return "rbd-announcement-" + contextId;
    };
    count = 0;
    defaults = {
      separator: "::"
    };
    AppContext = import_react9.default.createContext(null);
    peerDependencies = {
      react: "^16.8.5 || ^17.0.0",
      "react-dom": "^16.8.5 || ^17.0.0"
    };
    semver = /(\d+)\.(\d+)\.(\d+)/;
    getVersion = function getVersion2(value) {
      var result = semver.exec(value);
      !(result != null) ? true ? invariant2(false, "Unable to parse React version " + value) : invariant2(false) : void 0;
      var major = Number(result[1]);
      var minor = Number(result[2]);
      var patch3 = Number(result[3]);
      return {
        major,
        minor,
        patch: patch3,
        raw: value
      };
    };
    isSatisfied = function isSatisfied2(expected, actual) {
      if (actual.major > expected.major) {
        return true;
      }
      if (actual.major < expected.major) {
        return false;
      }
      if (actual.minor > expected.minor) {
        return true;
      }
      if (actual.minor < expected.minor) {
        return false;
      }
      return actual.patch >= expected.patch;
    };
    checkReactVersion = function(peerDepValue, actualValue) {
      var peerDep = getVersion(peerDepValue);
      var actual = getVersion(actualValue);
      if (isSatisfied(peerDep, actual)) {
        return;
      }
      true ? warning2("\n    React version: [" + actual.raw + "]\n    does not satisfy expected peer dependency version: [" + peerDep.raw + "]\n\n    This can result in run time bugs, and even fatal crashes\n  ") : void 0;
    };
    suffix = "\n  We expect a html5 doctype: <!doctype html>\n  This is to ensure consistent browser layout and measurement\n\n  More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/doctype.md\n";
    checkDoctype = function(doc) {
      var doctype = doc.doctype;
      if (!doctype) {
        true ? warning2("\n      No <!doctype html> found.\n\n      " + suffix + "\n    ") : void 0;
        return;
      }
      if (doctype.name.toLowerCase() !== "html") {
        true ? warning2("\n      Unexpected <!doctype> found: (" + doctype.name + ")\n\n      " + suffix + "\n    ") : void 0;
      }
      if (doctype.publicId !== "") {
        true ? warning2("\n      Unexpected <!doctype> publicId found: (" + doctype.publicId + ")\n      A html5 doctype does not have a publicId\n\n      " + suffix + "\n    ") : void 0;
      }
    };
    tab = 9;
    enter = 13;
    escape = 27;
    space = 32;
    pageUp = 33;
    pageDown = 34;
    end = 35;
    home = 36;
    arrowLeft = 37;
    arrowUp = 38;
    arrowRight = 39;
    arrowDown = 40;
    preventedKeys = (_preventedKeys = {}, _preventedKeys[enter] = true, _preventedKeys[tab] = true, _preventedKeys);
    preventStandardKeyEvents = function(event) {
      if (preventedKeys[event.keyCode]) {
        event.preventDefault();
      }
    };
    supportedEventName = function() {
      var base = "visibilitychange";
      if (typeof document === "undefined") {
        return base;
      }
      var candidates = [base, "ms" + base, "webkit" + base, "moz" + base, "o" + base];
      var supported = find(candidates, function(eventName) {
        return "on" + eventName in document;
      });
      return supported || base;
    }();
    primaryButton = 0;
    sloppyClickThreshold = 5;
    idle$1 = {
      type: "IDLE"
    };
    scrollJumpKeys = (_scrollJumpKeys = {}, _scrollJumpKeys[pageDown] = true, _scrollJumpKeys[pageUp] = true, _scrollJumpKeys[home] = true, _scrollJumpKeys[end] = true, _scrollJumpKeys);
    idle$2 = {
      type: "IDLE"
    };
    timeForLongPress = 120;
    forcePressThreshold = 0.15;
    interactiveTagNames = {
      input: true,
      button: true,
      textarea: true,
      select: true,
      option: true,
      optgroup: true,
      video: true,
      audio: true
    };
    getBorderBoxCenterPosition = function(el2) {
      return getRect(el2.getBoundingClientRect()).center;
    };
    supportedMatchesName = function() {
      var base = "matches";
      if (typeof document === "undefined") {
        return base;
      }
      var candidates = [base, "msMatchesSelector", "webkitMatchesSelector"];
      var value = find(candidates, function(name) {
        return name in Element.prototype;
      });
      return value || base;
    }();
    defaultSensors = [useMouseSensor, useKeyboardSensor, useTouchSensor];
    createResponders = function createResponders2(props) {
      return {
        onBeforeCapture: props.onBeforeCapture,
        onBeforeDragStart: props.onBeforeDragStart,
        onDragStart: props.onDragStart,
        onDragEnd: props.onDragEnd,
        onDragUpdate: props.onDragUpdate
      };
    };
    count$1 = 0;
    isEqual$1 = function isEqual4(base) {
      return function(value) {
        return base === value;
      };
    };
    isScroll = isEqual$1("scroll");
    isAuto = isEqual$1("auto");
    isVisible$1 = isEqual$1("visible");
    isEither = function isEither2(overflow, fn) {
      return fn(overflow.overflowX) || fn(overflow.overflowY);
    };
    isBoth = function isBoth2(overflow, fn) {
      return fn(overflow.overflowX) && fn(overflow.overflowY);
    };
    isElementScrollable = function isElementScrollable2(el2) {
      var style2 = window.getComputedStyle(el2);
      var overflow = {
        overflowX: style2.overflowX,
        overflowY: style2.overflowY
      };
      return isEither(overflow, isScroll) || isEither(overflow, isAuto);
    };
    isBodyScrollable = function isBodyScrollable2() {
      if (false) {
        return false;
      }
      var body = getBodyElement();
      var html = document.documentElement;
      !html ? true ? invariant2(false) : invariant2(false) : void 0;
      if (!isElementScrollable(body)) {
        return false;
      }
      var htmlStyle = window.getComputedStyle(html);
      var htmlOverflow = {
        overflowX: htmlStyle.overflowX,
        overflowY: htmlStyle.overflowY
      };
      if (isBoth(htmlOverflow, isVisible$1)) {
        return false;
      }
      true ? warning2("\n    We have detected that your <body> element might be a scroll container.\n    We have found no reliable way of detecting whether the <body> element is a scroll container.\n    Under most circumstances a <body> scroll bar will be on the <html> element (document.documentElement)\n\n    Because we cannot determine if the <body> is a scroll container, and generally it is not one,\n    we will be treating the <body> as *not* a scroll container\n\n    More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/how-we-detect-scroll-containers.md\n  ") : void 0;
      return false;
    };
    getClosestScrollable = function getClosestScrollable2(el2) {
      if (el2 == null) {
        return null;
      }
      if (el2 === document.body) {
        return isBodyScrollable() ? el2 : null;
      }
      if (el2 === document.documentElement) {
        return null;
      }
      if (!isElementScrollable(el2)) {
        return getClosestScrollable2(el2.parentElement);
      }
      return el2;
    };
    checkForNestedScrollContainers = function(scrollable) {
      if (!scrollable) {
        return;
      }
      var anotherScrollParent = getClosestScrollable(scrollable.parentElement);
      if (!anotherScrollParent) {
        return;
      }
      true ? warning2("\n    Droppable: unsupported nested scroll container detected.\n    A Droppable can only have one scroll parent (which can be itself)\n    Nested scroll containers are currently not supported.\n\n    We hope to support nested scroll containers soon: https://github.com/atlassian/react-beautiful-dnd/issues/131\n  ") : void 0;
    };
    getScroll$1 = function(el2) {
      return {
        x: el2.scrollLeft,
        y: el2.scrollTop
      };
    };
    getIsFixed = function getIsFixed2(el2) {
      if (!el2) {
        return false;
      }
      var style2 = window.getComputedStyle(el2);
      if (style2.position === "fixed") {
        return true;
      }
      return getIsFixed2(el2.parentElement);
    };
    getEnv = function(start3) {
      var closestScrollable = getClosestScrollable(start3);
      var isFixedOnPage = getIsFixed(start3);
      return {
        closestScrollable,
        isFixedOnPage
      };
    };
    getDroppableDimension = function(_ref) {
      var descriptor = _ref.descriptor, isEnabled = _ref.isEnabled, isCombineEnabled = _ref.isCombineEnabled, isFixedOnPage = _ref.isFixedOnPage, direction = _ref.direction, client = _ref.client, page = _ref.page, closest3 = _ref.closest;
      var frame = function() {
        if (!closest3) {
          return null;
        }
        var scrollSize = closest3.scrollSize, frameClient = closest3.client;
        var maxScroll = getMaxScroll({
          scrollHeight: scrollSize.scrollHeight,
          scrollWidth: scrollSize.scrollWidth,
          height: frameClient.paddingBox.height,
          width: frameClient.paddingBox.width
        });
        return {
          pageMarginBox: closest3.page.marginBox,
          frameClient,
          scrollSize,
          shouldClipSubject: closest3.shouldClipSubject,
          scroll: {
            initial: closest3.scroll,
            current: closest3.scroll,
            max: maxScroll,
            diff: {
              value: origin,
              displacement: origin
            }
          }
        };
      }();
      var axis = direction === "vertical" ? vertical : horizontal;
      var subject = getSubject({
        page,
        withPlaceholder: null,
        axis,
        frame
      });
      var dimension = {
        descriptor,
        isCombineEnabled,
        isFixedOnPage,
        axis,
        isEnabled,
        client,
        page,
        frame,
        subject
      };
      return dimension;
    };
    getClient = function getClient2(targetRef, closestScrollable) {
      var base = getBox(targetRef);
      if (!closestScrollable) {
        return base;
      }
      if (targetRef !== closestScrollable) {
        return base;
      }
      var top = base.paddingBox.top - closestScrollable.scrollTop;
      var left = base.paddingBox.left - closestScrollable.scrollLeft;
      var bottom = top + closestScrollable.scrollHeight;
      var right = left + closestScrollable.scrollWidth;
      var paddingBox = {
        top,
        right,
        bottom,
        left
      };
      var borderBox = expand(paddingBox, base.border);
      var client = createBox({
        borderBox,
        margin: base.margin,
        border: base.border,
        padding: base.padding
      });
      return client;
    };
    getDimension = function(_ref) {
      var ref2 = _ref.ref, descriptor = _ref.descriptor, env = _ref.env, windowScroll = _ref.windowScroll, direction = _ref.direction, isDropDisabled = _ref.isDropDisabled, isCombineEnabled = _ref.isCombineEnabled, shouldClipSubject = _ref.shouldClipSubject;
      var closestScrollable = env.closestScrollable;
      var client = getClient(ref2, closestScrollable);
      var page = withScroll(client, windowScroll);
      var closest3 = function() {
        if (!closestScrollable) {
          return null;
        }
        var frameClient = getBox(closestScrollable);
        var scrollSize = {
          scrollHeight: closestScrollable.scrollHeight,
          scrollWidth: closestScrollable.scrollWidth
        };
        return {
          client: frameClient,
          page: withScroll(frameClient, windowScroll),
          scroll: getScroll$1(closestScrollable),
          scrollSize,
          shouldClipSubject
        };
      }();
      var dimension = getDroppableDimension({
        descriptor,
        isEnabled: !isDropDisabled,
        isCombineEnabled,
        isFixedOnPage: env.isFixedOnPage,
        direction,
        client,
        page,
        closest: closest3
      });
      return dimension;
    };
    immediate = {
      passive: false
    };
    delayed = {
      passive: true
    };
    getListenerOptions = function(options) {
      return options.shouldPublishImmediately ? immediate : delayed;
    };
    getClosestScrollableFromDrag = function getClosestScrollableFromDrag2(dragging) {
      return dragging && dragging.env.closestScrollable || null;
    };
    empty = {
      width: 0,
      height: 0,
      margin: noSpacing2
    };
    getSize = function getSize2(_ref) {
      var isAnimatingOpenOnMount = _ref.isAnimatingOpenOnMount, placeholder2 = _ref.placeholder, animate = _ref.animate;
      if (isAnimatingOpenOnMount) {
        return empty;
      }
      if (animate === "close") {
        return empty;
      }
      return {
        height: placeholder2.client.borderBox.height,
        width: placeholder2.client.borderBox.width,
        margin: placeholder2.client.margin
      };
    };
    getStyle = function getStyle2(_ref2) {
      var isAnimatingOpenOnMount = _ref2.isAnimatingOpenOnMount, placeholder2 = _ref2.placeholder, animate = _ref2.animate;
      var size = getSize({
        isAnimatingOpenOnMount,
        placeholder: placeholder2,
        animate
      });
      return {
        display: placeholder2.display,
        boxSizing: "border-box",
        width: size.width,
        height: size.height,
        marginTop: size.margin.top,
        marginRight: size.margin.right,
        marginBottom: size.margin.bottom,
        marginLeft: size.margin.left,
        flexShrink: "0",
        flexGrow: "0",
        pointerEvents: "none",
        transition: animate !== "none" ? transitions.placeholder : null
      };
    };
    Placeholder$1 = import_react9.default.memo(Placeholder);
    DroppableContext = import_react9.default.createContext(null);
    shared = [function required(_ref) {
      var props = _ref.props;
      !props.droppableId ? true ? invariant2(false, "A Droppable requires a droppableId prop") : invariant2(false) : void 0;
      !(typeof props.droppableId === "string") ? true ? invariant2(false, "A Droppable requires a [string] droppableId. Provided: [" + typeof props.droppableId + "]") : invariant2(false) : void 0;
    }, function _boolean(_ref2) {
      var props = _ref2.props;
      !isBoolean(props.isDropDisabled) ? true ? invariant2(false, "isDropDisabled must be a boolean") : invariant2(false) : void 0;
      !isBoolean(props.isCombineEnabled) ? true ? invariant2(false, "isCombineEnabled must be a boolean") : invariant2(false) : void 0;
      !isBoolean(props.ignoreContainerClipping) ? true ? invariant2(false, "ignoreContainerClipping must be a boolean") : invariant2(false) : void 0;
    }, function ref(_ref3) {
      var getDroppableRef = _ref3.getDroppableRef;
      checkIsValidInnerRef(getDroppableRef());
    }];
    standard = [function placeholder(_ref4) {
      var props = _ref4.props, getPlaceholderRef = _ref4.getPlaceholderRef;
      if (!props.placeholder) {
        return;
      }
      var ref2 = getPlaceholderRef();
      if (ref2) {
        return;
      }
      true ? warning2('\n      Droppable setup issue [droppableId: "' + props.droppableId + '"]:\n      DroppableProvided > placeholder could not be found.\n\n      Please be sure to add the {provided.placeholder} React Node as a child of your Droppable.\n      More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/api/droppable.md\n    ') : void 0;
    }];
    virtual = [function hasClone(_ref5) {
      var props = _ref5.props;
      !props.renderClone ? true ? invariant2(false, "Must provide a clone render function (renderClone) for virtual lists") : invariant2(false) : void 0;
    }, function hasNoPlaceholder(_ref6) {
      var getPlaceholderRef = _ref6.getPlaceholderRef;
      !!getPlaceholderRef() ? true ? invariant2(false, "Expected virtual list to not have a placeholder") : invariant2(false) : void 0;
    }];
    AnimateInOut = function(_React$PureComponent) {
      _inheritsLoose(AnimateInOut2, _React$PureComponent);
      function AnimateInOut2() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
        _this.state = {
          isVisible: Boolean(_this.props.on),
          data: _this.props.on,
          animate: _this.props.shouldAnimate && _this.props.on ? "open" : "none"
        };
        _this.onClose = function() {
          if (_this.state.animate !== "close") {
            return;
          }
          _this.setState({
            isVisible: false
          });
        };
        return _this;
      }
      AnimateInOut2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (!props.shouldAnimate) {
          return {
            isVisible: Boolean(props.on),
            data: props.on,
            animate: "none"
          };
        }
        if (props.on) {
          return {
            isVisible: true,
            data: props.on,
            animate: "open"
          };
        }
        if (state.isVisible) {
          return {
            isVisible: true,
            data: state.data,
            animate: "close"
          };
        }
        return {
          isVisible: false,
          animate: "close",
          data: null
        };
      };
      var _proto = AnimateInOut2.prototype;
      _proto.render = function render() {
        if (!this.state.isVisible) {
          return null;
        }
        var provided = {
          onClose: this.onClose,
          data: this.state.data,
          animate: this.state.animate
        };
        return this.props.children(provided);
      };
      return AnimateInOut2;
    }(import_react9.default.PureComponent);
    zIndexOptions = {
      dragging: 5e3,
      dropAnimating: 4500
    };
    getDraggingTransition = function getDraggingTransition2(shouldAnimateDragMovement, dropping) {
      if (dropping) {
        return transitions.drop(dropping.duration);
      }
      if (shouldAnimateDragMovement) {
        return transitions.snap;
      }
      return transitions.fluid;
    };
    getDraggingOpacity = function getDraggingOpacity2(isCombining, isDropAnimating) {
      if (!isCombining) {
        return null;
      }
      return isDropAnimating ? combine.opacity.drop : combine.opacity.combining;
    };
    getShouldDraggingAnimate = function getShouldDraggingAnimate2(dragging) {
      if (dragging.forceShouldAnimate != null) {
        return dragging.forceShouldAnimate;
      }
      return dragging.mode === "SNAP";
    };
    isStrictEqual = function(a2, b2) {
      return a2 === b2;
    };
    whatIsDraggedOverFromResult = function(result) {
      var combine2 = result.combine, destination = result.destination;
      if (destination) {
        return destination.droppableId;
      }
      if (combine2) {
        return combine2.droppableId;
      }
      return null;
    };
    getCombineWithFromResult = function getCombineWithFromResult2(result) {
      return result.combine ? result.combine.draggableId : null;
    };
    getCombineWithFromImpact = function getCombineWithFromImpact2(impact) {
      return impact.at && impact.at.type === "COMBINE" ? impact.at.combine.draggableId : null;
    };
    atRest = {
      mapped: {
        type: "SECONDARY",
        offset: origin,
        combineTargetFor: null,
        shouldAnimateDisplacement: true,
        snapshot: getSecondarySnapshot(null)
      }
    };
    makeMapStateToProps = function makeMapStateToProps2() {
      var draggingSelector = getDraggableSelector();
      var secondarySelector = getSecondarySelector();
      var selector = function selector2(state, ownProps) {
        return draggingSelector(state, ownProps) || secondarySelector(state, ownProps) || atRest;
      };
      return selector;
    };
    mapDispatchToProps = {
      dropAnimationFinished
    };
    ConnectedDraggable = connect_default(makeMapStateToProps, mapDispatchToProps, null, {
      context: StoreContext,
      pure: true,
      areStatePropsEqual: isStrictEqual
    })(Draggable);
    isMatchingType = function isMatchingType2(type, critical) {
      return type === critical.droppable.type;
    };
    getDraggable = function getDraggable2(critical, dimensions) {
      return dimensions.draggables[critical.draggable.id];
    };
    makeMapStateToProps$1 = function makeMapStateToProps3() {
      var idleWithAnimation = {
        placeholder: null,
        shouldAnimatePlaceholder: true,
        snapshot: {
          isDraggingOver: false,
          draggingOverWith: null,
          draggingFromThisWith: null,
          isUsingPlaceholder: false
        },
        useClone: null
      };
      var idleWithoutAnimation = _extends({}, idleWithAnimation, {
        shouldAnimatePlaceholder: false
      });
      var getDraggableRubric = memoize_one_esm_default(function(descriptor) {
        return {
          draggableId: descriptor.id,
          type: descriptor.type,
          source: {
            index: descriptor.index,
            droppableId: descriptor.droppableId
          }
        };
      });
      var getMapProps = memoize_one_esm_default(function(id, isEnabled, isDraggingOverForConsumer, isDraggingOverForImpact, dragging, renderClone) {
        var draggableId = dragging.descriptor.id;
        var isHome = dragging.descriptor.droppableId === id;
        if (isHome) {
          var useClone = renderClone ? {
            render: renderClone,
            dragging: getDraggableRubric(dragging.descriptor)
          } : null;
          var _snapshot = {
            isDraggingOver: isDraggingOverForConsumer,
            draggingOverWith: isDraggingOverForConsumer ? draggableId : null,
            draggingFromThisWith: draggableId,
            isUsingPlaceholder: true
          };
          return {
            placeholder: dragging.placeholder,
            shouldAnimatePlaceholder: false,
            snapshot: _snapshot,
            useClone
          };
        }
        if (!isEnabled) {
          return idleWithoutAnimation;
        }
        if (!isDraggingOverForImpact) {
          return idleWithAnimation;
        }
        var snapshot = {
          isDraggingOver: isDraggingOverForConsumer,
          draggingOverWith: draggableId,
          draggingFromThisWith: null,
          isUsingPlaceholder: true
        };
        return {
          placeholder: dragging.placeholder,
          shouldAnimatePlaceholder: true,
          snapshot,
          useClone: null
        };
      });
      var selector = function selector2(state, ownProps) {
        var id = ownProps.droppableId;
        var type = ownProps.type;
        var isEnabled = !ownProps.isDropDisabled;
        var renderClone = ownProps.renderClone;
        if (state.isDragging) {
          var critical = state.critical;
          if (!isMatchingType(type, critical)) {
            return idleWithoutAnimation;
          }
          var dragging = getDraggable(critical, state.dimensions);
          var isDraggingOver = whatIsDraggedOver(state.impact) === id;
          return getMapProps(id, isEnabled, isDraggingOver, isDraggingOver, dragging, renderClone);
        }
        if (state.phase === "DROP_ANIMATING") {
          var completed = state.completed;
          if (!isMatchingType(type, completed.critical)) {
            return idleWithoutAnimation;
          }
          var _dragging = getDraggable(completed.critical, state.dimensions);
          return getMapProps(id, isEnabled, whatIsDraggedOverFromResult(completed.result) === id, whatIsDraggedOver(completed.impact) === id, _dragging, renderClone);
        }
        if (state.phase === "IDLE" && state.completed && !state.shouldFlush) {
          var _completed = state.completed;
          if (!isMatchingType(type, _completed.critical)) {
            return idleWithoutAnimation;
          }
          var wasOver = whatIsDraggedOver(_completed.impact) === id;
          var wasCombining = Boolean(_completed.impact.at && _completed.impact.at.type === "COMBINE");
          var isHome = _completed.critical.droppable.id === id;
          if (wasOver) {
            return wasCombining ? idleWithAnimation : idleWithoutAnimation;
          }
          if (isHome) {
            return idleWithAnimation;
          }
          return idleWithoutAnimation;
        }
        return idleWithoutAnimation;
      };
      return selector;
    };
    mapDispatchToProps$1 = {
      updateViewportMaxScroll
    };
    defaultProps = {
      mode: "standard",
      type: "DEFAULT",
      direction: "vertical",
      isDropDisabled: false,
      isCombineEnabled: false,
      ignoreContainerClipping: false,
      renderClone: null,
      getContainerForClone: getBody
    };
    ConnectedDroppable = connect_default(makeMapStateToProps$1, mapDispatchToProps$1, null, {
      context: StoreContext,
      pure: true,
      areStatePropsEqual: isStrictEqual
    })(Droppable);
    ConnectedDroppable.defaultProps = defaultProps;
  }
});

// node_modules/material-table/dist/components/m-table-groupbar.js
var require_m_table_groupbar = __commonJS({
  "node_modules/material-table/dist/components/m-table-groupbar.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _extends2 = _interopRequireDefault(require_extends());
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _Toolbar = _interopRequireDefault((init_Toolbar(), __toCommonJS(Toolbar_exports)));
    var _Chip = _interopRequireDefault((init_Chip(), __toCommonJS(Chip_exports)));
    var _Typography = _interopRequireDefault((init_Typography(), __toCommonJS(Typography_exports)));
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var React62 = _interopRequireWildcard(require_react());
    var _reactBeautifulDnd = (init_react_beautiful_dnd_esm(), __toCommonJS(react_beautiful_dnd_esm_exports));
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTableGroupbar = function(_React$Component) {
      (0, _inherits2.default)(MTableGroupbar2, _React$Component);
      var _super = _createSuper(MTableGroupbar2);
      function MTableGroupbar2(props) {
        var _this;
        (0, _classCallCheck2.default)(this, MTableGroupbar2);
        _this = _super.call(this, props);
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getItemStyle", function(isDragging, draggableStyle) {
          return (0, _objectSpread22.default)({
            // some basic styles to make the items look a bit nicer
            userSelect: "none",
            // padding: '8px 16px',
            margin: "0 ".concat(8, "px 0 0")
          }, draggableStyle);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getListStyle", function(isDraggingOver) {
          return {
            // background: isDraggingOver ? 'lightblue' : '#0000000a',
            background: "#0000000a",
            display: "flex",
            width: "100%",
            padding: 8,
            overflow: "auto",
            border: "1px solid #ccc",
            borderStyle: "dashed"
          };
        });
        _this.state = {};
        return _this;
      }
      (0, _createClass2.default)(MTableGroupbar2, [{
        key: "render",
        value: function render() {
          var _this2 = this;
          return React62.createElement(_Toolbar.default, {
            style: {
              padding: 0,
              minHeight: "unset"
            }
          }, React62.createElement(_reactBeautifulDnd.Droppable, {
            droppableId: "groups",
            direction: "horizontal",
            placeholder: "Deneme"
          }, function(provided, snapshot) {
            return React62.createElement("div", {
              ref: provided.innerRef,
              style: _this2.getListStyle(snapshot.isDraggingOver)
            }, _this2.props.groupColumns.length > 0 && React62.createElement(_Typography.default, {
              variant: "caption",
              style: {
                padding: 8
              }
            }, _this2.props.localization.groupedBy), _this2.props.groupColumns.map(function(columnDef, index2) {
              return React62.createElement(_reactBeautifulDnd.Draggable, {
                key: columnDef.tableData.id,
                draggableId: columnDef.tableData.id.toString(),
                index: index2
              }, function(provided2, snapshot2) {
                return React62.createElement("div", (0, _extends2.default)({
                  ref: provided2.innerRef
                }, provided2.draggableProps, provided2.dragHandleProps, {
                  style: _this2.getItemStyle(snapshot2.isDragging, provided2.draggableProps.style)
                }), React62.createElement(_Chip.default, (0, _extends2.default)({}, provided2.dragHandleProps, {
                  onClick: function onClick() {
                    return _this2.props.onSortChanged(columnDef);
                  },
                  label: React62.createElement("div", {
                    style: {
                      display: "flex",
                      alignItems: "center"
                    }
                  }, React62.createElement("div", {
                    style: {
                      float: "left"
                    }
                  }, columnDef.title), columnDef.tableData.groupSort && React62.createElement(_this2.props.icons.SortArrow, {
                    style: {
                      transition: "300ms ease all",
                      transform: columnDef.tableData.groupSort === "asc" ? "rotate(-180deg)" : "none",
                      fontSize: 18
                    }
                  })),
                  style: {
                    boxShadow: "none",
                    textTransform: "none"
                  },
                  onDelete: function onDelete() {
                    return _this2.props.onGroupRemoved(columnDef, index2);
                  }
                })));
              });
            }), _this2.props.groupColumns.length === 0 && React62.createElement(_Typography.default, {
              variant: "caption",
              style: {
                padding: 8
              }
            }, _this2.props.localization.placeholder), provided.placeholder);
          }));
        }
      }]);
      return MTableGroupbar2;
    }(React62.Component);
    MTableGroupbar.defaultProps = {};
    MTableGroupbar.propTypes = {
      localization: _propTypes.default.shape({
        groupedBy: _propTypes.default.string,
        placeholder: _propTypes.default.string
      })
    };
    var _default = MTableGroupbar;
    exports.default = _default;
  }
});

// node_modules/material-table/dist/components/m-table-group-row.js
var require_m_table_group_row = __commonJS({
  "node_modules/material-table/dist/components/m-table-group-row.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _toConsumableArray2 = _interopRequireDefault(require_toConsumableArray());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _TableCell = _interopRequireDefault((init_TableCell(), __toCommonJS(TableCell_exports)));
    var _TableRow = _interopRequireDefault((init_TableRow(), __toCommonJS(TableRow_exports)));
    var _IconButton = _interopRequireDefault((init_IconButton(), __toCommonJS(IconButton_exports)));
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var React62 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTableGroupRow = function(_React$Component) {
      (0, _inherits2.default)(MTableGroupRow2, _React$Component);
      var _super = _createSuper(MTableGroupRow2);
      function MTableGroupRow2() {
        var _this;
        (0, _classCallCheck2.default)(this, MTableGroupRow2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rotateIconStyle", function(isOpen) {
          return {
            transform: isOpen ? "rotate(90deg)" : "none"
          };
        });
        return _this;
      }
      (0, _createClass2.default)(MTableGroupRow2, [{
        key: "render",
        value: function render() {
          var _this2 = this;
          var colSpan = this.props.columns.filter(function(columnDef) {
            return !columnDef.hidden;
          }).length;
          this.props.options.selection && colSpan++;
          this.props.detailPanel && colSpan++;
          this.props.actions && this.props.actions.length > 0 && colSpan++;
          var column = this.props.groups[this.props.level];
          var detail;
          if (this.props.groupData.isExpanded) {
            if (this.props.groups.length > this.props.level + 1) {
              detail = this.props.groupData.groups.map(function(groupData, index2) {
                return React62.createElement(_this2.props.components.GroupRow, {
                  actions: _this2.props.actions,
                  key: groupData.value || "" + index2,
                  columns: _this2.props.columns,
                  components: _this2.props.components,
                  detailPanel: _this2.props.detailPanel,
                  getFieldValue: _this2.props.getFieldValue,
                  groupData,
                  groups: _this2.props.groups,
                  icons: _this2.props.icons,
                  level: _this2.props.level + 1,
                  path: [].concat((0, _toConsumableArray2.default)(_this2.props.path), [index2]),
                  onGroupExpandChanged: _this2.props.onGroupExpandChanged,
                  onRowSelected: _this2.props.onRowSelected,
                  onRowClick: _this2.props.onRowClick,
                  onToggleDetailPanel: _this2.props.onToggleDetailPanel,
                  onTreeExpandChanged: _this2.props.onTreeExpandChanged,
                  onEditingCanceled: _this2.props.onEditingCanceled,
                  onEditingApproved: _this2.props.onEditingApproved,
                  options: _this2.props.options,
                  hasAnyEditingRow: _this2.props.hasAnyEditingRow,
                  isTreeData: _this2.props.isTreeData,
                  cellEditable: _this2.props.cellEditable,
                  onCellEditStarted: _this2.props.onCellEditStarted,
                  onCellEditFinished: _this2.props.onCellEditFinished,
                  scrollWidth: _this2.props.scrollWidth
                });
              });
            } else {
              detail = this.props.groupData.data.map(function(rowData, index2) {
                if (rowData.tableData.editing) {
                  return React62.createElement(_this2.props.components.EditRow, {
                    columns: _this2.props.columns,
                    components: _this2.props.components,
                    data: rowData,
                    icons: _this2.props.icons,
                    path: [].concat((0, _toConsumableArray2.default)(_this2.props.path), [index2]),
                    localization: _this2.props.localization,
                    key: index2,
                    mode: rowData.tableData.editing,
                    options: _this2.props.options,
                    isTreeData: _this2.props.isTreeData,
                    detailPanel: _this2.props.detailPanel,
                    onEditingCanceled: _this2.props.onEditingCanceled,
                    onEditingApproved: _this2.props.onEditingApproved,
                    getFieldValue: _this2.props.getFieldValue,
                    onBulkEditRowChanged: _this2.props.onBulkEditRowChanged,
                    scrollWidth: _this2.props.scrollWidth
                  });
                } else {
                  return React62.createElement(_this2.props.components.Row, {
                    actions: _this2.props.actions,
                    key: index2,
                    columns: _this2.props.columns,
                    components: _this2.props.components,
                    data: rowData,
                    detailPanel: _this2.props.detailPanel,
                    getFieldValue: _this2.props.getFieldValue,
                    icons: _this2.props.icons,
                    path: [].concat((0, _toConsumableArray2.default)(_this2.props.path), [index2]),
                    onRowSelected: _this2.props.onRowSelected,
                    onRowClick: _this2.props.onRowClick,
                    onToggleDetailPanel: _this2.props.onToggleDetailPanel,
                    options: _this2.props.options,
                    isTreeData: _this2.props.isTreeData,
                    onTreeExpandChanged: _this2.props.onTreeExpandChanged,
                    onEditingCanceled: _this2.props.onEditingCanceled,
                    onEditingApproved: _this2.props.onEditingApproved,
                    hasAnyEditingRow: _this2.props.hasAnyEditingRow,
                    cellEditable: _this2.props.cellEditable,
                    onCellEditStarted: _this2.props.onCellEditStarted,
                    onCellEditFinished: _this2.props.onCellEditFinished,
                    scrollWidth: _this2.props.scrollWidth
                  });
                }
              });
            }
          }
          var freeCells = [];
          for (var i2 = 0; i2 < this.props.level; i2++) {
            freeCells.push(React62.createElement(_TableCell.default, {
              padding: "checkbox",
              key: i2
            }));
          }
          var value = this.props.groupData.value;
          if (column.lookup) {
            value = column.lookup[value];
          }
          var title = column.title;
          if (typeof this.props.options.groupTitle === "function") {
            title = this.props.options.groupTitle(this.props.groupData);
          } else if (typeof title !== "string") {
            title = React62.cloneElement(title);
          }
          var separator = this.props.options.groupRowSeparator || ": ";
          return React62.createElement(React62.Fragment, null, React62.createElement(_TableRow.default, null, freeCells, React62.createElement(this.props.components.Cell, {
            colSpan,
            padding: "none",
            columnDef: column,
            value,
            icons: this.props.icons
          }, React62.createElement(_IconButton.default, {
            style: (0, _objectSpread22.default)({
              transition: "all ease 200ms"
            }, this.rotateIconStyle(this.props.groupData.isExpanded)),
            onClick: function onClick(event) {
              _this2.props.onGroupExpandChanged(_this2.props.path);
            },
            size: "large"
          }, React62.createElement(this.props.icons.DetailPanel, null)), React62.createElement("b", null, title, separator))), detail);
        }
      }]);
      return MTableGroupRow2;
    }(React62.Component);
    exports.default = MTableGroupRow;
    MTableGroupRow.defaultProps = {
      columns: [],
      groups: [],
      options: {},
      level: 0
    };
    MTableGroupRow.propTypes = {
      actions: _propTypes.default.array,
      columns: _propTypes.default.arrayOf(_propTypes.default.object),
      components: _propTypes.default.object,
      detailPanel: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.arrayOf(_propTypes.default.object)]),
      getFieldValue: _propTypes.default.func,
      groupData: _propTypes.default.object,
      groups: _propTypes.default.arrayOf(_propTypes.default.object),
      hasAnyEditingRow: _propTypes.default.bool,
      icons: _propTypes.default.object,
      isTreeData: _propTypes.default.bool.isRequired,
      level: _propTypes.default.number,
      localization: _propTypes.default.object,
      onGroupExpandChanged: _propTypes.default.func,
      onRowSelected: _propTypes.default.func,
      onRowClick: _propTypes.default.func,
      onToggleDetailPanel: _propTypes.default.func.isRequired,
      onTreeExpandChanged: _propTypes.default.func.isRequired,
      onEditingCanceled: _propTypes.default.func,
      onEditingApproved: _propTypes.default.func,
      options: _propTypes.default.object,
      path: _propTypes.default.arrayOf(_propTypes.default.number),
      scrollWidth: _propTypes.default.number.isRequired,
      cellEditable: _propTypes.default.object,
      onCellEditStarted: _propTypes.default.func,
      onCellEditFinished: _propTypes.default.func,
      onBulkEditRowChanged: _propTypes.default.func
    };
  }
});

// node_modules/date-fns/esm/constants/index.js
var maxTime, millisecondsInMinute, millisecondsInHour, minTime;
var init_constants = __esm({
  "node_modules/date-fns/esm/constants/index.js"() {
    maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
    millisecondsInMinute = 6e4;
    millisecondsInHour = 36e5;
    minTime = -maxTime;
  }
});

// node_modules/date-fns/esm/_lib/requiredArgs/index.js
function requiredArgs(required2, args) {
  if (args.length < required2) {
    throw new TypeError(required2 + " argument" + (required2 > 1 ? "s" : "") + " required, but only " + args.length + " present");
  }
}
var init_requiredArgs = __esm({
  "node_modules/date-fns/esm/_lib/requiredArgs/index.js"() {
  }
});

// node_modules/date-fns/esm/_lib/toInteger/index.js
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}
var init_toInteger = __esm({
  "node_modules/date-fns/esm/_lib/toInteger/index.js"() {
  }
});

// node_modules/date-fns/esm/parseISO/index.js
var parseISO_exports = {};
__export(parseISO_exports, {
  default: () => parseISO
});
function parseISO(argument, dirtyOptions) {
  requiredArgs(1, arguments);
  var options = dirtyOptions || {};
  var additionalDigits = options.additionalDigits == null ? 2 : toInteger(options.additionalDigits);
  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  }
  if (!(typeof argument === "string" || Object.prototype.toString.call(argument) === "[object String]")) {
    return /* @__PURE__ */ new Date(NaN);
  }
  var dateStrings = splitDateString(argument);
  var date;
  if (dateStrings.date) {
    var parseYearResult = parseYear(dateStrings.date, additionalDigits);
    date = parseDate(parseYearResult.restDateString, parseYearResult.year);
  }
  if (!date || isNaN(date.getTime())) {
    return /* @__PURE__ */ new Date(NaN);
  }
  var timestamp = date.getTime();
  var time = 0;
  var offset3;
  if (dateStrings.time) {
    time = parseTime(dateStrings.time);
    if (isNaN(time)) {
      return /* @__PURE__ */ new Date(NaN);
    }
  }
  if (dateStrings.timezone) {
    offset3 = parseTimezone(dateStrings.timezone);
    if (isNaN(offset3)) {
      return /* @__PURE__ */ new Date(NaN);
    }
  } else {
    var dirtyDate = new Date(timestamp + time);
    var result = /* @__PURE__ */ new Date(0);
    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());
    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
    return result;
  }
  return new Date(timestamp + time + offset3);
}
function splitDateString(dateString) {
  var dateStrings = {};
  var array = dateString.split(patterns.dateTimeDelimiter);
  var timeString;
  if (array.length > 2) {
    return dateStrings;
  }
  if (/:/.test(array[0])) {
    timeString = array[0];
  } else {
    dateStrings.date = array[0];
    timeString = array[1];
    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
      timeString = dateString.substr(dateStrings.date.length, dateString.length);
    }
  }
  if (timeString) {
    var token = patterns.timezone.exec(timeString);
    if (token) {
      dateStrings.time = timeString.replace(token[1], "");
      dateStrings.timezone = token[1];
    } else {
      dateStrings.time = timeString;
    }
  }
  return dateStrings;
}
function parseYear(dateString, additionalDigits) {
  var regex = new RegExp("^(?:(\\d{4}|[+-]\\d{" + (4 + additionalDigits) + "})|(\\d{2}|[+-]\\d{" + (2 + additionalDigits) + "})$)");
  var captures = dateString.match(regex);
  if (!captures)
    return {
      year: NaN,
      restDateString: ""
    };
  var year = captures[1] ? parseInt(captures[1]) : null;
  var century = captures[2] ? parseInt(captures[2]) : null;
  return {
    year: century === null ? year : century * 100,
    restDateString: dateString.slice((captures[1] || captures[2]).length)
  };
}
function parseDate(dateString, year) {
  if (year === null)
    return /* @__PURE__ */ new Date(NaN);
  var captures = dateString.match(dateRegex);
  if (!captures)
    return /* @__PURE__ */ new Date(NaN);
  var isWeekDate = !!captures[4];
  var dayOfYear = parseDateUnit(captures[1]);
  var month = parseDateUnit(captures[2]) - 1;
  var day = parseDateUnit(captures[3]);
  var week = parseDateUnit(captures[4]);
  var dayOfWeek = parseDateUnit(captures[5]) - 1;
  if (isWeekDate) {
    if (!validateWeekDate(year, week, dayOfWeek)) {
      return /* @__PURE__ */ new Date(NaN);
    }
    return dayOfISOWeekYear(year, week, dayOfWeek);
  } else {
    var date = /* @__PURE__ */ new Date(0);
    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
      return /* @__PURE__ */ new Date(NaN);
    }
    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
    return date;
  }
}
function parseDateUnit(value) {
  return value ? parseInt(value) : 1;
}
function parseTime(timeString) {
  var captures = timeString.match(timeRegex);
  if (!captures)
    return NaN;
  var hours = parseTimeUnit(captures[1]);
  var minutes = parseTimeUnit(captures[2]);
  var seconds = parseTimeUnit(captures[3]);
  if (!validateTime(hours, minutes, seconds)) {
    return NaN;
  }
  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1e3;
}
function parseTimeUnit(value) {
  return value && parseFloat(value.replace(",", ".")) || 0;
}
function parseTimezone(timezoneString) {
  if (timezoneString === "Z")
    return 0;
  var captures = timezoneString.match(timezoneRegex);
  if (!captures)
    return 0;
  var sign = captures[1] === "+" ? -1 : 1;
  var hours = parseInt(captures[2]);
  var minutes = captures[3] && parseInt(captures[3]) || 0;
  if (!validateTimezone(hours, minutes)) {
    return NaN;
  }
  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);
}
function dayOfISOWeekYear(isoWeekYear, week, day) {
  var date = /* @__PURE__ */ new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  var fourthOfJanuaryDay = date.getUTCDay() || 7;
  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}
function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
function validateDate(year, month, date) {
  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
}
function validateDayOfYearDate(year, dayOfYear) {
  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
}
function validateWeekDate(_year, week, day) {
  return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}
function validateTime(hours, minutes, seconds) {
  if (hours === 24) {
    return minutes === 0 && seconds === 0;
  }
  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
}
function validateTimezone(_hours, minutes) {
  return minutes >= 0 && minutes <= 59;
}
var patterns, dateRegex, timeRegex, timezoneRegex, daysInMonths;
var init_parseISO = __esm({
  "node_modules/date-fns/esm/parseISO/index.js"() {
    init_constants();
    init_requiredArgs();
    init_toInteger();
    patterns = {
      dateTimeDelimiter: /[T ]/,
      timeZoneDelimiter: /[Z ]/i,
      timezone: /([Z+-].*)$/
    };
    dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
    timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
    timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
    daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  }
});

// node_modules/material-table/dist/components/m-table-cell.js
var require_m_table_cell = __commonJS({
  "node_modules/material-table/dist/components/m-table-cell.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _extends2 = _interopRequireDefault(require_extends());
    var _objectWithoutProperties2 = _interopRequireDefault(require_objectWithoutProperties());
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var React62 = _interopRequireWildcard(require_react());
    var _TableCell = _interopRequireDefault((init_TableCell(), __toCommonJS(TableCell_exports)));
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var _parseISO = _interopRequireDefault((init_parseISO(), __toCommonJS(parseISO_exports)));
    var CommonValues = _interopRequireWildcard(require_common_values());
    var _excluded21 = ["icons", "columnDef", "rowData", "errorState", "cellEditable", "onCellEditStarted", "scrollWidth"];
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var isoDateRegex = /^\d{4}-(0[1-9]|1[0-2])-([12]\d|0[1-9]|3[01])([T\s](([01]\d|2[0-3])\:[0-5]\d|24\:00)(\:[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3])\:?([0-5]\d)?)?)?$/;
    var MTableCell = function(_React$Component) {
      (0, _inherits2.default)(MTableCell2, _React$Component);
      var _super = _createSuper(MTableCell2);
      function MTableCell2() {
        var _this;
        (0, _classCallCheck2.default)(this, MTableCell2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleClickCell", function(e2) {
          if (_this.props.columnDef.disableClick) {
            e2.stopPropagation();
          }
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getStyle", function() {
          var width = CommonValues.reducePercentsInCalc(_this.props.columnDef.tableData.width, _this.props.scrollWidth);
          var cellStyle = {
            color: "inherit",
            width,
            maxWidth: _this.props.columnDef.maxWidth,
            minWidth: _this.props.columnDef.minWidth,
            boxSizing: "border-box",
            fontSize: "inherit",
            fontFamily: "inherit",
            fontWeight: "inherit"
          };
          if (typeof _this.props.columnDef.cellStyle === "function") {
            cellStyle = (0, _objectSpread22.default)({}, cellStyle, _this.props.columnDef.cellStyle(_this.props.value, _this.props.rowData));
          } else {
            cellStyle = (0, _objectSpread22.default)({}, cellStyle, _this.props.columnDef.cellStyle);
          }
          if (_this.props.columnDef.disableClick) {
            cellStyle.cursor = "default";
          }
          return (0, _objectSpread22.default)({}, _this.props.style, cellStyle);
        });
        return _this;
      }
      (0, _createClass2.default)(MTableCell2, [{
        key: "getRenderValue",
        value: function getRenderValue() {
          var dateLocale = this.props.columnDef.dateSetting && this.props.columnDef.dateSetting.locale ? this.props.columnDef.dateSetting.locale : void 0;
          if (this.props.columnDef.emptyValue !== void 0 && (this.props.value === void 0 || this.props.value === null)) {
            return this.getEmptyValue(this.props.columnDef.emptyValue);
          }
          if (this.props.columnDef.render) {
            if (this.props.rowData) {
              return this.props.columnDef.render(this.props.rowData, "row");
            } else if (this.props.value) {
              return this.props.columnDef.render(this.props.value, "group");
            }
          } else if (this.props.columnDef.type === "boolean") {
            var style2 = {
              textAlign: "left",
              verticalAlign: "middle",
              width: 48
            };
            if (this.props.value) {
              return React62.createElement(this.props.icons.Check, {
                style: style2
              });
            } else {
              return React62.createElement(this.props.icons.ThirdStateCheck, {
                style: style2
              });
            }
          } else if (this.props.columnDef.type === "date") {
            if (this.props.value instanceof Date) {
              return this.props.value.toLocaleDateString(dateLocale);
            } else if (isoDateRegex.exec(this.props.value)) {
              return (0, _parseISO.default)(this.props.value).toLocaleDateString(dateLocale);
            } else {
              return this.props.value;
            }
          } else if (this.props.columnDef.type === "time") {
            if (this.props.value instanceof Date) {
              return this.props.value.toLocaleTimeString();
            } else if (isoDateRegex.exec(this.props.value)) {
              return (0, _parseISO.default)(this.props.value).toLocaleTimeString(dateLocale);
            } else {
              return this.props.value;
            }
          } else if (this.props.columnDef.type === "datetime") {
            if (this.props.value instanceof Date) {
              return this.props.value.toLocaleString();
            } else if (isoDateRegex.exec(this.props.value)) {
              return (0, _parseISO.default)(this.props.value).toLocaleString(dateLocale);
            } else {
              return this.props.value;
            }
          } else if (this.props.columnDef.type === "currency") {
            return this.getCurrencyValue(this.props.columnDef.currencySetting, this.props.value);
          } else if (typeof this.props.value === "boolean") {
            return this.props.value.toString();
          }
          return this.props.value;
        }
      }, {
        key: "getEmptyValue",
        value: function getEmptyValue(emptyValue) {
          if (typeof emptyValue === "function") {
            return this.props.columnDef.emptyValue(this.props.rowData);
          } else {
            return emptyValue;
          }
        }
      }, {
        key: "getCurrencyValue",
        value: function getCurrencyValue(currencySetting, value) {
          if (currencySetting !== void 0) {
            return new Intl.NumberFormat(currencySetting.locale !== void 0 ? currencySetting.locale : "en-US", {
              style: "currency",
              currency: currencySetting.currencyCode !== void 0 ? currencySetting.currencyCode : "USD",
              minimumFractionDigits: currencySetting.minimumFractionDigits !== void 0 ? currencySetting.minimumFractionDigits : 2,
              maximumFractionDigits: currencySetting.maximumFractionDigits !== void 0 ? currencySetting.maximumFractionDigits : 2
            }).format(value !== void 0 ? value : 0);
          } else {
            return new Intl.NumberFormat("en-US", {
              style: "currency",
              currency: "USD"
            }).format(value !== void 0 ? value : 0);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _this$props = this.props, icons = _this$props.icons, columnDef = _this$props.columnDef, rowData = _this$props.rowData, errorState = _this$props.errorState, cellEditable = _this$props.cellEditable, onCellEditStarted = _this$props.onCellEditStarted, scrollWidth = _this$props.scrollWidth, cellProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded21);
          var cellAlignment = columnDef.align !== void 0 ? columnDef.align : ["numeric", "currency"].indexOf(this.props.columnDef.type) !== -1 ? "right" : "left";
          var renderValue = this.getRenderValue();
          if (cellEditable) {
            renderValue = React62.createElement("div", {
              style: {
                borderBottom: "1px dashed grey",
                cursor: "pointer",
                width: "max-content"
              },
              onClick: function onClick(e2) {
                e2.stopPropagation();
                onCellEditStarted(_this2.props.rowData, _this2.props.columnDef);
              }
            }, renderValue);
          }
          return React62.createElement(_TableCell.default, (0, _extends2.default)({
            size: this.props.size
          }, cellProps, {
            style: this.getStyle(),
            align: cellAlignment,
            onClick: this.handleClickCell
          }), this.props.children, renderValue);
        }
      }]);
      return MTableCell2;
    }(React62.Component);
    exports.default = MTableCell;
    MTableCell.defaultProps = {
      columnDef: {},
      value: void 0
    };
    MTableCell.propTypes = {
      columnDef: _propTypes.default.object.isRequired,
      value: _propTypes.default.any,
      rowData: _propTypes.default.object,
      errorState: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.bool])
    };
  }
});

// node_modules/@mui/styles/createGenerateClassName/createGenerateClassName.js
function createGenerateClassName(options = {}) {
  const {
    disableGlobal = false,
    productionPrefix = "jss",
    seed = ""
  } = options;
  const seedPrefix = seed === "" ? "" : `${seed}-`;
  let ruleCounter = 0;
  const getNextCounterId = () => {
    ruleCounter += 1;
    if (true) {
      if (ruleCounter >= 1e10) {
        console.warn(["MUI: You might have a memory leak.", "The ruleCounter is not supposed to grow that much."].join(""));
      }
    }
    return ruleCounter;
  };
  return (rule, styleSheet) => {
    const name = styleSheet.options.name;
    if (name && name.indexOf("Mui") === 0 && !styleSheet.options.link && !disableGlobal) {
      if (stateClasses.indexOf(rule.key) !== -1) {
        return `Mui-${rule.key}`;
      }
      const prefix4 = `${seedPrefix}${name}-${rule.key}`;
      if (!styleSheet.options.theme[nested_default] || seed !== "") {
        return prefix4;
      }
      return `${prefix4}-${getNextCounterId()}`;
    }
    if (false) {
      return `${seedPrefix}${productionPrefix}${getNextCounterId()}`;
    }
    const suffix2 = `${rule.key}-${getNextCounterId()}`;
    if (styleSheet.options.classNamePrefix) {
      return `${seedPrefix}${styleSheet.options.classNamePrefix}-${suffix2}`;
    }
    return `${seedPrefix}${suffix2}`;
  };
}
var stateClasses;
var init_createGenerateClassName = __esm({
  "node_modules/@mui/styles/createGenerateClassName/createGenerateClassName.js"() {
    init_ThemeProvider();
    stateClasses = ["checked", "disabled", "error", "focused", "focusVisible", "required", "expanded", "selected"];
  }
});

// node_modules/@mui/styles/createGenerateClassName/index.js
var init_createGenerateClassName2 = __esm({
  "node_modules/@mui/styles/createGenerateClassName/index.js"() {
    init_createGenerateClassName();
  }
});

// node_modules/@mui/styles/createStyles/createStyles.js
function createStyles(styles) {
  return styles;
}
var init_createStyles = __esm({
  "node_modules/@mui/styles/createStyles/createStyles.js"() {
  }
});

// node_modules/@mui/styles/createStyles/index.js
var init_createStyles2 = __esm({
  "node_modules/@mui/styles/createStyles/index.js"() {
    init_createStyles();
  }
});

// node_modules/@mui/styles/getThemeProps/getThemeProps.js
function getThemeProps(params) {
  const {
    theme,
    name,
    props
  } = params;
  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {
    return props;
  }
  const output = _extends({}, props);
  const defaultProps2 = theme.components[name].defaultProps;
  let propName;
  for (propName in defaultProps2) {
    if (output[propName] === void 0) {
      output[propName] = defaultProps2[propName];
    }
  }
  return output;
}
var init_getThemeProps = __esm({
  "node_modules/@mui/styles/getThemeProps/getThemeProps.js"() {
    init_extends();
  }
});

// node_modules/@mui/styles/getThemeProps/index.js
var init_getThemeProps2 = __esm({
  "node_modules/@mui/styles/getThemeProps/index.js"() {
    init_getThemeProps();
  }
});

// node_modules/tiny-warning/dist/tiny-warning.esm.js
function warning3(condition, message) {
  if (!isProduction3) {
    if (condition) {
      return;
    }
    var text = "Warning: " + message;
    if (typeof console !== "undefined") {
      console.warn(text);
    }
    try {
      throw Error(text);
    } catch (x2) {
    }
  }
}
var isProduction3, tiny_warning_esm_default;
var init_tiny_warning_esm = __esm({
  "node_modules/tiny-warning/dist/tiny-warning.esm.js"() {
    isProduction3 = false;
    tiny_warning_esm_default = warning3;
  }
});

// node_modules/is-in-browser/dist/module.js
var _typeof, isBrowser, module_default;
var init_module = __esm({
  "node_modules/is-in-browser/dist/module.js"() {
    _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === "object" && document.nodeType === 9;
    module_default = isBrowser;
  }
});

// node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
var init_createClass = __esm({
  "node_modules/@babel/runtime/helpers/esm/createClass.js"() {
    init_toPropertyKey();
  }
});

// node_modules/jss/dist/jss.esm.js
function cloneStyle(style2) {
  if (style2 == null || typeof style2 !== "object")
    return style2;
  if (Array.isArray(style2))
    return style2.map(cloneStyle);
  if (style2.constructor !== plainObjectConstrurctor)
    return style2;
  var newStyle = {};
  for (var name in style2) {
    newStyle[name] = cloneStyle(style2[name]);
  }
  return newStyle;
}
function createRule(name, decl, options) {
  if (name === void 0) {
    name = "unnamed";
  }
  var jss = options.jss;
  var declCopy = cloneStyle(decl);
  var rule = jss.plugins.onCreateRule(name, declCopy, options);
  if (rule)
    return rule;
  if (name[0] === "@") {
    true ? tiny_warning_esm_default(false, "[JSS] Unknown rule " + name) : void 0;
  }
  return null;
}
function getWhitespaceSymbols(options) {
  if (options && options.format === false) {
    return {
      linebreak: "",
      space: ""
    };
  }
  return {
    linebreak: "\n",
    space: " "
  };
}
function indentStr(str, indent) {
  var result = "";
  for (var index2 = 0; index2 < indent; index2++) {
    result += "  ";
  }
  return result + str;
}
function toCss(selector, style2, options) {
  if (options === void 0) {
    options = {};
  }
  var result = "";
  if (!style2)
    return result;
  var _options = options, _options$indent = _options.indent, indent = _options$indent === void 0 ? 0 : _options$indent;
  var fallbacks = style2.fallbacks;
  if (options.format === false) {
    indent = -Infinity;
  }
  var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak, space2 = _getWhitespaceSymbols.space;
  if (selector)
    indent++;
  if (fallbacks) {
    if (Array.isArray(fallbacks)) {
      for (var index2 = 0; index2 < fallbacks.length; index2++) {
        var fallback = fallbacks[index2];
        for (var prop in fallback) {
          var value = fallback[prop];
          if (value != null) {
            if (result)
              result += linebreak;
            result += indentStr(prop + ":" + space2 + toCssValue(value) + ";", indent);
          }
        }
      }
    } else {
      for (var _prop in fallbacks) {
        var _value = fallbacks[_prop];
        if (_value != null) {
          if (result)
            result += linebreak;
          result += indentStr(_prop + ":" + space2 + toCssValue(_value) + ";", indent);
        }
      }
    }
  }
  for (var _prop2 in style2) {
    var _value2 = style2[_prop2];
    if (_value2 != null && _prop2 !== "fallbacks") {
      if (result)
        result += linebreak;
      result += indentStr(_prop2 + ":" + space2 + toCssValue(_value2) + ";", indent);
    }
  }
  if (!result && !options.allowEmpty)
    return result;
  if (!selector)
    return result;
  indent--;
  if (result)
    result = "" + linebreak + result + linebreak;
  return indentStr("" + selector + space2 + "{" + result, indent) + indentStr("}", indent);
}
function findHigherSheet(registry, options) {
  for (var i2 = 0; i2 < registry.length; i2++) {
    var sheet = registry[i2];
    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }
  return null;
}
function findHighestSheet(registry, options) {
  for (var i2 = registry.length - 1; i2 >= 0; i2--) {
    var sheet = registry[i2];
    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }
  return null;
}
function findCommentNode(text) {
  var head = getHead3();
  for (var i2 = 0; i2 < head.childNodes.length; i2++) {
    var node = head.childNodes[i2];
    if (node.nodeType === 8 && node.nodeValue.trim() === text) {
      return node;
    }
  }
  return null;
}
function findPrevNode(options) {
  var registry = sheets.registry;
  if (registry.length > 0) {
    var sheet = findHigherSheet(registry, options);
    if (sheet && sheet.renderer) {
      return {
        parent: sheet.renderer.element.parentNode,
        node: sheet.renderer.element
      };
    }
    sheet = findHighestSheet(registry, options);
    if (sheet && sheet.renderer) {
      return {
        parent: sheet.renderer.element.parentNode,
        node: sheet.renderer.element.nextSibling
      };
    }
  }
  var insertionPoint = options.insertionPoint;
  if (insertionPoint && typeof insertionPoint === "string") {
    var comment = findCommentNode(insertionPoint);
    if (comment) {
      return {
        parent: comment.parentNode,
        node: comment.nextSibling
      };
    }
    true ? tiny_warning_esm_default(false, '[JSS] Insertion point "' + insertionPoint + '" not found.') : void 0;
  }
  return false;
}
function insertStyle(style2, options) {
  var insertionPoint = options.insertionPoint;
  var nextNode = findPrevNode(options);
  if (nextNode !== false && nextNode.parent) {
    nextNode.parent.insertBefore(style2, nextNode.node);
    return;
  }
  if (insertionPoint && typeof insertionPoint.nodeType === "number") {
    var insertionPointElement = insertionPoint;
    var parentNode = insertionPointElement.parentNode;
    if (parentNode)
      parentNode.insertBefore(style2, insertionPointElement.nextSibling);
    else
      true ? tiny_warning_esm_default(false, "[JSS] Insertion point is not in the DOM.") : void 0;
    return;
  }
  getHead3().appendChild(style2);
}
function getDynamicStyles(styles) {
  var to = null;
  for (var key in styles) {
    var value = styles[key];
    var type = typeof value;
    if (type === "function") {
      if (!to)
        to = {};
      to[key] = value;
    } else if (type === "object" && value !== null && !Array.isArray(value)) {
      var extracted = getDynamicStyles(value);
      if (extracted) {
        if (!to)
          to = {};
        to[key] = extracted;
      }
    }
  }
  return to;
}
var plainObjectConstrurctor, join, toCssValue, escapeRegex, nativeEscape, escape2, BaseStyleRule, StyleRule, pluginStyleRule, defaultToStringOptions, atRegExp, ConditionalRule, keyRegExp, pluginConditionalRule, defaultToStringOptions$1, nameRegExp, KeyframesRule, keyRegExp$1, refRegExp, findReferencedKeyframe, replaceRef, pluginKeyframesRule, KeyframeRule, pluginKeyframeRule, FontFaceRule, keyRegExp$2, pluginFontFaceRule, ViewportRule, pluginViewportRule, SimpleRule, keysMap, pluginSimpleRule, plugins, defaultUpdateOptions, forceUpdateOptions, RuleList, StyleSheet, PluginsRegistry, SheetsRegistry, sheets, globalThis$1, ns, moduleId, maxRules, createGenerateId, memoize, getPropertyValue, setProperty, removeProperty, setSelector, getHead3, getNonce, _insertRule, getValidRuleInsertionIndex, createStyle, DomRenderer, instanceCounter, Jss, createJss, SheetsManager, hasCSSTOMSupport, index;
var init_jss_esm = __esm({
  "node_modules/jss/dist/jss.esm.js"() {
    init_extends();
    init_module();
    init_tiny_warning_esm();
    init_createClass();
    init_inheritsLoose();
    init_assertThisInitialized();
    init_objectWithoutPropertiesLoose();
    plainObjectConstrurctor = {}.constructor;
    join = function join2(value, by) {
      var result = "";
      for (var i2 = 0; i2 < value.length; i2++) {
        if (value[i2] === "!important")
          break;
        if (result)
          result += by;
        result += value[i2];
      }
      return result;
    };
    toCssValue = function toCssValue2(value) {
      if (!Array.isArray(value))
        return value;
      var cssValue = "";
      if (Array.isArray(value[0])) {
        for (var i2 = 0; i2 < value.length; i2++) {
          if (value[i2] === "!important")
            break;
          if (cssValue)
            cssValue += ", ";
          cssValue += join(value[i2], " ");
        }
      } else
        cssValue = join(value, ", ");
      if (value[value.length - 1] === "!important") {
        cssValue += " !important";
      }
      return cssValue;
    };
    escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g;
    nativeEscape = typeof CSS !== "undefined" && CSS.escape;
    escape2 = function(str) {
      return nativeEscape ? nativeEscape(str) : str.replace(escapeRegex, "\\$1");
    };
    BaseStyleRule = function() {
      function BaseStyleRule2(key, style2, options) {
        this.type = "style";
        this.isProcessed = false;
        var sheet = options.sheet, Renderer = options.Renderer;
        this.key = key;
        this.options = options;
        this.style = style2;
        if (sheet)
          this.renderer = sheet.renderer;
        else if (Renderer)
          this.renderer = new Renderer();
      }
      var _proto = BaseStyleRule2.prototype;
      _proto.prop = function prop(name, value, options) {
        if (value === void 0)
          return this.style[name];
        var force = options ? options.force : false;
        if (!force && this.style[name] === value)
          return this;
        var newValue = value;
        if (!options || options.process !== false) {
          newValue = this.options.jss.plugins.onChangeValue(value, name, this);
        }
        var isEmpty2 = newValue == null || newValue === false;
        var isDefined = name in this.style;
        if (isEmpty2 && !isDefined && !force)
          return this;
        var remove = isEmpty2 && isDefined;
        if (remove)
          delete this.style[name];
        else
          this.style[name] = newValue;
        if (this.renderable && this.renderer) {
          if (remove)
            this.renderer.removeProperty(this.renderable, name);
          else
            this.renderer.setProperty(this.renderable, name, newValue);
          return this;
        }
        var sheet = this.options.sheet;
        if (sheet && sheet.attached) {
          true ? tiny_warning_esm_default(false, '[JSS] Rule is not linked. Missing sheet option "link: true".') : void 0;
        }
        return this;
      };
      return BaseStyleRule2;
    }();
    StyleRule = function(_BaseStyleRule) {
      _inheritsLoose(StyleRule2, _BaseStyleRule);
      function StyleRule2(key, style2, options) {
        var _this;
        _this = _BaseStyleRule.call(this, key, style2, options) || this;
        var selector = options.selector, scoped = options.scoped, sheet = options.sheet, generateId = options.generateId;
        if (selector) {
          _this.selectorText = selector;
        } else if (scoped !== false) {
          _this.id = generateId(_assertThisInitialized(_assertThisInitialized(_this)), sheet);
          _this.selectorText = "." + escape2(_this.id);
        }
        return _this;
      }
      var _proto2 = StyleRule2.prototype;
      _proto2.applyTo = function applyTo(renderable) {
        var renderer = this.renderer;
        if (renderer) {
          var json = this.toJSON();
          for (var prop in json) {
            renderer.setProperty(renderable, prop, json[prop]);
          }
        }
        return this;
      };
      _proto2.toJSON = function toJSON() {
        var json = {};
        for (var prop in this.style) {
          var value = this.style[prop];
          if (typeof value !== "object")
            json[prop] = value;
          else if (Array.isArray(value))
            json[prop] = toCssValue(value);
        }
        return json;
      };
      _proto2.toString = function toString2(options) {
        var sheet = this.options.sheet;
        var link = sheet ? sheet.options.link : false;
        var opts = link ? _extends({}, options, {
          allowEmpty: true
        }) : options;
        return toCss(this.selectorText, this.style, opts);
      };
      _createClass(StyleRule2, [{
        key: "selector",
        set: function set(selector) {
          if (selector === this.selectorText)
            return;
          this.selectorText = selector;
          var renderer = this.renderer, renderable = this.renderable;
          if (!renderable || !renderer)
            return;
          var hasChanged = renderer.setSelector(renderable, selector);
          if (!hasChanged) {
            renderer.replaceRule(renderable, this);
          }
        },
        get: function get2() {
          return this.selectorText;
        }
      }]);
      return StyleRule2;
    }(BaseStyleRule);
    pluginStyleRule = {
      onCreateRule: function onCreateRule(key, style2, options) {
        if (key[0] === "@" || options.parent && options.parent.type === "keyframes") {
          return null;
        }
        return new StyleRule(key, style2, options);
      }
    };
    defaultToStringOptions = {
      indent: 1,
      children: true
    };
    atRegExp = /@([\w-]+)/;
    ConditionalRule = function() {
      function ConditionalRule2(key, styles, options) {
        this.type = "conditional";
        this.isProcessed = false;
        this.key = key;
        var atMatch = key.match(atRegExp);
        this.at = atMatch ? atMatch[1] : "unknown";
        this.query = options.name || "@" + this.at;
        this.options = options;
        this.rules = new RuleList(_extends({}, options, {
          parent: this
        }));
        for (var name in styles) {
          this.rules.add(name, styles[name]);
        }
        this.rules.process();
      }
      var _proto = ConditionalRule2.prototype;
      _proto.getRule = function getRule(name) {
        return this.rules.get(name);
      };
      _proto.indexOf = function indexOf(rule) {
        return this.rules.indexOf(rule);
      };
      _proto.addRule = function addRule(name, style2, options) {
        var rule = this.rules.add(name, style2, options);
        if (!rule)
          return null;
        this.options.jss.plugins.onProcessRule(rule);
        return rule;
      };
      _proto.replaceRule = function replaceRule(name, style2, options) {
        var newRule = this.rules.replace(name, style2, options);
        if (newRule)
          this.options.jss.plugins.onProcessRule(newRule);
        return newRule;
      };
      _proto.toString = function toString2(options) {
        if (options === void 0) {
          options = defaultToStringOptions;
        }
        var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak;
        if (options.indent == null)
          options.indent = defaultToStringOptions.indent;
        if (options.children == null)
          options.children = defaultToStringOptions.children;
        if (options.children === false) {
          return this.query + " {}";
        }
        var children = this.rules.toString(options);
        return children ? this.query + " {" + linebreak + children + linebreak + "}" : "";
      };
      return ConditionalRule2;
    }();
    keyRegExp = /@container|@media|@supports\s+/;
    pluginConditionalRule = {
      onCreateRule: function onCreateRule2(key, styles, options) {
        return keyRegExp.test(key) ? new ConditionalRule(key, styles, options) : null;
      }
    };
    defaultToStringOptions$1 = {
      indent: 1,
      children: true
    };
    nameRegExp = /@keyframes\s+([\w-]+)/;
    KeyframesRule = function() {
      function KeyframesRule2(key, frames, options) {
        this.type = "keyframes";
        this.at = "@keyframes";
        this.isProcessed = false;
        var nameMatch = key.match(nameRegExp);
        if (nameMatch && nameMatch[1]) {
          this.name = nameMatch[1];
        } else {
          this.name = "noname";
          true ? tiny_warning_esm_default(false, "[JSS] Bad keyframes name " + key) : void 0;
        }
        this.key = this.type + "-" + this.name;
        this.options = options;
        var scoped = options.scoped, sheet = options.sheet, generateId = options.generateId;
        this.id = scoped === false ? this.name : escape2(generateId(this, sheet));
        this.rules = new RuleList(_extends({}, options, {
          parent: this
        }));
        for (var name in frames) {
          this.rules.add(name, frames[name], _extends({}, options, {
            parent: this
          }));
        }
        this.rules.process();
      }
      var _proto = KeyframesRule2.prototype;
      _proto.toString = function toString2(options) {
        if (options === void 0) {
          options = defaultToStringOptions$1;
        }
        var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak;
        if (options.indent == null)
          options.indent = defaultToStringOptions$1.indent;
        if (options.children == null)
          options.children = defaultToStringOptions$1.children;
        if (options.children === false) {
          return this.at + " " + this.id + " {}";
        }
        var children = this.rules.toString(options);
        if (children)
          children = "" + linebreak + children + linebreak;
        return this.at + " " + this.id + " {" + children + "}";
      };
      return KeyframesRule2;
    }();
    keyRegExp$1 = /@keyframes\s+/;
    refRegExp = /\$([\w-]+)/g;
    findReferencedKeyframe = function findReferencedKeyframe2(val, keyframes) {
      if (typeof val === "string") {
        return val.replace(refRegExp, function(match3, name) {
          if (name in keyframes) {
            return keyframes[name];
          }
          true ? tiny_warning_esm_default(false, '[JSS] Referenced keyframes rule "' + name + '" is not defined.') : void 0;
          return match3;
        });
      }
      return val;
    };
    replaceRef = function replaceRef2(style2, prop, keyframes) {
      var value = style2[prop];
      var refKeyframe = findReferencedKeyframe(value, keyframes);
      if (refKeyframe !== value) {
        style2[prop] = refKeyframe;
      }
    };
    pluginKeyframesRule = {
      onCreateRule: function onCreateRule3(key, frames, options) {
        return typeof key === "string" && keyRegExp$1.test(key) ? new KeyframesRule(key, frames, options) : null;
      },
      // Animation name ref replacer.
      onProcessStyle: function onProcessStyle(style2, rule, sheet) {
        if (rule.type !== "style" || !sheet)
          return style2;
        if ("animation-name" in style2)
          replaceRef(style2, "animation-name", sheet.keyframes);
        if ("animation" in style2)
          replaceRef(style2, "animation", sheet.keyframes);
        return style2;
      },
      onChangeValue: function onChangeValue(val, prop, rule) {
        var sheet = rule.options.sheet;
        if (!sheet) {
          return val;
        }
        switch (prop) {
          case "animation":
            return findReferencedKeyframe(val, sheet.keyframes);
          case "animation-name":
            return findReferencedKeyframe(val, sheet.keyframes);
          default:
            return val;
        }
      }
    };
    KeyframeRule = function(_BaseStyleRule) {
      _inheritsLoose(KeyframeRule2, _BaseStyleRule);
      function KeyframeRule2() {
        return _BaseStyleRule.apply(this, arguments) || this;
      }
      var _proto = KeyframeRule2.prototype;
      _proto.toString = function toString2(options) {
        var sheet = this.options.sheet;
        var link = sheet ? sheet.options.link : false;
        var opts = link ? _extends({}, options, {
          allowEmpty: true
        }) : options;
        return toCss(this.key, this.style, opts);
      };
      return KeyframeRule2;
    }(BaseStyleRule);
    pluginKeyframeRule = {
      onCreateRule: function onCreateRule4(key, style2, options) {
        if (options.parent && options.parent.type === "keyframes") {
          return new KeyframeRule(key, style2, options);
        }
        return null;
      }
    };
    FontFaceRule = function() {
      function FontFaceRule2(key, style2, options) {
        this.type = "font-face";
        this.at = "@font-face";
        this.isProcessed = false;
        this.key = key;
        this.style = style2;
        this.options = options;
      }
      var _proto = FontFaceRule2.prototype;
      _proto.toString = function toString2(options) {
        var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak;
        if (Array.isArray(this.style)) {
          var str = "";
          for (var index2 = 0; index2 < this.style.length; index2++) {
            str += toCss(this.at, this.style[index2]);
            if (this.style[index2 + 1])
              str += linebreak;
          }
          return str;
        }
        return toCss(this.at, this.style, options);
      };
      return FontFaceRule2;
    }();
    keyRegExp$2 = /@font-face/;
    pluginFontFaceRule = {
      onCreateRule: function onCreateRule5(key, style2, options) {
        return keyRegExp$2.test(key) ? new FontFaceRule(key, style2, options) : null;
      }
    };
    ViewportRule = function() {
      function ViewportRule2(key, style2, options) {
        this.type = "viewport";
        this.at = "@viewport";
        this.isProcessed = false;
        this.key = key;
        this.style = style2;
        this.options = options;
      }
      var _proto = ViewportRule2.prototype;
      _proto.toString = function toString2(options) {
        return toCss(this.key, this.style, options);
      };
      return ViewportRule2;
    }();
    pluginViewportRule = {
      onCreateRule: function onCreateRule6(key, style2, options) {
        return key === "@viewport" || key === "@-ms-viewport" ? new ViewportRule(key, style2, options) : null;
      }
    };
    SimpleRule = function() {
      function SimpleRule2(key, value, options) {
        this.type = "simple";
        this.isProcessed = false;
        this.key = key;
        this.value = value;
        this.options = options;
      }
      var _proto = SimpleRule2.prototype;
      _proto.toString = function toString2(options) {
        if (Array.isArray(this.value)) {
          var str = "";
          for (var index2 = 0; index2 < this.value.length; index2++) {
            str += this.key + " " + this.value[index2] + ";";
            if (this.value[index2 + 1])
              str += "\n";
          }
          return str;
        }
        return this.key + " " + this.value + ";";
      };
      return SimpleRule2;
    }();
    keysMap = {
      "@charset": true,
      "@import": true,
      "@namespace": true
    };
    pluginSimpleRule = {
      onCreateRule: function onCreateRule7(key, value, options) {
        return key in keysMap ? new SimpleRule(key, value, options) : null;
      }
    };
    plugins = [pluginStyleRule, pluginConditionalRule, pluginKeyframesRule, pluginKeyframeRule, pluginFontFaceRule, pluginViewportRule, pluginSimpleRule];
    defaultUpdateOptions = {
      process: true
    };
    forceUpdateOptions = {
      force: true,
      process: true
      /**
       * Contains rules objects and allows adding/removing etc.
       * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
       */
    };
    RuleList = function() {
      function RuleList2(options) {
        this.map = {};
        this.raw = {};
        this.index = [];
        this.counter = 0;
        this.options = options;
        this.classes = options.classes;
        this.keyframes = options.keyframes;
      }
      var _proto = RuleList2.prototype;
      _proto.add = function add3(name, decl, ruleOptions) {
        var _this$options = this.options, parent = _this$options.parent, sheet = _this$options.sheet, jss = _this$options.jss, Renderer = _this$options.Renderer, generateId = _this$options.generateId, scoped = _this$options.scoped;
        var options = _extends({
          classes: this.classes,
          parent,
          sheet,
          jss,
          Renderer,
          generateId,
          scoped,
          name,
          keyframes: this.keyframes,
          selector: void 0
        }, ruleOptions);
        var key = name;
        if (name in this.raw) {
          key = name + "-d" + this.counter++;
        }
        this.raw[key] = decl;
        if (key in this.classes) {
          options.selector = "." + escape2(this.classes[key]);
        }
        var rule = createRule(key, decl, options);
        if (!rule)
          return null;
        this.register(rule);
        var index2 = options.index === void 0 ? this.index.length : options.index;
        this.index.splice(index2, 0, rule);
        return rule;
      };
      _proto.replace = function replace(name, decl, ruleOptions) {
        var oldRule = this.get(name);
        var oldIndex = this.index.indexOf(oldRule);
        if (oldRule) {
          this.remove(oldRule);
        }
        var options = ruleOptions;
        if (oldIndex !== -1)
          options = _extends({}, ruleOptions, {
            index: oldIndex
          });
        return this.add(name, decl, options);
      };
      _proto.get = function get2(nameOrSelector) {
        return this.map[nameOrSelector];
      };
      _proto.remove = function remove(rule) {
        this.unregister(rule);
        delete this.raw[rule.key];
        this.index.splice(this.index.indexOf(rule), 1);
      };
      _proto.indexOf = function indexOf(rule) {
        return this.index.indexOf(rule);
      };
      _proto.process = function process2() {
        var plugins3 = this.options.jss.plugins;
        this.index.slice(0).forEach(plugins3.onProcessRule, plugins3);
      };
      _proto.register = function register(rule) {
        this.map[rule.key] = rule;
        if (rule instanceof StyleRule) {
          this.map[rule.selector] = rule;
          if (rule.id)
            this.classes[rule.key] = rule.id;
        } else if (rule instanceof KeyframesRule && this.keyframes) {
          this.keyframes[rule.name] = rule.id;
        }
      };
      _proto.unregister = function unregister(rule) {
        delete this.map[rule.key];
        if (rule instanceof StyleRule) {
          delete this.map[rule.selector];
          delete this.classes[rule.key];
        } else if (rule instanceof KeyframesRule) {
          delete this.keyframes[rule.name];
        }
      };
      _proto.update = function update3() {
        var name;
        var data;
        var options;
        if (typeof (arguments.length <= 0 ? void 0 : arguments[0]) === "string") {
          name = arguments.length <= 0 ? void 0 : arguments[0];
          data = arguments.length <= 1 ? void 0 : arguments[1];
          options = arguments.length <= 2 ? void 0 : arguments[2];
        } else {
          data = arguments.length <= 0 ? void 0 : arguments[0];
          options = arguments.length <= 1 ? void 0 : arguments[1];
          name = null;
        }
        if (name) {
          this.updateOne(this.get(name), data, options);
        } else {
          for (var index2 = 0; index2 < this.index.length; index2++) {
            this.updateOne(this.index[index2], data, options);
          }
        }
      };
      _proto.updateOne = function updateOne(rule, data, options) {
        if (options === void 0) {
          options = defaultUpdateOptions;
        }
        var _this$options2 = this.options, plugins3 = _this$options2.jss.plugins, sheet = _this$options2.sheet;
        if (rule.rules instanceof RuleList2) {
          rule.rules.update(data, options);
          return;
        }
        var style2 = rule.style;
        plugins3.onUpdate(data, rule, sheet, options);
        if (options.process && style2 && style2 !== rule.style) {
          plugins3.onProcessStyle(rule.style, rule, sheet);
          for (var prop in rule.style) {
            var nextValue = rule.style[prop];
            var prevValue = style2[prop];
            if (nextValue !== prevValue) {
              rule.prop(prop, nextValue, forceUpdateOptions);
            }
          }
          for (var _prop in style2) {
            var _nextValue = rule.style[_prop];
            var _prevValue = style2[_prop];
            if (_nextValue == null && _nextValue !== _prevValue) {
              rule.prop(_prop, null, forceUpdateOptions);
            }
          }
        }
      };
      _proto.toString = function toString2(options) {
        var str = "";
        var sheet = this.options.sheet;
        var link = sheet ? sheet.options.link : false;
        var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak;
        for (var index2 = 0; index2 < this.index.length; index2++) {
          var rule = this.index[index2];
          var css2 = rule.toString(options);
          if (!css2 && !link)
            continue;
          if (str)
            str += linebreak;
          str += css2;
        }
        return str;
      };
      return RuleList2;
    }();
    StyleSheet = function() {
      function StyleSheet2(styles, options) {
        this.attached = false;
        this.deployed = false;
        this.classes = {};
        this.keyframes = {};
        this.options = _extends({}, options, {
          sheet: this,
          parent: this,
          classes: this.classes,
          keyframes: this.keyframes
        });
        if (options.Renderer) {
          this.renderer = new options.Renderer(this);
        }
        this.rules = new RuleList(this.options);
        for (var name in styles) {
          this.rules.add(name, styles[name]);
        }
        this.rules.process();
      }
      var _proto = StyleSheet2.prototype;
      _proto.attach = function attach2() {
        if (this.attached)
          return this;
        if (this.renderer)
          this.renderer.attach();
        this.attached = true;
        if (!this.deployed)
          this.deploy();
        return this;
      };
      _proto.detach = function detach2() {
        if (!this.attached)
          return this;
        if (this.renderer)
          this.renderer.detach();
        this.attached = false;
        return this;
      };
      _proto.addRule = function addRule(name, decl, options) {
        var queue = this.queue;
        if (this.attached && !queue)
          this.queue = [];
        var rule = this.rules.add(name, decl, options);
        if (!rule)
          return null;
        this.options.jss.plugins.onProcessRule(rule);
        if (this.attached) {
          if (!this.deployed)
            return rule;
          if (queue)
            queue.push(rule);
          else {
            this.insertRule(rule);
            if (this.queue) {
              this.queue.forEach(this.insertRule, this);
              this.queue = void 0;
            }
          }
          return rule;
        }
        this.deployed = false;
        return rule;
      };
      _proto.replaceRule = function replaceRule(nameOrSelector, decl, options) {
        var oldRule = this.rules.get(nameOrSelector);
        if (!oldRule)
          return this.addRule(nameOrSelector, decl, options);
        var newRule = this.rules.replace(nameOrSelector, decl, options);
        if (newRule) {
          this.options.jss.plugins.onProcessRule(newRule);
        }
        if (this.attached) {
          if (!this.deployed)
            return newRule;
          if (this.renderer) {
            if (!newRule) {
              this.renderer.deleteRule(oldRule);
            } else if (oldRule.renderable) {
              this.renderer.replaceRule(oldRule.renderable, newRule);
            }
          }
          return newRule;
        }
        this.deployed = false;
        return newRule;
      };
      _proto.insertRule = function insertRule2(rule) {
        if (this.renderer) {
          this.renderer.insertRule(rule);
        }
      };
      _proto.addRules = function addRules(styles, options) {
        var added = [];
        for (var name in styles) {
          var rule = this.addRule(name, styles[name], options);
          if (rule)
            added.push(rule);
        }
        return added;
      };
      _proto.getRule = function getRule(nameOrSelector) {
        return this.rules.get(nameOrSelector);
      };
      _proto.deleteRule = function deleteRule(name) {
        var rule = typeof name === "object" ? name : this.rules.get(name);
        if (!rule || // Style sheet was created without link: true and attached, in this case we
        // won't be able to remove the CSS rule from the DOM.
        this.attached && !rule.renderable) {
          return false;
        }
        this.rules.remove(rule);
        if (this.attached && rule.renderable && this.renderer) {
          return this.renderer.deleteRule(rule.renderable);
        }
        return true;
      };
      _proto.indexOf = function indexOf(rule) {
        return this.rules.indexOf(rule);
      };
      _proto.deploy = function deploy() {
        if (this.renderer)
          this.renderer.deploy();
        this.deployed = true;
        return this;
      };
      _proto.update = function update3() {
        var _this$rules;
        (_this$rules = this.rules).update.apply(_this$rules, arguments);
        return this;
      };
      _proto.updateOne = function updateOne(rule, data, options) {
        this.rules.updateOne(rule, data, options);
        return this;
      };
      _proto.toString = function toString2(options) {
        return this.rules.toString(options);
      };
      return StyleSheet2;
    }();
    PluginsRegistry = function() {
      function PluginsRegistry2() {
        this.plugins = {
          internal: [],
          external: []
        };
        this.registry = {};
      }
      var _proto = PluginsRegistry2.prototype;
      _proto.onCreateRule = function onCreateRule8(name, decl, options) {
        for (var i2 = 0; i2 < this.registry.onCreateRule.length; i2++) {
          var rule = this.registry.onCreateRule[i2](name, decl, options);
          if (rule)
            return rule;
        }
        return null;
      };
      _proto.onProcessRule = function onProcessRule(rule) {
        if (rule.isProcessed)
          return;
        var sheet = rule.options.sheet;
        for (var i2 = 0; i2 < this.registry.onProcessRule.length; i2++) {
          this.registry.onProcessRule[i2](rule, sheet);
        }
        if (rule.style)
          this.onProcessStyle(rule.style, rule, sheet);
        rule.isProcessed = true;
      };
      _proto.onProcessStyle = function onProcessStyle2(style2, rule, sheet) {
        for (var i2 = 0; i2 < this.registry.onProcessStyle.length; i2++) {
          rule.style = this.registry.onProcessStyle[i2](rule.style, rule, sheet);
        }
      };
      _proto.onProcessSheet = function onProcessSheet(sheet) {
        for (var i2 = 0; i2 < this.registry.onProcessSheet.length; i2++) {
          this.registry.onProcessSheet[i2](sheet);
        }
      };
      _proto.onUpdate = function onUpdate(data, rule, sheet, options) {
        for (var i2 = 0; i2 < this.registry.onUpdate.length; i2++) {
          this.registry.onUpdate[i2](data, rule, sheet, options);
        }
      };
      _proto.onChangeValue = function onChangeValue2(value, prop, rule) {
        var processedValue = value;
        for (var i2 = 0; i2 < this.registry.onChangeValue.length; i2++) {
          processedValue = this.registry.onChangeValue[i2](processedValue, prop, rule);
        }
        return processedValue;
      };
      _proto.use = function use(newPlugin, options) {
        if (options === void 0) {
          options = {
            queue: "external"
          };
        }
        var plugins3 = this.plugins[options.queue];
        if (plugins3.indexOf(newPlugin) !== -1) {
          return;
        }
        plugins3.push(newPlugin);
        this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce(function(registry, plugin) {
          for (var name in plugin) {
            if (name in registry) {
              registry[name].push(plugin[name]);
            } else {
              true ? tiny_warning_esm_default(false, '[JSS] Unknown hook "' + name + '".') : void 0;
            }
          }
          return registry;
        }, {
          onCreateRule: [],
          onProcessRule: [],
          onProcessStyle: [],
          onProcessSheet: [],
          onChangeValue: [],
          onUpdate: []
        });
      };
      return PluginsRegistry2;
    }();
    SheetsRegistry = function() {
      function SheetsRegistry2() {
        this.registry = [];
      }
      var _proto = SheetsRegistry2.prototype;
      _proto.add = function add3(sheet) {
        var registry = this.registry;
        var index2 = sheet.options.index;
        if (registry.indexOf(sheet) !== -1)
          return;
        if (registry.length === 0 || index2 >= this.index) {
          registry.push(sheet);
          return;
        }
        for (var i2 = 0; i2 < registry.length; i2++) {
          if (registry[i2].options.index > index2) {
            registry.splice(i2, 0, sheet);
            return;
          }
        }
      };
      _proto.reset = function reset2() {
        this.registry = [];
      };
      _proto.remove = function remove(sheet) {
        var index2 = this.registry.indexOf(sheet);
        this.registry.splice(index2, 1);
      };
      _proto.toString = function toString2(_temp) {
        var _ref = _temp === void 0 ? {} : _temp, attached = _ref.attached, options = _objectWithoutPropertiesLoose(_ref, ["attached"]);
        var _getWhitespaceSymbols = getWhitespaceSymbols(options), linebreak = _getWhitespaceSymbols.linebreak;
        var css2 = "";
        for (var i2 = 0; i2 < this.registry.length; i2++) {
          var sheet = this.registry[i2];
          if (attached != null && sheet.attached !== attached) {
            continue;
          }
          if (css2)
            css2 += linebreak;
          css2 += sheet.toString(options);
        }
        return css2;
      };
      _createClass(SheetsRegistry2, [{
        key: "index",
        /**
         * Current highest index number.
         */
        get: function get2() {
          return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
        }
      }]);
      return SheetsRegistry2;
    }();
    sheets = new SheetsRegistry();
    globalThis$1 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" && window.Math === Math ? window : typeof self !== "undefined" && self.Math === Math ? self : Function("return this")();
    ns = "2f1acc6c3a606b082e5eef5e54414ffb";
    if (globalThis$1[ns] == null)
      globalThis$1[ns] = 0;
    moduleId = globalThis$1[ns]++;
    maxRules = 1e10;
    createGenerateId = function createGenerateId2(options) {
      if (options === void 0) {
        options = {};
      }
      var ruleCounter = 0;
      var generateId = function generateId2(rule, sheet) {
        ruleCounter += 1;
        if (ruleCounter > maxRules) {
          true ? tiny_warning_esm_default(false, "[JSS] You might have a memory leak. Rule counter is at " + ruleCounter + ".") : void 0;
        }
        var jssId = "";
        var prefix4 = "";
        if (sheet) {
          if (sheet.options.classNamePrefix) {
            prefix4 = sheet.options.classNamePrefix;
          }
          if (sheet.options.jss.id != null) {
            jssId = String(sheet.options.jss.id);
          }
        }
        if (options.minify) {
          return "" + (prefix4 || "c") + moduleId + jssId + ruleCounter;
        }
        return prefix4 + rule.key + "-" + moduleId + (jssId ? "-" + jssId : "") + "-" + ruleCounter;
      };
      return generateId;
    };
    memoize = function memoize2(fn) {
      var value;
      return function() {
        if (!value)
          value = fn();
        return value;
      };
    };
    getPropertyValue = function getPropertyValue2(cssRule, prop) {
      try {
        if (cssRule.attributeStyleMap) {
          return cssRule.attributeStyleMap.get(prop);
        }
        return cssRule.style.getPropertyValue(prop);
      } catch (err) {
        return "";
      }
    };
    setProperty = function setProperty2(cssRule, prop, value) {
      try {
        var cssValue = value;
        if (Array.isArray(value)) {
          cssValue = toCssValue(value);
        }
        if (cssRule.attributeStyleMap) {
          cssRule.attributeStyleMap.set(prop, cssValue);
        } else {
          var indexOfImportantFlag = cssValue ? cssValue.indexOf("!important") : -1;
          var cssValueWithoutImportantFlag = indexOfImportantFlag > -1 ? cssValue.substr(0, indexOfImportantFlag - 1) : cssValue;
          cssRule.style.setProperty(prop, cssValueWithoutImportantFlag, indexOfImportantFlag > -1 ? "important" : "");
        }
      } catch (err) {
        return false;
      }
      return true;
    };
    removeProperty = function removeProperty2(cssRule, prop) {
      try {
        if (cssRule.attributeStyleMap) {
          cssRule.attributeStyleMap.delete(prop);
        } else {
          cssRule.style.removeProperty(prop);
        }
      } catch (err) {
        true ? tiny_warning_esm_default(false, '[JSS] DOMException "' + err.message + '" was thrown. Tried to remove property "' + prop + '".') : void 0;
      }
    };
    setSelector = function setSelector2(cssRule, selectorText) {
      cssRule.selectorText = selectorText;
      return cssRule.selectorText === selectorText;
    };
    getHead3 = memoize(function() {
      return document.querySelector("head");
    });
    getNonce = memoize(function() {
      var node = document.querySelector('meta[property="csp-nonce"]');
      return node ? node.getAttribute("content") : null;
    });
    _insertRule = function insertRule(container, rule, index2) {
      try {
        if ("insertRule" in container) {
          container.insertRule(rule, index2);
        } else if ("appendRule" in container) {
          container.appendRule(rule);
        }
      } catch (err) {
        true ? tiny_warning_esm_default(false, "[JSS] " + err.message) : void 0;
        return false;
      }
      return container.cssRules[index2];
    };
    getValidRuleInsertionIndex = function getValidRuleInsertionIndex2(container, index2) {
      var maxIndex = container.cssRules.length;
      if (index2 === void 0 || index2 > maxIndex) {
        return maxIndex;
      }
      return index2;
    };
    createStyle = function createStyle2() {
      var el2 = document.createElement("style");
      el2.textContent = "\n";
      return el2;
    };
    DomRenderer = function() {
      function DomRenderer2(sheet) {
        this.getPropertyValue = getPropertyValue;
        this.setProperty = setProperty;
        this.removeProperty = removeProperty;
        this.setSelector = setSelector;
        this.hasInsertedRules = false;
        this.cssRules = [];
        if (sheet)
          sheets.add(sheet);
        this.sheet = sheet;
        var _ref = this.sheet ? this.sheet.options : {}, media = _ref.media, meta = _ref.meta, element = _ref.element;
        this.element = element || createStyle();
        this.element.setAttribute("data-jss", "");
        if (media)
          this.element.setAttribute("media", media);
        if (meta)
          this.element.setAttribute("data-meta", meta);
        var nonce = getNonce();
        if (nonce)
          this.element.setAttribute("nonce", nonce);
      }
      var _proto = DomRenderer2.prototype;
      _proto.attach = function attach2() {
        if (this.element.parentNode || !this.sheet)
          return;
        insertStyle(this.element, this.sheet.options);
        var deployed = Boolean(this.sheet && this.sheet.deployed);
        if (this.hasInsertedRules && deployed) {
          this.hasInsertedRules = false;
          this.deploy();
        }
      };
      _proto.detach = function detach2() {
        if (!this.sheet)
          return;
        var parentNode = this.element.parentNode;
        if (parentNode)
          parentNode.removeChild(this.element);
        if (this.sheet.options.link) {
          this.cssRules = [];
          this.element.textContent = "\n";
        }
      };
      _proto.deploy = function deploy() {
        var sheet = this.sheet;
        if (!sheet)
          return;
        if (sheet.options.link) {
          this.insertRules(sheet.rules);
          return;
        }
        this.element.textContent = "\n" + sheet.toString() + "\n";
      };
      _proto.insertRules = function insertRules(rules, nativeParent) {
        for (var i2 = 0; i2 < rules.index.length; i2++) {
          this.insertRule(rules.index[i2], i2, nativeParent);
        }
      };
      _proto.insertRule = function insertRule2(rule, index2, nativeParent) {
        if (nativeParent === void 0) {
          nativeParent = this.element.sheet;
        }
        if (rule.rules) {
          var parent = rule;
          var latestNativeParent = nativeParent;
          if (rule.type === "conditional" || rule.type === "keyframes") {
            var _insertionIndex = getValidRuleInsertionIndex(nativeParent, index2);
            latestNativeParent = _insertRule(nativeParent, parent.toString({
              children: false
            }), _insertionIndex);
            if (latestNativeParent === false) {
              return false;
            }
            this.refCssRule(rule, _insertionIndex, latestNativeParent);
          }
          this.insertRules(parent.rules, latestNativeParent);
          return latestNativeParent;
        }
        var ruleStr = rule.toString();
        if (!ruleStr)
          return false;
        var insertionIndex = getValidRuleInsertionIndex(nativeParent, index2);
        var nativeRule = _insertRule(nativeParent, ruleStr, insertionIndex);
        if (nativeRule === false) {
          return false;
        }
        this.hasInsertedRules = true;
        this.refCssRule(rule, insertionIndex, nativeRule);
        return nativeRule;
      };
      _proto.refCssRule = function refCssRule(rule, index2, cssRule) {
        rule.renderable = cssRule;
        if (rule.options.parent instanceof StyleSheet) {
          this.cssRules.splice(index2, 0, cssRule);
        }
      };
      _proto.deleteRule = function deleteRule(cssRule) {
        var sheet = this.element.sheet;
        var index2 = this.indexOf(cssRule);
        if (index2 === -1)
          return false;
        sheet.deleteRule(index2);
        this.cssRules.splice(index2, 1);
        return true;
      };
      _proto.indexOf = function indexOf(cssRule) {
        return this.cssRules.indexOf(cssRule);
      };
      _proto.replaceRule = function replaceRule(cssRule, rule) {
        var index2 = this.indexOf(cssRule);
        if (index2 === -1)
          return false;
        this.element.sheet.deleteRule(index2);
        this.cssRules.splice(index2, 1);
        return this.insertRule(rule, index2);
      };
      _proto.getRules = function getRules() {
        return this.element.sheet.cssRules;
      };
      return DomRenderer2;
    }();
    instanceCounter = 0;
    Jss = function() {
      function Jss2(options) {
        this.id = instanceCounter++;
        this.version = "10.10.0";
        this.plugins = new PluginsRegistry();
        this.options = {
          id: {
            minify: false
          },
          createGenerateId,
          Renderer: module_default ? DomRenderer : null,
          plugins: []
        };
        this.generateId = createGenerateId({
          minify: false
        });
        for (var i2 = 0; i2 < plugins.length; i2++) {
          this.plugins.use(plugins[i2], {
            queue: "internal"
          });
        }
        this.setup(options);
      }
      var _proto = Jss2.prototype;
      _proto.setup = function setup(options) {
        if (options === void 0) {
          options = {};
        }
        if (options.createGenerateId) {
          this.options.createGenerateId = options.createGenerateId;
        }
        if (options.id) {
          this.options.id = _extends({}, this.options.id, options.id);
        }
        if (options.createGenerateId || options.id) {
          this.generateId = this.options.createGenerateId(this.options.id);
        }
        if (options.insertionPoint != null)
          this.options.insertionPoint = options.insertionPoint;
        if ("Renderer" in options) {
          this.options.Renderer = options.Renderer;
        }
        if (options.plugins)
          this.use.apply(this, options.plugins);
        return this;
      };
      _proto.createStyleSheet = function createStyleSheet(styles, options) {
        if (options === void 0) {
          options = {};
        }
        var _options = options, index2 = _options.index;
        if (typeof index2 !== "number") {
          index2 = sheets.index === 0 ? 0 : sheets.index + 1;
        }
        var sheet = new StyleSheet(styles, _extends({}, options, {
          jss: this,
          generateId: options.generateId || this.generateId,
          insertionPoint: this.options.insertionPoint,
          Renderer: this.options.Renderer,
          index: index2
        }));
        this.plugins.onProcessSheet(sheet);
        return sheet;
      };
      _proto.removeStyleSheet = function removeStyleSheet(sheet) {
        sheet.detach();
        sheets.remove(sheet);
        return this;
      };
      _proto.createRule = function createRule$1(name, style2, options) {
        if (style2 === void 0) {
          style2 = {};
        }
        if (options === void 0) {
          options = {};
        }
        if (typeof name === "object") {
          return this.createRule(void 0, name, style2);
        }
        var ruleOptions = _extends({}, options, {
          name,
          jss: this,
          Renderer: this.options.Renderer
        });
        if (!ruleOptions.generateId)
          ruleOptions.generateId = this.generateId;
        if (!ruleOptions.classes)
          ruleOptions.classes = {};
        if (!ruleOptions.keyframes)
          ruleOptions.keyframes = {};
        var rule = createRule(name, style2, ruleOptions);
        if (rule)
          this.plugins.onProcessRule(rule);
        return rule;
      };
      _proto.use = function use() {
        var _this = this;
        for (var _len = arguments.length, plugins3 = new Array(_len), _key = 0; _key < _len; _key++) {
          plugins3[_key] = arguments[_key];
        }
        plugins3.forEach(function(plugin) {
          _this.plugins.use(plugin);
        });
        return this;
      };
      return Jss2;
    }();
    createJss = function createJss2(options) {
      return new Jss(options);
    };
    SheetsManager = function() {
      function SheetsManager2() {
        this.length = 0;
        this.sheets = /* @__PURE__ */ new WeakMap();
      }
      var _proto = SheetsManager2.prototype;
      _proto.get = function get2(key) {
        var entry = this.sheets.get(key);
        return entry && entry.sheet;
      };
      _proto.add = function add3(key, sheet) {
        if (this.sheets.has(key))
          return;
        this.length++;
        this.sheets.set(key, {
          sheet,
          refs: 0
        });
      };
      _proto.manage = function manage(key) {
        var entry = this.sheets.get(key);
        if (entry) {
          if (entry.refs === 0) {
            entry.sheet.attach();
          }
          entry.refs++;
          return entry.sheet;
        }
        tiny_warning_esm_default(false, "[JSS] SheetsManager: can't find sheet to manage");
        return void 0;
      };
      _proto.unmanage = function unmanage(key) {
        var entry = this.sheets.get(key);
        if (entry) {
          if (entry.refs > 0) {
            entry.refs--;
            if (entry.refs === 0)
              entry.sheet.detach();
          }
        } else {
          tiny_warning_esm_default(false, "SheetsManager: can't find sheet to unmanage");
        }
      };
      _createClass(SheetsManager2, [{
        key: "size",
        get: function get2() {
          return this.length;
        }
      }]);
      return SheetsManager2;
    }();
    hasCSSTOMSupport = typeof CSS === "object" && CSS != null && "number" in CSS;
    index = createJss();
  }
});

// node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js
var now, fnValuesNs, fnRuleNs, functionPlugin, jss_plugin_rule_value_function_esm_default;
var init_jss_plugin_rule_value_function_esm = __esm({
  "node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js"() {
    init_tiny_warning_esm();
    init_jss_esm();
    now = Date.now();
    fnValuesNs = "fnValues" + now;
    fnRuleNs = "fnStyle" + ++now;
    functionPlugin = function functionPlugin2() {
      return {
        onCreateRule: function onCreateRule8(name, decl, options) {
          if (typeof decl !== "function")
            return null;
          var rule = createRule(name, {}, options);
          rule[fnRuleNs] = decl;
          return rule;
        },
        onProcessStyle: function onProcessStyle2(style2, rule) {
          if (fnValuesNs in rule || fnRuleNs in rule)
            return style2;
          var fnValues = {};
          for (var prop in style2) {
            var value = style2[prop];
            if (typeof value !== "function")
              continue;
            delete style2[prop];
            fnValues[prop] = value;
          }
          rule[fnValuesNs] = fnValues;
          return style2;
        },
        onUpdate: function onUpdate(data, rule, sheet, options) {
          var styleRule = rule;
          var fnRule = styleRule[fnRuleNs];
          if (fnRule) {
            styleRule.style = fnRule(data) || {};
            if (true) {
              for (var prop in styleRule.style) {
                if (typeof styleRule.style[prop] === "function") {
                  true ? tiny_warning_esm_default(false, "[JSS] Function values inside function rules are not supported.") : void 0;
                  break;
                }
              }
            }
          }
          var fnValues = styleRule[fnValuesNs];
          if (fnValues) {
            for (var _prop in fnValues) {
              styleRule.prop(_prop, fnValues[_prop](data), options);
            }
          }
        }
      };
    };
    jss_plugin_rule_value_function_esm_default = functionPlugin;
  }
});

// node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js
function addScope(selector, scope) {
  var parts = selector.split(separatorRegExp);
  var scoped = "";
  for (var i2 = 0; i2 < parts.length; i2++) {
    scoped += scope + " " + parts[i2].trim();
    if (parts[i2 + 1])
      scoped += ", ";
  }
  return scoped;
}
function handleNestedGlobalContainerRule(rule, sheet) {
  var options = rule.options, style2 = rule.style;
  var rules = style2 ? style2[at] : null;
  if (!rules)
    return;
  for (var name in rules) {
    sheet.addRule(name, rules[name], _extends({}, options, {
      selector: addScope(name, rule.selector)
    }));
  }
  delete style2[at];
}
function handlePrefixedGlobalRule(rule, sheet) {
  var options = rule.options, style2 = rule.style;
  for (var prop in style2) {
    if (prop[0] !== "@" || prop.substr(0, at.length) !== at)
      continue;
    var selector = addScope(prop.substr(at.length), rule.selector);
    sheet.addRule(selector, style2[prop], _extends({}, options, {
      selector
    }));
    delete style2[prop];
  }
}
function jssGlobal() {
  function onCreateRule8(name, styles, options) {
    if (!name)
      return null;
    if (name === at) {
      return new GlobalContainerRule(name, styles, options);
    }
    if (name[0] === "@" && name.substr(0, atPrefix.length) === atPrefix) {
      return new GlobalPrefixedRule(name, styles, options);
    }
    var parent = options.parent;
    if (parent) {
      if (parent.type === "global" || parent.options.parent && parent.options.parent.type === "global") {
        options.scoped = false;
      }
    }
    if (!options.selector && options.scoped === false) {
      options.selector = name;
    }
    return null;
  }
  function onProcessRule(rule, sheet) {
    if (rule.type !== "style" || !sheet)
      return;
    handleNestedGlobalContainerRule(rule, sheet);
    handlePrefixedGlobalRule(rule, sheet);
  }
  return {
    onCreateRule: onCreateRule8,
    onProcessRule
  };
}
var at, atPrefix, GlobalContainerRule, GlobalPrefixedRule, separatorRegExp, jss_plugin_global_esm_default;
var init_jss_plugin_global_esm = __esm({
  "node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js"() {
    init_extends();
    init_jss_esm();
    at = "@global";
    atPrefix = "@global ";
    GlobalContainerRule = function() {
      function GlobalContainerRule2(key, styles, options) {
        this.type = "global";
        this.at = at;
        this.isProcessed = false;
        this.key = key;
        this.options = options;
        this.rules = new RuleList(_extends({}, options, {
          parent: this
        }));
        for (var selector in styles) {
          this.rules.add(selector, styles[selector]);
        }
        this.rules.process();
      }
      var _proto = GlobalContainerRule2.prototype;
      _proto.getRule = function getRule(name) {
        return this.rules.get(name);
      };
      _proto.addRule = function addRule(name, style2, options) {
        var rule = this.rules.add(name, style2, options);
        if (rule)
          this.options.jss.plugins.onProcessRule(rule);
        return rule;
      };
      _proto.replaceRule = function replaceRule(name, style2, options) {
        var newRule = this.rules.replace(name, style2, options);
        if (newRule)
          this.options.jss.plugins.onProcessRule(newRule);
        return newRule;
      };
      _proto.indexOf = function indexOf(rule) {
        return this.rules.indexOf(rule);
      };
      _proto.toString = function toString2(options) {
        return this.rules.toString(options);
      };
      return GlobalContainerRule2;
    }();
    GlobalPrefixedRule = function() {
      function GlobalPrefixedRule2(key, style2, options) {
        this.type = "global";
        this.at = at;
        this.isProcessed = false;
        this.key = key;
        this.options = options;
        var selector = key.substr(atPrefix.length);
        this.rule = options.jss.createRule(selector, style2, _extends({}, options, {
          parent: this
        }));
      }
      var _proto2 = GlobalPrefixedRule2.prototype;
      _proto2.toString = function toString2(options) {
        return this.rule ? this.rule.toString(options) : "";
      };
      return GlobalPrefixedRule2;
    }();
    separatorRegExp = /\s*,\s*/g;
    jss_plugin_global_esm_default = jssGlobal;
  }
});

// node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js
function jssNested() {
  function getReplaceRef(container, sheet) {
    return function(match3, key) {
      var rule = container.getRule(key) || sheet && sheet.getRule(key);
      if (rule) {
        return rule.selector;
      }
      true ? tiny_warning_esm_default(false, '[JSS] Could not find the referenced rule "' + key + '" in "' + (container.options.meta || container.toString()) + '".') : void 0;
      return key;
    };
  }
  function replaceParentRefs(nestedProp, parentProp) {
    var parentSelectors = parentProp.split(separatorRegExp2);
    var nestedSelectors = nestedProp.split(separatorRegExp2);
    var result = "";
    for (var i2 = 0; i2 < parentSelectors.length; i2++) {
      var parent = parentSelectors[i2];
      for (var j2 = 0; j2 < nestedSelectors.length; j2++) {
        var nested = nestedSelectors[j2];
        if (result)
          result += ", ";
        result += nested.indexOf("&") !== -1 ? nested.replace(parentRegExp, parent) : parent + " " + nested;
      }
    }
    return result;
  }
  function getOptions2(rule, container, prevOptions) {
    if (prevOptions)
      return _extends({}, prevOptions, {
        index: prevOptions.index + 1
      });
    var nestingLevel = rule.options.nestingLevel;
    nestingLevel = nestingLevel === void 0 ? 1 : nestingLevel + 1;
    var options = _extends({}, rule.options, {
      nestingLevel,
      index: container.indexOf(rule) + 1
      // We don't need the parent name to be set options for chlid.
    });
    delete options.name;
    return options;
  }
  function onProcessStyle2(style2, rule, sheet) {
    if (rule.type !== "style")
      return style2;
    var styleRule = rule;
    var container = styleRule.options.parent;
    var options;
    var replaceRef3;
    for (var prop in style2) {
      var isNested = prop.indexOf("&") !== -1;
      var isNestedConditional = prop[0] === "@";
      if (!isNested && !isNestedConditional)
        continue;
      options = getOptions2(styleRule, container, options);
      if (isNested) {
        var selector = replaceParentRefs(prop, styleRule.selector);
        if (!replaceRef3)
          replaceRef3 = getReplaceRef(container, sheet);
        selector = selector.replace(refRegExp2, replaceRef3);
        var name = styleRule.key + "-" + prop;
        if ("replaceRule" in container) {
          container.replaceRule(name, style2[prop], _extends({}, options, {
            selector
          }));
        } else {
          container.addRule(name, style2[prop], _extends({}, options, {
            selector
          }));
        }
      } else if (isNestedConditional) {
        container.addRule(prop, {}, options).addRule(styleRule.key, style2[prop], {
          selector: styleRule.selector
        });
      }
      delete style2[prop];
    }
    return style2;
  }
  return {
    onProcessStyle: onProcessStyle2
  };
}
var separatorRegExp2, parentRegExp, refRegExp2, jss_plugin_nested_esm_default;
var init_jss_plugin_nested_esm = __esm({
  "node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js"() {
    init_extends();
    init_tiny_warning_esm();
    separatorRegExp2 = /\s*,\s*/g;
    parentRegExp = /&/g;
    refRegExp2 = /\$([\w-]+)/g;
    jss_plugin_nested_esm_default = jssNested;
  }
});

// node_modules/hyphenate-style-name/index.js
function toHyphenLower(match3) {
  return "-" + match3.toLowerCase();
}
function hyphenateStyleName(name) {
  if (cache.hasOwnProperty(name)) {
    return cache[name];
  }
  var hName = name.replace(uppercasePattern, toHyphenLower);
  return cache[name] = msPattern.test(hName) ? "-" + hName : hName;
}
var uppercasePattern, msPattern, cache, hyphenate_style_name_default;
var init_hyphenate_style_name = __esm({
  "node_modules/hyphenate-style-name/index.js"() {
    uppercasePattern = /[A-Z]/g;
    msPattern = /^ms-/;
    cache = {};
    hyphenate_style_name_default = hyphenateStyleName;
  }
});

// node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js
function convertCase(style2) {
  var converted = {};
  for (var prop in style2) {
    var key = prop.indexOf("--") === 0 ? prop : hyphenate_style_name_default(prop);
    converted[key] = style2[prop];
  }
  if (style2.fallbacks) {
    if (Array.isArray(style2.fallbacks))
      converted.fallbacks = style2.fallbacks.map(convertCase);
    else
      converted.fallbacks = convertCase(style2.fallbacks);
  }
  return converted;
}
function camelCase() {
  function onProcessStyle2(style2) {
    if (Array.isArray(style2)) {
      for (var index2 = 0; index2 < style2.length; index2++) {
        style2[index2] = convertCase(style2[index2]);
      }
      return style2;
    }
    return convertCase(style2);
  }
  function onChangeValue2(value, prop, rule) {
    if (prop.indexOf("--") === 0) {
      return value;
    }
    var hyphenatedProp = hyphenate_style_name_default(prop);
    if (prop === hyphenatedProp)
      return value;
    rule.prop(hyphenatedProp, value);
    return null;
  }
  return {
    onProcessStyle: onProcessStyle2,
    onChangeValue: onChangeValue2
  };
}
var jss_plugin_camel_case_esm_default;
var init_jss_plugin_camel_case_esm = __esm({
  "node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js"() {
    init_hyphenate_style_name();
    jss_plugin_camel_case_esm_default = camelCase;
  }
});

// node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js
function addCamelCasedVersion(obj) {
  var regExp2 = /(-[a-z])/g;
  var replace = function replace2(str) {
    return str[1].toUpperCase();
  };
  var newObj = {};
  for (var key in obj) {
    newObj[key] = obj[key];
    newObj[key.replace(regExp2, replace)] = obj[key];
  }
  return newObj;
}
function iterate(prop, value, options) {
  if (value == null)
    return value;
  if (Array.isArray(value)) {
    for (var i2 = 0; i2 < value.length; i2++) {
      value[i2] = iterate(prop, value[i2], options);
    }
  } else if (typeof value === "object") {
    if (prop === "fallbacks") {
      for (var innerProp in value) {
        value[innerProp] = iterate(innerProp, value[innerProp], options);
      }
    } else {
      for (var _innerProp in value) {
        value[_innerProp] = iterate(prop + "-" + _innerProp, value[_innerProp], options);
      }
    }
  } else if (typeof value === "number" && isNaN(value) === false) {
    var unit = options[prop] || units[prop];
    if (unit && !(value === 0 && unit === px)) {
      return typeof unit === "function" ? unit(value).toString() : "" + value + unit;
    }
    return value.toString();
  }
  return value;
}
function defaultUnit(options) {
  if (options === void 0) {
    options = {};
  }
  var camelCasedOptions = addCamelCasedVersion(options);
  function onProcessStyle2(style2, rule) {
    if (rule.type !== "style")
      return style2;
    for (var prop in style2) {
      style2[prop] = iterate(prop, style2[prop], camelCasedOptions);
    }
    return style2;
  }
  function onChangeValue2(value, prop) {
    return iterate(prop, value, camelCasedOptions);
  }
  return {
    onProcessStyle: onProcessStyle2,
    onChangeValue: onChangeValue2
  };
}
var px, ms, percent, defaultUnits, units, jss_plugin_default_unit_esm_default;
var init_jss_plugin_default_unit_esm = __esm({
  "node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js"() {
    init_jss_esm();
    px = hasCSSTOMSupport && CSS ? CSS.px : "px";
    ms = hasCSSTOMSupport && CSS ? CSS.ms : "ms";
    percent = hasCSSTOMSupport && CSS ? CSS.percent : "%";
    defaultUnits = {
      // Animation properties
      "animation-delay": ms,
      "animation-duration": ms,
      // Background properties
      "background-position": px,
      "background-position-x": px,
      "background-position-y": px,
      "background-size": px,
      // Border Properties
      border: px,
      "border-bottom": px,
      "border-bottom-left-radius": px,
      "border-bottom-right-radius": px,
      "border-bottom-width": px,
      "border-left": px,
      "border-left-width": px,
      "border-radius": px,
      "border-right": px,
      "border-right-width": px,
      "border-top": px,
      "border-top-left-radius": px,
      "border-top-right-radius": px,
      "border-top-width": px,
      "border-width": px,
      "border-block": px,
      "border-block-end": px,
      "border-block-end-width": px,
      "border-block-start": px,
      "border-block-start-width": px,
      "border-block-width": px,
      "border-inline": px,
      "border-inline-end": px,
      "border-inline-end-width": px,
      "border-inline-start": px,
      "border-inline-start-width": px,
      "border-inline-width": px,
      "border-start-start-radius": px,
      "border-start-end-radius": px,
      "border-end-start-radius": px,
      "border-end-end-radius": px,
      // Margin properties
      margin: px,
      "margin-bottom": px,
      "margin-left": px,
      "margin-right": px,
      "margin-top": px,
      "margin-block": px,
      "margin-block-end": px,
      "margin-block-start": px,
      "margin-inline": px,
      "margin-inline-end": px,
      "margin-inline-start": px,
      // Padding properties
      padding: px,
      "padding-bottom": px,
      "padding-left": px,
      "padding-right": px,
      "padding-top": px,
      "padding-block": px,
      "padding-block-end": px,
      "padding-block-start": px,
      "padding-inline": px,
      "padding-inline-end": px,
      "padding-inline-start": px,
      // Mask properties
      "mask-position-x": px,
      "mask-position-y": px,
      "mask-size": px,
      // Width and height properties
      height: px,
      width: px,
      "min-height": px,
      "max-height": px,
      "min-width": px,
      "max-width": px,
      // Position properties
      bottom: px,
      left: px,
      top: px,
      right: px,
      inset: px,
      "inset-block": px,
      "inset-block-end": px,
      "inset-block-start": px,
      "inset-inline": px,
      "inset-inline-end": px,
      "inset-inline-start": px,
      // Shadow properties
      "box-shadow": px,
      "text-shadow": px,
      // Column properties
      "column-gap": px,
      "column-rule": px,
      "column-rule-width": px,
      "column-width": px,
      // Font and text properties
      "font-size": px,
      "font-size-delta": px,
      "letter-spacing": px,
      "text-decoration-thickness": px,
      "text-indent": px,
      "text-stroke": px,
      "text-stroke-width": px,
      "word-spacing": px,
      // Motion properties
      motion: px,
      "motion-offset": px,
      // Outline properties
      outline: px,
      "outline-offset": px,
      "outline-width": px,
      // Perspective properties
      perspective: px,
      "perspective-origin-x": percent,
      "perspective-origin-y": percent,
      // Transform properties
      "transform-origin": percent,
      "transform-origin-x": percent,
      "transform-origin-y": percent,
      "transform-origin-z": percent,
      // Transition properties
      "transition-delay": ms,
      "transition-duration": ms,
      // Alignment properties
      "vertical-align": px,
      "flex-basis": px,
      // Some random properties
      "shape-margin": px,
      size: px,
      gap: px,
      // Grid properties
      grid: px,
      "grid-gap": px,
      "row-gap": px,
      "grid-row-gap": px,
      "grid-column-gap": px,
      "grid-template-rows": px,
      "grid-template-columns": px,
      "grid-auto-rows": px,
      "grid-auto-columns": px,
      // Not existing properties.
      // Used to avoid issues with jss-plugin-expand integration.
      "box-shadow-x": px,
      "box-shadow-y": px,
      "box-shadow-blur": px,
      "box-shadow-spread": px,
      "font-line-height": px,
      "text-shadow-x": px,
      "text-shadow-y": px,
      "text-shadow-blur": px
    };
    units = addCamelCasedVersion(defaultUnits);
    jss_plugin_default_unit_esm_default = defaultUnit;
  }
});

// node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
var init_arrayLikeToArray = __esm({
  "node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js"() {
  }
});

// node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
var init_arrayWithoutHoles = __esm({
  "node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js"() {
    init_arrayLikeToArray();
  }
});

// node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
var init_iterableToArray = __esm({
  "node_modules/@babel/runtime/helpers/esm/iterableToArray.js"() {
  }
});

// node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
function _unsupportedIterableToArray(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o2, minLen);
}
var init_unsupportedIterableToArray = __esm({
  "node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"() {
    init_arrayLikeToArray();
  }
});

// node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var init_nonIterableSpread = __esm({
  "node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"() {
  }
});

// node_modules/@babel/runtime/helpers/esm/toConsumableArray.js
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
var init_toConsumableArray = __esm({
  "node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"() {
    init_arrayWithoutHoles();
    init_iterableToArray();
    init_unsupportedIterableToArray();
    init_nonIterableSpread();
  }
});

// node_modules/css-vendor/dist/css-vendor.esm.js
function supportedKeyframes(key) {
  if (key[1] === "-")
    return key;
  if (prefix3.js === "ms")
    return key;
  return "@" + prefix3.css + "keyframes" + key.substr(10);
}
function toUpper(match3, c2) {
  return c2 ? c2.toUpperCase() : "";
}
function camelize(str) {
  return str.replace(regExp, toUpper);
}
function pascalize(str) {
  return camelize("-" + str);
}
function supportedProperty17(prop, options) {
  if (options === void 0) {
    options = {};
  }
  if (!el)
    return prop;
  if (cache2[prop] != null) {
    return cache2[prop];
  }
  if (prop === "transition" || prop === "transform") {
    options[prop] = prop in el.style;
  }
  for (var i2 = 0; i2 < propertyDetectors.length; i2++) {
    cache2[prop] = propertyDetectors[i2](prop, el.style, options);
    if (cache2[prop])
      break;
  }
  try {
    el.style[prop] = "";
  } catch (err) {
    return false;
  }
  return cache2[prop];
}
function prefixTransitionCallback(match3, p1, p2) {
  if (p1 === "var")
    return "var";
  if (p1 === "all")
    return "all";
  if (p2 === "all")
    return ", all";
  var prefixedValue = p1 ? supportedProperty17(p1) : ", " + supportedProperty17(p2);
  if (!prefixedValue)
    return p1 || p2;
  return prefixedValue;
}
function supportedValue(property, value) {
  var prefixedValue = value;
  if (!el$1 || property === "content")
    return value;
  if (typeof prefixedValue !== "string" || !isNaN(parseInt(prefixedValue, 10))) {
    return prefixedValue;
  }
  var cacheKey = property + prefixedValue;
  if (cache$1[cacheKey] != null) {
    return cache$1[cacheKey];
  }
  try {
    el$1.style[property] = prefixedValue;
  } catch (err) {
    cache$1[cacheKey] = false;
    return false;
  }
  if (transitionProperties[property]) {
    prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback);
  } else if (el$1.style[property] === "") {
    prefixedValue = prefix3.css + prefixedValue;
    if (prefixedValue === "-ms-flex")
      el$1.style[property] = "-ms-flexbox";
    el$1.style[property] = prefixedValue;
    if (el$1.style[property] === "") {
      cache$1[cacheKey] = false;
      return false;
    }
  }
  el$1.style[property] = "";
  cache$1[cacheKey] = prefixedValue;
  return cache$1[cacheKey];
}
var js, css, vendor, browser, isTouch, jsCssMap, _document$createEleme, style2, testProp, key, prefix3, appearence, colorAdjust, regExp, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, propMap, flex2012, propMap$1, propKeys, prefixCss, flex2009, plugins2, propertyDetectors, noPrefill, el, cache2, computed, key$1, cache$1, transitionProperties, transPropsRegExp, el$1;
var init_css_vendor_esm = __esm({
  "node_modules/css-vendor/dist/css-vendor.esm.js"() {
    init_module();
    init_toConsumableArray();
    js = "";
    css = "";
    vendor = "";
    browser = "";
    isTouch = module_default && "ontouchstart" in document.documentElement;
    if (module_default) {
      jsCssMap = {
        Moz: "-moz-",
        ms: "-ms-",
        O: "-o-",
        Webkit: "-webkit-"
      };
      _document$createEleme = document.createElement("p"), style2 = _document$createEleme.style;
      testProp = "Transform";
      for (key in jsCssMap) {
        if (key + testProp in style2) {
          js = key;
          css = jsCssMap[key];
          break;
        }
      }
      if (js === "Webkit" && "msHyphens" in style2) {
        js = "ms";
        css = jsCssMap.ms;
        browser = "edge";
      }
      if (js === "Webkit" && "-apple-trailing-word" in style2) {
        vendor = "apple";
      }
    }
    prefix3 = {
      js,
      css,
      vendor,
      browser,
      isTouch
    };
    appearence = {
      noPrefill: ["appearance"],
      supportedProperty: function supportedProperty(prop) {
        if (prop !== "appearance")
          return false;
        if (prefix3.js === "ms")
          return "-webkit-" + prop;
        return prefix3.css + prop;
      }
    };
    colorAdjust = {
      noPrefill: ["color-adjust"],
      supportedProperty: function supportedProperty2(prop) {
        if (prop !== "color-adjust")
          return false;
        if (prefix3.js === "Webkit")
          return prefix3.css + "print-" + prop;
        return prop;
      }
    };
    regExp = /[-\s]+(.)?/g;
    mask = {
      noPrefill: ["mask"],
      supportedProperty: function supportedProperty3(prop, style2) {
        if (!/^mask/.test(prop))
          return false;
        if (prefix3.js === "Webkit") {
          var longhand = "mask-image";
          if (camelize(longhand) in style2) {
            return prop;
          }
          if (prefix3.js + pascalize(longhand) in style2) {
            return prefix3.css + prop;
          }
        }
        return prop;
      }
    };
    textOrientation = {
      noPrefill: ["text-orientation"],
      supportedProperty: function supportedProperty4(prop) {
        if (prop !== "text-orientation")
          return false;
        if (prefix3.vendor === "apple" && !prefix3.isTouch) {
          return prefix3.css + prop;
        }
        return prop;
      }
    };
    transform = {
      noPrefill: ["transform"],
      supportedProperty: function supportedProperty5(prop, style2, options) {
        if (prop !== "transform")
          return false;
        if (options.transform) {
          return prop;
        }
        return prefix3.css + prop;
      }
    };
    transition = {
      noPrefill: ["transition"],
      supportedProperty: function supportedProperty6(prop, style2, options) {
        if (prop !== "transition")
          return false;
        if (options.transition) {
          return prop;
        }
        return prefix3.css + prop;
      }
    };
    writingMode = {
      noPrefill: ["writing-mode"],
      supportedProperty: function supportedProperty7(prop) {
        if (prop !== "writing-mode")
          return false;
        if (prefix3.js === "Webkit" || prefix3.js === "ms" && prefix3.browser !== "edge") {
          return prefix3.css + prop;
        }
        return prop;
      }
    };
    userSelect = {
      noPrefill: ["user-select"],
      supportedProperty: function supportedProperty8(prop) {
        if (prop !== "user-select")
          return false;
        if (prefix3.js === "Moz" || prefix3.js === "ms" || prefix3.vendor === "apple") {
          return prefix3.css + prop;
        }
        return prop;
      }
    };
    breakPropsOld = {
      supportedProperty: function supportedProperty9(prop, style2) {
        if (!/^break-/.test(prop))
          return false;
        if (prefix3.js === "Webkit") {
          var jsProp = "WebkitColumn" + pascalize(prop);
          return jsProp in style2 ? prefix3.css + "column-" + prop : false;
        }
        if (prefix3.js === "Moz") {
          var _jsProp = "page" + pascalize(prop);
          return _jsProp in style2 ? "page-" + prop : false;
        }
        return false;
      }
    };
    inlineLogicalOld = {
      supportedProperty: function supportedProperty10(prop, style2) {
        if (!/^(border|margin|padding)-inline/.test(prop))
          return false;
        if (prefix3.js === "Moz")
          return prop;
        var newProp = prop.replace("-inline", "");
        return prefix3.js + pascalize(newProp) in style2 ? prefix3.css + newProp : false;
      }
    };
    unprefixed = {
      supportedProperty: function supportedProperty11(prop, style2) {
        return camelize(prop) in style2 ? prop : false;
      }
    };
    prefixed = {
      supportedProperty: function supportedProperty12(prop, style2) {
        var pascalized = pascalize(prop);
        if (prop[0] === "-")
          return prop;
        if (prop[0] === "-" && prop[1] === "-")
          return prop;
        if (prefix3.js + pascalized in style2)
          return prefix3.css + prop;
        if (prefix3.js !== "Webkit" && "Webkit" + pascalized in style2)
          return "-webkit-" + prop;
        return false;
      }
    };
    scrollSnap = {
      supportedProperty: function supportedProperty13(prop) {
        if (prop.substring(0, 11) !== "scroll-snap")
          return false;
        if (prefix3.js === "ms") {
          return "" + prefix3.css + prop;
        }
        return prop;
      }
    };
    overscrollBehavior = {
      supportedProperty: function supportedProperty14(prop) {
        if (prop !== "overscroll-behavior")
          return false;
        if (prefix3.js === "ms") {
          return prefix3.css + "scroll-chaining";
        }
        return prop;
      }
    };
    propMap = {
      "flex-grow": "flex-positive",
      "flex-shrink": "flex-negative",
      "flex-basis": "flex-preferred-size",
      "justify-content": "flex-pack",
      order: "flex-order",
      "align-items": "flex-align",
      "align-content": "flex-line-pack"
      // 'align-self' is handled by 'align-self' plugin.
    };
    flex2012 = {
      supportedProperty: function supportedProperty15(prop, style2) {
        var newProp = propMap[prop];
        if (!newProp)
          return false;
        return prefix3.js + pascalize(newProp) in style2 ? prefix3.css + newProp : false;
      }
    };
    propMap$1 = {
      flex: "box-flex",
      "flex-grow": "box-flex",
      "flex-direction": ["box-orient", "box-direction"],
      order: "box-ordinal-group",
      "align-items": "box-align",
      "flex-flow": ["box-orient", "box-direction"],
      "justify-content": "box-pack"
    };
    propKeys = Object.keys(propMap$1);
    prefixCss = function prefixCss2(p2) {
      return prefix3.css + p2;
    };
    flex2009 = {
      supportedProperty: function supportedProperty16(prop, style2, _ref) {
        var multiple = _ref.multiple;
        if (propKeys.indexOf(prop) > -1) {
          var newProp = propMap$1[prop];
          if (!Array.isArray(newProp)) {
            return prefix3.js + pascalize(newProp) in style2 ? prefix3.css + newProp : false;
          }
          if (!multiple)
            return false;
          for (var i2 = 0; i2 < newProp.length; i2++) {
            if (!(prefix3.js + pascalize(newProp[0]) in style2)) {
              return false;
            }
          }
          return newProp.map(prefixCss);
        }
        return false;
      }
    };
    plugins2 = [appearence, colorAdjust, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009];
    propertyDetectors = plugins2.filter(function(p2) {
      return p2.supportedProperty;
    }).map(function(p2) {
      return p2.supportedProperty;
    });
    noPrefill = plugins2.filter(function(p2) {
      return p2.noPrefill;
    }).reduce(function(a2, p2) {
      a2.push.apply(a2, _toConsumableArray(p2.noPrefill));
      return a2;
    }, []);
    cache2 = {};
    if (module_default) {
      el = document.createElement("p");
      computed = window.getComputedStyle(document.documentElement, "");
      for (key$1 in computed) {
        if (!isNaN(key$1))
          cache2[computed[key$1]] = computed[key$1];
      }
      noPrefill.forEach(function(x2) {
        return delete cache2[x2];
      });
    }
    cache$1 = {};
    transitionProperties = {
      transition: 1,
      "transition-property": 1,
      "-webkit-transition": 1,
      "-webkit-transition-property": 1
    };
    transPropsRegExp = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
    if (module_default)
      el$1 = document.createElement("p");
  }
});

// node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js
function jssVendorPrefixer() {
  function onProcessRule(rule) {
    if (rule.type === "keyframes") {
      var atRule = rule;
      atRule.at = supportedKeyframes(atRule.at);
    }
  }
  function prefixStyle(style2) {
    for (var prop in style2) {
      var value = style2[prop];
      if (prop === "fallbacks" && Array.isArray(value)) {
        style2[prop] = value.map(prefixStyle);
        continue;
      }
      var changeProp = false;
      var supportedProp = supportedProperty17(prop);
      if (supportedProp && supportedProp !== prop)
        changeProp = true;
      var changeValue = false;
      var supportedValue$1 = supportedValue(supportedProp, toCssValue(value));
      if (supportedValue$1 && supportedValue$1 !== value)
        changeValue = true;
      if (changeProp || changeValue) {
        if (changeProp)
          delete style2[prop];
        style2[supportedProp || prop] = supportedValue$1 || value;
      }
    }
    return style2;
  }
  function onProcessStyle2(style2, rule) {
    if (rule.type !== "style")
      return style2;
    return prefixStyle(style2);
  }
  function onChangeValue2(value, prop) {
    return supportedValue(prop, toCssValue(value)) || value;
  }
  return {
    onProcessRule,
    onProcessStyle: onProcessStyle2,
    onChangeValue: onChangeValue2
  };
}
var jss_plugin_vendor_prefixer_esm_default;
var init_jss_plugin_vendor_prefixer_esm = __esm({
  "node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js"() {
    init_css_vendor_esm();
    init_jss_esm();
    jss_plugin_vendor_prefixer_esm_default = jssVendorPrefixer;
  }
});

// node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js
function jssPropsSort() {
  var sort = function sort2(prop0, prop1) {
    if (prop0.length === prop1.length) {
      return prop0 > prop1 ? 1 : -1;
    }
    return prop0.length - prop1.length;
  };
  return {
    onProcessStyle: function onProcessStyle2(style2, rule) {
      if (rule.type !== "style")
        return style2;
      var newStyle = {};
      var props = Object.keys(style2).sort(sort);
      for (var i2 = 0; i2 < props.length; i2++) {
        newStyle[props[i2]] = style2[props[i2]];
      }
      return newStyle;
    }
  };
}
var jss_plugin_props_sort_esm_default;
var init_jss_plugin_props_sort_esm = __esm({
  "node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js"() {
    jss_plugin_props_sort_esm_default = jssPropsSort;
  }
});

// node_modules/@mui/styles/jssPreset/jssPreset.js
function jssPreset() {
  return {
    plugins: [
      jss_plugin_rule_value_function_esm_default(),
      jss_plugin_global_esm_default(),
      jss_plugin_nested_esm_default(),
      jss_plugin_camel_case_esm_default(),
      jss_plugin_default_unit_esm_default(),
      // Disable the vendor prefixer server-side, it does nothing.
      // This way, we can get a performance boost.
      // In the documentation, we are using `autoprefixer` to solve this problem.
      typeof window === "undefined" ? null : jss_plugin_vendor_prefixer_esm_default(),
      jss_plugin_props_sort_esm_default()
    ]
  };
}
var init_jssPreset = __esm({
  "node_modules/@mui/styles/jssPreset/jssPreset.js"() {
    init_jss_plugin_rule_value_function_esm();
    init_jss_plugin_global_esm();
    init_jss_plugin_nested_esm();
    init_jss_plugin_camel_case_esm();
    init_jss_plugin_default_unit_esm();
    init_jss_plugin_vendor_prefixer_esm();
    init_jss_plugin_props_sort_esm();
  }
});

// node_modules/@mui/styles/jssPreset/index.js
var init_jssPreset2 = __esm({
  "node_modules/@mui/styles/jssPreset/index.js"() {
    init_jssPreset();
  }
});

// node_modules/@mui/styles/mergeClasses/mergeClasses.js
function mergeClasses(options = {}) {
  const {
    baseClasses,
    newClasses,
    Component
  } = options;
  if (!newClasses) {
    return baseClasses;
  }
  const nextClasses = _extends({}, baseClasses);
  if (true) {
    if (typeof newClasses === "string") {
      console.error([`MUI: The value \`${newClasses}\` provided to the classes prop of ${getDisplayName(Component)} is incorrect.`, "You might want to use the className prop instead."].join("\n"));
      return baseClasses;
    }
  }
  Object.keys(newClasses).forEach((key) => {
    if (true) {
      if (!baseClasses[key] && newClasses[key]) {
        console.error([`MUI: The key \`${key}\` provided to the classes prop is not implemented in ${getDisplayName(Component)}.`, `You can only override one of the following: ${Object.keys(baseClasses).join(",")}.`].join("\n"));
      }
      if (newClasses[key] && typeof newClasses[key] !== "string") {
        console.error([`MUI: The key \`${key}\` provided to the classes prop is not valid for ${getDisplayName(Component)}.`, `You need to provide a non empty string instead of: ${newClasses[key]}.`].join("\n"));
      }
    }
    if (newClasses[key]) {
      nextClasses[key] = `${baseClasses[key]} ${newClasses[key]}`;
    }
  });
  return nextClasses;
}
var init_mergeClasses = __esm({
  "node_modules/@mui/styles/mergeClasses/mergeClasses.js"() {
    init_extends();
    init_utils();
  }
});

// node_modules/@mui/styles/mergeClasses/index.js
var init_mergeClasses2 = __esm({
  "node_modules/@mui/styles/mergeClasses/index.js"() {
    init_mergeClasses();
  }
});

// node_modules/@mui/styles/makeStyles/multiKeyStore.js
var multiKeyStore, multiKeyStore_default;
var init_multiKeyStore = __esm({
  "node_modules/@mui/styles/makeStyles/multiKeyStore.js"() {
    multiKeyStore = {
      set: (cache3, key1, key2, value) => {
        let subCache = cache3.get(key1);
        if (!subCache) {
          subCache = /* @__PURE__ */ new Map();
          cache3.set(key1, subCache);
        }
        subCache.set(key2, value);
      },
      get: (cache3, key1, key2) => {
        const subCache = cache3.get(key1);
        return subCache ? subCache.get(key2) : void 0;
      },
      delete: (cache3, key1, key2) => {
        const subCache = cache3.get(key1);
        subCache.delete(key2);
      }
    };
    multiKeyStore_default = multiKeyStore;
  }
});

// node_modules/@mui/styles/useTheme/index.js
function useTheme2() {
  var _privateTheme$$$mater;
  const privateTheme = useTheme();
  return (_privateTheme$$$mater = privateTheme == null ? void 0 : privateTheme.$$material) != null ? _privateTheme$$$mater : privateTheme;
}
var init_useTheme2 = __esm({
  "node_modules/@mui/styles/useTheme/index.js"() {
    init_useTheme();
  }
});

// node_modules/@mui/styles/StylesProvider/StylesProvider.js
function StylesProvider(props) {
  const {
    children,
    injectFirst = false,
    disableGeneration = false
  } = props, localOptions = _objectWithoutPropertiesLoose(props, _excluded5);
  const outerOptions = React5.useContext(StylesContext);
  const {
    generateClassName,
    jss,
    serverGenerateClassName,
    sheetsCache,
    sheetsManager,
    sheetsRegistry
  } = _extends({}, outerOptions, localOptions);
  if (true) {
    if (injectFirst && localOptions.jss) {
      console.error("MUI: You cannot use the jss and injectFirst props at the same time.");
    }
  }
  const value = React5.useMemo(() => {
    const context = {
      disableGeneration,
      generateClassName,
      jss,
      serverGenerateClassName,
      sheetsCache,
      sheetsManager,
      sheetsRegistry
    };
    if (true) {
      if (typeof window === "undefined" && !context.sheetsManager) {
        console.error("MUI: You need to use the ServerStyleSheets API when rendering on the server.");
      }
    }
    if (true) {
      if (context.jss.options.insertionPoint && injectFirst) {
        console.error("MUI: You cannot use a custom insertionPoint and <StylesContext injectFirst> at the same time.");
      }
    }
    if (!context.jss.options.insertionPoint && injectFirst && typeof window !== "undefined") {
      if (!injectFirstNode) {
        const head = document.head;
        injectFirstNode = document.createComment("mui-inject-first");
        head.insertBefore(injectFirstNode, head.firstChild);
      }
      context.jss = createJss({
        plugins: jssPreset().plugins,
        insertionPoint: injectFirstNode
      });
    }
    return context;
  }, [injectFirst, disableGeneration, generateClassName, jss, serverGenerateClassName, sheetsCache, sheetsManager, sheetsRegistry]);
  return (0, import_jsx_runtime.jsx)(StylesContext.Provider, {
    value,
    children
  });
}
var React5, import_prop_types2, import_jsx_runtime, _excluded5, defaultJSS, defaultGenerateClassName, defaultSheetsManager, defaultOptions, StylesContext, injectFirstNode;
var init_StylesProvider = __esm({
  "node_modules/@mui/styles/StylesProvider/StylesProvider.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    React5 = __toESM(require_react());
    import_prop_types2 = __toESM(require_prop_types());
    init_utils();
    init_jss_esm();
    init_createGenerateClassName2();
    init_jssPreset2();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    _excluded5 = ["children", "injectFirst", "disableGeneration"];
    defaultJSS = createJss(jssPreset());
    defaultGenerateClassName = createGenerateClassName();
    defaultSheetsManager = /* @__PURE__ */ new Map();
    defaultOptions = {
      disableGeneration: false,
      generateClassName: defaultGenerateClassName,
      jss: defaultJSS,
      sheetsCache: null,
      sheetsManager: defaultSheetsManager,
      sheetsRegistry: null
    };
    StylesContext = React5.createContext(defaultOptions);
    if (true) {
      StylesContext.displayName = "StylesContext";
    }
    true ? StylesProvider.propTypes = {
      /**
       * Your component tree.
       */
      children: import_prop_types2.default.node,
      /**
       * You can disable the generation of the styles with this option.
       * It can be useful when traversing the React tree outside of the HTML
       * rendering step on the server.
       * Let's say you are using react-apollo to extract all
       * the queries made by the interface server-side - you can significantly speed up the traversal with this prop.
       */
      disableGeneration: import_prop_types2.default.bool,
      /**
       * JSS's class name generator.
       */
      generateClassName: import_prop_types2.default.func,
      /**
       * By default, the styles are injected last in the <head> element of the page.
       * As a result, they gain more specificity than any other style sheet.
       * If you want to override MUI's styles, set this prop.
       */
      injectFirst: import_prop_types2.default.bool,
      /**
       * JSS's instance.
       */
      jss: import_prop_types2.default.object,
      /**
       * @ignore
       */
      serverGenerateClassName: import_prop_types2.default.func,
      /**
       * @ignore
       *
       * Beta feature.
       *
       * Cache for the sheets.
       */
      sheetsCache: import_prop_types2.default.object,
      /**
       * @ignore
       *
       * The sheetsManager is used to deduplicate style sheet injection in the page.
       * It's deduplicating using the (theme, styles) couple.
       * On the server, you should provide a new instance for each request.
       */
      sheetsManager: import_prop_types2.default.object,
      /**
       * @ignore
       *
       * Collect the sheets.
       */
      sheetsRegistry: import_prop_types2.default.object
    } : void 0;
    if (true) {
      true ? StylesProvider.propTypes = exactProp(StylesProvider.propTypes) : void 0;
    }
  }
});

// node_modules/@mui/styles/StylesProvider/index.js
var init_StylesProvider2 = __esm({
  "node_modules/@mui/styles/StylesProvider/index.js"() {
    init_StylesProvider();
    init_StylesProvider();
  }
});

// node_modules/@mui/styles/makeStyles/indexCounter.js
function increment() {
  indexCounter += 1;
  if (true) {
    if (indexCounter >= 0) {
      console.warn(["MUI: You might have a memory leak.", "The indexCounter is not supposed to grow that much."].join("\n"));
    }
  }
  return indexCounter;
}
var indexCounter;
var init_indexCounter = __esm({
  "node_modules/@mui/styles/makeStyles/indexCounter.js"() {
    indexCounter = -1e9;
  }
});

// node_modules/@mui/styles/propsToClassKey/propsToClassKey.js
function isEmpty(string) {
  return string.length === 0;
}
function propsToClassKey(props) {
  const {
    variant
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded6);
  let classKey = variant || "";
  Object.keys(other).sort().forEach((key) => {
    if (key === "color") {
      classKey += isEmpty(classKey) ? props[key] : capitalize(props[key]);
    } else {
      classKey += `${isEmpty(classKey) ? key : capitalize(key)}${capitalize(props[key].toString())}`;
    }
  });
  return classKey;
}
var _excluded6;
var init_propsToClassKey = __esm({
  "node_modules/@mui/styles/propsToClassKey/propsToClassKey.js"() {
    init_objectWithoutPropertiesLoose();
    init_utils();
    _excluded6 = ["variant"];
  }
});

// node_modules/@mui/styles/propsToClassKey/index.js
var init_propsToClassKey2 = __esm({
  "node_modules/@mui/styles/propsToClassKey/index.js"() {
    init_propsToClassKey();
  }
});

// node_modules/@mui/styles/getStylesCreator/noopTheme.js
var noopTheme, noopTheme_default;
var init_noopTheme = __esm({
  "node_modules/@mui/styles/getStylesCreator/noopTheme.js"() {
    noopTheme = {};
    noopTheme_default = noopTheme;
  }
});

// node_modules/@mui/styles/getStylesCreator/getStylesCreator.js
function getStylesCreator(stylesOrCreator) {
  const themingEnabled = typeof stylesOrCreator === "function";
  if (true) {
    if (typeof stylesOrCreator !== "object" && !themingEnabled) {
      console.error(["MUI: The `styles` argument provided is invalid.", "You need to provide a function generating the styles or a styles object."].join("\n"));
    }
  }
  return {
    create: (theme, name) => {
      let styles;
      try {
        styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;
      } catch (err) {
        if (true) {
          if (themingEnabled === true && theme === noopTheme_default) {
            console.error(["MUI: The `styles` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join("\n"));
          }
        }
        throw err;
      }
      if (!name || !theme.components || !theme.components[name] || !theme.components[name].styleOverrides && !theme.components[name].variants) {
        return styles;
      }
      const overrides = theme.components[name].styleOverrides || {};
      const variants = theme.components[name].variants || [];
      const stylesWithOverrides = _extends({}, styles);
      Object.keys(overrides).forEach((key) => {
        if (true) {
          if (!stylesWithOverrides[key]) {
            console.warn(["MUI: You are trying to override a style that does not exist.", `Fix the \`${key}\` key of \`theme.components.${name}.styleOverrides\`.`, "", `If you intentionally wanted to add a new key, please use the theme.components[${name}].variants option.`].join("\n"));
          }
        }
        stylesWithOverrides[key] = deepmerge(stylesWithOverrides[key] || {}, overrides[key]);
      });
      variants.forEach((definition) => {
        const classKey = propsToClassKey(definition.props);
        stylesWithOverrides[classKey] = deepmerge(stylesWithOverrides[classKey] || {}, definition.style);
      });
      return stylesWithOverrides;
    },
    options: {}
  };
}
var init_getStylesCreator = __esm({
  "node_modules/@mui/styles/getStylesCreator/getStylesCreator.js"() {
    init_extends();
    init_utils();
    init_propsToClassKey2();
    init_noopTheme();
  }
});

// node_modules/@mui/styles/getStylesCreator/index.js
var init_getStylesCreator2 = __esm({
  "node_modules/@mui/styles/getStylesCreator/index.js"() {
    init_getStylesCreator();
  }
});

// node_modules/@mui/styles/makeStyles/makeStyles.js
function getClasses({
  state,
  stylesOptions
}, classes, Component) {
  if (stylesOptions.disableGeneration) {
    return classes || {};
  }
  if (!state.cacheClasses) {
    state.cacheClasses = {
      // Cache for the finalized classes value.
      value: null,
      // Cache for the last used classes prop pointer.
      lastProp: null,
      // Cache for the last used rendered classes pointer.
      lastJSS: {}
    };
  }
  let generate = false;
  if (state.classes !== state.cacheClasses.lastJSS) {
    state.cacheClasses.lastJSS = state.classes;
    generate = true;
  }
  if (classes !== state.cacheClasses.lastProp) {
    state.cacheClasses.lastProp = classes;
    generate = true;
  }
  if (generate) {
    state.cacheClasses.value = mergeClasses({
      baseClasses: state.cacheClasses.lastJSS,
      newClasses: classes,
      Component
    });
  }
  return state.cacheClasses.value;
}
function attach({
  state,
  theme,
  stylesOptions,
  stylesCreator,
  name
}, props) {
  if (stylesOptions.disableGeneration) {
    return;
  }
  let sheetManager = multiKeyStore_default.get(stylesOptions.sheetsManager, stylesCreator, theme);
  if (!sheetManager) {
    sheetManager = {
      refs: 0,
      staticSheet: null,
      dynamicStyles: null
    };
    multiKeyStore_default.set(stylesOptions.sheetsManager, stylesCreator, theme, sheetManager);
  }
  const options = _extends({}, stylesCreator.options, stylesOptions, {
    theme,
    flip: typeof stylesOptions.flip === "boolean" ? stylesOptions.flip : theme.direction === "rtl"
  });
  options.generateId = options.serverGenerateClassName || options.generateClassName;
  const sheetsRegistry = stylesOptions.sheetsRegistry;
  if (sheetManager.refs === 0) {
    let staticSheet;
    if (stylesOptions.sheetsCache) {
      staticSheet = multiKeyStore_default.get(stylesOptions.sheetsCache, stylesCreator, theme);
    }
    const styles = stylesCreator.create(theme, name);
    if (!staticSheet) {
      staticSheet = stylesOptions.jss.createStyleSheet(styles, _extends({
        link: false
      }, options));
      staticSheet.attach();
      if (stylesOptions.sheetsCache) {
        multiKeyStore_default.set(stylesOptions.sheetsCache, stylesCreator, theme, staticSheet);
      }
    }
    if (sheetsRegistry) {
      sheetsRegistry.add(staticSheet);
    }
    sheetManager.staticSheet = staticSheet;
    sheetManager.dynamicStyles = getDynamicStyles(styles);
  }
  if (sheetManager.dynamicStyles) {
    const dynamicSheet = stylesOptions.jss.createStyleSheet(sheetManager.dynamicStyles, _extends({
      link: true
    }, options));
    dynamicSheet.update(props);
    dynamicSheet.attach();
    state.dynamicSheet = dynamicSheet;
    state.classes = mergeClasses({
      baseClasses: sheetManager.staticSheet.classes,
      newClasses: dynamicSheet.classes
    });
    if (sheetsRegistry) {
      sheetsRegistry.add(dynamicSheet);
    }
  } else {
    state.classes = sheetManager.staticSheet.classes;
  }
  sheetManager.refs += 1;
}
function update2({
  state
}, props) {
  if (state.dynamicSheet) {
    state.dynamicSheet.update(props);
  }
}
function detach({
  state,
  theme,
  stylesOptions,
  stylesCreator
}) {
  if (stylesOptions.disableGeneration) {
    return;
  }
  const sheetManager = multiKeyStore_default.get(stylesOptions.sheetsManager, stylesCreator, theme);
  sheetManager.refs -= 1;
  const sheetsRegistry = stylesOptions.sheetsRegistry;
  if (sheetManager.refs === 0) {
    multiKeyStore_default.delete(stylesOptions.sheetsManager, stylesCreator, theme);
    stylesOptions.jss.removeStyleSheet(sheetManager.staticSheet);
    if (sheetsRegistry) {
      sheetsRegistry.remove(sheetManager.staticSheet);
    }
  }
  if (state.dynamicSheet) {
    stylesOptions.jss.removeStyleSheet(state.dynamicSheet);
    if (sheetsRegistry) {
      sheetsRegistry.remove(state.dynamicSheet);
    }
  }
}
function useSynchronousEffect(func, values2) {
  const key = React6.useRef([]);
  let output;
  const currentKey = React6.useMemo(() => ({}), values2);
  if (key.current !== currentKey) {
    key.current = currentKey;
    output = func();
  }
  React6.useEffect(
    () => () => {
      if (output) {
        output();
      }
    },
    [currentKey]
    // eslint-disable-line react-hooks/exhaustive-deps
  );
}
function makeStyles(stylesOrCreator, options = {}) {
  const {
    // alias for classNamePrefix, if provided will listen to theme (required for theme.components[name].styleOverrides)
    name,
    // Help with debuggability.
    classNamePrefix: classNamePrefixOption,
    Component,
    defaultTheme = noopTheme_default
  } = options, stylesOptions2 = _objectWithoutPropertiesLoose(options, _excluded7);
  const stylesCreator = getStylesCreator(stylesOrCreator);
  const classNamePrefix = name || classNamePrefixOption || "makeStyles";
  stylesCreator.options = {
    index: increment(),
    name,
    meta: classNamePrefix,
    classNamePrefix
  };
  const useStyles = (props = {}) => {
    const theme = useTheme2() || defaultTheme;
    const stylesOptions = _extends({}, React6.useContext(StylesContext), stylesOptions2);
    const instance = React6.useRef();
    const shouldUpdate = React6.useRef();
    useSynchronousEffect(() => {
      const current = {
        name,
        state: {},
        stylesCreator,
        stylesOptions,
        theme
      };
      attach(current, props);
      shouldUpdate.current = false;
      instance.current = current;
      return () => {
        detach(current);
      };
    }, [theme, stylesCreator]);
    React6.useEffect(() => {
      if (shouldUpdate.current) {
        update2(instance.current, props);
      }
      shouldUpdate.current = true;
    });
    const classes = getClasses(instance.current, props.classes, Component);
    if (true) {
      React6.useDebugValue(classes);
    }
    if (true) {
      const supportedComponents = ["MuiAvatar", "MuiBadge", "MuiButton", "MuiButtonGroup", "MuiChip", "MuiDivider", "MuiFab", "MuiPaper", "MuiToolbar", "MuiTypography", "MuiAlert", "MuiPagination", "MuiPaginationItem", "MuiSkeleton", "MuiTimelineDot"];
      if (name && supportedComponents.indexOf(name) >= 0 && props.variant && !classes[props.variant]) {
        console.error([`MUI: You are using a variant value \`${props.variant}\` for which you didn't define styles.`, `Please create a new variant matcher in your theme for this variant. To learn more about matchers visit https://mui.com/r/custom-component-variants.`].join("\n"));
      }
    }
    return classes;
  };
  return useStyles;
}
var React6, _excluded7;
var init_makeStyles = __esm({
  "node_modules/@mui/styles/makeStyles/makeStyles.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    React6 = __toESM(require_react());
    init_jss_esm();
    init_mergeClasses2();
    init_multiKeyStore();
    init_useTheme2();
    init_StylesProvider2();
    init_indexCounter();
    init_getStylesCreator2();
    init_noopTheme();
    _excluded7 = ["name", "classNamePrefix", "Component", "defaultTheme"];
  }
});

// node_modules/@mui/styles/makeStyles/index.js
var init_makeStyles2 = __esm({
  "node_modules/@mui/styles/makeStyles/index.js"() {
    init_makeStyles();
  }
});

// node_modules/@mui/styles/ServerStyleSheets/ServerStyleSheets.js
var React7, import_jsx_runtime2, ServerStyleSheets;
var init_ServerStyleSheets = __esm({
  "node_modules/@mui/styles/ServerStyleSheets/ServerStyleSheets.js"() {
    init_extends();
    React7 = __toESM(require_react());
    init_jss_esm();
    init_StylesProvider2();
    init_createGenerateClassName2();
    import_jsx_runtime2 = __toESM(require_jsx_runtime());
    ServerStyleSheets = class {
      constructor(options = {}) {
        this.options = options;
      }
      collect(children) {
        const sheetsManager = /* @__PURE__ */ new Map();
        this.sheetsRegistry = new SheetsRegistry();
        const generateClassName = createGenerateClassName();
        return (0, import_jsx_runtime2.jsx)(StylesProvider, _extends({
          sheetsManager,
          serverGenerateClassName: generateClassName,
          sheetsRegistry: this.sheetsRegistry
        }, this.options, {
          children
        }));
      }
      toString() {
        return this.sheetsRegistry ? this.sheetsRegistry.toString() : "";
      }
      getStyleElement(props) {
        return React7.createElement("style", _extends({
          id: "jss-server-side",
          key: "jss-server-side",
          dangerouslySetInnerHTML: {
            __html: this.toString()
          }
        }, props));
      }
    };
  }
});

// node_modules/@mui/styles/ServerStyleSheets/index.js
var init_ServerStyleSheets2 = __esm({
  "node_modules/@mui/styles/ServerStyleSheets/index.js"() {
    init_ServerStyleSheets();
  }
});

// node_modules/@mui/styles/node_modules/clsx/dist/clsx.mjs
function r(e2) {
  var t2, f2, n2 = "";
  if ("string" == typeof e2 || "number" == typeof e2)
    n2 += e2;
  else if ("object" == typeof e2)
    if (Array.isArray(e2)) {
      var o2 = e2.length;
      for (t2 = 0; t2 < o2; t2++)
        e2[t2] && (f2 = r(e2[t2])) && (n2 && (n2 += " "), n2 += f2);
    } else
      for (f2 in e2)
        e2[f2] && (n2 && (n2 += " "), n2 += f2);
  return n2;
}
function clsx() {
  for (var e2, t2, f2 = 0, n2 = "", o2 = arguments.length; f2 < o2; f2++)
    (e2 = arguments[f2]) && (t2 = r(e2)) && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
var clsx_default;
var init_clsx = __esm({
  "node_modules/@mui/styles/node_modules/clsx/dist/clsx.mjs"() {
    clsx_default = clsx;
  }
});

// node_modules/@mui/styles/styled/styled.js
function omit(input, fields) {
  const output = {};
  Object.keys(input).forEach((prop) => {
    if (fields.indexOf(prop) === -1) {
      output[prop] = input[prop];
    }
  });
  return output;
}
function styled(Component) {
  const componentCreator = (style2, options = {}) => {
    const {
      name
    } = options, stylesOptions = _objectWithoutPropertiesLoose(options, _excluded8);
    if (Component === void 0) {
      throw new Error(["You are calling styled(Component)(style) with an undefined component.", "You may have forgotten to import it."].join("\n"));
    }
    let classNamePrefix = name;
    if (true) {
      if (!name) {
        const displayName = getDisplayName(Component);
        if (displayName !== void 0) {
          classNamePrefix = displayName;
        }
      }
    }
    const stylesOrCreator = typeof style2 === "function" ? (theme) => ({
      root: (props) => style2(_extends({
        theme
      }, props))
    }) : {
      root: style2
    };
    const useStyles = makeStyles(stylesOrCreator, _extends({
      Component,
      name: name || Component.displayName,
      classNamePrefix
    }, stylesOptions));
    let filterProps;
    let propTypes = {};
    if (style2.filterProps) {
      filterProps = style2.filterProps;
      delete style2.filterProps;
    }
    if (style2.propTypes) {
      propTypes = style2.propTypes;
      delete style2.propTypes;
    }
    const StyledComponent = React8.forwardRef(function StyledComponent2(props, ref2) {
      const {
        children,
        className: classNameProp,
        clone,
        component: ComponentProp
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded22);
      const classes = useStyles(props);
      const className = clsx_default(classes.root, classNameProp);
      let spread = other;
      if (filterProps) {
        spread = omit(spread, filterProps);
      }
      if (clone) {
        return React8.cloneElement(children, _extends({
          className: clsx_default(children.props.className, className)
        }, spread));
      }
      if (typeof children === "function") {
        return children(_extends({
          className
        }, spread));
      }
      const FinalComponent = ComponentProp || Component;
      return (0, import_jsx_runtime3.jsx)(FinalComponent, _extends({
        ref: ref2,
        className
      }, spread, {
        children
      }));
    });
    true ? StyledComponent.propTypes = _extends({
      /**
       * A render function or node.
       */
      children: import_prop_types3.default.oneOfType([import_prop_types3.default.node, import_prop_types3.default.func]),
      /**
       * @ignore
       */
      className: import_prop_types3.default.string,
      /**
       * If `true`, the component will recycle it's children HTML element.
       * It's using `React.cloneElement` internally.
       *
       * This prop will be deprecated and removed in v5
       */
      clone: chainPropTypes(import_prop_types3.default.bool, (props) => {
        if (props.clone && props.component) {
          return new Error("You can not use the clone and component prop at the same time.");
        }
        return null;
      }),
      /**
       * The component used for the root node.
       * Either a string to use a HTML element or a component.
       */
      component: import_prop_types3.default.elementType
    }, propTypes) : void 0;
    if (true) {
      StyledComponent.displayName = `Styled(${classNamePrefix})`;
    }
    (0, import_hoist_non_react_statics2.default)(StyledComponent, Component);
    return StyledComponent;
  };
  return componentCreator;
}
var React8, import_prop_types3, import_hoist_non_react_statics2, import_jsx_runtime3, _excluded8, _excluded22;
var init_styled = __esm({
  "node_modules/@mui/styles/styled/styled.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    React8 = __toESM(require_react());
    init_clsx();
    import_prop_types3 = __toESM(require_prop_types());
    init_utils();
    import_hoist_non_react_statics2 = __toESM(require_hoist_non_react_statics_cjs());
    init_makeStyles2();
    import_jsx_runtime3 = __toESM(require_jsx_runtime());
    _excluded8 = ["name"];
    _excluded22 = ["children", "className", "clone", "component"];
  }
});

// node_modules/@mui/styles/styled/index.js
var init_styled2 = __esm({
  "node_modules/@mui/styles/styled/index.js"() {
    init_styled();
  }
});

// node_modules/@mui/styles/ThemeProvider/index.js
var init_ThemeProvider2 = __esm({
  "node_modules/@mui/styles/ThemeProvider/index.js"() {
    init_ThemeProvider();
  }
});

// node_modules/@mui/styles/useThemeVariants/useThemeVariants.js
var useThemeVariants, useThemeVariants_default;
var init_useThemeVariants = __esm({
  "node_modules/@mui/styles/useThemeVariants/useThemeVariants.js"() {
    init_useTheme2();
    init_propsToClassKey2();
    useThemeVariants = (props, name) => {
      const {
        classes = {}
      } = props;
      const theme = useTheme2();
      let variantsClasses = "";
      if (theme && theme.components && theme.components[name] && theme.components[name].variants) {
        const themeVariants = theme.components[name].variants;
        themeVariants.forEach((themeVariant) => {
          let isMatch = true;
          Object.keys(themeVariant.props).forEach((key) => {
            if (props[key] !== themeVariant.props[key]) {
              isMatch = false;
            }
          });
          if (isMatch) {
            variantsClasses = `${variantsClasses}${classes[propsToClassKey(themeVariant.props)]} `;
          }
        });
      }
      return variantsClasses;
    };
    useThemeVariants_default = useThemeVariants;
  }
});

// node_modules/@mui/styles/useThemeVariants/index.js
var init_useThemeVariants2 = __esm({
  "node_modules/@mui/styles/useThemeVariants/index.js"() {
    init_useThemeVariants();
  }
});

// node_modules/@mui/styles/withStyles/withStyles.js
var React9, import_prop_types4, import_hoist_non_react_statics3, import_jsx_runtime4, _excluded9, _excluded23, withStyles, withStyles_default;
var init_withStyles = __esm({
  "node_modules/@mui/styles/withStyles/withStyles.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    React9 = __toESM(require_react());
    import_prop_types4 = __toESM(require_prop_types());
    import_hoist_non_react_statics3 = __toESM(require_hoist_non_react_statics_cjs());
    init_utils();
    init_makeStyles2();
    init_getThemeProps2();
    init_useTheme2();
    import_jsx_runtime4 = __toESM(require_jsx_runtime());
    _excluded9 = ["defaultTheme", "withTheme", "name"];
    _excluded23 = ["classes"];
    withStyles = (stylesOrCreator, options = {}) => (Component) => {
      const {
        defaultTheme,
        withTheme: withTheme2 = false,
        name
      } = options, stylesOptions = _objectWithoutPropertiesLoose(options, _excluded9);
      if (true) {
        if (Component === void 0) {
          throw new Error(["You are calling withStyles(styles)(Component) with an undefined component.", "You may have forgotten to import it."].join("\n"));
        }
      }
      let classNamePrefix = name;
      if (true) {
        if (!name) {
          const displayName = getDisplayName(Component);
          if (displayName !== void 0) {
            classNamePrefix = displayName;
          }
        }
      }
      const useStyles = makeStyles(stylesOrCreator, _extends({
        defaultTheme,
        Component,
        name: name || Component.displayName,
        classNamePrefix
      }, stylesOptions));
      const WithStyles = React9.forwardRef(function WithStyles2(props, ref2) {
        const other = _objectWithoutPropertiesLoose(props, _excluded23);
        const classes = useStyles(_extends({}, Component.defaultProps, props));
        let theme;
        let more = other;
        if (typeof name === "string" || withTheme2) {
          theme = useTheme2() || defaultTheme;
          if (name) {
            more = getThemeProps({
              theme,
              name,
              props: other
            });
          }
          if (withTheme2 && !more.theme) {
            more.theme = theme;
          }
        }
        return (0, import_jsx_runtime4.jsx)(Component, _extends({
          ref: ref2,
          classes
        }, more));
      });
      true ? WithStyles.propTypes = {
        /**
         * Override or extend the styles applied to the component.
         */
        classes: import_prop_types4.default.object
      } : void 0;
      if (true) {
        WithStyles.displayName = `WithStyles(${getDisplayName(Component)})`;
      }
      (0, import_hoist_non_react_statics3.default)(WithStyles, Component);
      if (true) {
        WithStyles.Naked = Component;
        WithStyles.options = options;
        WithStyles.useStyles = useStyles;
      }
      return WithStyles;
    };
    withStyles_default = withStyles;
  }
});

// node_modules/@mui/styles/withStyles/index.js
var init_withStyles2 = __esm({
  "node_modules/@mui/styles/withStyles/index.js"() {
    init_withStyles();
  }
});

// node_modules/@mui/styles/withTheme/withTheme.js
function withThemeCreator(options = {}) {
  const {
    defaultTheme
  } = options;
  const withTheme2 = (Component) => {
    if (true) {
      if (Component === void 0) {
        throw new Error(["You are calling withTheme(Component) with an undefined component.", "You may have forgotten to import it."].join("\n"));
      }
    }
    const WithTheme = React10.forwardRef(function WithTheme2(props, ref2) {
      const theme = useTheme2() || defaultTheme;
      return (0, import_jsx_runtime5.jsx)(Component, _extends({
        theme,
        ref: ref2
      }, props));
    });
    if (true) {
      WithTheme.displayName = `WithTheme(${getDisplayName(Component)})`;
    }
    (0, import_hoist_non_react_statics4.default)(WithTheme, Component);
    if (true) {
      WithTheme.Naked = Component;
    }
    return WithTheme;
  };
  return withTheme2;
}
var React10, import_hoist_non_react_statics4, import_jsx_runtime5, withTheme, withTheme_default;
var init_withTheme = __esm({
  "node_modules/@mui/styles/withTheme/withTheme.js"() {
    init_extends();
    React10 = __toESM(require_react());
    import_hoist_non_react_statics4 = __toESM(require_hoist_non_react_statics_cjs());
    init_utils();
    init_useTheme2();
    import_jsx_runtime5 = __toESM(require_jsx_runtime());
    withTheme = withThemeCreator();
    withTheme_default = withTheme;
  }
});

// node_modules/@mui/styles/withTheme/index.js
var init_withTheme2 = __esm({
  "node_modules/@mui/styles/withTheme/index.js"() {
    init_withTheme();
    init_withTheme();
  }
});

// node_modules/@mui/styles/index.js
var styles_exports2 = {};
__export(styles_exports2, {
  ServerStyleSheets: () => ServerStyleSheets,
  StylesContext: () => StylesContext,
  StylesProvider: () => StylesProvider,
  ThemeProvider: () => ThemeProvider_default,
  createGenerateClassName: () => createGenerateClassName,
  createStyles: () => createStyles,
  getThemeProps: () => getThemeProps,
  jssPreset: () => jssPreset,
  makeStyles: () => makeStyles,
  mergeClasses: () => mergeClasses,
  propsToClassKey: () => propsToClassKey,
  sheetsManager: () => defaultSheetsManager,
  styled: () => styled,
  useTheme: () => useTheme2,
  useThemeVariants: () => useThemeVariants_default,
  withStyles: () => withStyles_default,
  withTheme: () => withTheme_default,
  withThemeCreator: () => withThemeCreator
});
var init_styles2 = __esm({
  "node_modules/@mui/styles/index.js"() {
    init_utils();
    init_createGenerateClassName2();
    init_createGenerateClassName2();
    init_createStyles2();
    init_createStyles2();
    init_getThemeProps2();
    init_getThemeProps2();
    init_jssPreset2();
    init_jssPreset2();
    init_makeStyles2();
    init_makeStyles2();
    init_mergeClasses2();
    init_mergeClasses2();
    init_ServerStyleSheets2();
    init_ServerStyleSheets2();
    init_styled2();
    init_styled2();
    init_StylesProvider2();
    init_StylesProvider2();
    init_ThemeProvider2();
    init_ThemeProvider2();
    init_useTheme2();
    init_useTheme2();
    init_useThemeVariants2();
    init_useThemeVariants2();
    init_propsToClassKey2();
    init_propsToClassKey2();
    init_withStyles2();
    init_withStyles2();
    init_withTheme2();
    init_withTheme2();
    if (typeof window !== "undefined") {
      ponyfillGlobal_default["__@mui/styles-init__"] = ponyfillGlobal_default["__@mui/styles-init__"] || 0;
      if (ponyfillGlobal_default["__@mui/styles-init__"] === 1) {
        console.warn(["It looks like there are several instances of `@mui/styles` initialized in this application.", "This may cause theme propagation issues, broken class names, specificity issues, and makes your application bigger without a good reason.", "", "See https://mui.com/r/styles-instance-warning for more info."].join("\n"));
      }
      ponyfillGlobal_default["__@mui/styles-init__"] += 1;
    }
  }
});

// node_modules/material-table/dist/components/m-table-edit-cell.js
var require_m_table_edit_cell = __commonJS({
  "node_modules/material-table/dist/components/m-table-edit-cell.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var React62 = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var _TableCell = _interopRequireDefault((init_TableCell(), __toCommonJS(TableCell_exports)));
    var _CircularProgress = _interopRequireDefault((init_CircularProgress(), __toCommonJS(CircularProgress_exports)));
    var _styles = (init_styles2(), __toCommonJS(styles_exports2));
    var _2 = require_dist2();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTableEditCell = function(_React$Component) {
      (0, _inherits2.default)(MTableEditCell2, _React$Component);
      var _super = _createSuper(MTableEditCell2);
      function MTableEditCell2(props) {
        var _this;
        (0, _classCallCheck2.default)(this, MTableEditCell2);
        _this = _super.call(this, props);
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getStyle", function() {
          var cellStyle = {
            boxShadow: "2px 0px 15px rgba(125,147,178,.25)",
            color: "inherit",
            width: _this.props.columnDef.tableData.width,
            boxSizing: "border-box",
            fontSize: "inherit",
            fontFamily: "inherit",
            fontWeight: "inherit",
            padding: "0 16px"
          };
          if (typeof _this.props.columnDef.cellStyle === "function") {
            cellStyle = (0, _objectSpread22.default)({}, cellStyle, _this.props.columnDef.cellStyle(_this.state.value, _this.props.rowData));
          } else {
            cellStyle = (0, _objectSpread22.default)({}, cellStyle, _this.props.columnDef.cellStyle);
          }
          if (typeof _this.props.cellEditable.cellStyle === "function") {
            cellStyle = (0, _objectSpread22.default)({}, cellStyle, _this.props.cellEditable.cellStyle(_this.state.value, _this.props.rowData, _this.props.columnDef));
          } else {
            cellStyle = (0, _objectSpread22.default)({}, cellStyle, _this.props.cellEditable.cellStyle);
          }
          return cellStyle;
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleKeyDown", function(e2) {
          if (e2.keyCode === 13) {
            _this.onApprove();
          } else if (e2.keyCode === 27) {
            _this.onCancel();
          }
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onApprove", function() {
          _this.setState({
            isLoading: true
          }, function() {
            _this.props.cellEditable.onCellEditApproved(
              _this.state.value,
              // newValue
              _this.props.rowData[_this.props.columnDef.field],
              // oldValue
              _this.props.rowData,
              // rowData with old value
              _this.props.columnDef
              // columnDef
            ).then(function() {
              _this.setState({
                isLoading: false
              });
              _this.props.onCellEditFinished(_this.props.rowData, _this.props.columnDef);
            }).catch(function(error2) {
              _this.setState({
                isLoading: false
              });
            });
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onCancel", function() {
          _this.props.onCellEditFinished(_this.props.rowData, _this.props.columnDef);
        });
        _this.state = {
          isLoading: false,
          value: _this.props.rowData[_this.props.columnDef.field]
        };
        return _this;
      }
      (0, _createClass2.default)(MTableEditCell2, [{
        key: "renderActions",
        value: function renderActions() {
          if (this.state.isLoading) {
            return React62.createElement("div", {
              style: {
                display: "flex",
                justifyContent: "center",
                width: 60
              }
            }, React62.createElement(_CircularProgress.default, {
              size: 20
            }));
          }
          var actions = [{
            icon: this.props.icons.Check,
            tooltip: this.props.localization.saveTooltip,
            onClick: this.onApprove,
            disabled: this.state.isLoading
          }, {
            icon: this.props.icons.Clear,
            tooltip: this.props.localization.cancelTooltip,
            onClick: this.onCancel,
            disabled: this.state.isLoading
          }];
          return React62.createElement(this.props.components.Actions, {
            actions,
            components: this.props.components,
            size: "small"
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          return React62.createElement(_TableCell.default, {
            size: this.props.size,
            style: this.getStyle(),
            padding: "none"
          }, React62.createElement("div", {
            style: {
              display: "flex",
              alignItems: "center"
            }
          }, React62.createElement("div", {
            style: {
              flex: 1,
              marginRight: 4
            }
          }, React62.createElement(this.props.components.EditField, {
            columnDef: this.props.columnDef,
            value: this.state.value,
            onChange: function onChange(value) {
              return _this2.setState({
                value
              });
            },
            onKeyDown: this.handleKeyDown,
            disabled: this.state.isLoading,
            autoFocus: true
          })), this.renderActions()));
        }
      }]);
      return MTableEditCell2;
    }(React62.Component);
    MTableEditCell.defaultProps = {
      columnDef: {}
    };
    MTableEditCell.propTypes = {
      cellEditable: _propTypes.default.object.isRequired,
      columnDef: _propTypes.default.object.isRequired,
      components: _propTypes.default.object.isRequired,
      errorState: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.bool]),
      icons: _propTypes.default.object.isRequired,
      localization: _propTypes.default.object.isRequired,
      onCellEditFinished: _propTypes.default.func.isRequired,
      rowData: _propTypes.default.object.isRequired,
      size: _propTypes.default.string
    };
    var _default = (0, _styles.withTheme)(MTableEditCell);
    exports.default = _default;
  }
});

// node_modules/material-table/dist/utils/index.js
var require_utils = __commonJS({
  "node_modules/material-table/dist/utils/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.setByString = exports.byString = void 0;
    var byString = function byString2(o2, s2) {
      if (!s2) {
        return;
      }
      s2 = s2.replace(/\[(\w+)\]/g, ".$1");
      s2 = s2.replace(/^\./, "");
      var a2 = s2.split(".");
      for (var i2 = 0, n2 = a2.length; i2 < n2; ++i2) {
        var x2 = a2[i2];
        if (o2 && x2 in o2) {
          o2 = o2[x2];
        } else {
          return;
        }
      }
      return o2;
    };
    exports.byString = byString;
    var setByString = function setByString2(obj, path, value) {
      var schema = obj;
      path = path.replace(/\[(\w+)\]/g, ".$1");
      path = path.replace(/^\./, "");
      var pList = path.split(".");
      var len = pList.length;
      for (var i2 = 0; i2 < len - 1; i2++) {
        var elem = pList[i2];
        if (!schema[elem])
          schema[elem] = {};
        schema = schema[elem];
      }
      schema[pList[len - 1]] = value;
    };
    exports.setByString = setByString;
  }
});

// node_modules/material-table/dist/components/m-table-edit-row.js
var require_m_table_edit_row = __commonJS({
  "node_modules/material-table/dist/components/m-table-edit-row.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof3 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _extends2 = _interopRequireDefault(require_extends());
    var _typeof2 = _interopRequireDefault(require_typeof());
    var _objectWithoutProperties2 = _interopRequireDefault(require_objectWithoutProperties());
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _TableCell = _interopRequireDefault((init_TableCell(), __toCommonJS(TableCell_exports)));
    var _TableRow = _interopRequireDefault((init_TableRow(), __toCommonJS(TableRow_exports)));
    var _Typography = _interopRequireDefault((init_Typography(), __toCommonJS(Typography_exports)));
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var React62 = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var CommonValues = _interopRequireWildcard(require_common_values());
    var _excluded21 = ["editComponent"];
    var _excluded24 = ["detailPanel", "isTreeData", "onRowClick", "onRowSelected", "onTreeExpandChanged", "onToggleDetailPanel", "onEditingApproved", "onEditingCanceled", "getFieldValue", "components", "icons", "columns", "localization", "options", "actions", "errorState", "onBulkEditRowChanged", "scrollWidth"];
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTableEditRow = function(_React$Component) {
      (0, _inherits2.default)(MTableEditRow2, _React$Component);
      var _super = _createSuper(MTableEditRow2);
      function MTableEditRow2(props) {
        var _this;
        (0, _classCallCheck2.default)(this, MTableEditRow2);
        _this = _super.call(this, props);
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSave", function() {
          var newData = _this.state.data;
          delete newData.tableData;
          _this.props.onEditingApproved(_this.props.mode, _this.state.data, _this.props.data);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleKeyDown", function(e2) {
          if (e2.keyCode === 13 && e2.target.type !== "textarea") {
            _this.handleSave();
          } else if (e2.keyCode === 13 && e2.target.type === "textarea" && e2.shiftKey) {
            _this.handleSave();
          } else if (e2.keyCode === 27) {
            _this.props.onEditingCanceled(_this.props.mode, _this.props.data);
          }
        });
        _this.state = {
          data: props.data ? JSON.parse(JSON.stringify(props.data)) : _this.createRowData()
        };
        return _this;
      }
      (0, _createClass2.default)(MTableEditRow2, [{
        key: "createRowData",
        value: function createRowData() {
          return this.props.columns.filter(function(column) {
            return "initialEditValue" in column && column.field;
          }).reduce(function(prev, column) {
            prev[column.field] = column.initialEditValue;
            return prev;
          }, {});
        }
      }, {
        key: "renderColumns",
        value: function renderColumns() {
          var _this2 = this;
          var size = CommonValues.elementSize(this.props);
          var mapArr = this.props.columns.filter(function(columnDef) {
            return !columnDef.hidden && !(columnDef.tableData.groupOrder > -1);
          }).sort(function(a2, b2) {
            return a2.tableData.columnOrder - b2.tableData.columnOrder;
          }).map(function(columnDef, index2) {
            var value = typeof _this2.state.data[columnDef.field] !== "undefined" ? _this2.state.data[columnDef.field] : (0, _utils.byString)(_this2.state.data, columnDef.field);
            var getCellStyle = function getCellStyle2(columnDef2, value2) {
              var cellStyle = {
                color: "inherit"
              };
              if (typeof columnDef2.cellStyle === "function") {
                cellStyle = (0, _objectSpread22.default)({}, cellStyle, columnDef2.cellStyle(value2, _this2.props.data));
              } else {
                cellStyle = (0, _objectSpread22.default)({}, cellStyle, columnDef2.cellStyle);
              }
              if (columnDef2.disableClick) {
                cellStyle.cursor = "default";
              }
              return (0, _objectSpread22.default)({}, cellStyle);
            };
            var style2 = {};
            if (index2 === 0) {
              style2.paddingLeft = 24 + _this2.props.level * 20;
            }
            var allowEditing = false;
            if (columnDef.editable === void 0) {
              allowEditing = true;
            }
            if (columnDef.editable === "always") {
              allowEditing = true;
            }
            if (columnDef.editable === "onAdd" && _this2.props.mode === "add") {
              allowEditing = true;
            }
            if (columnDef.editable === "onUpdate" && _this2.props.mode === "update") {
              allowEditing = true;
            }
            if (typeof columnDef.editable === "function") {
              allowEditing = columnDef.editable(columnDef, _this2.props.data);
            }
            if (!columnDef.field || !allowEditing) {
              var readonlyValue = _this2.props.getFieldValue(_this2.state.data, columnDef);
              return React62.createElement(_this2.props.components.Cell, {
                size,
                icons: _this2.props.icons,
                columnDef,
                value: readonlyValue,
                key: columnDef.tableData.id,
                rowData: _this2.props.data,
                style: getCellStyle(columnDef, value)
              });
            } else {
              var editComponent = columnDef.editComponent, cellProps = (0, _objectWithoutProperties2.default)(columnDef, _excluded21);
              var EditComponent = editComponent || _this2.props.components.EditField;
              var error2 = {
                isValid: true,
                helperText: ""
              };
              if (columnDef.validate) {
                var validateResponse = columnDef.validate(_this2.state.data);
                switch ((0, _typeof2.default)(validateResponse)) {
                  case "object":
                    error2 = (0, _objectSpread22.default)({}, validateResponse);
                    break;
                  case "boolean":
                    error2 = {
                      isValid: validateResponse,
                      helperText: ""
                    };
                    break;
                  case "string":
                    error2 = {
                      isValid: false,
                      helperText: validateResponse
                    };
                    break;
                }
              }
              return React62.createElement(_TableCell.default, {
                size,
                key: columnDef.tableData.id,
                align: ["numeric"].indexOf(columnDef.type) !== -1 ? "right" : "left",
                style: getCellStyle(columnDef, value)
              }, React62.createElement(EditComponent, {
                key: columnDef.tableData.id,
                columnDef: cellProps,
                value,
                error: !error2.isValid,
                helperText: error2.helperText,
                locale: _this2.props.localization.dateTimePickerLocalization,
                rowData: _this2.state.data,
                onChange: function onChange(value2) {
                  var data = (0, _objectSpread22.default)({}, _this2.state.data);
                  (0, _utils.setByString)(data, columnDef.field, value2);
                  _this2.setState({
                    data
                  }, function() {
                    if (_this2.props.onBulkEditRowChanged) {
                      _this2.props.onBulkEditRowChanged(_this2.props.data, data);
                    }
                  });
                },
                onRowDataChange: function onRowDataChange(data) {
                  _this2.setState({
                    data
                  }, function() {
                    if (_this2.props.onBulkEditRowChanged) {
                      _this2.props.onBulkEditRowChanged(_this2.props.data, data);
                    }
                  });
                }
              }));
            }
          });
          return mapArr;
        }
      }, {
        key: "renderActions",
        value: function renderActions() {
          var _this3 = this;
          if (this.props.mode === "bulk") {
            return React62.createElement(_TableCell.default, {
              padding: "none",
              key: "key-actions-column"
            });
          }
          var size = CommonValues.elementSize(this.props);
          var localization = (0, _objectSpread22.default)({}, MTableEditRow2.defaultProps.localization, this.props.localization);
          var isValid2 = this.props.columns.every(function(column) {
            if (column.validate) {
              var response = column.validate(_this3.state.data);
              switch ((0, _typeof2.default)(response)) {
                case "object":
                  return response.isValid;
                case "string":
                  return response.length === 0;
                case "boolean":
                  return response;
              }
            } else {
              return true;
            }
          });
          var actions = [{
            icon: this.props.icons.Check,
            tooltip: localization.saveTooltip,
            disabled: !isValid2,
            onClick: this.handleSave
          }, {
            icon: this.props.icons.Clear,
            tooltip: localization.cancelTooltip,
            onClick: function onClick() {
              _this3.props.onEditingCanceled(_this3.props.mode, _this3.props.data);
            }
          }];
          return React62.createElement(_TableCell.default, {
            size,
            padding: "none",
            key: "key-actions-column",
            style: (0, _objectSpread22.default)({
              width: 42 * actions.length,
              padding: "0px 5px"
            }, this.props.options.editCellStyle)
          }, React62.createElement("div", {
            style: {
              display: "flex"
            }
          }, React62.createElement(this.props.components.Actions, {
            data: this.props.data,
            actions,
            components: this.props.components,
            size
          })));
        }
      }, {
        key: "getStyle",
        value: function getStyle4() {
          var style2 = {
            // boxShadow: '1px 1px 1px 1px rgba(0,0,0,0.2)',
            borderBottom: "1px solid red"
          };
          return style2;
        }
      }, {
        key: "render",
        value: function render() {
          var size = CommonValues.elementSize(this.props);
          var localization = (0, _objectSpread22.default)({}, MTableEditRow2.defaultProps.localization, this.props.localization);
          var columns;
          if (this.props.mode === "add" || this.props.mode === "update" || this.props.mode === "bulk") {
            columns = this.renderColumns();
          } else {
            var colSpan = this.props.columns.filter(function(columnDef) {
              return !columnDef.hidden && !(columnDef.tableData.groupOrder > -1);
            }).length;
            columns = [React62.createElement(_TableCell.default, {
              size,
              padding: this.props.options.actionsColumnIndex === 0 ? "none" : void 0,
              key: "key-edit-cell",
              colSpan
            }, React62.createElement(_Typography.default, {
              variant: "h6"
            }, localization.deleteText))];
          }
          if (this.props.options.selection) {
            columns.splice(0, 0, React62.createElement(_TableCell.default, {
              padding: "none",
              key: "key-selection-cell"
            }));
          }
          if (this.props.isTreeData) {
            columns.splice(0, 0, React62.createElement(_TableCell.default, {
              padding: "none",
              key: "key-tree-data-cell"
            }));
          }
          if (this.props.options.actionsColumnIndex === -1) {
            columns.push(this.renderActions());
          } else if (this.props.options.actionsColumnIndex >= 0) {
            var endPos = 0;
            if (this.props.options.selection) {
              endPos = 1;
            }
            if (this.props.isTreeData) {
              endPos = 1;
              if (this.props.options.selection) {
                columns.splice(1, 1);
              }
            }
            columns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());
          }
          if (this.props.detailPanel) {
            var aligment = this.props.options.detailPanelColumnAlignment;
            var index2 = aligment === "left" ? 0 : columns.length;
            columns.splice(index2, 0, React62.createElement(_TableCell.default, {
              padding: "none",
              key: "key-detail-panel-cell"
            }));
          }
          this.props.columns.filter(function(columnDef) {
            return columnDef.tableData.groupOrder > -1;
          }).forEach(function(columnDef) {
            columns.splice(0, 0, React62.createElement(_TableCell.default, {
              padding: "none",
              key: "key-group-cell" + columnDef.tableData.id
            }));
          });
          var _this$props = this.props, detailPanel = _this$props.detailPanel, isTreeData = _this$props.isTreeData, onRowClick = _this$props.onRowClick, onRowSelected = _this$props.onRowSelected, onTreeExpandChanged = _this$props.onTreeExpandChanged, onToggleDetailPanel = _this$props.onToggleDetailPanel, onEditingApproved = _this$props.onEditingApproved, onEditingCanceled = _this$props.onEditingCanceled, getFieldValue = _this$props.getFieldValue, components = _this$props.components, icons = _this$props.icons, columnsProp = _this$props.columns, localizationProp = _this$props.localization, options = _this$props.options, actions = _this$props.actions, errorState = _this$props.errorState, onBulkEditRowChanged = _this$props.onBulkEditRowChanged, scrollWidth = _this$props.scrollWidth, rowProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded24);
          return React62.createElement(React62.Fragment, null, React62.createElement(_TableRow.default, (0, _extends2.default)({
            onKeyDown: this.handleKeyDown
          }, rowProps, {
            style: this.getStyle()
          }), columns));
        }
      }]);
      return MTableEditRow2;
    }(React62.Component);
    exports.default = MTableEditRow;
    MTableEditRow.defaultProps = {
      actions: [],
      index: 0,
      options: {},
      path: [],
      localization: {
        saveTooltip: "Save",
        cancelTooltip: "Cancel",
        deleteText: "Are you sure you want to delete this row?"
      },
      onBulkEditRowChanged: function onBulkEditRowChanged() {
      }
    };
    MTableEditRow.propTypes = {
      actions: _propTypes.default.array,
      icons: _propTypes.default.any.isRequired,
      index: _propTypes.default.number.isRequired,
      data: _propTypes.default.object,
      detailPanel: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]))]),
      options: _propTypes.default.object.isRequired,
      onRowSelected: _propTypes.default.func,
      path: _propTypes.default.arrayOf(_propTypes.default.number),
      columns: _propTypes.default.array,
      onRowClick: _propTypes.default.func,
      onEditingApproved: _propTypes.default.func,
      onEditingCanceled: _propTypes.default.func,
      localization: _propTypes.default.object,
      getFieldValue: _propTypes.default.func,
      errorState: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.bool]),
      onBulkEditRowChanged: _propTypes.default.func
    };
  }
});

// node_modules/@mui/lab/AdapterDateFns/AdapterDateFns.js
var warnedOnce, warn, AdapterDateFns;
var init_AdapterDateFns = __esm({
  "node_modules/@mui/lab/AdapterDateFns/AdapterDateFns.js"() {
    warnedOnce = false;
    warn = () => {
      if (!warnedOnce) {
        console.warn(["MUI: The AdapterDateFns class was moved from `@mui/lab` to `@mui/x-date-pickers`", "", "You should use `import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce = true;
      }
    };
    AdapterDateFns = class {
      constructor() {
        warn();
      }
    };
  }
});

// node_modules/@mui/lab/AdapterDateFns/index.js
var AdapterDateFns_exports = {};
__export(AdapterDateFns_exports, {
  default: () => AdapterDateFns
});
var init_AdapterDateFns2 = __esm({
  "node_modules/@mui/lab/AdapterDateFns/index.js"() {
    init_AdapterDateFns();
  }
});

// node_modules/@mui/lab/Alert/Alert.js
var React11, import_jsx_runtime6, warnedOnce2, Alert_default2;
var init_Alert2 = __esm({
  "node_modules/@mui/lab/Alert/Alert.js"() {
    "use client";
    init_extends();
    React11 = __toESM(require_react());
    init_Alert();
    import_jsx_runtime6 = __toESM(require_jsx_runtime());
    warnedOnce2 = false;
    Alert_default2 = React11.forwardRef(function DeprecatedAlert(props, ref2) {
      if (!warnedOnce2) {
        console.warn(["MUI: The Alert component was moved from the lab to the core.", "", "You should use `import { Alert } from '@mui/material'`", "or `import Alert from '@mui/material/Alert'`"].join("\n"));
        warnedOnce2 = true;
      }
      return (0, import_jsx_runtime6.jsx)(Alert_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/Alert/index.js
var init_Alert3 = __esm({
  "node_modules/@mui/lab/Alert/index.js"() {
    init_Alert2();
  }
});

// node_modules/@mui/lab/AlertTitle/AlertTitle.js
var React12, import_jsx_runtime7, warnedOnce3, AlertTitle_default2;
var init_AlertTitle2 = __esm({
  "node_modules/@mui/lab/AlertTitle/AlertTitle.js"() {
    "use client";
    init_extends();
    React12 = __toESM(require_react());
    init_AlertTitle();
    import_jsx_runtime7 = __toESM(require_jsx_runtime());
    warnedOnce3 = false;
    AlertTitle_default2 = React12.forwardRef(function DeprecatedAlertTitle(props, ref2) {
      if (!warnedOnce3) {
        console.warn(["MUI: The AlertTitle component was moved from the lab to the core.", "", "You should use `import { AlertTitle } from '@mui/material'`", "or `import AlertTitle from '@mui/material/AlertTitle'`"].join("\n"));
        warnedOnce3 = true;
      }
      return (0, import_jsx_runtime7.jsx)(AlertTitle_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/AlertTitle/index.js
var init_AlertTitle3 = __esm({
  "node_modules/@mui/lab/AlertTitle/index.js"() {
    init_AlertTitle2();
  }
});

// node_modules/@mui/lab/Autocomplete/Autocomplete.js
var React13, import_jsx_runtime8, warnedOnce4, Autocomplete_default2;
var init_Autocomplete2 = __esm({
  "node_modules/@mui/lab/Autocomplete/Autocomplete.js"() {
    "use client";
    init_extends();
    React13 = __toESM(require_react());
    init_Autocomplete();
    import_jsx_runtime8 = __toESM(require_jsx_runtime());
    warnedOnce4 = false;
    Autocomplete_default2 = React13.forwardRef(function DeprecatedAutocomplete(props, ref2) {
      if (!warnedOnce4) {
        console.warn(["MUI: The Autocomplete component was moved from the lab to the core.", "", "You should use `import { Autocomplete } from '@mui/material'`", "or `import Autocomplete from '@mui/material/Autocomplete'`"].join("\n"));
        warnedOnce4 = true;
      }
      return (0, import_jsx_runtime8.jsx)(Autocomplete_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/Autocomplete/index.js
var init_Autocomplete3 = __esm({
  "node_modules/@mui/lab/Autocomplete/index.js"() {
    init_Autocomplete2();
  }
});

// node_modules/@mui/lab/AvatarGroup/AvatarGroup.js
var React14, import_jsx_runtime9, warnedOnce5, AvatarGroup_default2;
var init_AvatarGroup2 = __esm({
  "node_modules/@mui/lab/AvatarGroup/AvatarGroup.js"() {
    "use client";
    init_extends();
    React14 = __toESM(require_react());
    init_AvatarGroup();
    import_jsx_runtime9 = __toESM(require_jsx_runtime());
    warnedOnce5 = false;
    AvatarGroup_default2 = React14.forwardRef(function DeprecatedAvatarGroup(props, ref2) {
      if (!warnedOnce5) {
        console.warn(["MUI: The AvatarGroup component was moved from the lab to the core.", "", "You should use `import { AvatarGroup } from '@mui/material'`", "or `import AvatarGroup from '@mui/material/AvatarGroup'`"].join("\n"));
        warnedOnce5 = true;
      }
      return (0, import_jsx_runtime9.jsx)(AvatarGroup_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/AvatarGroup/index.js
var init_AvatarGroup3 = __esm({
  "node_modules/@mui/lab/AvatarGroup/index.js"() {
    init_AvatarGroup2();
  }
});

// node_modules/@mui/lab/CalendarPicker/CalendarPicker.js
var React15, warnedOnce6, warn2, CalendarPicker, CalendarPicker_default, calendarPickerClasses;
var init_CalendarPicker = __esm({
  "node_modules/@mui/lab/CalendarPicker/CalendarPicker.js"() {
    "use client";
    React15 = __toESM(require_react());
    warnedOnce6 = false;
    warn2 = () => {
      if (!warnedOnce6) {
        console.warn(["MUI: The CalendarPicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { CalendarPicker } from '@mui/x-date-pickers'`", "or `import { CalendarPicker } from '@mui/x-date-pickers/CalendarPicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce6 = true;
      }
    };
    CalendarPicker = React15.forwardRef(function DeprecatedCalendarPicker() {
      warn2();
      return null;
    });
    CalendarPicker_default = CalendarPicker;
    calendarPickerClasses = {};
  }
});

// node_modules/@mui/lab/CalendarPicker/index.js
var init_CalendarPicker2 = __esm({
  "node_modules/@mui/lab/CalendarPicker/index.js"() {
    init_CalendarPicker();
    init_CalendarPicker();
  }
});

// node_modules/@mui/lab/ClockPicker/ClockPicker.js
var React16, warnedOnce7, warn3, ClockPicker, ClockPicker_default, clockPickerClasses;
var init_ClockPicker = __esm({
  "node_modules/@mui/lab/ClockPicker/ClockPicker.js"() {
    "use client";
    React16 = __toESM(require_react());
    warnedOnce7 = false;
    warn3 = () => {
      if (!warnedOnce7) {
        console.warn(["MUI: The ClockPicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { ClockPicker } from '@mui/x-date-pickers'`", "or `import { ClockPicker } from '@mui/x-date-pickers/ClockPicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce7 = true;
      }
    };
    ClockPicker = React16.forwardRef(function DeprecatedClockPicker() {
      warn3();
      return null;
    });
    ClockPicker_default = ClockPicker;
    clockPickerClasses = {};
  }
});

// node_modules/@mui/lab/ClockPicker/index.js
var init_ClockPicker2 = __esm({
  "node_modules/@mui/lab/ClockPicker/index.js"() {
    init_ClockPicker();
    init_ClockPicker();
  }
});

// node_modules/@mui/lab/DatePicker/DatePicker.js
var React17, warnedOnce8, warn4, DatePicker, DatePicker_default;
var init_DatePicker = __esm({
  "node_modules/@mui/lab/DatePicker/DatePicker.js"() {
    "use client";
    React17 = __toESM(require_react());
    warnedOnce8 = false;
    warn4 = () => {
      if (!warnedOnce8) {
        console.warn(["MUI: The DatePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { DatePicker } from '@mui/x-date-pickers'`", "or `import { DatePicker } from '@mui/x-date-pickers/DatePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce8 = true;
      }
    };
    DatePicker = React17.forwardRef(function DeprecatedDatePicker() {
      warn4();
      return null;
    });
    DatePicker_default = DatePicker;
  }
});

// node_modules/@mui/lab/DatePicker/index.js
var init_DatePicker2 = __esm({
  "node_modules/@mui/lab/DatePicker/index.js"() {
    init_DatePicker();
    init_DatePicker();
  }
});

// node_modules/@mui/lab/DateRangePicker/DateRangePicker.js
var React18, warnedOnce9, warn5, DateRangePicker, DateRangePicker_default;
var init_DateRangePicker = __esm({
  "node_modules/@mui/lab/DateRangePicker/DateRangePicker.js"() {
    React18 = __toESM(require_react());
    warnedOnce9 = false;
    warn5 = () => {
      if (!warnedOnce9) {
        console.warn(["MUI: The DateRangePicker component was moved from `@mui/lab` to `@mui/x-date-pickers-pro`", "", "You should use `import { DateRangePicker } from '@mui/x-date-pickers-pro'`", "or `import { DateRangePicker } from '@mui/x-date-pickers-pro/DateRangePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce9 = true;
      }
    };
    DateRangePicker = React18.forwardRef(function DeprecatedDateRangePicker() {
      warn5();
      return null;
    });
    DateRangePicker_default = DateRangePicker;
  }
});

// node_modules/@mui/lab/DateRangePicker/index.js
var init_DateRangePicker2 = __esm({
  "node_modules/@mui/lab/DateRangePicker/index.js"() {
    init_DateRangePicker();
    init_DateRangePicker();
  }
});

// node_modules/@mui/lab/DateRangePickerDay/DateRangePickerDay.js
var React19, warnedOnce10, warn6, DateRangePickerDay, DateRangePickerDay_default, getDateRangePickerDayUtilityClass;
var init_DateRangePickerDay = __esm({
  "node_modules/@mui/lab/DateRangePickerDay/DateRangePickerDay.js"() {
    React19 = __toESM(require_react());
    warnedOnce10 = false;
    warn6 = () => {
      if (!warnedOnce10) {
        console.warn(["MUI: The DateRangePickerDay component was moved from `@mui/lab` to `@mui/x-date-pickers-pro`", "", "You should use `import { DateRangePickerDay } from '@mui/x-date-pickers-pro'`", "or `import { DateRangePickerDay } from '@mui/x-date-pickers-pro/DateRangePickerDay'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce10 = true;
      }
    };
    DateRangePickerDay = React19.forwardRef(function DeprecatedDateRangePickerDay() {
      warn6();
      return null;
    });
    DateRangePickerDay_default = DateRangePickerDay;
    getDateRangePickerDayUtilityClass = (slot) => {
      warn6();
      return "";
    };
  }
});

// node_modules/@mui/lab/DateRangePickerDay/index.js
var init_DateRangePickerDay2 = __esm({
  "node_modules/@mui/lab/DateRangePickerDay/index.js"() {
    init_DateRangePickerDay();
    init_DateRangePickerDay();
  }
});

// node_modules/@mui/lab/DateTimePicker/DateTimePicker.js
var React20, warnedOnce11, warn7, DateTimePicker, DateTimePicker_default;
var init_DateTimePicker = __esm({
  "node_modules/@mui/lab/DateTimePicker/DateTimePicker.js"() {
    "use client";
    React20 = __toESM(require_react());
    warnedOnce11 = false;
    warn7 = () => {
      if (!warnedOnce11) {
        console.warn(["MUI: The DateTimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { DateTimePicker } from '@mui/x-date-pickers'`", "or `import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce11 = true;
      }
    };
    DateTimePicker = React20.forwardRef(function DeprecatedDateTimePicker() {
      warn7();
      return null;
    });
    DateTimePicker_default = DateTimePicker;
  }
});

// node_modules/@mui/lab/DateTimePicker/index.js
var init_DateTimePicker2 = __esm({
  "node_modules/@mui/lab/DateTimePicker/index.js"() {
    init_DateTimePicker();
    init_DateTimePicker();
  }
});

// node_modules/@mui/lab/DesktopDatePicker/DesktopDatePicker.js
var React21, warnedOnce12, warn8, DesktopDatePicker, DesktopDatePicker_default;
var init_DesktopDatePicker = __esm({
  "node_modules/@mui/lab/DesktopDatePicker/DesktopDatePicker.js"() {
    "use client";
    React21 = __toESM(require_react());
    warnedOnce12 = false;
    warn8 = () => {
      if (!warnedOnce12) {
        console.warn(["MUI: The DesktopDatePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { DesktopDatePicker } from '@mui/x-date-pickers'`", "or `import { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce12 = true;
      }
    };
    DesktopDatePicker = React21.forwardRef(function DeprecatedDesktopDatePicker() {
      warn8();
      return null;
    });
    DesktopDatePicker_default = DesktopDatePicker;
  }
});

// node_modules/@mui/lab/DesktopDatePicker/index.js
var init_DesktopDatePicker2 = __esm({
  "node_modules/@mui/lab/DesktopDatePicker/index.js"() {
    init_DesktopDatePicker();
    init_DesktopDatePicker();
  }
});

// node_modules/@mui/lab/DesktopDateRangePicker/DesktopDateRangePicker.js
var React22, warnedOnce13, warn9, DesktopDateRangePicker, DesktopDateRangePicker_default;
var init_DesktopDateRangePicker = __esm({
  "node_modules/@mui/lab/DesktopDateRangePicker/DesktopDateRangePicker.js"() {
    React22 = __toESM(require_react());
    warnedOnce13 = false;
    warn9 = () => {
      if (!warnedOnce13) {
        console.warn(["MUI: The DesktopDateRangePicker component was moved from `@mui/lab` to `@mui/x-date-pickers-pro`", "", "You should use `import { DesktopDateRangePicker } from '@mui/x-date-pickers-pro'`", "or `import { DesktopDateRangePicker } from '@mui/x-date-pickers-pro/DesktopDateRangePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce13 = true;
      }
    };
    DesktopDateRangePicker = React22.forwardRef(function DeprecatedDesktopDateRangePicker() {
      warn9();
      return null;
    });
    DesktopDateRangePicker_default = DesktopDateRangePicker;
  }
});

// node_modules/@mui/lab/DesktopDateRangePicker/index.js
var init_DesktopDateRangePicker2 = __esm({
  "node_modules/@mui/lab/DesktopDateRangePicker/index.js"() {
    init_DesktopDateRangePicker();
    init_DesktopDateRangePicker();
  }
});

// node_modules/@mui/lab/DesktopDateTimePicker/DesktopDateTimePicker.js
var React23, warnedOnce14, warn10, DesktopDateTimePicker, DesktopDateTimePicker_default;
var init_DesktopDateTimePicker = __esm({
  "node_modules/@mui/lab/DesktopDateTimePicker/DesktopDateTimePicker.js"() {
    "use client";
    React23 = __toESM(require_react());
    warnedOnce14 = false;
    warn10 = () => {
      if (!warnedOnce14) {
        console.warn(["MUI: The DesktopDateTimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { DesktopDateTimePicker } from '@mui/x-date-pickers'`", "or `import { DesktopDateTimePicker } from '@mui/x-date-pickers/DesktopDateTimePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce14 = true;
      }
    };
    DesktopDateTimePicker = React23.forwardRef(function DeprecatedDesktopDateTimePicker() {
      warn10();
      return null;
    });
    DesktopDateTimePicker_default = DesktopDateTimePicker;
  }
});

// node_modules/@mui/lab/DesktopDateTimePicker/index.js
var init_DesktopDateTimePicker2 = __esm({
  "node_modules/@mui/lab/DesktopDateTimePicker/index.js"() {
    init_DesktopDateTimePicker();
    init_DesktopDateTimePicker();
  }
});

// node_modules/@mui/lab/DesktopTimePicker/DesktopTimePicker.js
var React24, warnedOnce15, warn11, DesktopTimePicker, DesktopTimePicker_default;
var init_DesktopTimePicker = __esm({
  "node_modules/@mui/lab/DesktopTimePicker/DesktopTimePicker.js"() {
    "use client";
    React24 = __toESM(require_react());
    warnedOnce15 = false;
    warn11 = () => {
      if (!warnedOnce15) {
        console.warn(["MUI: The DesktopTimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { DesktopTimePicker } from '@mui/x-date-pickers'`", "or `import { DesktopTimePicker } from '@mui/x-date-pickers/DesktopTimePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce15 = true;
      }
    };
    DesktopTimePicker = React24.forwardRef(function DeprecatedDesktopTimePicker() {
      warn11();
      return null;
    });
    DesktopTimePicker_default = DesktopTimePicker;
  }
});

// node_modules/@mui/lab/DesktopTimePicker/index.js
var init_DesktopTimePicker2 = __esm({
  "node_modules/@mui/lab/DesktopTimePicker/index.js"() {
    init_DesktopTimePicker();
    init_DesktopTimePicker();
  }
});

// node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js
function getLoadingButtonUtilityClass(slot) {
  return generateUtilityClass("MuiLoadingButton", slot);
}
var loadingButtonClasses, loadingButtonClasses_default;
var init_loadingButtonClasses = __esm({
  "node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js"() {
    init_generateUtilityClass();
    init_generateUtilityClasses();
    loadingButtonClasses = generateUtilityClasses("MuiLoadingButton", ["root", "loading", "loadingIndicator", "loadingIndicatorCenter", "loadingIndicatorStart", "loadingIndicatorEnd", "endIconLoadingEnd", "startIconLoadingStart"]);
    loadingButtonClasses_default = loadingButtonClasses;
  }
});

// node_modules/@mui/lab/LoadingButton/LoadingButton.js
var React25, import_prop_types5, import_jsx_runtime10, import_jsx_runtime11, _excluded10, useUtilityClasses, rootShouldForwardProp, LoadingButtonRoot, LoadingButtonLoadingIndicator, LoadingButton, LoadingButton_default;
var init_LoadingButton = __esm({
  "node_modules/@mui/lab/LoadingButton/LoadingButton.js"() {
    "use client";
    init_objectWithoutPropertiesLoose();
    init_extends();
    React25 = __toESM(require_react());
    import_prop_types5 = __toESM(require_prop_types());
    init_utils();
    init_utils2();
    init_base();
    init_styles();
    init_Button();
    init_ButtonGroup();
    init_CircularProgress();
    init_resolveProps();
    init_loadingButtonClasses();
    import_jsx_runtime10 = __toESM(require_jsx_runtime());
    import_jsx_runtime11 = __toESM(require_jsx_runtime());
    _excluded10 = ["children", "disabled", "id", "loading", "loadingIndicator", "loadingPosition", "variant"];
    useUtilityClasses = (ownerState) => {
      const {
        loading,
        loadingPosition,
        classes
      } = ownerState;
      const slots = {
        root: ["root", loading && "loading"],
        startIcon: [loading && `startIconLoading${capitalize_default(loadingPosition)}`],
        endIcon: [loading && `endIconLoading${capitalize_default(loadingPosition)}`],
        loadingIndicator: ["loadingIndicator", loading && `loadingIndicator${capitalize_default(loadingPosition)}`]
      };
      const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);
      return _extends({}, classes, composedClasses);
    };
    rootShouldForwardProp = (prop) => prop !== "ownerState" && prop !== "theme" && prop !== "sx" && prop !== "as" && prop !== "classes";
    LoadingButtonRoot = styled_default(Button_default, {
      shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
      name: "MuiLoadingButton",
      slot: "Root",
      overridesResolver: (props, styles) => {
        return [styles.root, styles.startIconLoadingStart && {
          [`& .${loadingButtonClasses_default.startIconLoadingStart}`]: styles.startIconLoadingStart
        }, styles.endIconLoadingEnd && {
          [`& .${loadingButtonClasses_default.endIconLoadingEnd}`]: styles.endIconLoadingEnd
        }];
      }
    })(({
      ownerState,
      theme
    }) => _extends({
      [`& .${loadingButtonClasses_default.startIconLoadingStart}, & .${loadingButtonClasses_default.endIconLoadingEnd}`]: {
        transition: theme.transitions.create(["opacity"], {
          duration: theme.transitions.duration.short
        }),
        opacity: 0
      }
    }, ownerState.loadingPosition === "center" && {
      transition: theme.transitions.create(["background-color", "box-shadow", "border-color"], {
        duration: theme.transitions.duration.short
      }),
      [`&.${loadingButtonClasses_default.loading}`]: {
        color: "transparent"
      }
    }, ownerState.loadingPosition === "start" && ownerState.fullWidth && {
      [`& .${loadingButtonClasses_default.startIconLoadingStart}, & .${loadingButtonClasses_default.endIconLoadingEnd}`]: {
        transition: theme.transitions.create(["opacity"], {
          duration: theme.transitions.duration.short
        }),
        opacity: 0,
        marginRight: -8
      }
    }, ownerState.loadingPosition === "end" && ownerState.fullWidth && {
      [`& .${loadingButtonClasses_default.startIconLoadingStart}, & .${loadingButtonClasses_default.endIconLoadingEnd}`]: {
        transition: theme.transitions.create(["opacity"], {
          duration: theme.transitions.duration.short
        }),
        opacity: 0,
        marginLeft: -8
      }
    }));
    LoadingButtonLoadingIndicator = styled_default("span", {
      name: "MuiLoadingButton",
      slot: "LoadingIndicator",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.loadingIndicator, styles[`loadingIndicator${capitalize_default(ownerState.loadingPosition)}`]];
      }
    })(({
      theme,
      ownerState
    }) => _extends({
      position: "absolute",
      visibility: "visible",
      display: "flex"
    }, ownerState.loadingPosition === "start" && (ownerState.variant === "outlined" || ownerState.variant === "contained") && {
      left: ownerState.size === "small" ? 10 : 14
    }, ownerState.loadingPosition === "start" && ownerState.variant === "text" && {
      left: 6
    }, ownerState.loadingPosition === "center" && {
      left: "50%",
      transform: "translate(-50%)",
      color: (theme.vars || theme).palette.action.disabled
    }, ownerState.loadingPosition === "end" && (ownerState.variant === "outlined" || ownerState.variant === "contained") && {
      right: ownerState.size === "small" ? 10 : 14
    }, ownerState.loadingPosition === "end" && ownerState.variant === "text" && {
      right: 6
    }, ownerState.loadingPosition === "start" && ownerState.fullWidth && {
      position: "relative",
      left: -10
    }, ownerState.loadingPosition === "end" && ownerState.fullWidth && {
      position: "relative",
      right: -10
    }));
    LoadingButton = React25.forwardRef(function LoadingButton2(inProps, ref2) {
      const contextProps = React25.useContext(ButtonGroupContext_default);
      const resolvedProps = resolveProps(contextProps, inProps);
      const props = useThemeProps({
        props: resolvedProps,
        name: "MuiLoadingButton"
      });
      const {
        children,
        disabled = false,
        id: idProp,
        loading = false,
        loadingIndicator: loadingIndicatorProp,
        loadingPosition = "center",
        variant = "text"
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded10);
      const id = useId_default(idProp);
      const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : (0, import_jsx_runtime10.jsx)(CircularProgress_default, {
        "aria-labelledby": id,
        color: "inherit",
        size: 16
      });
      const ownerState = _extends({}, props, {
        disabled,
        loading,
        loadingIndicator,
        loadingPosition,
        variant
      });
      const classes = useUtilityClasses(ownerState);
      const loadingButtonLoadingIndicator = loading ? (0, import_jsx_runtime10.jsx)(LoadingButtonLoadingIndicator, {
        className: classes.loadingIndicator,
        ownerState,
        children: loadingIndicator
      }) : null;
      return (0, import_jsx_runtime11.jsxs)(LoadingButtonRoot, _extends({
        disabled: disabled || loading,
        id,
        ref: ref2
      }, other, {
        variant,
        classes,
        ownerState,
        children: [ownerState.loadingPosition === "end" ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === "end" ? loadingButtonLoadingIndicator : children]
      }));
    });
    true ? LoadingButton.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types5.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types5.default.object,
      /**
       * If `true`, the component is disabled.
       * @default false
       */
      disabled: import_prop_types5.default.bool,
      /**
       * @ignore
       */
      id: import_prop_types5.default.string,
      /**
       * If `true`, the loading indicator is shown and the button becomes disabled.
       * @default false
       */
      loading: import_prop_types5.default.bool,
      /**
       * Element placed before the children if the button is in loading state.
       * The node should contain an element with `role="progressbar"` with an accessible name.
       * By default we render a `CircularProgress` that is labelled by the button itself.
       * @default <CircularProgress color="inherit" size={16} />
       */
      loadingIndicator: import_prop_types5.default.node,
      /**
       * The loading indicator can be positioned on the start, end, or the center of the button.
       * @default 'center'
       */
      loadingPosition: chainPropTypes(import_prop_types5.default.oneOf(["start", "end", "center"]), (props) => {
        if (props.loadingPosition === "start" && !props.startIcon) {
          return new Error(`MUI: The loadingPosition="start" should be used in combination with startIcon.`);
        }
        if (props.loadingPosition === "end" && !props.endIcon) {
          return new Error(`MUI: The loadingPosition="end" should be used in combination with endIcon.`);
        }
        return null;
      }),
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types5.default.oneOfType([import_prop_types5.default.arrayOf(import_prop_types5.default.oneOfType([import_prop_types5.default.func, import_prop_types5.default.object, import_prop_types5.default.bool])), import_prop_types5.default.func, import_prop_types5.default.object]),
      /**
       * The variant to use.
       * @default 'text'
       */
      variant: import_prop_types5.default.oneOfType([import_prop_types5.default.oneOf(["contained", "outlined", "text"]), import_prop_types5.default.string])
    } : void 0;
    LoadingButton_default = LoadingButton;
  }
});

// node_modules/@mui/lab/LoadingButton/index.js
var init_LoadingButton2 = __esm({
  "node_modules/@mui/lab/LoadingButton/index.js"() {
    init_LoadingButton();
    init_loadingButtonClasses();
    init_loadingButtonClasses();
  }
});

// node_modules/@mui/lab/LocalizationProvider/LocalizationProvider.js
var React26, warnedOnce16, warn12, LocalizationProvider, LocalizationProvider_default;
var init_LocalizationProvider = __esm({
  "node_modules/@mui/lab/LocalizationProvider/LocalizationProvider.js"() {
    "use client";
    React26 = __toESM(require_react());
    warnedOnce16 = false;
    warn12 = () => {
      if (!warnedOnce16) {
        console.warn(["MUI: The LocalizationProvider component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { LocalizationProvider } from '@mui/x-date-pickers'`", "or `import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce16 = true;
      }
    };
    LocalizationProvider = React26.forwardRef(function DeprecatedLocalizationProvider() {
      warn12();
      return null;
    });
    LocalizationProvider_default = LocalizationProvider;
  }
});

// node_modules/@mui/lab/LocalizationProvider/index.js
var init_LocalizationProvider2 = __esm({
  "node_modules/@mui/lab/LocalizationProvider/index.js"() {
    init_LocalizationProvider();
    init_LocalizationProvider();
  }
});

// node_modules/@mui/lab/MobileDatePicker/MobileDatePicker.js
var React27, warnedOnce17, warn13, MobileDatePicker, MobileDatePicker_default;
var init_MobileDatePicker = __esm({
  "node_modules/@mui/lab/MobileDatePicker/MobileDatePicker.js"() {
    "use client";
    React27 = __toESM(require_react());
    warnedOnce17 = false;
    warn13 = () => {
      if (!warnedOnce17) {
        console.warn(["MUI: The MobileDatePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { MobileDatePicker } from '@mui/x-date-pickers'`", "or `import { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce17 = true;
      }
    };
    MobileDatePicker = React27.forwardRef(function DeprecatedMobileDatePicker(props, ref2) {
      warn13();
      return null;
    });
    MobileDatePicker_default = MobileDatePicker;
  }
});

// node_modules/@mui/lab/MobileDatePicker/index.js
var init_MobileDatePicker2 = __esm({
  "node_modules/@mui/lab/MobileDatePicker/index.js"() {
    init_MobileDatePicker();
    init_MobileDatePicker();
  }
});

// node_modules/@mui/lab/MobileDateRangePicker/MobileDateRangePicker.js
var React28, warnedOnce18, warn14, MobileDateRangePicker, MobileDateRangePicker_default;
var init_MobileDateRangePicker = __esm({
  "node_modules/@mui/lab/MobileDateRangePicker/MobileDateRangePicker.js"() {
    React28 = __toESM(require_react());
    warnedOnce18 = false;
    warn14 = () => {
      if (!warnedOnce18) {
        console.warn(["MUI: The MobileDateRangePicker component was moved from `@mui/lab` to `@mui/x-date-pickers-pro`", "", "You should use `import { MobileDateRangePicker } from '@mui/x-date-pickers-pro'`", "or `import { MobileDateRangePicker } from '@mui/x-date-pickers-pro/MobileDateRangePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce18 = true;
      }
    };
    MobileDateRangePicker = React28.forwardRef(function DeprecatedMobileDateRangePicker() {
      warn14();
      return null;
    });
    MobileDateRangePicker_default = MobileDateRangePicker;
  }
});

// node_modules/@mui/lab/MobileDateRangePicker/index.js
var init_MobileDateRangePicker2 = __esm({
  "node_modules/@mui/lab/MobileDateRangePicker/index.js"() {
    init_MobileDateRangePicker();
    init_MobileDateRangePicker();
  }
});

// node_modules/@mui/lab/MobileDateTimePicker/MobileDateTimePicker.js
var React29, warnedOnce19, warn15, MobileDateTimePicker, MobileDateTimePicker_default;
var init_MobileDateTimePicker = __esm({
  "node_modules/@mui/lab/MobileDateTimePicker/MobileDateTimePicker.js"() {
    "use client";
    React29 = __toESM(require_react());
    warnedOnce19 = false;
    warn15 = () => {
      if (!warnedOnce19) {
        console.warn(["MUI: The MobileDateTimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { MobileDateTimePicker } from '@mui/x-date-pickers'`", "or `import { MobileDateTimePicker } from '@mui/x-date-pickers/MobileDateTimePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce19 = true;
      }
    };
    MobileDateTimePicker = React29.forwardRef(function DeprecatedMobileDateTimePicker() {
      warn15();
      return null;
    });
    MobileDateTimePicker_default = MobileDateTimePicker;
  }
});

// node_modules/@mui/lab/MobileDateTimePicker/index.js
var init_MobileDateTimePicker2 = __esm({
  "node_modules/@mui/lab/MobileDateTimePicker/index.js"() {
    init_MobileDateTimePicker();
    init_MobileDateTimePicker();
  }
});

// node_modules/@mui/lab/MobileTimePicker/MobileTimePicker.js
var React30, warnedOnce20, warn16, MobileTimePicker, MobileTimePicker_default;
var init_MobileTimePicker = __esm({
  "node_modules/@mui/lab/MobileTimePicker/MobileTimePicker.js"() {
    "use client";
    React30 = __toESM(require_react());
    warnedOnce20 = false;
    warn16 = () => {
      if (!warnedOnce20) {
        console.warn(["MUI: The MobileTimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { MobileTimePicker } from '@mui/x-date-pickers'`", "or `import { MobileTimePicker } from '@mui/x-date-pickers/MobileTimePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce20 = true;
      }
    };
    MobileTimePicker = React30.forwardRef(function DeprecatedMobileTimePicker() {
      warn16();
      return null;
    });
    MobileTimePicker_default = MobileTimePicker;
  }
});

// node_modules/@mui/lab/MobileTimePicker/index.js
var init_MobileTimePicker2 = __esm({
  "node_modules/@mui/lab/MobileTimePicker/index.js"() {
    init_MobileTimePicker();
    init_MobileTimePicker();
  }
});

// node_modules/@mui/lab/MonthPicker/MonthPicker.js
var React31, warnedOnce21, warn17, MonthPicker, MonthPicker_default, monthPickerClasses, getMonthPickerUtilityClass;
var init_MonthPicker = __esm({
  "node_modules/@mui/lab/MonthPicker/MonthPicker.js"() {
    "use client";
    React31 = __toESM(require_react());
    warnedOnce21 = false;
    warn17 = () => {
      if (!warnedOnce21) {
        console.warn(["MUI: The MonthPicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { MonthPicker } from '@mui/x-date-pickers'`", "or `import { MonthPicker } from '@mui/x-date-pickers/MonthPicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce21 = true;
      }
    };
    MonthPicker = React31.forwardRef(function DeprecatedMonthPicker() {
      warn17();
      return null;
    });
    MonthPicker_default = MonthPicker;
    monthPickerClasses = {};
    getMonthPickerUtilityClass = (slot) => {
      warn17();
      return "";
    };
  }
});

// node_modules/@mui/lab/MonthPicker/index.js
var init_MonthPicker2 = __esm({
  "node_modules/@mui/lab/MonthPicker/index.js"() {
    init_MonthPicker();
    init_MonthPicker();
  }
});

// node_modules/@mui/lab/Pagination/Pagination.js
var React32, import_jsx_runtime12, warnedOnce22, Pagination_default2;
var init_Pagination2 = __esm({
  "node_modules/@mui/lab/Pagination/Pagination.js"() {
    "use client";
    init_extends();
    React32 = __toESM(require_react());
    init_Pagination();
    import_jsx_runtime12 = __toESM(require_jsx_runtime());
    warnedOnce22 = false;
    Pagination_default2 = React32.forwardRef(function DeprecatedPagination(props, ref2) {
      if (!warnedOnce22) {
        console.warn(["MUI: The Pagination component was moved from the lab to the core.", "", "You should use `import { Pagination } from '@mui/material'`", "or `import Pagination from '@mui/material/Pagination'`"].join("\n"));
        warnedOnce22 = true;
      }
      return (0, import_jsx_runtime12.jsx)(Pagination_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/Pagination/usePagination.js
var init_usePagination2 = __esm({
  "node_modules/@mui/lab/Pagination/usePagination.js"() {
    "use client";
    init_usePagination();
  }
});

// node_modules/@mui/lab/Pagination/index.js
var init_Pagination3 = __esm({
  "node_modules/@mui/lab/Pagination/index.js"() {
    init_Pagination2();
    init_usePagination2();
  }
});

// node_modules/@mui/lab/PaginationItem/PaginationItem.js
var React33, import_jsx_runtime13, warnedOnce23, PaginationItem_default2;
var init_PaginationItem2 = __esm({
  "node_modules/@mui/lab/PaginationItem/PaginationItem.js"() {
    "use client";
    init_extends();
    React33 = __toESM(require_react());
    init_PaginationItem();
    import_jsx_runtime13 = __toESM(require_jsx_runtime());
    warnedOnce23 = false;
    PaginationItem_default2 = React33.forwardRef(function DeprecatedPaginationItem(props, ref2) {
      if (!warnedOnce23) {
        console.warn(["MUI: The PaginationItem component was moved from the lab to the core.", "", "You should use `import { PaginationItem } from '@mui/material'`", "or `import PaginationItem from '@mui/material/PaginationItem'`"].join("\n"));
        warnedOnce23 = true;
      }
      return (0, import_jsx_runtime13.jsx)(PaginationItem_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/PaginationItem/index.js
var init_PaginationItem3 = __esm({
  "node_modules/@mui/lab/PaginationItem/index.js"() {
    init_PaginationItem2();
  }
});

// node_modules/@mui/lab/CalendarPickerSkeleton/CalendarPickerSkeleton.js
var React34, warnedOnce24, warn18, CalendarPickerSkeleton, CalendarPickerSkeleton_default, calendarPickerSkeletonClasses, getCalendarPickerSkeletonUtilityClass;
var init_CalendarPickerSkeleton = __esm({
  "node_modules/@mui/lab/CalendarPickerSkeleton/CalendarPickerSkeleton.js"() {
    "use client";
    React34 = __toESM(require_react());
    warnedOnce24 = false;
    warn18 = () => {
      if (!warnedOnce24) {
        console.warn(["MUI: The CalendarPickerSkeleton component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { CalendarPickerSkeleton } from '@mui/x-date-pickers'`", "or `import { CalendarPickerSkeleton } from '@mui/x-date-pickers/CalendarPickerSkeleton'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce24 = true;
      }
    };
    CalendarPickerSkeleton = React34.forwardRef(function DeprecatedCalendarPickerSkeleton() {
      warn18();
      return null;
    });
    CalendarPickerSkeleton_default = CalendarPickerSkeleton;
    calendarPickerSkeletonClasses = {};
    getCalendarPickerSkeletonUtilityClass = (slot) => {
      warn18();
      return "";
    };
  }
});

// node_modules/@mui/lab/CalendarPickerSkeleton/index.js
var init_CalendarPickerSkeleton2 = __esm({
  "node_modules/@mui/lab/CalendarPickerSkeleton/index.js"() {
    init_CalendarPickerSkeleton();
    init_CalendarPickerSkeleton();
  }
});

// node_modules/@mui/lab/PickersDay/PickersDay.js
var React35, warnedOnce25, warn19, PickersDay, PickersDay_default, pickersDayClasses, getPickersDayUtilityClass;
var init_PickersDay = __esm({
  "node_modules/@mui/lab/PickersDay/PickersDay.js"() {
    "use client";
    React35 = __toESM(require_react());
    warnedOnce25 = false;
    warn19 = () => {
      if (!warnedOnce25) {
        console.warn(["MUI: The PickersDay component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { PickersDay } from '@mui/x-date-pickers'`", "or `import { PickersDay } from '@mui/x-date-pickers/PickersDay'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce25 = true;
      }
    };
    PickersDay = React35.forwardRef(function DeprecatedPickersDay() {
      warn19();
      return null;
    });
    PickersDay_default = PickersDay;
    pickersDayClasses = {};
    getPickersDayUtilityClass = (slot) => {
      warn19();
      return "";
    };
  }
});

// node_modules/@mui/lab/PickersDay/index.js
var init_PickersDay2 = __esm({
  "node_modules/@mui/lab/PickersDay/index.js"() {
    init_PickersDay();
    init_PickersDay();
  }
});

// node_modules/@mui/lab/Rating/Rating.js
var React36, import_jsx_runtime14, warnedOnce26, Rating_default2;
var init_Rating2 = __esm({
  "node_modules/@mui/lab/Rating/Rating.js"() {
    "use client";
    init_extends();
    React36 = __toESM(require_react());
    init_Rating();
    import_jsx_runtime14 = __toESM(require_jsx_runtime());
    warnedOnce26 = false;
    Rating_default2 = React36.forwardRef(function DeprecatedRating(props, ref2) {
      if (!warnedOnce26) {
        console.warn(["MUI: The Rating component was moved from the lab to the core.", "", "You should use `import { Rating } from '@mui/material'`", "or `import Rating from '@mui/material/Rating'`"].join("\n"));
        warnedOnce26 = true;
      }
      return (0, import_jsx_runtime14.jsx)(Rating_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/Rating/index.js
var init_Rating3 = __esm({
  "node_modules/@mui/lab/Rating/index.js"() {
    init_Rating2();
  }
});

// node_modules/@mui/lab/Skeleton/Skeleton.js
var React37, import_jsx_runtime15, warnedOnce27, Skeleton_default2;
var init_Skeleton2 = __esm({
  "node_modules/@mui/lab/Skeleton/Skeleton.js"() {
    "use client";
    init_extends();
    React37 = __toESM(require_react());
    init_Skeleton();
    import_jsx_runtime15 = __toESM(require_jsx_runtime());
    warnedOnce27 = false;
    Skeleton_default2 = React37.forwardRef(function DeprecatedSkeleton(props, ref2) {
      if (!warnedOnce27) {
        console.warn(["MUI: The Skeleton component was moved from the lab to the core.", "", "You should use `import { Skeleton } from '@mui/material'`", "or `import Skeleton from '@mui/material/Skeleton'`"].join("\n"));
        warnedOnce27 = true;
      }
      return (0, import_jsx_runtime15.jsx)(Skeleton_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/Skeleton/index.js
var init_Skeleton3 = __esm({
  "node_modules/@mui/lab/Skeleton/index.js"() {
    init_Skeleton2();
  }
});

// node_modules/@mui/lab/SpeedDial/SpeedDial.js
var React38, import_jsx_runtime16, warnedOnce28, SpeedDial_default2;
var init_SpeedDial2 = __esm({
  "node_modules/@mui/lab/SpeedDial/SpeedDial.js"() {
    "use client";
    init_extends();
    React38 = __toESM(require_react());
    init_SpeedDial();
    import_jsx_runtime16 = __toESM(require_jsx_runtime());
    warnedOnce28 = false;
    SpeedDial_default2 = React38.forwardRef(function DeprecatedSpeedDial(props, ref2) {
      if (!warnedOnce28) {
        console.warn(["MUI: The SpeedDial component was moved from the lab to the core.", "", "You should use `import { SpeedDial } from '@mui/material'`", "or `import SpeedDial from '@mui/material/SpeedDial'`"].join("\n"));
        warnedOnce28 = true;
      }
      return (0, import_jsx_runtime16.jsx)(SpeedDial_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/SpeedDial/index.js
var init_SpeedDial3 = __esm({
  "node_modules/@mui/lab/SpeedDial/index.js"() {
    init_SpeedDial2();
  }
});

// node_modules/@mui/lab/SpeedDialAction/SpeedDialAction.js
var React39, import_jsx_runtime17, warnedOnce29, SpeedDialAction_default2;
var init_SpeedDialAction2 = __esm({
  "node_modules/@mui/lab/SpeedDialAction/SpeedDialAction.js"() {
    "use client";
    init_extends();
    React39 = __toESM(require_react());
    init_SpeedDialAction();
    import_jsx_runtime17 = __toESM(require_jsx_runtime());
    warnedOnce29 = false;
    SpeedDialAction_default2 = React39.forwardRef(function DeprecatedSpeedDialAction(props, ref2) {
      if (!warnedOnce29) {
        console.warn(["MUI: The SpeedDialAction component was moved from the lab to the core.", "", "You should use `import { SpeedDialAction } from '@mui/material'`", "or `import SpeedDialAction from '@mui/material/SpeedDialAction'`"].join("\n"));
        warnedOnce29 = true;
      }
      return (0, import_jsx_runtime17.jsx)(SpeedDialAction_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/SpeedDialAction/index.js
var init_SpeedDialAction3 = __esm({
  "node_modules/@mui/lab/SpeedDialAction/index.js"() {
    init_SpeedDialAction2();
  }
});

// node_modules/@mui/lab/SpeedDialIcon/SpeedDialIcon.js
var React40, import_jsx_runtime18, warnedOnce30, SpeedDialIcon_default2;
var init_SpeedDialIcon2 = __esm({
  "node_modules/@mui/lab/SpeedDialIcon/SpeedDialIcon.js"() {
    "use client";
    init_extends();
    React40 = __toESM(require_react());
    init_SpeedDialIcon();
    import_jsx_runtime18 = __toESM(require_jsx_runtime());
    warnedOnce30 = false;
    SpeedDialIcon_default2 = React40.forwardRef(function DeprecatedSpeedDialIcon(props, ref2) {
      if (!warnedOnce30) {
        console.warn(["MUI: The SpeedDialIcon component was moved from the lab to the core.", "", "You should use `import { SpeedDialIcon } from '@mui/material'`", "or `import SpeedDialIcon from '@mui/material/SpeedDialIcon'`"].join("\n"));
        warnedOnce30 = true;
      }
      return (0, import_jsx_runtime18.jsx)(SpeedDialIcon_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/SpeedDialIcon/index.js
var init_SpeedDialIcon3 = __esm({
  "node_modules/@mui/lab/SpeedDialIcon/index.js"() {
    init_SpeedDialIcon2();
  }
});

// node_modules/@mui/lab/StaticDatePicker/StaticDatePicker.js
var React41, warnedOnce31, warn20, StaticDatePicker, StaticDatePicker_default;
var init_StaticDatePicker = __esm({
  "node_modules/@mui/lab/StaticDatePicker/StaticDatePicker.js"() {
    "use client";
    React41 = __toESM(require_react());
    warnedOnce31 = false;
    warn20 = () => {
      if (!warnedOnce31) {
        console.warn(["MUI: The StaticDatePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { StaticDatePicker } from '@mui/x-date-pickers'`", "or `import { StaticDatePicker } from '@mui/x-date-pickers/StaticDatePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce31 = true;
      }
    };
    StaticDatePicker = React41.forwardRef(function DeprecatedStaticDatePicker() {
      warn20();
      return null;
    });
    StaticDatePicker_default = StaticDatePicker;
  }
});

// node_modules/@mui/lab/StaticDatePicker/index.js
var init_StaticDatePicker2 = __esm({
  "node_modules/@mui/lab/StaticDatePicker/index.js"() {
    init_StaticDatePicker();
    init_StaticDatePicker();
  }
});

// node_modules/@mui/lab/StaticDateRangePicker/StaticDateRangePicker.js
var React42, warnedOnce32, warn21, StaticDateRangePicker, StaticDateRangePicker_default;
var init_StaticDateRangePicker = __esm({
  "node_modules/@mui/lab/StaticDateRangePicker/StaticDateRangePicker.js"() {
    React42 = __toESM(require_react());
    warnedOnce32 = false;
    warn21 = () => {
      if (!warnedOnce32) {
        console.warn(["MUI: The StaticDateRangePicker component was moved from `@mui/lab` to `@mui/x-date-pickers-pro`", "", "You should use `import { StaticDateRangePicker } from '@mui/x-date-pickers-pro'`", "or `import { StaticDateRangePicker } from '@mui/x-date-pickers-pro/StaticDateRangePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce32 = true;
      }
    };
    StaticDateRangePicker = React42.forwardRef(function DeprecatedStaticDateRangePicker() {
      warn21();
      return null;
    });
    StaticDateRangePicker_default = StaticDateRangePicker;
  }
});

// node_modules/@mui/lab/StaticDateRangePicker/index.js
var init_StaticDateRangePicker2 = __esm({
  "node_modules/@mui/lab/StaticDateRangePicker/index.js"() {
    init_StaticDateRangePicker();
    init_StaticDateRangePicker();
  }
});

// node_modules/@mui/lab/StaticDateTimePicker/StaticDateTimePicker.js
var React43, warnedOnce33, warn22, StaticDateTimePicker, StaticDateTimePicker_default;
var init_StaticDateTimePicker = __esm({
  "node_modules/@mui/lab/StaticDateTimePicker/StaticDateTimePicker.js"() {
    "use client";
    React43 = __toESM(require_react());
    warnedOnce33 = false;
    warn22 = () => {
      if (!warnedOnce33) {
        console.warn(["MUI: The StaticDateTimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { StaticDateTimePicker } from '@mui/x-date-pickers'`", "or `import { StaticDateTimePicker } from '@mui/x-date-pickers/StaticDateTimePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce33 = true;
      }
    };
    StaticDateTimePicker = React43.forwardRef(function DeprecatedStaticDateTimePicker() {
      warn22();
      return null;
    });
    StaticDateTimePicker_default = StaticDateTimePicker;
  }
});

// node_modules/@mui/lab/StaticDateTimePicker/index.js
var init_StaticDateTimePicker2 = __esm({
  "node_modules/@mui/lab/StaticDateTimePicker/index.js"() {
    init_StaticDateTimePicker();
    init_StaticDateTimePicker();
  }
});

// node_modules/@mui/lab/StaticTimePicker/StaticTimePicker.js
var React44, warnedOnce34, warn23, StaticTimePicker, StaticTimePicker_default;
var init_StaticTimePicker = __esm({
  "node_modules/@mui/lab/StaticTimePicker/StaticTimePicker.js"() {
    "use client";
    React44 = __toESM(require_react());
    warnedOnce34 = false;
    warn23 = () => {
      if (!warnedOnce34) {
        console.warn(["MUI: The StaticTimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { StaticTimePicker } from '@mui/x-date-pickers'`", "or `import { StaticTimePicker } from '@mui/x-date-pickers/StaticTimePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce34 = true;
      }
    };
    StaticTimePicker = React44.forwardRef(function DeprecatedStaticTimePicker() {
      warn23();
      return null;
    });
    StaticTimePicker_default = StaticTimePicker;
  }
});

// node_modules/@mui/lab/StaticTimePicker/index.js
var init_StaticTimePicker2 = __esm({
  "node_modules/@mui/lab/StaticTimePicker/index.js"() {
    init_StaticTimePicker();
    init_StaticTimePicker();
  }
});

// node_modules/@mui/lab/TabContext/TabContext.js
function useUniquePrefix() {
  const [id, setId] = React45.useState(null);
  React45.useEffect(() => {
    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);
  }, []);
  return id;
}
function TabContext(props) {
  const {
    children,
    value
  } = props;
  const idPrefix = useUniquePrefix();
  const context = React45.useMemo(() => {
    return {
      idPrefix,
      value
    };
  }, [idPrefix, value]);
  return (0, import_jsx_runtime19.jsx)(Context.Provider, {
    value: context,
    children
  });
}
function useTabContext() {
  return React45.useContext(Context);
}
function getPanelId(context, value) {
  const {
    idPrefix
  } = context;
  if (idPrefix === null) {
    return null;
  }
  return `${context.idPrefix}-P-${value}`;
}
function getTabId(context, value) {
  const {
    idPrefix
  } = context;
  if (idPrefix === null) {
    return null;
  }
  return `${context.idPrefix}-T-${value}`;
}
var React45, import_prop_types6, import_jsx_runtime19, Context;
var init_TabContext = __esm({
  "node_modules/@mui/lab/TabContext/TabContext.js"() {
    "use client";
    React45 = __toESM(require_react());
    import_prop_types6 = __toESM(require_prop_types());
    import_jsx_runtime19 = __toESM(require_jsx_runtime());
    Context = React45.createContext(null);
    if (true) {
      Context.displayName = "TabContext";
    }
    true ? TabContext.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types6.default.node,
      /**
       * The value of the currently selected `Tab`.
       */
      value: import_prop_types6.default.oneOfType([import_prop_types6.default.number, import_prop_types6.default.string]).isRequired
    } : void 0;
  }
});

// node_modules/@mui/lab/TabContext/index.js
var init_TabContext2 = __esm({
  "node_modules/@mui/lab/TabContext/index.js"() {
    init_TabContext();
    init_TabContext();
  }
});

// node_modules/@mui/lab/TabList/TabList.js
var React46, import_prop_types7, import_jsx_runtime20, _excluded11, TabList, TabList_default;
var init_TabList = __esm({
  "node_modules/@mui/lab/TabList/TabList.js"() {
    "use client";
    init_extends();
    init_objectWithoutPropertiesLoose();
    React46 = __toESM(require_react());
    import_prop_types7 = __toESM(require_prop_types());
    init_Tabs();
    init_TabContext2();
    import_jsx_runtime20 = __toESM(require_jsx_runtime());
    _excluded11 = ["children"];
    TabList = React46.forwardRef(function TabList2(props, ref2) {
      const {
        children: childrenProp
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded11);
      const context = useTabContext();
      if (context === null) {
        throw new TypeError("No TabContext provided");
      }
      const children = React46.Children.map(childrenProp, (child) => {
        if (!React46.isValidElement(child)) {
          return null;
        }
        return React46.cloneElement(child, {
          // SOMEDAY: `Tabs` will set those themselves
          "aria-controls": getPanelId(context, child.props.value),
          id: getTabId(context, child.props.value)
        });
      });
      return (0, import_jsx_runtime20.jsx)(Tabs_default, _extends({}, other, {
        ref: ref2,
        value: context.value,
        children
      }));
    });
    true ? TabList.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * A list of `<Tab />` elements.
       */
      children: import_prop_types7.default.node
    } : void 0;
    TabList_default = TabList;
  }
});

// node_modules/@mui/lab/TabList/index.js
var init_TabList2 = __esm({
  "node_modules/@mui/lab/TabList/index.js"() {
    init_TabList();
  }
});

// node_modules/@mui/lab/node_modules/clsx/dist/clsx.mjs
function r2(e2) {
  var t2, f2, n2 = "";
  if ("string" == typeof e2 || "number" == typeof e2)
    n2 += e2;
  else if ("object" == typeof e2)
    if (Array.isArray(e2)) {
      var o2 = e2.length;
      for (t2 = 0; t2 < o2; t2++)
        e2[t2] && (f2 = r2(e2[t2])) && (n2 && (n2 += " "), n2 += f2);
    } else
      for (f2 in e2)
        e2[f2] && (n2 && (n2 += " "), n2 += f2);
  return n2;
}
function clsx2() {
  for (var e2, t2, f2 = 0, n2 = "", o2 = arguments.length; f2 < o2; f2++)
    (e2 = arguments[f2]) && (t2 = r2(e2)) && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
var clsx_default2;
var init_clsx2 = __esm({
  "node_modules/@mui/lab/node_modules/clsx/dist/clsx.mjs"() {
    clsx_default2 = clsx2;
  }
});

// node_modules/@mui/lab/TabPanel/tabPanelClasses.js
function getTabPanelUtilityClass(slot) {
  return generateUtilityClass("MuiTabPanel", slot);
}
var tabPanelClasses, tabPanelClasses_default;
var init_tabPanelClasses = __esm({
  "node_modules/@mui/lab/TabPanel/tabPanelClasses.js"() {
    init_generateUtilityClass();
    init_generateUtilityClasses();
    tabPanelClasses = generateUtilityClasses("MuiTabPanel", ["root"]);
    tabPanelClasses_default = tabPanelClasses;
  }
});

// node_modules/@mui/lab/TabPanel/TabPanel.js
var React47, import_prop_types8, import_jsx_runtime21, _excluded12, useUtilityClasses2, TabPanelRoot, TabPanel, TabPanel_default;
var init_TabPanel = __esm({
  "node_modules/@mui/lab/TabPanel/TabPanel.js"() {
    "use client";
    init_extends();
    init_objectWithoutPropertiesLoose();
    React47 = __toESM(require_react());
    import_prop_types8 = __toESM(require_prop_types());
    init_clsx2();
    init_styles();
    init_base();
    init_tabPanelClasses();
    init_TabContext2();
    import_jsx_runtime21 = __toESM(require_jsx_runtime());
    _excluded12 = ["children", "className", "value"];
    useUtilityClasses2 = (ownerState) => {
      const {
        classes
      } = ownerState;
      const slots = {
        root: ["root"]
      };
      return composeClasses(slots, getTabPanelUtilityClass, classes);
    };
    TabPanelRoot = styled_default("div", {
      name: "MuiTabPanel",
      slot: "Root",
      overridesResolver: (props, styles) => styles.root
    })(({
      theme
    }) => ({
      padding: theme.spacing(3)
    }));
    TabPanel = React47.forwardRef(function TabPanel2(inProps, ref2) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiTabPanel"
      });
      const {
        children,
        className,
        value
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded12);
      const ownerState = _extends({}, props);
      const classes = useUtilityClasses2(ownerState);
      const context = useTabContext();
      if (context === null) {
        throw new TypeError("No TabContext provided");
      }
      const id = getPanelId(context, value);
      const tabId = getTabId(context, value);
      return (0, import_jsx_runtime21.jsx)(TabPanelRoot, _extends({
        "aria-labelledby": tabId,
        className: clsx_default2(classes.root, className),
        hidden: value !== context.value,
        id,
        ref: ref2,
        role: "tabpanel",
        ownerState
      }, other, {
        children: value === context.value && children
      }));
    });
    true ? TabPanel.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types8.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types8.default.object,
      /**
       * @ignore
       */
      className: import_prop_types8.default.string,
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types8.default.oneOfType([import_prop_types8.default.arrayOf(import_prop_types8.default.oneOfType([import_prop_types8.default.func, import_prop_types8.default.object, import_prop_types8.default.bool])), import_prop_types8.default.func, import_prop_types8.default.object]),
      /**
       * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when
       * no `value` was passed to `Tab`.
       */
      value: import_prop_types8.default.string.isRequired
    } : void 0;
    TabPanel_default = TabPanel;
  }
});

// node_modules/@mui/lab/TabPanel/index.js
var init_TabPanel2 = __esm({
  "node_modules/@mui/lab/TabPanel/index.js"() {
    init_TabPanel();
    init_tabPanelClasses();
    init_tabPanelClasses();
  }
});

// node_modules/@mui/lab/TimePicker/TimePicker.js
var React48, warnedOnce35, warn24, TimePicker, TimePicker_default;
var init_TimePicker = __esm({
  "node_modules/@mui/lab/TimePicker/TimePicker.js"() {
    "use client";
    React48 = __toESM(require_react());
    warnedOnce35 = false;
    warn24 = () => {
      if (!warnedOnce35) {
        console.warn(["MUI: The TimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { TimePicker } from '@mui/x-date-pickers'`", "or `import { TimePicker } from '@mui/x-date-pickers/TimePicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce35 = true;
      }
    };
    TimePicker = React48.forwardRef(function DeprecatedTimePicker() {
      warn24();
      return null;
    });
    TimePicker_default = TimePicker;
  }
});

// node_modules/@mui/lab/TimePicker/index.js
var init_TimePicker2 = __esm({
  "node_modules/@mui/lab/TimePicker/index.js"() {
    init_TimePicker();
    init_TimePicker();
  }
});

// node_modules/@mui/lab/Timeline/TimelineContext.js
var React49, TimelineContext, TimelineContext_default;
var init_TimelineContext = __esm({
  "node_modules/@mui/lab/Timeline/TimelineContext.js"() {
    React49 = __toESM(require_react());
    TimelineContext = React49.createContext({});
    if (true) {
      TimelineContext.displayName = "TimelineContext";
    }
    TimelineContext_default = TimelineContext;
  }
});

// node_modules/@mui/lab/Timeline/timelineClasses.js
function getTimelineUtilityClass(slot) {
  return generateUtilityClass("MuiTimeline", slot);
}
var timelineClasses, timelineClasses_default;
var init_timelineClasses = __esm({
  "node_modules/@mui/lab/Timeline/timelineClasses.js"() {
    init_generateUtilityClass();
    init_generateUtilityClasses();
    timelineClasses = generateUtilityClasses("MuiTimeline", ["root", "positionLeft", "positionRight", "positionAlternate", "positionAlternateReverse"]);
    timelineClasses_default = timelineClasses;
  }
});

// node_modules/@mui/lab/internal/convertTimelinePositionToClass.js
function convertTimelinePositionToClass(position3) {
  return position3 === "alternate-reverse" ? "positionAlternateReverse" : `position${capitalize_default(position3)}`;
}
var init_convertTimelinePositionToClass = __esm({
  "node_modules/@mui/lab/internal/convertTimelinePositionToClass.js"() {
    init_utils2();
  }
});

// node_modules/@mui/lab/Timeline/Timeline.js
var React50, import_prop_types9, import_jsx_runtime22, _excluded13, useUtilityClasses3, TimelineRoot, Timeline, Timeline_default;
var init_Timeline = __esm({
  "node_modules/@mui/lab/Timeline/Timeline.js"() {
    "use client";
    init_extends();
    init_objectWithoutPropertiesLoose();
    React50 = __toESM(require_react());
    import_prop_types9 = __toESM(require_prop_types());
    init_clsx2();
    init_base();
    init_styles();
    init_TimelineContext();
    init_timelineClasses();
    init_convertTimelinePositionToClass();
    import_jsx_runtime22 = __toESM(require_jsx_runtime());
    _excluded13 = ["position", "className"];
    useUtilityClasses3 = (ownerState) => {
      const {
        position: position3,
        classes
      } = ownerState;
      const slots = {
        root: ["root", position3 && convertTimelinePositionToClass(position3)]
      };
      return composeClasses(slots, getTimelineUtilityClass, classes);
    };
    TimelineRoot = styled_default("ul", {
      name: "MuiTimeline",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.root, ownerState.position && styles[convertTimelinePositionToClass(ownerState.position)]];
      }
    })({
      display: "flex",
      flexDirection: "column",
      padding: "6px 16px",
      flexGrow: 1
    });
    Timeline = React50.forwardRef(function Timeline2(inProps, ref2) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiTimeline"
      });
      const {
        position: position3 = "right",
        className
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded13);
      const ownerState = _extends({}, props, {
        position: position3
      });
      const classes = useUtilityClasses3(ownerState);
      const contextValue = React50.useMemo(() => ({
        position: position3
      }), [position3]);
      return (0, import_jsx_runtime22.jsx)(TimelineContext_default.Provider, {
        value: contextValue,
        children: (0, import_jsx_runtime22.jsx)(TimelineRoot, _extends({
          className: clsx_default2(classes.root, className),
          ownerState,
          ref: ref2
        }, other))
      });
    });
    true ? Timeline.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types9.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types9.default.object,
      /**
       * className applied to the root element.
       */
      className: import_prop_types9.default.string,
      /**
       * The position where the TimelineContent should appear relative to the time axis.
       * @default 'right'
       */
      position: import_prop_types9.default.oneOf(["alternate-reverse", "alternate", "left", "right"]),
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types9.default.oneOfType([import_prop_types9.default.arrayOf(import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object, import_prop_types9.default.bool])), import_prop_types9.default.func, import_prop_types9.default.object])
    } : void 0;
    Timeline_default = Timeline;
  }
});

// node_modules/@mui/lab/Timeline/Timeline.types.js
var init_Timeline_types = __esm({
  "node_modules/@mui/lab/Timeline/Timeline.types.js"() {
  }
});

// node_modules/@mui/lab/Timeline/index.js
var init_Timeline2 = __esm({
  "node_modules/@mui/lab/Timeline/index.js"() {
    init_Timeline();
    init_Timeline_types();
    init_timelineClasses();
    init_timelineClasses();
  }
});

// node_modules/@mui/lab/TimelineConnector/timelineConnectorClasses.js
function getTimelineConnectorUtilityClass(slot) {
  return generateUtilityClass("MuiTimelineConnector", slot);
}
var timelineConnectorClasses, timelineConnectorClasses_default;
var init_timelineConnectorClasses = __esm({
  "node_modules/@mui/lab/TimelineConnector/timelineConnectorClasses.js"() {
    init_generateUtilityClass();
    init_generateUtilityClasses();
    timelineConnectorClasses = generateUtilityClasses("MuiTimelineConnector", ["root"]);
    timelineConnectorClasses_default = timelineConnectorClasses;
  }
});

// node_modules/@mui/lab/TimelineConnector/TimelineConnector.js
var React51, import_prop_types10, import_jsx_runtime23, _excluded14, useUtilityClasses4, TimelineConnectorRoot, TimelineConnector, TimelineConnector_default;
var init_TimelineConnector = __esm({
  "node_modules/@mui/lab/TimelineConnector/TimelineConnector.js"() {
    "use client";
    init_extends();
    init_objectWithoutPropertiesLoose();
    React51 = __toESM(require_react());
    import_prop_types10 = __toESM(require_prop_types());
    init_clsx2();
    init_base();
    init_styles();
    init_timelineConnectorClasses();
    import_jsx_runtime23 = __toESM(require_jsx_runtime());
    _excluded14 = ["className"];
    useUtilityClasses4 = (ownerState) => {
      const {
        classes
      } = ownerState;
      const slots = {
        root: ["root"]
      };
      return composeClasses(slots, getTimelineConnectorUtilityClass, classes);
    };
    TimelineConnectorRoot = styled_default("span", {
      name: "MuiTimelineConnector",
      slot: "Root",
      overridesResolver: (props, styles) => styles.root
    })(({
      theme
    }) => {
      return {
        width: 2,
        backgroundColor: (theme.vars || theme).palette.grey[400],
        flexGrow: 1
      };
    });
    TimelineConnector = React51.forwardRef(function TimelineConnector2(inProps, ref2) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiTimelineConnector"
      });
      const {
        className
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded14);
      const ownerState = props;
      const classes = useUtilityClasses4(ownerState);
      return (0, import_jsx_runtime23.jsx)(TimelineConnectorRoot, _extends({
        className: clsx_default2(classes.root, className),
        ownerState,
        ref: ref2
      }, other));
    });
    true ? TimelineConnector.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types10.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types10.default.object,
      /**
       * @ignore
       */
      className: import_prop_types10.default.string,
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types10.default.oneOfType([import_prop_types10.default.arrayOf(import_prop_types10.default.oneOfType([import_prop_types10.default.func, import_prop_types10.default.object, import_prop_types10.default.bool])), import_prop_types10.default.func, import_prop_types10.default.object])
    } : void 0;
    TimelineConnector_default = TimelineConnector;
  }
});

// node_modules/@mui/lab/TimelineConnector/index.js
var init_TimelineConnector2 = __esm({
  "node_modules/@mui/lab/TimelineConnector/index.js"() {
    init_TimelineConnector();
    init_timelineConnectorClasses();
    init_timelineConnectorClasses();
  }
});

// node_modules/@mui/lab/TimelineContent/timelineContentClasses.js
function getTimelineContentUtilityClass(slot) {
  return generateUtilityClass("MuiTimelineContent", slot);
}
var timelineContentClasses, timelineContentClasses_default;
var init_timelineContentClasses = __esm({
  "node_modules/@mui/lab/TimelineContent/timelineContentClasses.js"() {
    init_generateUtilityClass();
    init_generateUtilityClasses();
    timelineContentClasses = generateUtilityClasses("MuiTimelineContent", ["root", "positionLeft", "positionRight", "positionAlternate", "positionAlternateReverse"]);
    timelineContentClasses_default = timelineContentClasses;
  }
});

// node_modules/@mui/lab/TimelineContent/TimelineContent.js
var React52, import_prop_types11, import_jsx_runtime24, _excluded15, useUtilityClasses5, TimelineContentRoot, TimelineContent, TimelineContent_default;
var init_TimelineContent = __esm({
  "node_modules/@mui/lab/TimelineContent/TimelineContent.js"() {
    "use client";
    init_objectWithoutPropertiesLoose();
    init_extends();
    React52 = __toESM(require_react());
    import_prop_types11 = __toESM(require_prop_types());
    init_clsx2();
    init_styles();
    init_base();
    init_Typography();
    init_TimelineContext();
    init_timelineContentClasses();
    init_convertTimelinePositionToClass();
    import_jsx_runtime24 = __toESM(require_jsx_runtime());
    _excluded15 = ["className"];
    useUtilityClasses5 = (ownerState) => {
      const {
        position: position3,
        classes
      } = ownerState;
      const slots = {
        root: ["root", convertTimelinePositionToClass(position3)]
      };
      return composeClasses(slots, getTimelineContentUtilityClass, classes);
    };
    TimelineContentRoot = styled_default(Typography_default, {
      name: "MuiTimelineContent",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.root, styles[convertTimelinePositionToClass(ownerState.position)]];
      }
    })(({
      ownerState
    }) => _extends({
      flex: 1,
      padding: "6px 16px",
      textAlign: "left"
    }, ownerState.position === "left" && {
      textAlign: "right"
    }));
    TimelineContent = React52.forwardRef(function TimelineContent2(inProps, ref2) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiTimelineContent"
      });
      const {
        className
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded15);
      const {
        position: positionContext
      } = React52.useContext(TimelineContext_default);
      const ownerState = _extends({}, props, {
        position: positionContext || "right"
      });
      const classes = useUtilityClasses5(ownerState);
      return (0, import_jsx_runtime24.jsx)(TimelineContentRoot, _extends({
        component: "div",
        className: clsx_default2(classes.root, className),
        ownerState,
        ref: ref2
      }, other));
    });
    true ? TimelineContent.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types11.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types11.default.object,
      /**
       * @ignore
       */
      className: import_prop_types11.default.string,
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types11.default.oneOfType([import_prop_types11.default.arrayOf(import_prop_types11.default.oneOfType([import_prop_types11.default.func, import_prop_types11.default.object, import_prop_types11.default.bool])), import_prop_types11.default.func, import_prop_types11.default.object])
    } : void 0;
    TimelineContent_default = TimelineContent;
  }
});

// node_modules/@mui/lab/TimelineContent/index.js
var init_TimelineContent2 = __esm({
  "node_modules/@mui/lab/TimelineContent/index.js"() {
    init_TimelineContent();
    init_timelineContentClasses();
    init_timelineContentClasses();
  }
});

// node_modules/@mui/lab/TimelineDot/timelineDotClasses.js
function getTimelineDotUtilityClass(slot) {
  return generateUtilityClass("MuiTimelineDot", slot);
}
var timelineDotClasses, timelineDotClasses_default;
var init_timelineDotClasses = __esm({
  "node_modules/@mui/lab/TimelineDot/timelineDotClasses.js"() {
    init_generateUtilityClass();
    init_generateUtilityClasses();
    timelineDotClasses = generateUtilityClasses("MuiTimelineDot", ["root", "filled", "outlined", "filledGrey", "outlinedGrey", "filledPrimary", "outlinedPrimary", "filledSecondary", "outlinedSecondary"]);
    timelineDotClasses_default = timelineDotClasses;
  }
});

// node_modules/@mui/lab/TimelineDot/TimelineDot.js
var React53, import_prop_types12, import_jsx_runtime25, _excluded16, useUtilityClasses6, TimelineDotRoot, TimelineDot, TimelineDot_default;
var init_TimelineDot = __esm({
  "node_modules/@mui/lab/TimelineDot/TimelineDot.js"() {
    "use client";
    init_objectWithoutPropertiesLoose();
    init_extends();
    React53 = __toESM(require_react());
    import_prop_types12 = __toESM(require_prop_types());
    init_clsx2();
    init_styles();
    init_utils2();
    init_base();
    init_timelineDotClasses();
    import_jsx_runtime25 = __toESM(require_jsx_runtime());
    _excluded16 = ["className", "color", "variant"];
    useUtilityClasses6 = (ownerState) => {
      const {
        color,
        variant,
        classes
      } = ownerState;
      const slots = {
        root: ["root", variant, color !== "inherit" && `${variant}${capitalize_default(color)}`]
      };
      return composeClasses(slots, getTimelineDotUtilityClass, classes);
    };
    TimelineDotRoot = styled_default("span", {
      name: "MuiTimelineDot",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.root, styles[ownerState.color !== "inherit" && `${ownerState.variant}${capitalize_default(ownerState.color)}`], styles[ownerState.variant]];
      }
    })(({
      ownerState,
      theme
    }) => _extends({
      display: "flex",
      alignSelf: "baseline",
      borderStyle: "solid",
      borderWidth: 2,
      padding: 4,
      borderRadius: "50%",
      boxShadow: (theme.vars || theme).shadows[1],
      margin: "11.5px 0"
    }, ownerState.variant === "filled" && _extends({
      borderColor: "transparent"
    }, ownerState.color !== "inherit" && _extends({}, ownerState.color === "grey" ? {
      color: (theme.vars || theme).palette.grey[50],
      backgroundColor: (theme.vars || theme).palette.grey[400]
    } : {
      color: (theme.vars || theme).palette[ownerState.color].contrastText,
      backgroundColor: (theme.vars || theme).palette[ownerState.color].main
    })), ownerState.variant === "outlined" && _extends({
      boxShadow: "none",
      backgroundColor: "transparent"
    }, ownerState.color !== "inherit" && _extends({}, ownerState.color === "grey" ? {
      borderColor: (theme.vars || theme).palette.grey[400]
    } : {
      borderColor: (theme.vars || theme).palette[ownerState.color].main
    }))));
    TimelineDot = React53.forwardRef(function TimelineDot2(inProps, ref2) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiTimelineDot"
      });
      const {
        className,
        color = "grey",
        variant = "filled"
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded16);
      const ownerState = _extends({}, props, {
        color,
        variant
      });
      const classes = useUtilityClasses6(ownerState);
      return (0, import_jsx_runtime25.jsx)(TimelineDotRoot, _extends({
        className: clsx_default2(classes.root, className),
        ownerState,
        ref: ref2
      }, other));
    });
    true ? TimelineDot.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types12.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types12.default.object,
      /**
       * @ignore
       */
      className: import_prop_types12.default.string,
      /**
       * The dot can have a different colors.
       * @default 'grey'
       */
      color: import_prop_types12.default.oneOfType([import_prop_types12.default.oneOf(["error", "grey", "info", "inherit", "primary", "secondary", "success", "warning"]), import_prop_types12.default.string]),
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types12.default.oneOfType([import_prop_types12.default.arrayOf(import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object, import_prop_types12.default.bool])), import_prop_types12.default.func, import_prop_types12.default.object]),
      /**
       * The dot can appear filled or outlined.
       * @default 'filled'
       */
      variant: import_prop_types12.default.oneOfType([import_prop_types12.default.oneOf(["filled", "outlined"]), import_prop_types12.default.string])
    } : void 0;
    TimelineDot_default = TimelineDot;
  }
});

// node_modules/@mui/lab/TimelineDot/index.js
var init_TimelineDot2 = __esm({
  "node_modules/@mui/lab/TimelineDot/index.js"() {
    init_TimelineDot();
    init_timelineDotClasses();
    init_timelineDotClasses();
  }
});

// node_modules/@mui/lab/TimelineOppositeContent/timelineOppositeContentClasses.js
function getTimelineOppositeContentUtilityClass(slot) {
  return generateUtilityClass("MuiTimelineOppositeContent", slot);
}
var timelineOppositeContentClasses, timelineOppositeContentClasses_default;
var init_timelineOppositeContentClasses = __esm({
  "node_modules/@mui/lab/TimelineOppositeContent/timelineOppositeContentClasses.js"() {
    init_generateUtilityClass();
    init_generateUtilityClasses();
    timelineOppositeContentClasses = generateUtilityClasses("MuiTimelineOppositeContent", ["root", "positionLeft", "positionRight", "positionAlternate", "positionAlternateReverse"]);
    timelineOppositeContentClasses_default = timelineOppositeContentClasses;
  }
});

// node_modules/@mui/lab/TimelineOppositeContent/TimelineOppositeContent.js
var React54, import_prop_types13, import_jsx_runtime26, _excluded17, useUtilityClasses7, TimelineOppositeContentRoot, TimelineOppositeContent, TimelineOppositeContent_default;
var init_TimelineOppositeContent = __esm({
  "node_modules/@mui/lab/TimelineOppositeContent/TimelineOppositeContent.js"() {
    "use client";
    init_objectWithoutPropertiesLoose();
    init_extends();
    React54 = __toESM(require_react());
    import_prop_types13 = __toESM(require_prop_types());
    init_clsx2();
    init_styles();
    init_base();
    init_Typography();
    init_TimelineContext();
    init_timelineOppositeContentClasses();
    init_convertTimelinePositionToClass();
    import_jsx_runtime26 = __toESM(require_jsx_runtime());
    _excluded17 = ["className"];
    useUtilityClasses7 = (ownerState) => {
      const {
        position: position3,
        classes
      } = ownerState;
      const slots = {
        root: ["root", convertTimelinePositionToClass(position3)]
      };
      return composeClasses(slots, getTimelineOppositeContentUtilityClass, classes);
    };
    TimelineOppositeContentRoot = styled_default(Typography_default, {
      name: "MuiTimelineOppositeContent",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.root, styles[convertTimelinePositionToClass(ownerState.position)]];
      }
    })(({
      ownerState
    }) => _extends({
      padding: "6px 16px",
      marginRight: "auto",
      textAlign: "right",
      flex: 1
    }, ownerState.position === "left" && {
      textAlign: "left"
    }));
    TimelineOppositeContent = React54.forwardRef(function TimelineOppositeContent2(inProps, ref2) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiTimelineOppositeContent"
      });
      const {
        className
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded17);
      const {
        position: positionContext
      } = React54.useContext(TimelineContext_default);
      const ownerState = _extends({}, props, {
        position: positionContext || "left"
      });
      const classes = useUtilityClasses7(ownerState);
      return (0, import_jsx_runtime26.jsx)(TimelineOppositeContentRoot, _extends({
        component: "div",
        className: clsx_default2(classes.root, className),
        ownerState,
        ref: ref2
      }, other));
    });
    true ? TimelineOppositeContent.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types13.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types13.default.object,
      /**
       * @ignore
       */
      className: import_prop_types13.default.string,
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types13.default.oneOfType([import_prop_types13.default.arrayOf(import_prop_types13.default.oneOfType([import_prop_types13.default.func, import_prop_types13.default.object, import_prop_types13.default.bool])), import_prop_types13.default.func, import_prop_types13.default.object])
    } : void 0;
    TimelineOppositeContent.muiName = "TimelineOppositeContent";
    TimelineOppositeContent_default = TimelineOppositeContent;
  }
});

// node_modules/@mui/lab/TimelineOppositeContent/index.js
var init_TimelineOppositeContent2 = __esm({
  "node_modules/@mui/lab/TimelineOppositeContent/index.js"() {
    init_TimelineOppositeContent();
    init_timelineOppositeContentClasses();
    init_timelineOppositeContentClasses();
  }
});

// node_modules/@mui/lab/TimelineItem/timelineItemClasses.js
function getTimelineItemUtilityClass(slot) {
  return generateUtilityClass("MuiTimelineItem", slot);
}
var timelineItemClasses, timelineItemClasses_default;
var init_timelineItemClasses = __esm({
  "node_modules/@mui/lab/TimelineItem/timelineItemClasses.js"() {
    init_generateUtilityClass();
    init_generateUtilityClasses();
    timelineItemClasses = generateUtilityClasses("MuiTimelineItem", ["root", "positionLeft", "positionRight", "positionAlternate", "positionAlternateReverse", "missingOppositeContent"]);
    timelineItemClasses_default = timelineItemClasses;
  }
});

// node_modules/@mui/lab/TimelineItem/TimelineItem.js
var React55, import_prop_types14, import_jsx_runtime27, _excluded18, useUtilityClasses8, TimelineItemRoot, TimelineItem, TimelineItem_default;
var init_TimelineItem = __esm({
  "node_modules/@mui/lab/TimelineItem/TimelineItem.js"() {
    "use client";
    init_objectWithoutPropertiesLoose();
    init_extends();
    React55 = __toESM(require_react());
    import_prop_types14 = __toESM(require_prop_types());
    init_clsx2();
    init_utils2();
    init_styles();
    init_base();
    init_TimelineContent2();
    init_TimelineOppositeContent2();
    init_TimelineContext();
    init_timelineItemClasses();
    init_convertTimelinePositionToClass();
    import_jsx_runtime27 = __toESM(require_jsx_runtime());
    _excluded18 = ["position", "className"];
    useUtilityClasses8 = (ownerState) => {
      const {
        position: position3,
        classes,
        hasOppositeContent
      } = ownerState;
      const slots = {
        root: ["root", convertTimelinePositionToClass(position3), !hasOppositeContent && "missingOppositeContent"]
      };
      return composeClasses(slots, getTimelineItemUtilityClass, classes);
    };
    TimelineItemRoot = styled_default("li", {
      name: "MuiTimelineItem",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.root, styles[convertTimelinePositionToClass(ownerState.position)]];
      }
    })(({
      ownerState
    }) => _extends({
      listStyle: "none",
      display: "flex",
      position: "relative",
      minHeight: 70
    }, ownerState.position === "left" && {
      flexDirection: "row-reverse"
    }, (ownerState.position === "alternate" || ownerState.position === "alternate-reverse") && {
      [`&:nth-of-type(${ownerState.position === "alternate" ? "even" : "odd"})`]: {
        flexDirection: "row-reverse",
        [`& .${timelineContentClasses_default.root}`]: {
          textAlign: "right"
        },
        [`& .${timelineOppositeContentClasses_default.root}`]: {
          textAlign: "left"
        }
      }
    }, !ownerState.hasOppositeContent && {
      "&::before": {
        content: '""',
        flex: 1,
        padding: "6px 16px"
      }
    }));
    TimelineItem = React55.forwardRef(function TimelineItem2(inProps, ref2) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiTimelineItem"
      });
      const {
        position: positionProp,
        className
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded18);
      const {
        position: positionContext
      } = React55.useContext(TimelineContext_default);
      let hasOppositeContent = false;
      React55.Children.forEach(props.children, (child) => {
        if (isMuiElement_default(child, ["TimelineOppositeContent"])) {
          hasOppositeContent = true;
        }
      });
      const ownerState = _extends({}, props, {
        position: positionProp || positionContext || "right",
        hasOppositeContent
      });
      const classes = useUtilityClasses8(ownerState);
      const contextValue = React55.useMemo(() => ({
        position: ownerState.position
      }), [ownerState.position]);
      return (0, import_jsx_runtime27.jsx)(TimelineContext_default.Provider, {
        value: contextValue,
        children: (0, import_jsx_runtime27.jsx)(TimelineItemRoot, _extends({
          className: clsx_default2(classes.root, className),
          ownerState,
          ref: ref2
        }, other))
      });
    });
    true ? TimelineItem.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types14.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types14.default.object,
      /**
       * @ignore
       */
      className: import_prop_types14.default.string,
      /**
       * The position where the timeline's item should appear.
       */
      position: import_prop_types14.default.oneOf(["alternate-reverse", "alternate", "left", "right"]),
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types14.default.oneOfType([import_prop_types14.default.arrayOf(import_prop_types14.default.oneOfType([import_prop_types14.default.func, import_prop_types14.default.object, import_prop_types14.default.bool])), import_prop_types14.default.func, import_prop_types14.default.object])
    } : void 0;
    TimelineItem_default = TimelineItem;
  }
});

// node_modules/@mui/lab/TimelineItem/index.js
var init_TimelineItem2 = __esm({
  "node_modules/@mui/lab/TimelineItem/index.js"() {
    init_TimelineItem();
    init_timelineItemClasses();
    init_timelineItemClasses();
  }
});

// node_modules/@mui/lab/TimelineSeparator/timelineSeparatorClasses.js
function getTimelineSeparatorUtilityClass(slot) {
  return generateUtilityClass("MuiTimelineSeparator", slot);
}
var timelineSeparatorClasses, timelineSeparatorClasses_default;
var init_timelineSeparatorClasses = __esm({
  "node_modules/@mui/lab/TimelineSeparator/timelineSeparatorClasses.js"() {
    init_generateUtilityClass();
    init_generateUtilityClasses();
    timelineSeparatorClasses = generateUtilityClasses("MuiTimelineSeparator", ["root"]);
    timelineSeparatorClasses_default = timelineSeparatorClasses;
  }
});

// node_modules/@mui/lab/TimelineSeparator/TimelineSeparator.js
var React56, import_prop_types15, import_jsx_runtime28, _excluded19, useUtilityClasses9, TimelineSeparatorRoot, TimelineSeparator, TimelineSeparator_default;
var init_TimelineSeparator = __esm({
  "node_modules/@mui/lab/TimelineSeparator/TimelineSeparator.js"() {
    "use client";
    init_extends();
    init_objectWithoutPropertiesLoose();
    React56 = __toESM(require_react());
    import_prop_types15 = __toESM(require_prop_types());
    init_clsx2();
    init_base();
    init_styles();
    init_timelineSeparatorClasses();
    import_jsx_runtime28 = __toESM(require_jsx_runtime());
    _excluded19 = ["className"];
    useUtilityClasses9 = (ownerState) => {
      const {
        classes
      } = ownerState;
      const slots = {
        root: ["root"]
      };
      return composeClasses(slots, getTimelineSeparatorUtilityClass, classes);
    };
    TimelineSeparatorRoot = styled_default("div", {
      name: "MuiTimelineSeparator",
      slot: "Root",
      overridesResolver: (props, styles) => styles.root
    })({
      display: "flex",
      flexDirection: "column",
      flex: 0,
      alignItems: "center"
    });
    TimelineSeparator = React56.forwardRef(function TimelineSeparator2(inProps, ref2) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiTimelineSeparator"
      });
      const {
        className
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded19);
      const ownerState = props;
      const classes = useUtilityClasses9(ownerState);
      return (0, import_jsx_runtime28.jsx)(TimelineSeparatorRoot, _extends({
        className: clsx_default2(classes.root, className),
        ownerState,
        ref: ref2
      }, other));
    });
    true ? TimelineSeparator.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types15.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types15.default.object,
      /**
       * @ignore
       */
      className: import_prop_types15.default.string,
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types15.default.oneOfType([import_prop_types15.default.arrayOf(import_prop_types15.default.oneOfType([import_prop_types15.default.func, import_prop_types15.default.object, import_prop_types15.default.bool])), import_prop_types15.default.func, import_prop_types15.default.object])
    } : void 0;
    TimelineSeparator_default = TimelineSeparator;
  }
});

// node_modules/@mui/lab/TimelineSeparator/index.js
var init_TimelineSeparator2 = __esm({
  "node_modules/@mui/lab/TimelineSeparator/index.js"() {
    init_TimelineSeparator();
    init_timelineSeparatorClasses();
    init_timelineSeparatorClasses();
  }
});

// node_modules/@mui/lab/ToggleButton/ToggleButton.js
var React57, import_jsx_runtime29, warnedOnce36, ToggleButton_default2;
var init_ToggleButton2 = __esm({
  "node_modules/@mui/lab/ToggleButton/ToggleButton.js"() {
    "use client";
    init_extends();
    React57 = __toESM(require_react());
    init_ToggleButton();
    import_jsx_runtime29 = __toESM(require_jsx_runtime());
    warnedOnce36 = false;
    ToggleButton_default2 = React57.forwardRef(function DeprecatedToggleButton(props, ref2) {
      if (!warnedOnce36) {
        console.warn(["MUI: The ToggleButton component was moved from the lab to the core.", "", "You should use `import { ToggleButton } from '@mui/material'`", "or `import ToggleButton from '@mui/material/ToggleButton'`"].join("\n"));
        warnedOnce36 = true;
      }
      return (0, import_jsx_runtime29.jsx)(ToggleButton_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/ToggleButton/index.js
var init_ToggleButton3 = __esm({
  "node_modules/@mui/lab/ToggleButton/index.js"() {
    init_ToggleButton2();
  }
});

// node_modules/@mui/lab/ToggleButtonGroup/ToggleButtonGroup.js
var React58, import_jsx_runtime30, warnedOnce37, ToggleButtonGroup_default2;
var init_ToggleButtonGroup2 = __esm({
  "node_modules/@mui/lab/ToggleButtonGroup/ToggleButtonGroup.js"() {
    "use client";
    init_extends();
    React58 = __toESM(require_react());
    init_ToggleButtonGroup();
    import_jsx_runtime30 = __toESM(require_jsx_runtime());
    warnedOnce37 = false;
    ToggleButtonGroup_default2 = React58.forwardRef(function DeprecatedToggleButtonGroup(props, ref2) {
      if (!warnedOnce37) {
        console.warn(["MUI: The ToggleButtonGroup component was moved from the lab to the core.", "", "You should use `import { ToggleButtonGroup } from '@mui/material'`", "or `import ToggleButtonGroup from '@mui/material/ToggleButtonGroup'`"].join("\n"));
        warnedOnce37 = true;
      }
      return (0, import_jsx_runtime30.jsx)(ToggleButtonGroup_default, _extends({
        ref: ref2
      }, props));
    });
  }
});

// node_modules/@mui/lab/ToggleButtonGroup/index.js
var init_ToggleButtonGroup3 = __esm({
  "node_modules/@mui/lab/ToggleButtonGroup/index.js"() {
    init_ToggleButtonGroup2();
  }
});

// node_modules/@mui/lab/TreeItem/TreeItem.js
var React59, warnedOnce38, warn25, TreeItem, TreeItem_default;
var init_TreeItem = __esm({
  "node_modules/@mui/lab/TreeItem/TreeItem.js"() {
    "use client";
    React59 = __toESM(require_react());
    warnedOnce38 = false;
    warn25 = () => {
      if (!warnedOnce38) {
        console.warn(["MUI: The TreeItem component was moved from `@mui/lab` to `@mui/x-tree-view`.", "", "You should use `import { TreeItem } from '@mui/x-tree-view'`", "or `import { TreeItem } from '@mui/x-tree-view/TreeItem'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-tree-view-to-mui-x/."].join("\n"));
        warnedOnce38 = true;
      }
    };
    TreeItem = React59.forwardRef(function DeprecatedTreeItem() {
      warn25();
      return null;
    });
    TreeItem_default = TreeItem;
  }
});

// node_modules/@mui/lab/TreeItem/index.js
var init_TreeItem2 = __esm({
  "node_modules/@mui/lab/TreeItem/index.js"() {
    init_TreeItem();
    init_TreeItem();
  }
});

// node_modules/@mui/lab/TreeView/TreeView.js
var React60, warnedOnce39, warn26, TreeView, TreeView_default;
var init_TreeView = __esm({
  "node_modules/@mui/lab/TreeView/TreeView.js"() {
    "use client";
    React60 = __toESM(require_react());
    warnedOnce39 = false;
    warn26 = () => {
      if (!warnedOnce39) {
        console.warn(["MUI: The TreeView component was moved from `@mui/lab` to `@mui/x-tree-view`.", "", "You should use `import { TreeView } from '@mui/x-tree-view'`", "or `import { TreeView } from '@mui/x-tree-view/TreeView'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-tree-view-to-mui-x/."].join("\n"));
        warnedOnce39 = true;
      }
    };
    TreeView = React60.forwardRef(function DeprecatedTreeView() {
      warn26();
      return null;
    });
    TreeView_default = TreeView;
  }
});

// node_modules/@mui/lab/TreeView/index.js
var init_TreeView2 = __esm({
  "node_modules/@mui/lab/TreeView/index.js"() {
    init_TreeView();
    init_TreeView();
  }
});

// node_modules/@mui/lab/YearPicker/YearPicker.js
var warnedOnce40, warn27, YearPicker, YearPicker_default, yearPickerClasses, getYearPickerUtilityClass;
var init_YearPicker = __esm({
  "node_modules/@mui/lab/YearPicker/YearPicker.js"() {
    "use client";
    warnedOnce40 = false;
    warn27 = () => {
      if (!warnedOnce40) {
        console.warn(["MUI: The YearPicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.", "", "You should use `import { YearPicker } from '@mui/x-date-pickers'`", "or `import { YearPicker } from '@mui/x-date-pickers/YearPicker'`", "", "More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join("\n"));
        warnedOnce40 = true;
      }
    };
    YearPicker = function DeprecatedYearPicker() {
      warn27();
      return null;
    };
    YearPicker_default = YearPicker;
    yearPickerClasses = {};
    getYearPickerUtilityClass = (slot) => {
      warn27();
      return "";
    };
  }
});

// node_modules/@mui/lab/YearPicker/index.js
var init_YearPicker2 = __esm({
  "node_modules/@mui/lab/YearPicker/index.js"() {
    init_YearPicker();
    init_YearPicker();
  }
});

// node_modules/@mui/lab/useAutocomplete/index.js
var init_useAutocomplete = __esm({
  "node_modules/@mui/lab/useAutocomplete/index.js"() {
    init_base();
  }
});

// node_modules/@mui/lab/Masonry/masonryClasses.js
function getMasonryUtilityClass(slot) {
  return generateUtilityClass("MuiMasonry", slot);
}
var masonryClasses, masonryClasses_default;
var init_masonryClasses = __esm({
  "node_modules/@mui/lab/Masonry/masonryClasses.js"() {
    init_generateUtilityClass();
    init_generateUtilityClasses();
    masonryClasses = generateUtilityClasses("MuiMasonry", ["root"]);
    masonryClasses_default = masonryClasses;
  }
});

// node_modules/@mui/lab/Masonry/Masonry.js
var ReactDOM2, import_prop_types16, React61, import_jsx_runtime31, import_jsx_runtime32, _excluded20, parseToNumber, lineBreakStyle, useUtilityClasses10, getStyle3, MasonryRoot, Masonry, Masonry_default;
var init_Masonry = __esm({
  "node_modules/@mui/lab/Masonry/Masonry.js"() {
    "use client";
    init_objectWithoutPropertiesLoose();
    init_extends();
    init_base();
    ReactDOM2 = __toESM(require_react_dom());
    init_styles();
    init_esm();
    init_utils();
    init_clsx2();
    import_prop_types16 = __toESM(require_prop_types());
    React61 = __toESM(require_react());
    init_masonryClasses();
    import_jsx_runtime31 = __toESM(require_jsx_runtime());
    import_jsx_runtime32 = __toESM(require_jsx_runtime());
    _excluded20 = ["children", "className", "component", "columns", "spacing", "sequential", "defaultColumns", "defaultHeight", "defaultSpacing"];
    parseToNumber = (val) => {
      return Number(val.replace("px", ""));
    };
    lineBreakStyle = {
      flexBasis: "100%",
      width: 0,
      margin: 0,
      padding: 0
    };
    useUtilityClasses10 = (ownerState) => {
      const {
        classes
      } = ownerState;
      const slots = {
        root: ["root"]
      };
      return composeClasses(slots, getMasonryUtilityClass, classes);
    };
    getStyle3 = ({
      ownerState,
      theme
    }) => {
      let styles = {
        width: "100%",
        display: "flex",
        flexFlow: "column wrap",
        alignContent: "flex-start",
        boxSizing: "border-box",
        "& > *": {
          boxSizing: "border-box"
        }
      };
      const stylesSSR = {};
      if (ownerState.isSSR) {
        const orderStyleSSR = {};
        const defaultSpacing = parseToNumber(theme.spacing(ownerState.defaultSpacing));
        for (let i2 = 1; i2 <= ownerState.defaultColumns; i2 += 1) {
          orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i2 % ownerState.defaultColumns})`] = {
            order: i2
          };
        }
        stylesSSR.height = ownerState.defaultHeight;
        stylesSSR.margin = -(defaultSpacing / 2);
        stylesSSR["& > *"] = _extends({}, styles["& > *"], orderStyleSSR, {
          margin: defaultSpacing / 2,
          width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`
        });
        return _extends({}, styles, stylesSSR);
      }
      const spacingValues = resolveBreakpointValues({
        values: ownerState.spacing,
        breakpoints: theme.breakpoints.values
      });
      const transformer = createUnarySpacing(theme);
      const spacingStyleFromPropValue = (propValue) => {
        let spacing;
        if (typeof propValue === "string" && !Number.isNaN(Number(propValue)) || typeof propValue === "number") {
          const themeSpacingValue = Number(propValue);
          spacing = getValue(transformer, themeSpacingValue);
        } else {
          spacing = propValue;
        }
        return _extends({
          margin: `calc(0px - (${spacing} / 2))`,
          "& > *": {
            margin: `calc(${spacing} / 2)`
          }
        }, ownerState.maxColumnHeight && {
          height: typeof spacing === "number" ? Math.ceil(ownerState.maxColumnHeight + parseToNumber(spacing)) : `calc(${ownerState.maxColumnHeight}px + ${spacing})`
        });
      };
      styles = deepmerge(styles, handleBreakpoints({
        theme
      }, spacingValues, spacingStyleFromPropValue));
      const columnValues = resolveBreakpointValues({
        values: ownerState.columns,
        breakpoints: theme.breakpoints.values
      });
      const columnStyleFromPropValue = (propValue) => {
        const columnValue = Number(propValue);
        const width = `${(100 / columnValue).toFixed(2)}%`;
        const spacing = typeof spacingValues === "string" && !Number.isNaN(Number(spacingValues)) || typeof spacingValues === "number" ? getValue(transformer, Number(spacingValues)) : "0px";
        return {
          "& > *": {
            width: `calc(${width} - ${spacing})`
          }
        };
      };
      styles = deepmerge(styles, handleBreakpoints({
        theme
      }, columnValues, columnStyleFromPropValue));
      if (typeof spacingValues === "object") {
        styles = deepmerge(styles, handleBreakpoints({
          theme
        }, spacingValues, (propValue, breakpoint) => {
          if (breakpoint) {
            const themeSpacingValue = Number(propValue);
            const lastBreakpoint = Object.keys(columnValues).pop();
            const spacing = getValue(transformer, themeSpacingValue);
            const column = typeof columnValues === "object" ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;
            const width = `${(100 / column).toFixed(2)}%`;
            return {
              "& > *": {
                width: `calc(${width} - ${spacing})`
              }
            };
          }
          return null;
        }));
      }
      return styles;
    };
    MasonryRoot = styled_default("div", {
      name: "MuiMasonry",
      slot: "Root",
      overridesResolver: (props, styles) => {
        return [styles.root];
      }
    })(getStyle3);
    Masonry = React61.forwardRef(function Masonry2(inProps, ref2) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiMasonry"
      });
      const {
        children,
        className,
        component = "div",
        columns = 4,
        spacing = 1,
        sequential = false,
        defaultColumns,
        defaultHeight,
        defaultSpacing
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded20);
      const masonryRef = React61.useRef();
      const [maxColumnHeight, setMaxColumnHeight] = React61.useState();
      const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== void 0 && defaultSpacing !== void 0;
      const [numberOfLineBreaks, setNumberOfLineBreaks] = React61.useState(isSSR ? defaultColumns - 1 : 0);
      const ownerState = _extends({}, props, {
        spacing,
        columns,
        maxColumnHeight,
        defaultColumns,
        defaultHeight,
        defaultSpacing,
        isSSR
      });
      const classes = useUtilityClasses10(ownerState);
      const handleResize = React61.useCallback((masonryChildren) => {
        if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {
          return;
        }
        const masonry = masonryRef.current;
        const masonryFirstChild = masonryRef.current.firstChild;
        const parentWidth = masonry.clientWidth;
        const firstChildWidth = masonryFirstChild.clientWidth;
        if (parentWidth === 0 || firstChildWidth === 0) {
          return;
        }
        const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);
        const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);
        const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);
        const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));
        const columnHeights = new Array(currentNumberOfColumns).fill(0);
        let skip = false;
        let nextOrder = 1;
        masonry.childNodes.forEach((child) => {
          if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === "line-break" || skip) {
            return;
          }
          const childComputedStyle = window.getComputedStyle(child);
          const childMarginTop = parseToNumber(childComputedStyle.marginTop);
          const childMarginBottom = parseToNumber(childComputedStyle.marginBottom);
          const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;
          if (childHeight === 0) {
            skip = true;
            return;
          }
          for (let i2 = 0; i2 < child.childNodes.length; i2 += 1) {
            const nestedChild = child.childNodes[i2];
            if (nestedChild.tagName === "IMG" && nestedChild.clientHeight === 0) {
              skip = true;
              break;
            }
          }
          if (!skip) {
            if (sequential) {
              columnHeights[nextOrder - 1] += childHeight;
              child.style.order = nextOrder;
              nextOrder += 1;
              if (nextOrder > currentNumberOfColumns) {
                nextOrder = 1;
              }
            } else {
              const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));
              columnHeights[currentMinColumnIndex] += childHeight;
              const order = currentMinColumnIndex + 1;
              child.style.order = order;
            }
          }
        });
        if (!skip) {
          ReactDOM2.flushSync(() => {
            setMaxColumnHeight(Math.max(...columnHeights));
            setNumberOfLineBreaks(currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0);
          });
        }
      }, [sequential]);
      useEnhancedEffect_default(() => {
        if (typeof ResizeObserver === "undefined") {
          return void 0;
        }
        let animationFrame;
        const resizeObserver = new ResizeObserver(() => {
          animationFrame = requestAnimationFrame(handleResize);
        });
        if (masonryRef.current) {
          masonryRef.current.childNodes.forEach((childNode) => {
            resizeObserver.observe(childNode);
          });
        }
        return () => {
          if (animationFrame) {
            window.cancelAnimationFrame(animationFrame);
          }
          if (resizeObserver) {
            resizeObserver.disconnect();
          }
        };
      }, [columns, spacing, children, handleResize]);
      const handleRef = useForkRef(ref2, masonryRef);
      const lineBreaks = new Array(numberOfLineBreaks).fill("").map((_2, index2) => (0, import_jsx_runtime31.jsx)("span", {
        "data-class": "line-break",
        style: _extends({}, lineBreakStyle, {
          order: index2 + 1
        })
      }, index2));
      return (0, import_jsx_runtime32.jsxs)(MasonryRoot, _extends({
        as: component,
        className: clsx_default2(classes.root, className),
        ref: handleRef,
        ownerState
      }, other, {
        children: [children, lineBreaks]
      }));
    });
    true ? Masonry.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The content of the component.
       */
      children: import_prop_types16.default.node.isRequired,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types16.default.object,
      /**
       * @ignore
       */
      className: import_prop_types16.default.string,
      /**
       * Number of columns.
       * @default 4
       */
      columns: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.number, import_prop_types16.default.string])), import_prop_types16.default.number, import_prop_types16.default.object, import_prop_types16.default.string]),
      /**
       * The component used for the root node.
       * Either a string to use a HTML element or a component.
       */
      component: import_prop_types16.default.elementType,
      /**
       * The default number of columns of the component. This is provided for server-side rendering.
       */
      defaultColumns: import_prop_types16.default.number,
      /**
       * The default height of the component in px. This is provided for server-side rendering.
       */
      defaultHeight: import_prop_types16.default.number,
      /**
       * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.
       */
      defaultSpacing: import_prop_types16.default.number,
      /**
       * Allows using sequential order rather than adding to shortest column
       * @default false
       */
      sequential: import_prop_types16.default.bool,
      /**
       * Defines the space between children. It is a factor of the theme's spacing.
       * @default 1
       */
      spacing: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.number, import_prop_types16.default.string])), import_prop_types16.default.number, import_prop_types16.default.object, import_prop_types16.default.string]),
      /**
       * Allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object, import_prop_types16.default.bool])), import_prop_types16.default.func, import_prop_types16.default.object])
    } : void 0;
    Masonry_default = Masonry;
  }
});

// node_modules/@mui/lab/Masonry/index.js
var init_Masonry2 = __esm({
  "node_modules/@mui/lab/Masonry/index.js"() {
    init_Masonry();
    init_masonryClasses();
    init_masonryClasses();
  }
});

// node_modules/@mui/lab/index.js
var lab_exports = {};
__export(lab_exports, {
  Alert: () => Alert_default2,
  AlertTitle: () => AlertTitle_default2,
  Autocomplete: () => Autocomplete_default2,
  AvatarGroup: () => AvatarGroup_default2,
  CalendarPicker: () => CalendarPicker_default,
  CalendarPickerSkeleton: () => CalendarPickerSkeleton_default,
  ClockPicker: () => ClockPicker_default,
  DatePicker: () => DatePicker_default,
  DateRangePicker: () => DateRangePicker_default,
  DateRangePickerDay: () => DateRangePickerDay_default,
  DateTimePicker: () => DateTimePicker_default,
  DesktopDatePicker: () => DesktopDatePicker_default,
  DesktopDateRangePicker: () => DesktopDateRangePicker_default,
  DesktopDateTimePicker: () => DesktopDateTimePicker_default,
  DesktopTimePicker: () => DesktopTimePicker_default,
  LoadingButton: () => LoadingButton_default,
  LocalizationProvider: () => LocalizationProvider_default,
  Masonry: () => Masonry_default,
  MobileDatePicker: () => MobileDatePicker_default,
  MobileDateRangePicker: () => MobileDateRangePicker_default,
  MobileDateTimePicker: () => MobileDateTimePicker_default,
  MobileTimePicker: () => MobileTimePicker_default,
  MonthPicker: () => MonthPicker_default,
  Pagination: () => Pagination_default2,
  PaginationItem: () => PaginationItem_default2,
  PickersDay: () => PickersDay_default,
  Rating: () => Rating_default2,
  Skeleton: () => Skeleton_default2,
  SpeedDial: () => SpeedDial_default2,
  SpeedDialAction: () => SpeedDialAction_default2,
  SpeedDialIcon: () => SpeedDialIcon_default2,
  StaticDatePicker: () => StaticDatePicker_default,
  StaticDateRangePicker: () => StaticDateRangePicker_default,
  StaticDateTimePicker: () => StaticDateTimePicker_default,
  StaticTimePicker: () => StaticTimePicker_default,
  TabContext: () => TabContext,
  TabList: () => TabList_default,
  TabPanel: () => TabPanel_default,
  TimePicker: () => TimePicker_default,
  Timeline: () => Timeline_default,
  TimelineConnector: () => TimelineConnector_default,
  TimelineContent: () => TimelineContent_default,
  TimelineDot: () => TimelineDot_default,
  TimelineItem: () => TimelineItem_default,
  TimelineOppositeContent: () => TimelineOppositeContent_default,
  TimelineSeparator: () => TimelineSeparator_default,
  ToggleButton: () => ToggleButton_default2,
  ToggleButtonGroup: () => ToggleButtonGroup_default2,
  TreeItem: () => TreeItem_default,
  TreeView: () => TreeView_default,
  YearPicker: () => YearPicker_default,
  calendarPickerClasses: () => calendarPickerClasses,
  calendarPickerSkeletonClasses: () => calendarPickerSkeletonClasses,
  clockPickerClasses: () => clockPickerClasses,
  getCalendarPickerSkeletonUtilityClass: () => getCalendarPickerSkeletonUtilityClass,
  getDateRangePickerDayUtilityClass: () => getDateRangePickerDayUtilityClass,
  getLoadingButtonUtilityClass: () => getLoadingButtonUtilityClass,
  getMasonryUtilityClass: () => getMasonryUtilityClass,
  getMonthPickerUtilityClass: () => getMonthPickerUtilityClass,
  getPanelId: () => getPanelId,
  getPickersDayUtilityClass: () => getPickersDayUtilityClass,
  getTabId: () => getTabId,
  getTabPanelUtilityClass: () => getTabPanelUtilityClass,
  getTimelineConnectorUtilityClass: () => getTimelineConnectorUtilityClass,
  getTimelineContentUtilityClass: () => getTimelineContentUtilityClass,
  getTimelineDotUtilityClass: () => getTimelineDotUtilityClass,
  getTimelineItemUtilityClass: () => getTimelineItemUtilityClass,
  getTimelineOppositeContentUtilityClass: () => getTimelineOppositeContentUtilityClass,
  getTimelineSeparatorUtilityClass: () => getTimelineSeparatorUtilityClass,
  getTimelineUtilityClass: () => getTimelineUtilityClass,
  getYearPickerUtilityClass: () => getYearPickerUtilityClass,
  loadingButtonClasses: () => loadingButtonClasses_default,
  masonryClasses: () => masonryClasses_default,
  monthPickerClasses: () => monthPickerClasses,
  pickersDayClasses: () => pickersDayClasses,
  tabPanelClasses: () => tabPanelClasses_default,
  timelineClasses: () => timelineClasses_default,
  timelineConnectorClasses: () => timelineConnectorClasses_default,
  timelineContentClasses: () => timelineContentClasses_default,
  timelineDotClasses: () => timelineDotClasses_default,
  timelineItemClasses: () => timelineItemClasses_default,
  timelineOppositeContentClasses: () => timelineOppositeContentClasses_default,
  timelineSeparatorClasses: () => timelineSeparatorClasses_default,
  useAutocomplete: () => useAutocomplete,
  usePagination: () => usePagination,
  useTabContext: () => useTabContext,
  yearPickerClasses: () => yearPickerClasses
});
var init_lab = __esm({
  "node_modules/@mui/lab/index.js"() {
    init_Alert3();
    init_Alert3();
    init_AlertTitle3();
    init_AlertTitle3();
    init_Autocomplete3();
    init_Autocomplete3();
    init_AvatarGroup3();
    init_AvatarGroup3();
    init_CalendarPicker2();
    init_CalendarPicker2();
    init_ClockPicker2();
    init_ClockPicker2();
    init_DatePicker2();
    init_DatePicker2();
    init_DateRangePicker2();
    init_DateRangePicker2();
    init_DateRangePickerDay2();
    init_DateRangePickerDay2();
    init_DateTimePicker2();
    init_DateTimePicker2();
    init_DesktopDatePicker2();
    init_DesktopDatePicker2();
    init_DesktopDateRangePicker2();
    init_DesktopDateRangePicker2();
    init_DesktopDateTimePicker2();
    init_DesktopDateTimePicker2();
    init_DesktopTimePicker2();
    init_DesktopTimePicker2();
    init_LoadingButton2();
    init_LoadingButton2();
    init_LocalizationProvider2();
    init_LocalizationProvider2();
    init_MobileDatePicker2();
    init_MobileDatePicker2();
    init_MobileDateRangePicker2();
    init_MobileDateRangePicker2();
    init_MobileDateTimePicker2();
    init_MobileDateTimePicker2();
    init_MobileTimePicker2();
    init_MobileTimePicker2();
    init_MonthPicker2();
    init_MonthPicker2();
    init_Pagination3();
    init_Pagination3();
    init_PaginationItem3();
    init_PaginationItem3();
    init_CalendarPickerSkeleton2();
    init_CalendarPickerSkeleton2();
    init_PickersDay2();
    init_PickersDay2();
    init_Rating3();
    init_Rating3();
    init_Skeleton3();
    init_Skeleton3();
    init_SpeedDial3();
    init_SpeedDial3();
    init_SpeedDialAction3();
    init_SpeedDialAction3();
    init_SpeedDialIcon3();
    init_SpeedDialIcon3();
    init_StaticDatePicker2();
    init_StaticDatePicker2();
    init_StaticDateRangePicker2();
    init_StaticDateRangePicker2();
    init_StaticDateTimePicker2();
    init_StaticDateTimePicker2();
    init_StaticTimePicker2();
    init_StaticTimePicker2();
    init_TabContext2();
    init_TabContext2();
    init_TabList2();
    init_TabList2();
    init_TabPanel2();
    init_TabPanel2();
    init_TimePicker2();
    init_TimePicker2();
    init_Timeline2();
    init_Timeline2();
    init_TimelineConnector2();
    init_TimelineConnector2();
    init_TimelineContent2();
    init_TimelineContent2();
    init_TimelineDot2();
    init_TimelineDot2();
    init_TimelineItem2();
    init_TimelineItem2();
    init_TimelineOppositeContent2();
    init_TimelineOppositeContent2();
    init_TimelineSeparator2();
    init_TimelineSeparator2();
    init_ToggleButton3();
    init_ToggleButton3();
    init_ToggleButtonGroup3();
    init_ToggleButtonGroup3();
    init_TreeItem2();
    init_TreeItem2();
    init_TreeView2();
    init_TreeView2();
    init_YearPicker2();
    init_YearPicker2();
    init_useAutocomplete();
    init_Masonry2();
    init_Masonry2();
  }
});

// node_modules/material-table/dist/components/m-table-edit-field.js
var require_m_table_edit_field = __commonJS({
  "node_modules/material-table/dist/components/m-table-edit-field.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _extends2 = _interopRequireDefault(require_extends());
    var _objectWithoutProperties2 = _interopRequireDefault(require_objectWithoutProperties());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var React62 = _interopRequireWildcard(require_react());
    var _TextField = _interopRequireDefault((init_TextField(), __toCommonJS(TextField_exports)));
    var _Checkbox = _interopRequireDefault((init_Checkbox(), __toCommonJS(Checkbox_exports)));
    var _Select = _interopRequireDefault((init_Select(), __toCommonJS(Select_exports)));
    var _MenuItem = _interopRequireDefault((init_MenuItem(), __toCommonJS(MenuItem_exports)));
    var _FormControl = _interopRequireDefault((init_FormControl(), __toCommonJS(FormControl_exports)));
    var _FormHelperText = _interopRequireDefault((init_FormHelperText(), __toCommonJS(FormHelperText_exports)));
    var _FormGroup = _interopRequireDefault((init_FormGroup(), __toCommonJS(FormGroup_exports)));
    var _FormControlLabel = _interopRequireDefault((init_FormControlLabel(), __toCommonJS(FormControlLabel_exports)));
    var _AdapterDateFns = _interopRequireDefault((init_AdapterDateFns2(), __toCommonJS(AdapterDateFns_exports)));
    var _lab = (init_lab(), __toCommonJS(lab_exports));
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var _excluded21 = ["columnDef", "rowData", "onRowDataChange", "errorState", "onBulkEditRowChanged", "scrollWidth"];
    var _excluded24 = ["helperText", "error"];
    var _excluded32 = ["helperText", "error"];
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTableEditField = function(_React$Component) {
      (0, _inherits2.default)(MTableEditField2, _React$Component);
      var _super = _createSuper(MTableEditField2);
      function MTableEditField2() {
        (0, _classCallCheck2.default)(this, MTableEditField2);
        return _super.apply(this, arguments);
      }
      (0, _createClass2.default)(MTableEditField2, [{
        key: "getProps",
        value: function getProps() {
          var _this$props = this.props, columnDef = _this$props.columnDef, rowData = _this$props.rowData, onRowDataChange = _this$props.onRowDataChange, errorState = _this$props.errorState, onBulkEditRowChanged = _this$props.onBulkEditRowChanged, scrollWidth = _this$props.scrollWidth, props = (0, _objectWithoutProperties2.default)(_this$props, _excluded21);
          return props;
        }
      }, {
        key: "renderLookupField",
        value: function renderLookupField() {
          var _this = this;
          var _this$getProps = this.getProps(), helperText = _this$getProps.helperText, error2 = _this$getProps.error, props = (0, _objectWithoutProperties2.default)(_this$getProps, _excluded24);
          return React62.createElement(_FormControl.default, {
            error: Boolean(error2)
          }, React62.createElement(_Select.default, (0, _extends2.default)({}, props, {
            value: this.props.value === void 0 ? "" : this.props.value,
            onChange: function onChange(event) {
              return _this.props.onChange(event.target.value);
            },
            style: {
              fontSize: 13
            },
            SelectDisplayProps: {
              "aria-label": this.props.columnDef.title
            }
          }), Object.keys(this.props.columnDef.lookup).map(function(key) {
            return React62.createElement(_MenuItem.default, {
              key,
              value: key
            }, _this.props.columnDef.lookup[key]);
          })), Boolean(helperText) && React62.createElement(_FormHelperText.default, null, helperText));
        }
      }, {
        key: "renderBooleanField",
        value: function renderBooleanField() {
          var _this2 = this;
          var _this$getProps2 = this.getProps(), helperText = _this$getProps2.helperText, error2 = _this$getProps2.error, props = (0, _objectWithoutProperties2.default)(_this$getProps2, _excluded32);
          return React62.createElement(_FormControl.default, {
            error: Boolean(error2),
            component: "fieldset"
          }, React62.createElement(_FormGroup.default, null, React62.createElement(_FormControlLabel.default, {
            label: "",
            control: React62.createElement(_Checkbox.default, (0, _extends2.default)({}, props, {
              value: String(this.props.value),
              checked: Boolean(this.props.value),
              onChange: function onChange(event) {
                return _this2.props.onChange(event.target.checked);
              },
              style: {
                padding: 0,
                width: 24,
                marginLeft: 9
              },
              inputProps: {
                "aria-label": this.props.columnDef.title
              }
            }))
          })), React62.createElement(_FormHelperText.default, null, helperText));
        }
      }, {
        key: "renderDateField",
        value: function renderDateField() {
          var dateFormat = this.props.columnDef.dateSetting && this.props.columnDef.dateSetting.format ? this.props.columnDef.dateSetting.format : "dd.MM.yyyy";
          return React62.createElement(_lab.LocalizationProvider, {
            dateAdapter: _AdapterDateFns.default,
            locale: this.props.locale
          }, React62.createElement(_lab.DatePicker, (0, _extends2.default)({}, this.getProps(), {
            format: dateFormat,
            value: this.props.value || null,
            onChange: this.props.onChange,
            clearable: true,
            InputProps: {
              style: {
                fontSize: 13
              }
            },
            inputProps: {
              "aria-label": "".concat(this.props.columnDef.title, ": press space to edit")
            }
          })));
        }
      }, {
        key: "renderTimeField",
        value: function renderTimeField() {
          return React62.createElement(_lab.LocalizationProvider, {
            dateAdapter: _AdapterDateFns.default,
            locale: this.props.locale
          }, React62.createElement(_lab.TimePicker, (0, _extends2.default)({}, this.getProps(), {
            format: "HH:mm:ss",
            value: this.props.value || null,
            onChange: this.props.onChange,
            clearable: true,
            InputProps: {
              style: {
                fontSize: 13
              }
            },
            inputProps: {
              "aria-label": "".concat(this.props.columnDef.title, ": press space to edit")
            }
          })));
        }
      }, {
        key: "renderDateTimeField",
        value: function renderDateTimeField() {
          return React62.createElement(_lab.LocalizationProvider, {
            dateAdapter: _AdapterDateFns.default,
            locale: this.props.locale
          }, React62.createElement(_lab.DateTimePicker, (0, _extends2.default)({}, this.getProps(), {
            format: "dd.MM.yyyy HH:mm:ss",
            value: this.props.value || null,
            onChange: this.props.onChange,
            clearable: true,
            InputProps: {
              style: {
                fontSize: 13
              }
            },
            inputProps: {
              "aria-label": "".concat(this.props.columnDef.title, ": press space to edit")
            }
          })));
        }
      }, {
        key: "renderTextField",
        value: function renderTextField() {
          var _this3 = this;
          return React62.createElement(_TextField.default, (0, _extends2.default)({}, this.getProps(), {
            fullWidth: true,
            style: this.props.columnDef.type === "numeric" ? {
              float: "right"
            } : {},
            type: this.props.columnDef.type === "numeric" ? "number" : "text",
            placeholder: this.props.columnDef.editPlaceholder || this.props.columnDef.title,
            value: this.props.value === void 0 ? "" : this.props.value,
            onChange: function onChange(event) {
              return _this3.props.onChange(_this3.props.columnDef.type === "numeric" ? event.target.valueAsNumber : event.target.value);
            },
            InputProps: {
              style: {
                fontSize: 13
              }
            },
            inputProps: {
              "aria-label": this.props.columnDef.title
            }
          }));
        }
      }, {
        key: "renderCurrencyField",
        value: function renderCurrencyField() {
          var _this4 = this;
          return React62.createElement(_TextField.default, (0, _extends2.default)({}, this.getProps(), {
            placeholder: this.props.columnDef.editPlaceholder || this.props.columnDef.title,
            style: {
              float: "right"
            },
            type: "number",
            value: this.props.value === void 0 ? "" : this.props.value,
            onChange: function onChange(event) {
              var value = event.target.valueAsNumber;
              if (!value && value !== 0) {
                value = void 0;
              }
              return _this4.props.onChange(value);
            },
            InputProps: {
              style: {
                fontSize: 13,
                textAlign: "right"
              }
            },
            inputProps: {
              "aria-label": this.props.columnDef.title
            },
            onKeyDown: this.props.onKeyDown,
            autoFocus: this.props.autoFocus
          }));
        }
      }, {
        key: "render",
        value: function render() {
          var component = "ok";
          if (this.props.columnDef.lookup) {
            component = this.renderLookupField();
          } else if (this.props.columnDef.type === "boolean") {
            component = this.renderBooleanField();
          } else if (this.props.columnDef.type === "date") {
            component = this.renderDateField();
          } else if (this.props.columnDef.type === "time") {
            component = this.renderTimeField();
          } else if (this.props.columnDef.type === "datetime") {
            component = this.renderDateTimeField();
          } else if (this.props.columnDef.type === "currency") {
            component = this.renderCurrencyField();
          } else {
            component = this.renderTextField();
          }
          return component;
        }
      }]);
      return MTableEditField2;
    }(React62.Component);
    MTableEditField.propTypes = {
      value: _propTypes.default.any,
      onChange: _propTypes.default.func.isRequired,
      columnDef: _propTypes.default.object.isRequired,
      locale: _propTypes.default.object
    };
    var _default = MTableEditField;
    exports.default = _default;
  }
});

// node_modules/@babel/runtime/helpers/arrayWithHoles.js
var require_arrayWithHoles = __commonJS({
  "node_modules/@babel/runtime/helpers/arrayWithHoles.js"(exports, module) {
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/iterableToArrayLimit.js
var require_iterableToArrayLimit = __commonJS({
  "node_modules/@babel/runtime/helpers/iterableToArrayLimit.js"(exports, module) {
    function _iterableToArrayLimit(r4, l2) {
      var t2 = null == r4 ? null : "undefined" != typeof Symbol && r4[Symbol.iterator] || r4["@@iterator"];
      if (null != t2) {
        var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
        try {
          if (i2 = (t2 = t2.call(r4)).next, 0 === l2) {
            if (Object(t2) !== t2)
              return;
            f2 = false;
          } else
            for (; !(f2 = (e2 = i2.call(t2)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
              ;
        } catch (r5) {
          o2 = true, n2 = r5;
        } finally {
          try {
            if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2))
              return;
          } finally {
            if (o2)
              throw n2;
          }
        }
        return a2;
      }
    }
    module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/nonIterableRest.js
var require_nonIterableRest = __commonJS({
  "node_modules/@babel/runtime/helpers/nonIterableRest.js"(exports, module) {
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/slicedToArray.js
var require_slicedToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/slicedToArray.js"(exports, module) {
    var arrayWithHoles = require_arrayWithHoles();
    var iterableToArrayLimit = require_iterableToArrayLimit();
    var unsupportedIterableToArray = require_unsupportedIterableToArray();
    var nonIterableRest = require_nonIterableRest();
    function _slicedToArray(arr, i2) {
      return arrayWithHoles(arr) || iterableToArrayLimit(arr, i2) || unsupportedIterableToArray(arr, i2) || nonIterableRest();
    }
    module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/material-table/dist/components/m-table-filter-row.js
var require_m_table_filter_row = __commonJS({
  "node_modules/material-table/dist/components/m-table-filter-row.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _slicedToArray2 = _interopRequireDefault(require_slicedToArray());
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var React62 = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var _TableCell = _interopRequireDefault((init_TableCell(), __toCommonJS(TableCell_exports)));
    var _TableRow = _interopRequireDefault((init_TableRow(), __toCommonJS(TableRow_exports)));
    var _TextField = _interopRequireDefault((init_TextField(), __toCommonJS(TextField_exports)));
    var _FormControl = _interopRequireDefault((init_FormControl(), __toCommonJS(FormControl_exports)));
    var _Select = _interopRequireDefault((init_Select(), __toCommonJS(Select_exports)));
    var _Input = _interopRequireDefault((init_Input(), __toCommonJS(Input_exports)));
    var _InputLabel = _interopRequireDefault((init_InputLabel(), __toCommonJS(InputLabel_exports)));
    var _MenuItem = _interopRequireDefault((init_MenuItem(), __toCommonJS(MenuItem_exports)));
    var _Checkbox = _interopRequireDefault((init_Checkbox(), __toCommonJS(Checkbox_exports)));
    var _ListItemText = _interopRequireDefault((init_ListItemText(), __toCommonJS(ListItemText_exports)));
    var _InputAdornment = _interopRequireDefault((init_InputAdornment(), __toCommonJS(InputAdornment_exports)));
    var _Tooltip = _interopRequireDefault((init_Tooltip(), __toCommonJS(Tooltip_exports)));
    var _AdapterDateFns = _interopRequireDefault((init_AdapterDateFns2(), __toCommonJS(AdapterDateFns_exports)));
    var _lab = (init_lab(), __toCommonJS(lab_exports));
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var ITEM_HEIGHT = 48;
    var ITEM_PADDING_TOP = 8;
    var MenuProps = {
      PaperProps: {
        style: {
          maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,
          width: 250
        }
      }
    };
    var MTableFilterRow = function(_React$Component) {
      (0, _inherits2.default)(MTableFilterRow2, _React$Component);
      var _super = _createSuper(MTableFilterRow2);
      function MTableFilterRow2() {
        var _this;
        (0, _classCallCheck2.default)(this, MTableFilterRow2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getLocalizationData", function() {
          return (0, _objectSpread22.default)({}, MTableFilterRow2.defaultProps.localization, _this.props.localization);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getLocalizedFilterPlaceHolder", function(columnDef) {
          return columnDef.filterPlaceholder || _this.getLocalizationData().filterPlaceHolder || "";
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "LookupFilter", function(_ref) {
          var columnDef = _ref.columnDef;
          var _React$useState = React62.useState(columnDef.tableData.filterValue || []), _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2), selectedFilter = _React$useState2[0], setSelectedFilter = _React$useState2[1];
          React62.useEffect(function() {
            setSelectedFilter(columnDef.tableData.filterValue || []);
          }, [columnDef.tableData.filterValue]);
          return React62.createElement(_FormControl.default, {
            style: {
              width: "100%"
            }
          }, React62.createElement(_InputLabel.default, {
            htmlFor: "select-multiple-checkbox" + columnDef.tableData.id,
            style: {
              marginTop: -16
            }
          }, _this.getLocalizedFilterPlaceHolder(columnDef)), React62.createElement(_Select.default, {
            multiple: true,
            value: selectedFilter,
            onClose: function onClose() {
              if (columnDef.filterOnItemSelect !== true)
                _this.props.onFilterChanged(columnDef.tableData.id, selectedFilter);
            },
            onChange: function onChange(event) {
              setSelectedFilter(event.target.value);
              if (columnDef.filterOnItemSelect === true)
                _this.props.onFilterChanged(columnDef.tableData.id, event.target.value);
            },
            input: React62.createElement(_Input.default, {
              id: "select-multiple-checkbox" + columnDef.tableData.id
            }),
            renderValue: function renderValue(selecteds) {
              return selecteds.map(function(selected) {
                return columnDef.lookup[selected];
              }).join(", ");
            },
            MenuProps,
            style: {
              marginTop: 0
            }
          }, Object.keys(columnDef.lookup).map(function(key) {
            return React62.createElement(_MenuItem.default, {
              key,
              value: key
            }, React62.createElement(_Checkbox.default, {
              checked: selectedFilter.indexOf(key.toString()) > -1
            }), React62.createElement(_ListItemText.default, {
              primary: columnDef.lookup[key]
            }));
          })));
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderFilterComponent", function(columnDef) {
          return React62.createElement(columnDef.filterComponent, {
            columnDef,
            onFilterChanged: _this.props.onFilterChanged
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderBooleanFilter", function(columnDef) {
          return React62.createElement(_Checkbox.default, {
            indeterminate: columnDef.tableData.filterValue === void 0,
            checked: columnDef.tableData.filterValue === "checked",
            onChange: function onChange() {
              var val;
              if (columnDef.tableData.filterValue === void 0) {
                val = "checked";
              } else if (columnDef.tableData.filterValue === "checked") {
                val = "unchecked";
              }
              _this.props.onFilterChanged(columnDef.tableData.id, val);
            }
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderDefaultFilter", function(columnDef) {
          var localization = _this.getLocalizationData();
          var FilterIcon = _this.props.icons.Filter;
          return React62.createElement(_TextField.default, {
            style: columnDef.type === "numeric" ? {
              float: "right"
            } : {},
            type: columnDef.type === "numeric" ? "number" : "search",
            value: columnDef.tableData.filterValue || "",
            placeholder: _this.getLocalizedFilterPlaceHolder(columnDef),
            onChange: function onChange(event) {
              _this.props.onFilterChanged(columnDef.tableData.id, event.target.value);
            },
            inputProps: {
              "aria-label": "filter data by ".concat(columnDef.title)
            },
            InputProps: _this.props.hideFilterIcons || columnDef.hideFilterIcon ? void 0 : {
              startAdornment: React62.createElement(_InputAdornment.default, {
                position: "start"
              }, React62.createElement(_Tooltip.default, {
                title: localization.filterTooltip
              }, React62.createElement(FilterIcon, null)))
            }
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderDateTypeFilter", function(columnDef) {
          var onDateInputChange = function onDateInputChange2(date) {
            return _this.props.onFilterChanged(columnDef.tableData.id, date);
          };
          var pickerProps = {
            value: columnDef.tableData.filterValue || null,
            onChange: onDateInputChange,
            placeholder: _this.getLocalizedFilterPlaceHolder(columnDef),
            clearable: true
          };
          var dateInputElement = null;
          if (columnDef.type === "date") {
            dateInputElement = React62.createElement(_lab.DatePicker, pickerProps);
          } else if (columnDef.type === "datetime") {
            dateInputElement = React62.createElement(_lab.DateTimePicker, pickerProps);
          } else if (columnDef.type === "time") {
            dateInputElement = React62.createElement(_lab.TimePicker, pickerProps);
          }
          return React62.createElement(_lab.LocalizationProvider, {
            dateAdapter: _AdapterDateFns.default,
            locale: _this.props.localization.dateTimePickerLocalization
          }, dateInputElement);
        });
        return _this;
      }
      (0, _createClass2.default)(MTableFilterRow2, [{
        key: "getComponentForColumn",
        value: function getComponentForColumn(columnDef) {
          if (columnDef.filtering === false) {
            return null;
          }
          if (columnDef.field || columnDef.customFilterAndSearch) {
            if (columnDef.filterComponent) {
              return this.renderFilterComponent(columnDef);
            } else if (columnDef.lookup) {
              return React62.createElement(this.LookupFilter, {
                columnDef
              });
            } else if (columnDef.type === "boolean") {
              return this.renderBooleanFilter(columnDef);
            } else if (["date", "datetime", "time"].includes(columnDef.type)) {
              return this.renderDateTypeFilter(columnDef);
            } else {
              return this.renderDefaultFilter(columnDef);
            }
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var columns = this.props.columns.filter(function(columnDef) {
            return !columnDef.hidden && !(columnDef.tableData.groupOrder > -1);
          }).sort(function(a2, b2) {
            return a2.tableData.columnOrder - b2.tableData.columnOrder;
          }).map(function(columnDef) {
            return React62.createElement(_TableCell.default, {
              key: columnDef.tableData.id,
              style: (0, _objectSpread22.default)({}, _this2.props.filterCellStyle, columnDef.filterCellStyle)
            }, _this2.getComponentForColumn(columnDef));
          });
          if (this.props.selection) {
            columns.splice(0, 0, React62.createElement(_TableCell.default, {
              padding: "none",
              key: "key-selection-column"
            }));
          }
          if (this.props.hasActions) {
            if (this.props.actionsColumnIndex === -1) {
              columns.push(React62.createElement(_TableCell.default, {
                key: "key-action-column"
              }));
            } else {
              var endPos = 0;
              if (this.props.selection) {
                endPos = 1;
              }
              columns.splice(this.props.actionsColumnIndex + endPos, 0, React62.createElement(_TableCell.default, {
                key: "key-action-column"
              }));
            }
          }
          if (this.props.hasDetailPanel) {
            var alignment = this.props.detailPanelColumnAlignment;
            var index2 = alignment === "left" ? 0 : columns.length;
            columns.splice(index2, 0, React62.createElement(_TableCell.default, {
              padding: "none",
              key: "key-detail-panel-column"
            }));
          }
          if (this.props.isTreeData > 0) {
            columns.splice(0, 0, React62.createElement(_TableCell.default, {
              padding: "none",
              key: "key-tree-data-filter"
            }));
          }
          this.props.columns.filter(function(columnDef) {
            return columnDef.tableData.groupOrder > -1;
          }).forEach(function(columnDef) {
            columns.splice(0, 0, React62.createElement(_TableCell.default, {
              padding: "checkbox",
              key: "key-group-filter" + columnDef.tableData.id
            }));
          });
          return React62.createElement(_TableRow.default, {
            style: (0, _objectSpread22.default)({
              height: 10
            }, this.props.filterRowStyle)
          }, columns);
        }
      }]);
      return MTableFilterRow2;
    }(React62.Component);
    MTableFilterRow.defaultProps = {
      columns: [],
      detailPanelColumnAlignment: "left",
      selection: false,
      hasActions: false,
      localization: {
        filterTooltip: "Filter"
      },
      hideFilterIcons: false
    };
    MTableFilterRow.propTypes = {
      columns: _propTypes.default.array.isRequired,
      hasDetailPanel: _propTypes.default.bool.isRequired,
      detailPanelColumnAlignment: _propTypes.default.string,
      isTreeData: _propTypes.default.bool.isRequired,
      onFilterChanged: _propTypes.default.func.isRequired,
      filterCellStyle: _propTypes.default.object,
      filterRowStyle: _propTypes.default.object,
      selection: _propTypes.default.bool.isRequired,
      actionsColumnIndex: _propTypes.default.number,
      hasActions: _propTypes.default.bool,
      localization: _propTypes.default.object,
      hideFilterIcons: _propTypes.default.bool
    };
    var _default = MTableFilterRow;
    exports.default = _default;
  }
});

// node_modules/material-table/node_modules/fast-deep-equal/index.js
var require_fast_deep_equal = __commonJS({
  "node_modules/material-table/node_modules/fast-deep-equal/index.js"(exports, module) {
    "use strict";
    var isArray = Array.isArray;
    var keyList = Object.keys;
    var hasProp = Object.prototype.hasOwnProperty;
    module.exports = function equal(a2, b2) {
      if (a2 === b2)
        return true;
      if (a2 && b2 && typeof a2 == "object" && typeof b2 == "object") {
        var arrA = isArray(a2), arrB = isArray(b2), i2, length, key;
        if (arrA && arrB) {
          length = a2.length;
          if (length != b2.length)
            return false;
          for (i2 = length; i2-- !== 0; )
            if (!equal(a2[i2], b2[i2]))
              return false;
          return true;
        }
        if (arrA != arrB)
          return false;
        var dateA = a2 instanceof Date, dateB = b2 instanceof Date;
        if (dateA != dateB)
          return false;
        if (dateA && dateB)
          return a2.getTime() == b2.getTime();
        var regexpA = a2 instanceof RegExp, regexpB = b2 instanceof RegExp;
        if (regexpA != regexpB)
          return false;
        if (regexpA && regexpB)
          return a2.toString() == b2.toString();
        var keys = keyList(a2);
        length = keys.length;
        if (length !== keyList(b2).length)
          return false;
        for (i2 = length; i2-- !== 0; )
          if (!hasProp.call(b2, keys[i2]))
            return false;
        for (i2 = length; i2-- !== 0; ) {
          key = keys[i2];
          if (!equal(a2[key], b2[key]))
            return false;
        }
        return true;
      }
      return a2 !== a2 && b2 !== b2;
    };
  }
});

// node_modules/material-table/dist/components/m-table-header.js
var require_m_table_header = __commonJS({
  "node_modules/material-table/dist/components/m-table-header.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.styles = exports.default = exports.MTableHeader = void 0;
    var _extends2 = _interopRequireDefault(require_extends());
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var React62 = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var _TableHead = _interopRequireDefault((init_TableHead(), __toCommonJS(TableHead_exports)));
    var _TableRow = _interopRequireDefault((init_TableRow(), __toCommonJS(TableRow_exports)));
    var _TableCell = _interopRequireDefault((init_TableCell(), __toCommonJS(TableCell_exports)));
    var _TableSortLabel = _interopRequireDefault((init_TableSortLabel(), __toCommonJS(TableSortLabel_exports)));
    var _Checkbox = _interopRequireDefault((init_Checkbox(), __toCommonJS(Checkbox_exports)));
    var _styles = (init_styles2(), __toCommonJS(styles_exports2));
    var _reactBeautifulDnd = (init_react_beautiful_dnd_esm(), __toCommonJS(react_beautiful_dnd_esm_exports));
    var _material = (init_material(), __toCommonJS(material_exports));
    var CommonValues = _interopRequireWildcard(require_common_values());
    var _fastDeepEqual = _interopRequireDefault(require_fast_deep_equal());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTableHeader = function(_React$Component) {
      (0, _inherits2.default)(MTableHeader2, _React$Component);
      var _super = _createSuper(MTableHeader2);
      function MTableHeader2(props) {
        var _this;
        (0, _classCallCheck2.default)(this, MTableHeader2);
        _this = _super.call(this, props);
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMouseDown", function(e2, columnDef) {
          _this.setState({
            lastAdditionalWidth: columnDef.tableData.additionalWidth,
            lastX: e2.clientX,
            resizingColumnDef: columnDef
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMouseMove", function(e2) {
          if (!_this.state.resizingColumnDef) {
            return;
          }
          var additionalWidth = _this.state.lastAdditionalWidth + e2.clientX - _this.state.lastX;
          additionalWidth = Math.min(_this.state.resizingColumnDef.maxWidth || additionalWidth, additionalWidth);
          if (_this.state.resizingColumnDef.tableData.additionalWidth !== additionalWidth) {
            _this.props.onColumnResized(_this.state.resizingColumnDef.tableData.id, additionalWidth);
          }
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMouseUp", function(e2) {
          _this.setState({
            resizingColumnDef: void 0
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getCellStyle", function(columnDef) {
          var width = CommonValues.reducePercentsInCalc(columnDef.tableData.width, _this.props.scrollWidth);
          var style2 = (0, _objectSpread22.default)({}, _this.props.headerStyle, columnDef.headerStyle, {
            boxSizing: "border-box",
            width,
            maxWidth: columnDef.maxWidth,
            minWidth: columnDef.minWidth
          });
          if (_this.props.options.tableLayout === "fixed" && _this.props.options.columnResizable && columnDef.resizable !== false) {
            style2.paddingRight = 2;
          }
          return style2;
        });
        _this.state = {
          lastX: 0,
          resizingColumnDef: void 0
        };
        return _this;
      }
      (0, _createClass2.default)(MTableHeader2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          document.addEventListener("mousemove", this.handleMouseMove);
          document.addEventListener("mouseup", this.handleMouseUp);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          document.removeEventListener("mousemove", this.handleMouseMove);
          document.removeEventListener("mouseup", this.handleMouseUp);
        }
      }, {
        key: "renderHeader",
        value: function renderHeader() {
          var _this2 = this;
          var size = this.props.options.padding === "default" ? "medium" : "small";
          var mapArr = this.props.columns.filter(function(columnDef) {
            return !columnDef.hidden && !(columnDef.tableData.groupOrder > -1);
          }).sort(function(a2, b2) {
            return a2.tableData.columnOrder - b2.tableData.columnOrder;
          }).map(function(columnDef, index2) {
            var content = columnDef.title;
            if (_this2.props.draggable) {
              content = React62.createElement(_reactBeautifulDnd.Draggable, {
                key: columnDef.tableData.id,
                draggableId: columnDef.tableData.id.toString(),
                index: index2
              }, function(provided, snapshot) {
                return React62.createElement("div", (0, _extends2.default)({
                  ref: provided.innerRef
                }, provided.draggableProps, provided.dragHandleProps), columnDef.title);
              });
            }
            if (columnDef.sorting !== false && _this2.props.sorting) {
              content = React62.createElement(_TableSortLabel.default, {
                IconComponent: _this2.props.icons.SortArrow,
                active: _this2.props.orderBy === columnDef.tableData.id,
                direction: _this2.props.orderDirection || "asc",
                onClick: function onClick() {
                  var orderDirection = columnDef.tableData.id !== _this2.props.orderBy ? "asc" : _this2.props.orderDirection === "asc" ? "desc" : _this2.props.orderDirection === "desc" && _this2.props.thirdSortClick ? "" : _this2.props.orderDirection === "desc" && !_this2.props.thirdSortClick ? "asc" : _this2.props.orderDirection === "" ? "asc" : "desc";
                  _this2.props.onOrderChange(columnDef.tableData.id, orderDirection);
                }
              }, content);
            }
            if (columnDef.tooltip) {
              content = React62.createElement(_material.Tooltip, {
                title: columnDef.tooltip,
                placement: "bottom"
              }, React62.createElement("span", null, content));
            }
            if (_this2.props.options.tableLayout === "fixed" && _this2.props.options.columnResizable && columnDef.resizable !== false) {
              content = React62.createElement("div", {
                style: {
                  display: "flex",
                  alignItems: "center"
                }
              }, React62.createElement("div", {
                style: {
                  flex: 1
                }
              }, content), React62.createElement("div", null), React62.createElement(_this2.props.icons.Resize, {
                style: {
                  cursor: "col-resize",
                  color: _this2.state.resizingColumnDef && _this2.state.resizingColumnDef.tableData.id === columnDef.tableData.id ? _this2.props.theme.palette.primary.main : "inherit"
                },
                onMouseDown: function onMouseDown(e2) {
                  return _this2.handleMouseDown(e2, columnDef);
                }
              }));
            }
            var cellAlignment = columnDef.align !== void 0 ? columnDef.align : ["numeric", "currency"].indexOf(columnDef.type) !== -1 ? "right" : "left";
            return React62.createElement(_TableCell.default, {
              key: columnDef.tableData.id,
              align: cellAlignment,
              className: _this2.props.classes.header,
              style: _this2.getCellStyle(columnDef),
              size
            }, content);
          });
          return mapArr;
        }
      }, {
        key: "renderActionsHeader",
        value: function renderActionsHeader() {
          var localization = (0, _objectSpread22.default)({}, MTableHeader2.defaultProps.localization, this.props.localization);
          var width = CommonValues.actionsColumnWidth(this.props);
          return React62.createElement(_TableCell.default, {
            key: "key-actions-column",
            padding: "checkbox",
            className: this.props.classes.header,
            style: (0, _objectSpread22.default)({}, this.props.headerStyle, {
              width,
              textAlign: "center",
              boxSizing: "border-box"
            })
          }, React62.createElement(_TableSortLabel.default, {
            hideSortIcon: true,
            disabled: true
          }, localization.actions));
        }
      }, {
        key: "renderSelectionHeader",
        value: function renderSelectionHeader() {
          var _this3 = this;
          var selectionWidth = CommonValues.selectionMaxWidth(this.props, this.props.treeDataMaxLevel);
          return React62.createElement(_TableCell.default, {
            padding: "none",
            key: "key-selection-column",
            className: this.props.classes.header,
            style: (0, _objectSpread22.default)({}, this.props.headerStyle, {
              width: selectionWidth
            })
          }, this.props.showSelectAllCheckbox && React62.createElement(_Checkbox.default, (0, _extends2.default)({
            indeterminate: this.props.selectedCount > 0 && this.props.selectedCount < this.props.dataCount,
            checked: this.props.dataCount > 0 && this.props.selectedCount === this.props.dataCount,
            onChange: function onChange(event, checked) {
              return _this3.props.onAllSelected && _this3.props.onAllSelected(checked);
            }
          }, this.props.options.headerSelectionProps)));
        }
      }, {
        key: "renderDetailPanelColumnCell",
        value: function renderDetailPanelColumnCell() {
          return React62.createElement(_TableCell.default, {
            padding: "none",
            key: "key-detail-panel-column",
            className: this.props.classes.header,
            style: (0, _objectSpread22.default)({}, this.props.headerStyle)
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this4 = this;
          var headers = this.renderHeader();
          if (this.props.hasSelection) {
            headers.splice(0, 0, this.renderSelectionHeader());
          }
          if (this.props.showActionsColumn) {
            if (this.props.actionsHeaderIndex >= 0) {
              var endPos = 0;
              if (this.props.hasSelection) {
                endPos = 1;
              }
              headers.splice(this.props.actionsHeaderIndex + endPos, 0, this.renderActionsHeader());
            } else if (this.props.actionsHeaderIndex === -1) {
              headers.push(this.renderActionsHeader());
            }
          }
          if (this.props.hasDetailPanel) {
            if (this.props.detailPanelColumnAlignment === "right") {
              headers.push(this.renderDetailPanelColumnCell());
            } else {
              headers.splice(0, 0, this.renderDetailPanelColumnCell());
            }
          }
          if (this.props.isTreeData > 0) {
            headers.splice(0, 0, React62.createElement(_TableCell.default, {
              padding: "none",
              key: "key-tree-data-header",
              className: this.props.classes.header,
              style: (0, _objectSpread22.default)({}, this.props.headerStyle)
            }));
          }
          this.props.columns.filter(function(columnDef) {
            return columnDef.tableData.groupOrder > -1;
          }).forEach(function(columnDef) {
            headers.splice(0, 0, React62.createElement(_TableCell.default, {
              padding: "checkbox",
              key: "key-group-header" + columnDef.tableData.id,
              className: _this4.props.classes.header
            }));
          });
          return React62.createElement(_TableHead.default, null, React62.createElement(_TableRow.default, null, headers));
        }
      }]);
      return MTableHeader2;
    }(React62.Component);
    exports.MTableHeader = MTableHeader;
    MTableHeader.defaultProps = {
      dataCount: 0,
      hasSelection: false,
      headerStyle: {},
      selectedCount: 0,
      sorting: true,
      localization: {
        actions: "Actions"
      },
      orderBy: void 0,
      orderDirection: "asc",
      actionsHeaderIndex: 0,
      detailPanelColumnAlignment: "left",
      draggable: true,
      thirdSortClick: true
    };
    MTableHeader.propTypes = {
      columns: _propTypes.default.array.isRequired,
      dataCount: _propTypes.default.number,
      hasDetailPanel: _propTypes.default.bool.isRequired,
      detailPanelColumnAlignment: _propTypes.default.string,
      hasSelection: _propTypes.default.bool,
      headerStyle: _propTypes.default.object,
      localization: _propTypes.default.object,
      selectedCount: _propTypes.default.number,
      sorting: _propTypes.default.bool,
      onAllSelected: _propTypes.default.func,
      onOrderChange: _propTypes.default.func,
      orderBy: _propTypes.default.number,
      orderDirection: _propTypes.default.string,
      actionsHeaderIndex: _propTypes.default.number,
      showActionsColumn: _propTypes.default.bool,
      showSelectAllCheckbox: _propTypes.default.bool,
      draggable: _propTypes.default.bool,
      thirdSortClick: _propTypes.default.bool,
      tooltip: _propTypes.default.string
    };
    var styles = function styles2(theme) {
      return {
        header: {
          // display: 'inline-block',
          position: "sticky",
          top: 0,
          zIndex: 10,
          backgroundColor: theme.palette.background.paper
          // Change according to theme,
        }
      };
    };
    exports.styles = styles;
    var _default = (0, _styles.withStyles)(styles, {
      withTheme: true
    })(MTableHeader);
    exports.default = _default;
  }
});

// node_modules/material-table/dist/components/m-table-pagination.js
var require_m_table_pagination = __commonJS({
  "node_modules/material-table/dist/components/m-table-pagination.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _IconButton = _interopRequireDefault((init_IconButton(), __toCommonJS(IconButton_exports)));
    var _styles = (init_styles2(), __toCommonJS(styles_exports2));
    var _Tooltip = _interopRequireDefault((init_Tooltip(), __toCommonJS(Tooltip_exports)));
    var _Typography = _interopRequireDefault((init_Typography(), __toCommonJS(Typography_exports)));
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var React62 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTablePaginationInner = function(_React$Component) {
      (0, _inherits2.default)(MTablePaginationInner2, _React$Component);
      var _super = _createSuper(MTablePaginationInner2);
      function MTablePaginationInner2() {
        var _this;
        (0, _classCallCheck2.default)(this, MTablePaginationInner2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleFirstPageButtonClick", function(event) {
          _this.props.onPageChange(event, 0);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleBackButtonClick", function(event) {
          _this.props.onPageChange(event, _this.props.page - 1);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleNextButtonClick", function(event) {
          _this.props.onPageChange(event, _this.props.page + 1);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleLastPageButtonClick", function(event) {
          _this.props.onPageChange(event, Math.max(0, Math.ceil(_this.props.count / _this.props.rowsPerPage) - 1));
        });
        return _this;
      }
      (0, _createClass2.default)(MTablePaginationInner2, [{
        key: "render",
        value: function render() {
          var _this$props = this.props, classes = _this$props.classes, count2 = _this$props.count, page = _this$props.page, rowsPerPage = _this$props.rowsPerPage, theme = _this$props.theme, showFirstLastPageButtons = _this$props.showFirstLastPageButtons;
          var localization = (0, _objectSpread22.default)({}, MTablePaginationInner2.defaultProps.localization, this.props.localization);
          return React62.createElement("div", {
            className: classes.root
          }, showFirstLastPageButtons && React62.createElement(_Tooltip.default, {
            title: localization.firstTooltip
          }, React62.createElement("span", null, React62.createElement(_IconButton.default, {
            onClick: this.handleFirstPageButtonClick,
            disabled: page === 0,
            "aria-label": localization.firstAriaLabel,
            size: "large"
          }, theme.direction === "rtl" ? React62.createElement(this.props.icons.LastPage, null) : React62.createElement(this.props.icons.FirstPage, null)))), React62.createElement(_Tooltip.default, {
            title: localization.previousTooltip
          }, React62.createElement("span", null, React62.createElement(_IconButton.default, {
            onClick: this.handleBackButtonClick,
            disabled: page === 0,
            "aria-label": localization.previousAriaLabel,
            size: "large"
          }, theme.direction === "rtl" ? React62.createElement(this.props.icons.NextPage, null) : React62.createElement(this.props.icons.PreviousPage, null)))), React62.createElement(_Typography.default, {
            variant: "caption",
            style: {
              flex: 1,
              textAlign: "center",
              alignSelf: "center",
              flexBasis: "inherit"
            }
          }, localization.labelDisplayedRows.replace("{from}", this.props.count === 0 ? 0 : this.props.page * this.props.rowsPerPage + 1).replace("{to}", Math.min((this.props.page + 1) * this.props.rowsPerPage, this.props.count)).replace("{count}", this.props.count)), React62.createElement(_Tooltip.default, {
            title: localization.nextTooltip
          }, React62.createElement("span", null, React62.createElement(_IconButton.default, {
            onClick: this.handleNextButtonClick,
            disabled: page >= Math.ceil(count2 / rowsPerPage) - 1,
            "aria-label": localization.nextAriaLabel,
            size: "large"
          }, theme.direction === "rtl" ? React62.createElement(this.props.icons.PreviousPage, null) : React62.createElement(this.props.icons.NextPage, null)))), showFirstLastPageButtons && React62.createElement(_Tooltip.default, {
            title: localization.lastTooltip
          }, React62.createElement("span", null, React62.createElement(_IconButton.default, {
            onClick: this.handleLastPageButtonClick,
            disabled: page >= Math.ceil(count2 / rowsPerPage) - 1,
            "aria-label": localization.lastAriaLabel,
            size: "large"
          }, theme.direction === "rtl" ? React62.createElement(this.props.icons.FirstPage, null) : React62.createElement(this.props.icons.LastPage, null)))));
        }
      }]);
      return MTablePaginationInner2;
    }(React62.Component);
    var actionsStyles = function actionsStyles2(theme) {
      return {
        root: {
          flexShrink: 0,
          color: theme.palette.text.secondary,
          display: "flex"
          // lineHeight: '48px'
        }
      };
    };
    MTablePaginationInner.propTypes = {
      onPageChange: _propTypes.default.func,
      page: _propTypes.default.number,
      count: _propTypes.default.number,
      rowsPerPage: _propTypes.default.number,
      classes: _propTypes.default.object,
      localization: _propTypes.default.object,
      theme: _propTypes.default.any,
      showFirstLastPageButtons: _propTypes.default.bool
    };
    MTablePaginationInner.defaultProps = {
      showFirstLastPageButtons: true,
      localization: {
        firstTooltip: "First Page",
        previousTooltip: "Previous Page",
        nextTooltip: "Next Page",
        lastTooltip: "Last Page",
        labelDisplayedRows: "{from}-{to} of {count}",
        labelRowsPerPage: "Rows per page:"
      }
    };
    var MTablePagination = (0, _styles.withStyles)(actionsStyles, {
      withTheme: true
    })(MTablePaginationInner);
    var _default = MTablePagination;
    exports.default = _default;
  }
});

// node_modules/material-table/dist/components/m-table-stepped-pagination.js
var require_m_table_stepped_pagination = __commonJS({
  "node_modules/material-table/dist/components/m-table-stepped-pagination.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _IconButton = _interopRequireDefault((init_IconButton(), __toCommonJS(IconButton_exports)));
    var _Tooltip = _interopRequireDefault((init_Tooltip(), __toCommonJS(Tooltip_exports)));
    var _Hidden = _interopRequireDefault((init_Hidden(), __toCommonJS(Hidden_exports)));
    var _Button = _interopRequireDefault((init_Button(), __toCommonJS(Button_exports)));
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var _styles = (init_styles2(), __toCommonJS(styles_exports2));
    var React62 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MTablePaginationInner = function(_React$Component) {
      (0, _inherits2.default)(MTablePaginationInner2, _React$Component);
      var _super = _createSuper(MTablePaginationInner2);
      function MTablePaginationInner2() {
        var _this;
        (0, _classCallCheck2.default)(this, MTablePaginationInner2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleFirstPageButtonClick", function(event) {
          _this.props.onPageChange(event, 0);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleBackButtonClick", function(event) {
          _this.props.onPageChange(event, _this.props.page - 1);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleNextButtonClick", function(event) {
          _this.props.onPageChange(event, _this.props.page + 1);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleNumberButtonClick", function(number) {
          return function(event) {
            _this.props.onPageChange(event, number);
          };
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleLastPageButtonClick", function(event) {
          _this.props.onPageChange(event, Math.max(0, Math.ceil(_this.props.count / _this.props.rowsPerPage) - 1));
        });
        return _this;
      }
      (0, _createClass2.default)(MTablePaginationInner2, [{
        key: "renderPagesButton",
        value: function renderPagesButton(start3, end2) {
          var buttons = [];
          for (var p2 = start3; p2 <= end2; p2++) {
            var buttonVariant = p2 === this.props.page ? "contained" : "text";
            buttons.push(React62.createElement(_Button.default, {
              size: "small",
              style: {
                boxShadow: "none",
                maxWidth: "30px",
                maxHeight: "30px",
                minWidth: "30px",
                minHeight: "30px"
              },
              disabled: p2 === this.props.page,
              variant: buttonVariant,
              onClick: this.handleNumberButtonClick(p2),
              key: p2
            }, p2 + 1));
          }
          return React62.createElement("span", null, buttons);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, classes = _this$props.classes, count2 = _this$props.count, page = _this$props.page, rowsPerPage = _this$props.rowsPerPage, theme = _this$props.theme, showFirstLastPageButtons = _this$props.showFirstLastPageButtons;
          var localization = (0, _objectSpread22.default)({}, MTablePaginationInner2.defaultProps.localization, this.props.localization);
          var maxPages = Math.ceil(count2 / rowsPerPage) - 1;
          var pageStart = Math.max(page - 1, 0);
          var pageEnd = Math.min(maxPages, page + 1);
          return React62.createElement("div", {
            className: classes.root
          }, showFirstLastPageButtons && React62.createElement(_Tooltip.default, {
            title: localization.firstTooltip
          }, React62.createElement("span", null, React62.createElement(_IconButton.default, {
            onClick: this.handleFirstPageButtonClick,
            disabled: page === 0,
            "aria-label": localization.firstAriaLabel,
            size: "large"
          }, theme.direction === "rtl" ? React62.createElement(this.props.icons.LastPage, null) : React62.createElement(this.props.icons.FirstPage, null)))), React62.createElement(_Tooltip.default, {
            title: localization.previousTooltip
          }, React62.createElement("span", null, React62.createElement(_IconButton.default, {
            onClick: this.handleBackButtonClick,
            disabled: page === 0,
            "aria-label": localization.previousAriaLabel,
            size: "large"
          }, React62.createElement(this.props.icons.PreviousPage, null)))), React62.createElement(_Hidden.default, {
            mdDown: true
          }, this.renderPagesButton(pageStart, pageEnd)), React62.createElement(_Tooltip.default, {
            title: localization.nextTooltip
          }, React62.createElement("span", null, React62.createElement(_IconButton.default, {
            onClick: this.handleNextButtonClick,
            disabled: page >= maxPages,
            "aria-label": localization.nextAriaLabel,
            size: "large"
          }, React62.createElement(this.props.icons.NextPage, null)))), showFirstLastPageButtons && React62.createElement(_Tooltip.default, {
            title: localization.lastTooltip
          }, React62.createElement("span", null, React62.createElement(_IconButton.default, {
            onClick: this.handleLastPageButtonClick,
            disabled: page >= Math.ceil(count2 / rowsPerPage) - 1,
            "aria-label": localization.lastAriaLabel,
            size: "large"
          }, theme.direction === "rtl" ? React62.createElement(this.props.icons.FirstPage, null) : React62.createElement(this.props.icons.LastPage, null)))));
        }
      }]);
      return MTablePaginationInner2;
    }(React62.Component);
    var actionsStyles = function actionsStyles2(theme) {
      return {
        root: {
          flexShrink: 0,
          color: theme.palette.text.secondary,
          marginLeft: theme.spacing(2.5)
        }
      };
    };
    MTablePaginationInner.propTypes = {
      onPageChange: _propTypes.default.func,
      page: _propTypes.default.number,
      count: _propTypes.default.number,
      rowsPerPage: _propTypes.default.number,
      classes: _propTypes.default.object,
      localization: _propTypes.default.object,
      theme: _propTypes.default.any,
      showFirstLastPageButtons: _propTypes.default.bool
    };
    MTablePaginationInner.defaultProps = {
      showFirstLastPageButtons: true,
      localization: {
        firstTooltip: "First Page",
        previousTooltip: "Previous Page",
        nextTooltip: "Next Page",
        lastTooltip: "Last Page",
        labelDisplayedRows: "{from}-{to} of {count}",
        labelRowsPerPage: "Rows per page:"
      }
    };
    var MTableSteppedPagination = (0, _styles.withStyles)(actionsStyles, {
      withTheme: true
    })(MTablePaginationInner);
    var _default = MTableSteppedPagination;
    exports.default = _default;
  }
});

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      function classNames() {
        var classes = [];
        for (var i2 = 0; i2 < arguments.length; i2++) {
          var arg = arguments[i2];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg) && arg.length) {
            var inner = classNames.apply(null, arg);
            if (inner) {
              classes.push(inner);
            }
          } else if (argType === "object") {
            for (var key in arg) {
              if (hasOwn.call(arg, key) && arg[key]) {
                classes.push(key);
              }
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames;
        });
      } else {
        window.classNames = classNames;
      }
    })();
  }
});

// node_modules/filefy/dist/core/BaseBuilder.js
var require_BaseBuilder = __commonJS({
  "node_modules/filefy/dist/core/BaseBuilder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BaseBuilder = (
      /** @class */
      function() {
        function BaseBuilder2() {
        }
        BaseBuilder2.prototype.exportFile = function(dataType, fileName, data) {
          if (window.navigator.msSaveOrOpenBlob) {
            var blob = new Blob([data]);
            window.navigator.msSaveOrOpenBlob(blob, fileName);
          } else {
            var charBom = "\uFEFF";
            var encodedData = encodeURIComponent(data);
            var content = "data:text/" + dataType + ";charset=utf-8," + charBom + encodedData;
            var link = document.createElement("a");
            link.setAttribute("href", content);
            link.setAttribute("download", fileName);
            document.body.appendChild(link);
            link.click();
          }
        };
        return BaseBuilder2;
      }()
    );
    exports.default = BaseBuilder;
  }
});

// node_modules/filefy/dist/csv-builder/CsvBuilder.js
var require_CsvBuilder = __commonJS({
  "node_modules/filefy/dist/csv-builder/CsvBuilder.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d2, b2) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
          d3.__proto__ = b3;
        } || function(d3, b3) {
          for (var p2 in b3)
            if (b3.hasOwnProperty(p2))
              d3[p2] = b3[p2];
        };
        return extendStatics(d2, b2);
      };
      return function(d2, b2) {
        extendStatics(d2, b2);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
      };
    }();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var BaseBuilder_1 = __importDefault(require_BaseBuilder());
    var CsvBuilder = (
      /** @class */
      function(_super) {
        __extends(CsvBuilder2, _super);
        function CsvBuilder2(fileName) {
          var _this = _super.call(this) || this;
          _this._FileName = "";
          _this._Delimeter = ",";
          _this._Columns = [];
          _this._RowData = [];
          _this._FileName = fileName;
          return _this;
        }
        CsvBuilder2.prototype.setColumns = function(columns) {
          this._Columns = columns;
          return this;
        };
        CsvBuilder2.prototype.setDelimeter = function(delimeter) {
          this._Delimeter = delimeter;
          return this;
        };
        CsvBuilder2.prototype.addRow = function(row) {
          this._RowData.push(row);
          return this;
        };
        CsvBuilder2.prototype.addRows = function(rows) {
          this._RowData = this._RowData.concat(rows);
          return this;
        };
        CsvBuilder2.prototype.escapeCell = function(cellData) {
          if (typeof cellData === "string") {
            return '"' + cellData.replace(/\"/g, '""') + '"';
          }
          return cellData;
        };
        CsvBuilder2.prototype.getRowData = function(row) {
          return row.map(this.escapeCell).join(this._Delimeter);
        };
        CsvBuilder2.prototype.exportFile = function() {
          var _this = this;
          var dataArray = [];
          if (this._Columns && this._Columns.length > 0) {
            dataArray.push(this.getRowData(this._Columns));
          }
          this._RowData.forEach(function(row) {
            dataArray.push(_this.getRowData(row));
          });
          var csvContent = dataArray.join("\r\n");
          _super.prototype.exportFile.call(this, "csv", this._FileName, csvContent);
        };
        return CsvBuilder2;
      }(BaseBuilder_1.default)
    );
    exports.default = CsvBuilder;
  }
});

// node_modules/filefy/dist/index.js
var require_dist = __commonJS({
  "node_modules/filefy/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CsvBuilder_1 = require_CsvBuilder();
    exports.CsvBuilder = CsvBuilder_1.default;
  }
});

// node_modules/jspdf/dist/jspdf.es.min.js
var jspdf_es_min_exports = {};
__export(jspdf_es_min_exports, {
  AcroForm: () => ht,
  AcroFormAppearance: () => ut,
  AcroFormButton: () => et,
  AcroFormCheckBox: () => at2,
  AcroFormChoiceField: () => Z,
  AcroFormComboBox: () => Q,
  AcroFormEditBox: () => tt,
  AcroFormListBox: () => $,
  AcroFormPasswordField: () => st,
  AcroFormPushButton: () => nt,
  AcroFormRadioButton: () => rt,
  AcroFormTextField: () => ot,
  GState: () => l,
  ShadingPattern: () => d,
  TilingPattern: () => p,
  default: () => jspdf_es_min_default,
  jsPDF: () => g
});
function e() {
  t.console && "function" == typeof t.console.log && t.console.log.apply(t.console, arguments);
}
function r3(t2, e2, r4) {
  var i2 = new XMLHttpRequest();
  i2.open("GET", t2), i2.responseType = "blob", i2.onload = function() {
    u(i2.response, e2, r4);
  }, i2.onerror = function() {
    n.error("could not download file");
  }, i2.send();
}
function i(t2) {
  var e2 = new XMLHttpRequest();
  e2.open("HEAD", t2, false);
  try {
    e2.send();
  } catch (t3) {
  }
  return e2.status >= 200 && e2.status <= 299;
}
function a(t2) {
  try {
    t2.dispatchEvent(new MouseEvent("click"));
  } catch (n2) {
    var e2 = document.createEvent("MouseEvents");
    e2.initMouseEvent("click", true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null), t2.dispatchEvent(e2);
  }
}
function c(t2) {
  var e2;
  t2 = t2 || "", this.ok = false, "#" == t2.charAt(0) && (t2 = t2.substr(1, 6));
  t2 = { aliceblue: "f0f8ff", antiquewhite: "faebd7", aqua: "00ffff", aquamarine: "7fffd4", azure: "f0ffff", beige: "f5f5dc", bisque: "ffe4c4", black: "000000", blanchedalmond: "ffebcd", blue: "0000ff", blueviolet: "8a2be2", brown: "a52a2a", burlywood: "deb887", cadetblue: "5f9ea0", chartreuse: "7fff00", chocolate: "d2691e", coral: "ff7f50", cornflowerblue: "6495ed", cornsilk: "fff8dc", crimson: "dc143c", cyan: "00ffff", darkblue: "00008b", darkcyan: "008b8b", darkgoldenrod: "b8860b", darkgray: "a9a9a9", darkgreen: "006400", darkkhaki: "bdb76b", darkmagenta: "8b008b", darkolivegreen: "556b2f", darkorange: "ff8c00", darkorchid: "9932cc", darkred: "8b0000", darksalmon: "e9967a", darkseagreen: "8fbc8f", darkslateblue: "483d8b", darkslategray: "2f4f4f", darkturquoise: "00ced1", darkviolet: "9400d3", deeppink: "ff1493", deepskyblue: "00bfff", dimgray: "696969", dodgerblue: "1e90ff", feldspar: "d19275", firebrick: "b22222", floralwhite: "fffaf0", forestgreen: "228b22", fuchsia: "ff00ff", gainsboro: "dcdcdc", ghostwhite: "f8f8ff", gold: "ffd700", goldenrod: "daa520", gray: "808080", green: "008000", greenyellow: "adff2f", honeydew: "f0fff0", hotpink: "ff69b4", indianred: "cd5c5c", indigo: "4b0082", ivory: "fffff0", khaki: "f0e68c", lavender: "e6e6fa", lavenderblush: "fff0f5", lawngreen: "7cfc00", lemonchiffon: "fffacd", lightblue: "add8e6", lightcoral: "f08080", lightcyan: "e0ffff", lightgoldenrodyellow: "fafad2", lightgrey: "d3d3d3", lightgreen: "90ee90", lightpink: "ffb6c1", lightsalmon: "ffa07a", lightseagreen: "20b2aa", lightskyblue: "87cefa", lightslateblue: "8470ff", lightslategray: "778899", lightsteelblue: "b0c4de", lightyellow: "ffffe0", lime: "00ff00", limegreen: "32cd32", linen: "faf0e6", magenta: "ff00ff", maroon: "800000", mediumaquamarine: "66cdaa", mediumblue: "0000cd", mediumorchid: "ba55d3", mediumpurple: "9370d8", mediumseagreen: "3cb371", mediumslateblue: "7b68ee", mediumspringgreen: "00fa9a", mediumturquoise: "48d1cc", mediumvioletred: "c71585", midnightblue: "191970", mintcream: "f5fffa", mistyrose: "ffe4e1", moccasin: "ffe4b5", navajowhite: "ffdead", navy: "000080", oldlace: "fdf5e6", olive: "808000", olivedrab: "6b8e23", orange: "ffa500", orangered: "ff4500", orchid: "da70d6", palegoldenrod: "eee8aa", palegreen: "98fb98", paleturquoise: "afeeee", palevioletred: "d87093", papayawhip: "ffefd5", peachpuff: "ffdab9", peru: "cd853f", pink: "ffc0cb", plum: "dda0dd", powderblue: "b0e0e6", purple: "800080", red: "ff0000", rosybrown: "bc8f8f", royalblue: "4169e1", saddlebrown: "8b4513", salmon: "fa8072", sandybrown: "f4a460", seagreen: "2e8b57", seashell: "fff5ee", sienna: "a0522d", silver: "c0c0c0", skyblue: "87ceeb", slateblue: "6a5acd", slategray: "708090", snow: "fffafa", springgreen: "00ff7f", steelblue: "4682b4", tan: "d2b48c", teal: "008080", thistle: "d8bfd8", tomato: "ff6347", turquoise: "40e0d0", violet: "ee82ee", violetred: "d02090", wheat: "f5deb3", white: "ffffff", whitesmoke: "f5f5f5", yellow: "ffff00", yellowgreen: "9acd32" }[t2 = (t2 = t2.replace(/ /g, "")).toLowerCase()] || t2;
  for (var n2 = [{ re: /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/, example: ["rgb(123, 234, 45)", "rgb(255,234,245)"], process: function(t3) {
    return [parseInt(t3[1]), parseInt(t3[2]), parseInt(t3[3])];
  } }, { re: /^(\w{2})(\w{2})(\w{2})$/, example: ["#00ff00", "336699"], process: function(t3) {
    return [parseInt(t3[1], 16), parseInt(t3[2], 16), parseInt(t3[3], 16)];
  } }, { re: /^(\w{1})(\w{1})(\w{1})$/, example: ["#fb0", "f0f"], process: function(t3) {
    return [parseInt(t3[1] + t3[1], 16), parseInt(t3[2] + t3[2], 16), parseInt(t3[3] + t3[3], 16)];
  } }], r4 = 0; r4 < n2.length; r4++) {
    var i2 = n2[r4].re, a2 = n2[r4].process, o2 = i2.exec(t2);
    o2 && (e2 = a2(o2), this.r = e2[0], this.g = e2[1], this.b = e2[2], this.ok = true);
  }
  this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r, this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g, this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b, this.toRGB = function() {
    return "rgb(" + this.r + ", " + this.g + ", " + this.b + ")";
  }, this.toHex = function() {
    var t3 = this.r.toString(16), e3 = this.g.toString(16), n3 = this.b.toString(16);
    return 1 == t3.length && (t3 = "0" + t3), 1 == e3.length && (e3 = "0" + e3), 1 == n3.length && (n3 = "0" + n3), "#" + t3 + e3 + n3;
  };
}
function h(e2) {
  if ("object" != typeof e2)
    throw new Error("Invalid Context passed to initialize PubSub (jsPDF-module)");
  var r4 = {};
  this.subscribe = function(t2, e3, n2) {
    if (n2 = n2 || false, "string" != typeof t2 || "function" != typeof e3 || "boolean" != typeof n2)
      throw new Error("Invalid arguments passed to PubSub.subscribe (jsPDF-module)");
    r4.hasOwnProperty(t2) || (r4[t2] = {});
    var i2 = Math.random().toString(35);
    return r4[t2][i2] = [e3, !!n2], i2;
  }, this.unsubscribe = function(t2) {
    for (var e3 in r4)
      if (r4[e3][t2])
        return delete r4[e3][t2], 0 === Object.keys(r4[e3]).length && delete r4[e3], true;
    return false;
  }, this.publish = function(i2) {
    if (r4.hasOwnProperty(i2)) {
      var a2 = Array.prototype.slice.call(arguments, 1), o2 = [];
      for (var s2 in r4[i2]) {
        var u2 = r4[i2][s2];
        try {
          u2[0].apply(e2, a2);
        } catch (e3) {
          t.console && n.error("jsPDF PubSub Error", e3.message, e3);
        }
        u2[1] && o2.push(s2);
      }
      o2.length && o2.forEach(this.unsubscribe);
    }
  }, this.getTopics = function() {
    return r4;
  };
}
function l(t2) {
  if (!(this instanceof l))
    return new l(t2);
  var e2 = "opacity,stroke-opacity".split(",");
  for (var n2 in t2)
    t2.hasOwnProperty(n2) && e2.indexOf(n2) >= 0 && (this[n2] = t2[n2]);
  this.id = "", this.objectNumber = -1;
}
function f(t2, e2) {
  this.gState = t2, this.matrix = e2, this.id = "", this.objectNumber = -1;
}
function d(t2, e2, n2, r4, i2) {
  if (!(this instanceof d))
    return new d(t2, e2, n2, r4, i2);
  this.type = "axial" === t2 ? 2 : 3, this.coords = e2, this.colors = n2, f.call(this, r4, i2);
}
function p(t2, e2, n2, r4, i2) {
  if (!(this instanceof p))
    return new p(t2, e2, n2, r4, i2);
  this.boundingBox = t2, this.xStep = e2, this.yStep = n2, this.stream = "", this.cloneIndex = 0, f.call(this, r4, i2);
}
function g(e2) {
  var r4, i2 = "string" == typeof arguments[0] ? arguments[0] : "p", a2 = arguments[1], o2 = arguments[2], f2 = arguments[3], m2 = [], v2 = 1, b2 = 16, y2 = "S";
  "object" == typeof (e2 = e2 || {}) && (i2 = e2.orientation, a2 = e2.unit || a2, o2 = e2.format || o2, f2 = e2.compress || e2.compressPdf || f2, v2 = "number" == typeof e2.userUnit ? Math.abs(e2.userUnit) : 1, void 0 !== e2.precision && (r4 = e2.precision), void 0 !== e2.floatPrecision && (b2 = e2.floatPrecision), y2 = e2.defaultPathOperation || "S"), m2 = e2.filters || (true === f2 ? ["FlateEncode"] : m2), a2 = a2 || "mm", i2 = ("" + (i2 || "P")).toLowerCase();
  var w2 = e2.putOnlyUsedFonts || false, N2 = {}, L2 = { internal: {}, __private__: {} };
  L2.__private__.PubSub = h;
  var x2 = "1.3", A2 = L2.__private__.getPdfVersion = function() {
    return x2;
  };
  L2.__private__.setPdfVersion = function(t2) {
    x2 = t2;
  };
  var _2 = { a0: [2383.94, 3370.39], a1: [1683.78, 2383.94], a2: [1190.55, 1683.78], a3: [841.89, 1190.55], a4: [595.28, 841.89], a5: [419.53, 595.28], a6: [297.64, 419.53], a7: [209.76, 297.64], a8: [147.4, 209.76], a9: [104.88, 147.4], a10: [73.7, 104.88], b0: [2834.65, 4008.19], b1: [2004.09, 2834.65], b2: [1417.32, 2004.09], b3: [1000.63, 1417.32], b4: [708.66, 1000.63], b5: [498.9, 708.66], b6: [354.33, 498.9], b7: [249.45, 354.33], b8: [175.75, 249.45], b9: [124.72, 175.75], b10: [87.87, 124.72], c0: [2599.37, 3676.54], c1: [1836.85, 2599.37], c2: [1298.27, 1836.85], c3: [918.43, 1298.27], c4: [649.13, 918.43], c5: [459.21, 649.13], c6: [323.15, 459.21], c7: [229.61, 323.15], c8: [161.57, 229.61], c9: [113.39, 161.57], c10: [79.37, 113.39], dl: [311.81, 623.62], letter: [612, 792], "government-letter": [576, 756], legal: [612, 1008], "junior-legal": [576, 360], ledger: [1224, 792], tabloid: [792, 1224], "credit-card": [153, 243] };
  L2.__private__.getPageFormats = function() {
    return _2;
  };
  var S2 = L2.__private__.getPageFormat = function(t2) {
    return _2[t2];
  };
  o2 = o2 || "a4";
  var P2 = { COMPAT: "compat", ADVANCED: "advanced" }, k2 = P2.COMPAT;
  function F2() {
    this.saveGraphicsState(), ot2(new Dt2(Nt2, 0, 0, -Nt2, 0, Cn() * Nt2).toString() + " cm"), this.setFontSize(this.getFontSize() / Nt2), y2 = "n", k2 = P2.ADVANCED;
  }
  function I2() {
    this.restoreGraphicsState(), y2 = "S", k2 = P2.COMPAT;
  }
  L2.advancedAPI = function(t2) {
    var e3 = k2 === P2.COMPAT;
    return e3 && F2.call(this), "function" != typeof t2 || (t2(this), e3 && I2.call(this)), this;
  }, L2.compatAPI = function(t2) {
    var e3 = k2 === P2.ADVANCED;
    return e3 && I2.call(this), "function" != typeof t2 || (t2(this), e3 && F2.call(this)), this;
  }, L2.isAdvancedAPI = function() {
    return k2 === P2.ADVANCED;
  };
  var C2, j2 = function(t2) {
    if (k2 !== P2.ADVANCED)
      throw new Error(t2 + " is only available in 'advanced' API mode. You need to call advancedAPI() first.");
  }, B2 = L2.roundToPrecision = L2.__private__.roundToPrecision = function(t2, e3) {
    var n2 = r4 || e3;
    if (isNaN(t2) || isNaN(n2))
      throw new Error("Invalid argument passed to jsPDF.roundToPrecision");
    return t2.toFixed(n2).replace(/0+$/, "");
  };
  C2 = L2.hpf = L2.__private__.hpf = "number" == typeof b2 ? function(t2) {
    if (isNaN(t2))
      throw new Error("Invalid argument passed to jsPDF.hpf");
    return B2(t2, b2);
  } : "smart" === b2 ? function(t2) {
    if (isNaN(t2))
      throw new Error("Invalid argument passed to jsPDF.hpf");
    return B2(t2, t2 > -1 && t2 < 1 ? 16 : 5);
  } : function(t2) {
    if (isNaN(t2))
      throw new Error("Invalid argument passed to jsPDF.hpf");
    return B2(t2, 16);
  };
  var O2 = L2.f2 = L2.__private__.f2 = function(t2) {
    if (isNaN(t2))
      throw new Error("Invalid argument passed to jsPDF.f2");
    return B2(t2, 2);
  }, M2 = L2.__private__.f3 = function(t2) {
    if (isNaN(t2))
      throw new Error("Invalid argument passed to jsPDF.f3");
    return B2(t2, 3);
  }, E2 = L2.scale = L2.__private__.scale = function(t2) {
    if (isNaN(t2))
      throw new Error("Invalid argument passed to jsPDF.scale");
    return k2 === P2.COMPAT ? t2 * Nt2 : k2 === P2.ADVANCED ? t2 : void 0;
  }, q2 = function(t2) {
    return k2 === P2.COMPAT ? Cn() - t2 : k2 === P2.ADVANCED ? t2 : void 0;
  }, R2 = function(t2) {
    return E2(q2(t2));
  };
  L2.__private__.setPrecision = L2.setPrecision = function(t2) {
    "number" == typeof parseInt(t2, 10) && (r4 = parseInt(t2, 10));
  };
  var T2, D2 = "00000000000000000000000000000000", U2 = L2.__private__.getFileId = function() {
    return D2;
  }, z2 = L2.__private__.setFileId = function(t2) {
    return D2 = void 0 !== t2 && /^[a-fA-F0-9]{32}$/.test(t2) ? t2.toUpperCase() : D2.split("").map(function() {
      return "ABCDEF0123456789".charAt(Math.floor(16 * Math.random()));
    }).join("");
  };
  L2.setFileId = function(t2) {
    return z2(t2), this;
  }, L2.getFileId = function() {
    return U2();
  };
  var H2 = L2.__private__.convertDateToPDFDate = function(t2) {
    var e3 = t2.getTimezoneOffset(), n2 = e3 < 0 ? "+" : "-", r5 = Math.floor(Math.abs(e3 / 60)), i3 = Math.abs(e3 % 60), a3 = [n2, J2(r5), "'", J2(i3), "'"].join("");
    return ["D:", t2.getFullYear(), J2(t2.getMonth() + 1), J2(t2.getDate()), J2(t2.getHours()), J2(t2.getMinutes()), J2(t2.getSeconds()), a3].join("");
  }, W2 = L2.__private__.convertPDFDateToDate = function(t2) {
    var e3 = parseInt(t2.substr(2, 4), 10), n2 = parseInt(t2.substr(6, 2), 10) - 1, r5 = parseInt(t2.substr(8, 2), 10), i3 = parseInt(t2.substr(10, 2), 10), a3 = parseInt(t2.substr(12, 2), 10), o3 = parseInt(t2.substr(14, 2), 10);
    return new Date(e3, n2, r5, i3, a3, o3, 0);
  }, V2 = L2.__private__.setCreationDate = function(t2) {
    var e3;
    if (void 0 === t2 && (t2 = /* @__PURE__ */ new Date()), t2 instanceof Date)
      e3 = H2(t2);
    else {
      if (!/^D:(20[0-2][0-9]|203[0-7]|19[7-9][0-9])(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])(0[0-9]|[1-5][0-9])(\+0[0-9]|\+1[0-4]|-0[0-9]|-1[0-1])'(0[0-9]|[1-5][0-9])'?$/.test(t2))
        throw new Error("Invalid argument passed to jsPDF.setCreationDate");
      e3 = t2;
    }
    return T2 = e3;
  }, G2 = L2.__private__.getCreationDate = function(t2) {
    var e3 = T2;
    return "jsDate" === t2 && (e3 = W2(T2)), e3;
  };
  L2.setCreationDate = function(t2) {
    return V2(t2), this;
  }, L2.getCreationDate = function(t2) {
    return G2(t2);
  };
  var Y2, J2 = L2.__private__.padd2 = function(t2) {
    return ("0" + parseInt(t2)).slice(-2);
  }, X2 = L2.__private__.padd2Hex = function(t2) {
    return ("00" + (t2 = t2.toString())).substr(t2.length);
  }, K2 = 0, Z2 = [], $2 = [], Q2 = 0, tt2 = [], et2 = [], nt2 = false, rt2 = $2, it2 = function() {
    K2 = 0, Q2 = 0, $2 = [], Z2 = [], tt2 = [], Jt2 = Vt2(), Xt2 = Vt2();
  };
  L2.__private__.setCustomOutputDestination = function(t2) {
    nt2 = true, rt2 = t2;
  };
  var at3 = function(t2) {
    nt2 || (rt2 = t2);
  };
  L2.__private__.resetCustomOutputDestination = function() {
    nt2 = false, rt2 = $2;
  };
  var ot2 = L2.__private__.out = function(t2) {
    return t2 = t2.toString(), Q2 += t2.length + 1, rt2.push(t2), rt2;
  }, st2 = L2.__private__.write = function(t2) {
    return ot2(1 === arguments.length ? t2.toString() : Array.prototype.join.call(arguments, " "));
  }, ut2 = L2.__private__.getArrayBuffer = function(t2) {
    for (var e3 = t2.length, n2 = new ArrayBuffer(e3), r5 = new Uint8Array(n2); e3--; )
      r5[e3] = t2.charCodeAt(e3);
    return n2;
  }, ct2 = [["Helvetica", "helvetica", "normal", "WinAnsiEncoding"], ["Helvetica-Bold", "helvetica", "bold", "WinAnsiEncoding"], ["Helvetica-Oblique", "helvetica", "italic", "WinAnsiEncoding"], ["Helvetica-BoldOblique", "helvetica", "bolditalic", "WinAnsiEncoding"], ["Courier", "courier", "normal", "WinAnsiEncoding"], ["Courier-Bold", "courier", "bold", "WinAnsiEncoding"], ["Courier-Oblique", "courier", "italic", "WinAnsiEncoding"], ["Courier-BoldOblique", "courier", "bolditalic", "WinAnsiEncoding"], ["Times-Roman", "times", "normal", "WinAnsiEncoding"], ["Times-Bold", "times", "bold", "WinAnsiEncoding"], ["Times-Italic", "times", "italic", "WinAnsiEncoding"], ["Times-BoldItalic", "times", "bolditalic", "WinAnsiEncoding"], ["ZapfDingbats", "zapfdingbats", "normal", null], ["Symbol", "symbol", "normal", null]];
  L2.__private__.getStandardFonts = function() {
    return ct2;
  };
  var ht2 = e2.fontSize || 16;
  L2.__private__.setFontSize = L2.setFontSize = function(t2) {
    return ht2 = k2 === P2.ADVANCED ? t2 / Nt2 : t2, this;
  };
  var lt2, ft2 = L2.__private__.getFontSize = L2.getFontSize = function() {
    return k2 === P2.COMPAT ? ht2 : ht2 * Nt2;
  }, dt2 = e2.R2L || false;
  L2.__private__.setR2L = L2.setR2L = function(t2) {
    return dt2 = t2, this;
  }, L2.__private__.getR2L = L2.getR2L = function() {
    return dt2;
  };
  var pt2, gt2 = L2.__private__.setZoomMode = function(t2) {
    var e3 = [void 0, null, "fullwidth", "fullheight", "fullpage", "original"];
    if (/^\d*\.?\d*%$/.test(t2))
      lt2 = t2;
    else if (isNaN(t2)) {
      if (-1 === e3.indexOf(t2))
        throw new Error('zoom must be Integer (e.g. 2), a percentage Value (e.g. 300%) or fullwidth, fullheight, fullpage, original. "' + t2 + '" is not recognized.');
      lt2 = t2;
    } else
      lt2 = parseInt(t2, 10);
  };
  L2.__private__.getZoomMode = function() {
    return lt2;
  };
  var mt2, vt2 = L2.__private__.setPageMode = function(t2) {
    if (-1 == [void 0, null, "UseNone", "UseOutlines", "UseThumbs", "FullScreen"].indexOf(t2))
      throw new Error('Page mode must be one of UseNone, UseOutlines, UseThumbs, or FullScreen. "' + t2 + '" is not recognized.');
    pt2 = t2;
  };
  L2.__private__.getPageMode = function() {
    return pt2;
  };
  var bt2 = L2.__private__.setLayoutMode = function(t2) {
    if (-1 == [void 0, null, "continuous", "single", "twoleft", "tworight", "two"].indexOf(t2))
      throw new Error('Layout mode must be one of continuous, single, twoleft, tworight. "' + t2 + '" is not recognized.');
    mt2 = t2;
  };
  L2.__private__.getLayoutMode = function() {
    return mt2;
  }, L2.__private__.setDisplayMode = L2.setDisplayMode = function(t2, e3, n2) {
    return gt2(t2), bt2(e3), vt2(n2), this;
  };
  var yt2 = { title: "", subject: "", author: "", keywords: "", creator: "" };
  L2.__private__.getDocumentProperty = function(t2) {
    if (-1 === Object.keys(yt2).indexOf(t2))
      throw new Error("Invalid argument passed to jsPDF.getDocumentProperty");
    return yt2[t2];
  }, L2.__private__.getDocumentProperties = function() {
    return yt2;
  }, L2.__private__.setDocumentProperties = L2.setProperties = L2.setDocumentProperties = function(t2) {
    for (var e3 in yt2)
      yt2.hasOwnProperty(e3) && t2[e3] && (yt2[e3] = t2[e3]);
    return this;
  }, L2.__private__.setDocumentProperty = function(t2, e3) {
    if (-1 === Object.keys(yt2).indexOf(t2))
      throw new Error("Invalid arguments passed to jsPDF.setDocumentProperty");
    return yt2[t2] = e3;
  };
  var wt2, Nt2, Lt2, xt2, At2, _t2 = {}, St2 = {}, Pt2 = [], kt2 = {}, Ft2 = {}, It2 = {}, Ct2 = {}, jt2 = null, Bt2 = 0, Ot2 = [], Mt2 = new h(L2), Et2 = e2.hotfixes || [], qt2 = {}, Rt2 = {}, Tt2 = [], Dt2 = function(t2, e3, n2, r5, i3, a3) {
    if (!(this instanceof Dt2))
      return new Dt2(t2, e3, n2, r5, i3, a3);
    isNaN(t2) && (t2 = 1), isNaN(e3) && (e3 = 0), isNaN(n2) && (n2 = 0), isNaN(r5) && (r5 = 1), isNaN(i3) && (i3 = 0), isNaN(a3) && (a3 = 0), this._matrix = [t2, e3, n2, r5, i3, a3];
  };
  Object.defineProperty(Dt2.prototype, "sx", { get: function() {
    return this._matrix[0];
  }, set: function(t2) {
    this._matrix[0] = t2;
  } }), Object.defineProperty(Dt2.prototype, "shy", { get: function() {
    return this._matrix[1];
  }, set: function(t2) {
    this._matrix[1] = t2;
  } }), Object.defineProperty(Dt2.prototype, "shx", { get: function() {
    return this._matrix[2];
  }, set: function(t2) {
    this._matrix[2] = t2;
  } }), Object.defineProperty(Dt2.prototype, "sy", { get: function() {
    return this._matrix[3];
  }, set: function(t2) {
    this._matrix[3] = t2;
  } }), Object.defineProperty(Dt2.prototype, "tx", { get: function() {
    return this._matrix[4];
  }, set: function(t2) {
    this._matrix[4] = t2;
  } }), Object.defineProperty(Dt2.prototype, "ty", { get: function() {
    return this._matrix[5];
  }, set: function(t2) {
    this._matrix[5] = t2;
  } }), Object.defineProperty(Dt2.prototype, "a", { get: function() {
    return this._matrix[0];
  }, set: function(t2) {
    this._matrix[0] = t2;
  } }), Object.defineProperty(Dt2.prototype, "b", { get: function() {
    return this._matrix[1];
  }, set: function(t2) {
    this._matrix[1] = t2;
  } }), Object.defineProperty(Dt2.prototype, "c", { get: function() {
    return this._matrix[2];
  }, set: function(t2) {
    this._matrix[2] = t2;
  } }), Object.defineProperty(Dt2.prototype, "d", { get: function() {
    return this._matrix[3];
  }, set: function(t2) {
    this._matrix[3] = t2;
  } }), Object.defineProperty(Dt2.prototype, "e", { get: function() {
    return this._matrix[4];
  }, set: function(t2) {
    this._matrix[4] = t2;
  } }), Object.defineProperty(Dt2.prototype, "f", { get: function() {
    return this._matrix[5];
  }, set: function(t2) {
    this._matrix[5] = t2;
  } }), Object.defineProperty(Dt2.prototype, "rotation", { get: function() {
    return Math.atan2(this.shx, this.sx);
  } }), Object.defineProperty(Dt2.prototype, "scaleX", { get: function() {
    return this.decompose().scale.sx;
  } }), Object.defineProperty(Dt2.prototype, "scaleY", { get: function() {
    return this.decompose().scale.sy;
  } }), Object.defineProperty(Dt2.prototype, "isIdentity", { get: function() {
    return 1 === this.sx && (0 === this.shy && (0 === this.shx && (1 === this.sy && (0 === this.tx && 0 === this.ty))));
  } }), Dt2.prototype.join = function(t2) {
    return [this.sx, this.shy, this.shx, this.sy, this.tx, this.ty].map(C2).join(t2);
  }, Dt2.prototype.multiply = function(t2) {
    var e3 = t2.sx * this.sx + t2.shy * this.shx, n2 = t2.sx * this.shy + t2.shy * this.sy, r5 = t2.shx * this.sx + t2.sy * this.shx, i3 = t2.shx * this.shy + t2.sy * this.sy, a3 = t2.tx * this.sx + t2.ty * this.shx + this.tx, o3 = t2.tx * this.shy + t2.ty * this.sy + this.ty;
    return new Dt2(e3, n2, r5, i3, a3, o3);
  }, Dt2.prototype.decompose = function() {
    var t2 = this.sx, e3 = this.shy, n2 = this.shx, r5 = this.sy, i3 = this.tx, a3 = this.ty, o3 = Math.sqrt(t2 * t2 + e3 * e3), s2 = (t2 /= o3) * n2 + (e3 /= o3) * r5;
    n2 -= t2 * s2, r5 -= e3 * s2;
    var u2 = Math.sqrt(n2 * n2 + r5 * r5);
    return s2 /= u2, t2 * (r5 /= u2) < e3 * (n2 /= u2) && (t2 = -t2, e3 = -e3, s2 = -s2, o3 = -o3), { scale: new Dt2(o3, 0, 0, u2, 0, 0), translate: new Dt2(1, 0, 0, 1, i3, a3), rotate: new Dt2(t2, e3, -e3, t2, 0, 0), skew: new Dt2(1, 0, s2, 1, 0, 0) };
  }, Dt2.prototype.toString = function(t2) {
    return this.join(" ");
  }, Dt2.prototype.inversed = function() {
    var t2 = this.sx, e3 = this.shy, n2 = this.shx, r5 = this.sy, i3 = this.tx, a3 = this.ty, o3 = 1 / (t2 * r5 - e3 * n2), s2 = r5 * o3, u2 = -e3 * o3, c2 = -n2 * o3, h2 = t2 * o3;
    return new Dt2(s2, u2, c2, h2, -s2 * i3 - c2 * a3, -u2 * i3 - h2 * a3);
  }, Dt2.prototype.applyToPoint = function(t2) {
    var e3 = t2.x * this.sx + t2.y * this.shx + this.tx, n2 = t2.x * this.shy + t2.y * this.sy + this.ty;
    return new xn(e3, n2);
  }, Dt2.prototype.applyToRectangle = function(t2) {
    var e3 = this.applyToPoint(t2), n2 = this.applyToPoint(new xn(t2.x + t2.w, t2.y + t2.h));
    return new An(e3.x, e3.y, n2.x - e3.x, n2.y - e3.y);
  }, Dt2.prototype.clone = function() {
    var t2 = this.sx, e3 = this.shy, n2 = this.shx, r5 = this.sy, i3 = this.tx, a3 = this.ty;
    return new Dt2(t2, e3, n2, r5, i3, a3);
  }, L2.Matrix = Dt2;
  var Ut2 = L2.matrixMult = function(t2, e3) {
    return e3.multiply(t2);
  }, zt2 = new Dt2(1, 0, 0, 1, 0, 0);
  L2.unitMatrix = L2.identityMatrix = zt2;
  var Ht2 = function(t2, e3) {
    if (!Ft2[t2]) {
      var n2 = (e3 instanceof d ? "Sh" : "P") + (Object.keys(kt2).length + 1).toString(10);
      e3.id = n2, Ft2[t2] = n2, kt2[n2] = e3, Mt2.publish("addPattern", e3);
    }
  };
  L2.ShadingPattern = d, L2.TilingPattern = p, L2.addShadingPattern = function(t2, e3) {
    return j2("addShadingPattern()"), Ht2(t2, e3), this;
  }, L2.beginTilingPattern = function(t2) {
    j2("beginTilingPattern()"), Sn(t2.boundingBox[0], t2.boundingBox[1], t2.boundingBox[2] - t2.boundingBox[0], t2.boundingBox[3] - t2.boundingBox[1], t2.matrix);
  }, L2.endTilingPattern = function(t2, e3) {
    j2("endTilingPattern()"), e3.stream = et2[Y2].join("\n"), Ht2(t2, e3), Mt2.publish("endTilingPattern", e3), Tt2.pop().restore();
  };
  var Wt2 = L2.__private__.newObject = function() {
    var t2 = Vt2();
    return Gt2(t2, true), t2;
  }, Vt2 = L2.__private__.newObjectDeferred = function() {
    return K2++, Z2[K2] = function() {
      return Q2;
    }, K2;
  }, Gt2 = function(t2, e3) {
    return e3 = "boolean" == typeof e3 && e3, Z2[t2] = Q2, e3 && ot2(t2 + " 0 obj"), t2;
  }, Yt2 = L2.__private__.newAdditionalObject = function() {
    var t2 = { objId: Vt2(), content: "" };
    return tt2.push(t2), t2;
  }, Jt2 = Vt2(), Xt2 = Vt2(), Kt2 = L2.__private__.decodeColorString = function(t2) {
    var e3 = t2.split(" ");
    if (2 !== e3.length || "g" !== e3[1] && "G" !== e3[1]) {
      if (5 === e3.length && ("k" === e3[4] || "K" === e3[4])) {
        e3 = [(1 - e3[0]) * (1 - e3[3]), (1 - e3[1]) * (1 - e3[3]), (1 - e3[2]) * (1 - e3[3]), "r"];
      }
    } else {
      var n2 = parseFloat(e3[0]);
      e3 = [n2, n2, n2, "r"];
    }
    for (var r5 = "#", i3 = 0; i3 < 3; i3++)
      r5 += ("0" + Math.floor(255 * parseFloat(e3[i3])).toString(16)).slice(-2);
    return r5;
  }, Zt2 = L2.__private__.encodeColorString = function(t2) {
    var e3;
    "string" == typeof t2 && (t2 = { ch1: t2 });
    var n2 = t2.ch1, r5 = t2.ch2, i3 = t2.ch3, a3 = t2.ch4, o3 = "draw" === t2.pdfColorType ? ["G", "RG", "K"] : ["g", "rg", "k"];
    if ("string" == typeof n2 && "#" !== n2.charAt(0)) {
      var s2 = new c(n2);
      if (s2.ok)
        n2 = s2.toHex();
      else if (!/^\d*\.?\d*$/.test(n2))
        throw new Error('Invalid color "' + n2 + '" passed to jsPDF.encodeColorString.');
    }
    if ("string" == typeof n2 && /^#[0-9A-Fa-f]{3}$/.test(n2) && (n2 = "#" + n2[1] + n2[1] + n2[2] + n2[2] + n2[3] + n2[3]), "string" == typeof n2 && /^#[0-9A-Fa-f]{6}$/.test(n2)) {
      var u2 = parseInt(n2.substr(1), 16);
      n2 = u2 >> 16 & 255, r5 = u2 >> 8 & 255, i3 = 255 & u2;
    }
    if (void 0 === r5 || void 0 === a3 && n2 === r5 && r5 === i3)
      if ("string" == typeof n2)
        e3 = n2 + " " + o3[0];
      else
        switch (t2.precision) {
          case 2:
            e3 = O2(n2 / 255) + " " + o3[0];
            break;
          case 3:
          default:
            e3 = M2(n2 / 255) + " " + o3[0];
        }
    else if (void 0 === a3 || "object" == typeof a3) {
      if (a3 && !isNaN(a3.a) && 0 === a3.a)
        return e3 = ["1.", "1.", "1.", o3[1]].join(" ");
      if ("string" == typeof n2)
        e3 = [n2, r5, i3, o3[1]].join(" ");
      else
        switch (t2.precision) {
          case 2:
            e3 = [O2(n2 / 255), O2(r5 / 255), O2(i3 / 255), o3[1]].join(" ");
            break;
          default:
          case 3:
            e3 = [M2(n2 / 255), M2(r5 / 255), M2(i3 / 255), o3[1]].join(" ");
        }
    } else if ("string" == typeof n2)
      e3 = [n2, r5, i3, a3, o3[2]].join(" ");
    else
      switch (t2.precision) {
        case 2:
          e3 = [O2(n2), O2(r5), O2(i3), O2(a3), o3[2]].join(" ");
          break;
        case 3:
        default:
          e3 = [M2(n2), M2(r5), M2(i3), M2(a3), o3[2]].join(" ");
      }
    return e3;
  }, $t2 = L2.__private__.getFilters = function() {
    return m2;
  }, Qt2 = L2.__private__.putStream = function(t2) {
    var e3 = (t2 = t2 || {}).data || "", n2 = t2.filters || $t2(), r5 = t2.alreadyAppliedFilters || [], i3 = t2.addLength1 || false, a3 = e3.length, o3 = {};
    true === n2 && (n2 = ["FlateEncode"]);
    var s2 = t2.additionalKeyValues || [], u2 = (o3 = void 0 !== g.API.processDataByFilters ? g.API.processDataByFilters(e3, n2) : { data: e3, reverseChain: [] }).reverseChain + (Array.isArray(r5) ? r5.join(" ") : r5.toString());
    if (0 !== o3.data.length && (s2.push({ key: "Length", value: o3.data.length }), true === i3 && s2.push({ key: "Length1", value: a3 })), 0 != u2.length)
      if (u2.split("/").length - 1 == 1)
        s2.push({ key: "Filter", value: u2 });
      else {
        s2.push({ key: "Filter", value: "[" + u2 + "]" });
        for (var c2 = 0; c2 < s2.length; c2 += 1)
          if ("DecodeParms" === s2[c2].key) {
            for (var h2 = [], l2 = 0; l2 < o3.reverseChain.split("/").length - 1; l2 += 1)
              h2.push("null");
            h2.push(s2[c2].value), s2[c2].value = "[" + h2.join(" ") + "]";
          }
      }
    ot2("<<");
    for (var f3 = 0; f3 < s2.length; f3++)
      ot2("/" + s2[f3].key + " " + s2[f3].value);
    ot2(">>"), 0 !== o3.data.length && (ot2("stream"), ot2(o3.data), ot2("endstream"));
  }, te2 = L2.__private__.putPage = function(t2) {
    var e3 = t2.number, n2 = t2.data, r5 = t2.objId, i3 = t2.contentsObjId;
    Gt2(r5, true), ot2("<</Type /Page"), ot2("/Parent " + t2.rootDictionaryObjId + " 0 R"), ot2("/Resources " + t2.resourceDictionaryObjId + " 0 R"), ot2("/MediaBox [" + parseFloat(C2(t2.mediaBox.bottomLeftX)) + " " + parseFloat(C2(t2.mediaBox.bottomLeftY)) + " " + C2(t2.mediaBox.topRightX) + " " + C2(t2.mediaBox.topRightY) + "]"), null !== t2.cropBox && ot2("/CropBox [" + C2(t2.cropBox.bottomLeftX) + " " + C2(t2.cropBox.bottomLeftY) + " " + C2(t2.cropBox.topRightX) + " " + C2(t2.cropBox.topRightY) + "]"), null !== t2.bleedBox && ot2("/BleedBox [" + C2(t2.bleedBox.bottomLeftX) + " " + C2(t2.bleedBox.bottomLeftY) + " " + C2(t2.bleedBox.topRightX) + " " + C2(t2.bleedBox.topRightY) + "]"), null !== t2.trimBox && ot2("/TrimBox [" + C2(t2.trimBox.bottomLeftX) + " " + C2(t2.trimBox.bottomLeftY) + " " + C2(t2.trimBox.topRightX) + " " + C2(t2.trimBox.topRightY) + "]"), null !== t2.artBox && ot2("/ArtBox [" + C2(t2.artBox.bottomLeftX) + " " + C2(t2.artBox.bottomLeftY) + " " + C2(t2.artBox.topRightX) + " " + C2(t2.artBox.topRightY) + "]"), "number" == typeof t2.userUnit && 1 !== t2.userUnit && ot2("/UserUnit " + t2.userUnit), Mt2.publish("putPage", { objId: r5, pageContext: Ot2[e3], pageNumber: e3, page: n2 }), ot2("/Contents " + i3 + " 0 R"), ot2(">>"), ot2("endobj");
    var a3 = n2.join("\n");
    return k2 === P2.ADVANCED && (a3 += "\nQ"), Gt2(i3, true), Qt2({ data: a3, filters: $t2() }), ot2("endobj"), r5;
  }, ee2 = L2.__private__.putPages = function() {
    var t2, e3, n2 = [];
    for (t2 = 1; t2 <= Bt2; t2++)
      Ot2[t2].objId = Vt2(), Ot2[t2].contentsObjId = Vt2();
    for (t2 = 1; t2 <= Bt2; t2++)
      n2.push(te2({ number: t2, data: et2[t2], objId: Ot2[t2].objId, contentsObjId: Ot2[t2].contentsObjId, mediaBox: Ot2[t2].mediaBox, cropBox: Ot2[t2].cropBox, bleedBox: Ot2[t2].bleedBox, trimBox: Ot2[t2].trimBox, artBox: Ot2[t2].artBox, userUnit: Ot2[t2].userUnit, rootDictionaryObjId: Jt2, resourceDictionaryObjId: Xt2 }));
    Gt2(Jt2, true), ot2("<</Type /Pages");
    var r5 = "/Kids [";
    for (e3 = 0; e3 < Bt2; e3++)
      r5 += n2[e3] + " 0 R ";
    ot2(r5 + "]"), ot2("/Count " + Bt2), ot2(">>"), ot2("endobj"), Mt2.publish("postPutPages");
  }, ne2 = function(t2) {
    var e3 = function(t3, e4) {
      return -1 !== t3.indexOf(" ") ? "(" + _e(t3, e4) + ")" : _e(t3, e4);
    };
    Mt2.publish("putFont", { font: t2, out: ot2, newObject: Wt2, putStream: Qt2, pdfEscapeWithNeededParanthesis: e3 }), true !== t2.isAlreadyPutted && (t2.objectNumber = Wt2(), ot2("<<"), ot2("/Type /Font"), ot2("/BaseFont /" + e3(t2.postScriptName)), ot2("/Subtype /Type1"), "string" == typeof t2.encoding && ot2("/Encoding /" + t2.encoding), ot2("/FirstChar 32"), ot2("/LastChar 255"), ot2(">>"), ot2("endobj"));
  }, re2 = function() {
    for (var t2 in _t2)
      _t2.hasOwnProperty(t2) && (false === w2 || true === w2 && N2.hasOwnProperty(t2)) && ne2(_t2[t2]);
  }, ie = function(t2) {
    t2.objectNumber = Wt2();
    var e3 = [];
    e3.push({ key: "Type", value: "/XObject" }), e3.push({ key: "Subtype", value: "/Form" }), e3.push({ key: "BBox", value: "[" + [C2(t2.x), C2(t2.y), C2(t2.x + t2.width), C2(t2.y + t2.height)].join(" ") + "]" }), e3.push({ key: "Matrix", value: "[" + t2.matrix.toString() + "]" });
    var n2 = t2.pages[1].join("\n");
    Qt2({ data: n2, additionalKeyValues: e3 }), ot2("endobj");
  }, ae = function() {
    for (var t2 in qt2)
      qt2.hasOwnProperty(t2) && ie(qt2[t2]);
  }, oe = function(t2, e3) {
    var n2, r5 = [], i3 = 1 / (e3 - 1);
    for (n2 = 0; n2 < 1; n2 += i3)
      r5.push(n2);
    if (r5.push(1), 0 != t2[0].offset) {
      var a3 = { offset: 0, color: t2[0].color };
      t2.unshift(a3);
    }
    if (1 != t2[t2.length - 1].offset) {
      var o3 = { offset: 1, color: t2[t2.length - 1].color };
      t2.push(o3);
    }
    for (var s2 = "", u2 = 0, c2 = 0; c2 < r5.length; c2++) {
      for (n2 = r5[c2]; n2 > t2[u2 + 1].offset; )
        u2++;
      var h2 = t2[u2].offset, l2 = (n2 - h2) / (t2[u2 + 1].offset - h2), f3 = t2[u2].color, d2 = t2[u2 + 1].color;
      s2 += X2(Math.round((1 - l2) * f3[0] + l2 * d2[0]).toString(16)) + X2(Math.round((1 - l2) * f3[1] + l2 * d2[1]).toString(16)) + X2(Math.round((1 - l2) * f3[2] + l2 * d2[2]).toString(16));
    }
    return s2.trim();
  }, se = function(t2, e3) {
    e3 || (e3 = 21);
    var n2 = Wt2(), r5 = oe(t2.colors, e3), i3 = [];
    i3.push({ key: "FunctionType", value: "0" }), i3.push({ key: "Domain", value: "[0.0 1.0]" }), i3.push({ key: "Size", value: "[" + e3 + "]" }), i3.push({ key: "BitsPerSample", value: "8" }), i3.push({ key: "Range", value: "[0.0 1.0 0.0 1.0 0.0 1.0]" }), i3.push({ key: "Decode", value: "[0.0 1.0 0.0 1.0 0.0 1.0]" }), Qt2({ data: r5, additionalKeyValues: i3, alreadyAppliedFilters: ["/ASCIIHexDecode"] }), ot2("endobj"), t2.objectNumber = Wt2(), ot2("<< /ShadingType " + t2.type), ot2("/ColorSpace /DeviceRGB");
    var a3 = "/Coords [" + C2(parseFloat(t2.coords[0])) + " " + C2(parseFloat(t2.coords[1])) + " ";
    2 === t2.type ? a3 += C2(parseFloat(t2.coords[2])) + " " + C2(parseFloat(t2.coords[3])) : a3 += C2(parseFloat(t2.coords[2])) + " " + C2(parseFloat(t2.coords[3])) + " " + C2(parseFloat(t2.coords[4])) + " " + C2(parseFloat(t2.coords[5])), ot2(a3 += "]"), t2.matrix && ot2("/Matrix [" + t2.matrix.toString() + "]"), ot2("/Function " + n2 + " 0 R"), ot2("/Extend [true true]"), ot2(">>"), ot2("endobj");
  }, ue = function(t2, e3) {
    var n2 = Vt2(), r5 = Wt2();
    e3.push({ resourcesOid: n2, objectOid: r5 }), t2.objectNumber = r5;
    var i3 = [];
    i3.push({ key: "Type", value: "/Pattern" }), i3.push({ key: "PatternType", value: "1" }), i3.push({ key: "PaintType", value: "1" }), i3.push({ key: "TilingType", value: "1" }), i3.push({ key: "BBox", value: "[" + t2.boundingBox.map(C2).join(" ") + "]" }), i3.push({ key: "XStep", value: C2(t2.xStep) }), i3.push({ key: "YStep", value: C2(t2.yStep) }), i3.push({ key: "Resources", value: n2 + " 0 R" }), t2.matrix && i3.push({ key: "Matrix", value: "[" + t2.matrix.toString() + "]" }), Qt2({ data: t2.stream, additionalKeyValues: i3 }), ot2("endobj");
  }, ce = function(t2) {
    var e3;
    for (e3 in kt2)
      kt2.hasOwnProperty(e3) && (kt2[e3] instanceof d ? se(kt2[e3]) : kt2[e3] instanceof p && ue(kt2[e3], t2));
  }, he = function(t2) {
    for (var e3 in t2.objectNumber = Wt2(), ot2("<<"), t2)
      switch (e3) {
        case "opacity":
          ot2("/ca " + O2(t2[e3]));
          break;
        case "stroke-opacity":
          ot2("/CA " + O2(t2[e3]));
      }
    ot2(">>"), ot2("endobj");
  }, le = function() {
    var t2;
    for (t2 in It2)
      It2.hasOwnProperty(t2) && he(It2[t2]);
  }, fe = function() {
    for (var t2 in ot2("/XObject <<"), qt2)
      qt2.hasOwnProperty(t2) && qt2[t2].objectNumber >= 0 && ot2("/" + t2 + " " + qt2[t2].objectNumber + " 0 R");
    Mt2.publish("putXobjectDict"), ot2(">>");
  }, de = function() {
    for (var t2 in ot2("/Font <<"), _t2)
      _t2.hasOwnProperty(t2) && (false === w2 || true === w2 && N2.hasOwnProperty(t2)) && ot2("/" + t2 + " " + _t2[t2].objectNumber + " 0 R");
    ot2(">>");
  }, pe = function() {
    if (Object.keys(kt2).length > 0) {
      for (var t2 in ot2("/Shading <<"), kt2)
        kt2.hasOwnProperty(t2) && kt2[t2] instanceof d && kt2[t2].objectNumber >= 0 && ot2("/" + t2 + " " + kt2[t2].objectNumber + " 0 R");
      Mt2.publish("putShadingPatternDict"), ot2(">>");
    }
  }, ge = function(t2) {
    if (Object.keys(kt2).length > 0) {
      for (var e3 in ot2("/Pattern <<"), kt2)
        kt2.hasOwnProperty(e3) && kt2[e3] instanceof L2.TilingPattern && kt2[e3].objectNumber >= 0 && kt2[e3].objectNumber < t2 && ot2("/" + e3 + " " + kt2[e3].objectNumber + " 0 R");
      Mt2.publish("putTilingPatternDict"), ot2(">>");
    }
  }, me = function() {
    if (Object.keys(It2).length > 0) {
      var t2;
      for (t2 in ot2("/ExtGState <<"), It2)
        It2.hasOwnProperty(t2) && It2[t2].objectNumber >= 0 && ot2("/" + t2 + " " + It2[t2].objectNumber + " 0 R");
      Mt2.publish("putGStateDict"), ot2(">>");
    }
  }, ve = function(t2) {
    Gt2(t2.resourcesOid, true), ot2("<<"), ot2("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]"), de(), pe(), ge(t2.objectOid), me(), fe(), ot2(">>"), ot2("endobj");
  }, be = function() {
    var t2 = [];
    re2(), le(), ae(), ce(t2), Mt2.publish("putResources"), t2.forEach(ve), ve({ resourcesOid: Xt2, objectOid: Number.MAX_SAFE_INTEGER }), Mt2.publish("postPutResources");
  }, ye = function() {
    Mt2.publish("putAdditionalObjects");
    for (var t2 = 0; t2 < tt2.length; t2++) {
      var e3 = tt2[t2];
      Gt2(e3.objId, true), ot2(e3.content), ot2("endobj");
    }
    Mt2.publish("postPutAdditionalObjects");
  }, we = function(t2) {
    St2[t2.fontName] = St2[t2.fontName] || {}, St2[t2.fontName][t2.fontStyle] = t2.id;
  }, Ne = function(t2, e3, n2, r5, i3) {
    var a3 = { id: "F" + (Object.keys(_t2).length + 1).toString(10), postScriptName: t2, fontName: e3, fontStyle: n2, encoding: r5, isStandardFont: i3 || false, metadata: {} };
    return Mt2.publish("addFont", { font: a3, instance: this }), _t2[a3.id] = a3, we(a3), a3.id;
  }, Le = function(t2) {
    for (var e3 = 0, n2 = ct2.length; e3 < n2; e3++) {
      var r5 = Ne.call(this, t2[e3][0], t2[e3][1], t2[e3][2], ct2[e3][3], true);
      false === w2 && (N2[r5] = true);
      var i3 = t2[e3][0].split("-");
      we({ id: r5, fontName: i3[0], fontStyle: i3[1] || "" });
    }
    Mt2.publish("addFonts", { fonts: _t2, dictionary: St2 });
  }, xe = function(e3) {
    return e3.foo = function() {
      try {
        return e3.apply(this, arguments);
      } catch (e4) {
        var n2 = e4.stack || "";
        ~n2.indexOf(" at ") && (n2 = n2.split(" at ")[1]);
        var r5 = "Error in function " + n2.split("\n")[0].split("<")[0] + ": " + e4.message;
        if (!t.console)
          throw new Error(r5);
        t.console.error(r5, e4), t.alert && alert(r5);
      }
    }, e3.foo.bar = e3, e3.foo;
  }, Ae = function(t2, e3) {
    var n2, r5, i3, a3, o3, s2, u2, c2, h2;
    if (i3 = (e3 = e3 || {}).sourceEncoding || "Unicode", o3 = e3.outputEncoding, (e3.autoencode || o3) && _t2[wt2].metadata && _t2[wt2].metadata[i3] && _t2[wt2].metadata[i3].encoding && (a3 = _t2[wt2].metadata[i3].encoding, !o3 && _t2[wt2].encoding && (o3 = _t2[wt2].encoding), !o3 && a3.codePages && (o3 = a3.codePages[0]), "string" == typeof o3 && (o3 = a3[o3]), o3)) {
      for (u2 = false, s2 = [], n2 = 0, r5 = t2.length; n2 < r5; n2++)
        (c2 = o3[t2.charCodeAt(n2)]) ? s2.push(String.fromCharCode(c2)) : s2.push(t2[n2]), s2[n2].charCodeAt(0) >> 8 && (u2 = true);
      t2 = s2.join("");
    }
    for (n2 = t2.length; void 0 === u2 && 0 !== n2; )
      t2.charCodeAt(n2 - 1) >> 8 && (u2 = true), n2--;
    if (!u2)
      return t2;
    for (s2 = e3.noBOM ? [] : [254, 255], n2 = 0, r5 = t2.length; n2 < r5; n2++) {
      if ((h2 = (c2 = t2.charCodeAt(n2)) >> 8) >> 8)
        throw new Error("Character at position " + n2 + " of string '" + t2 + "' exceeds 16bits. Cannot be encoded into UCS-2 BE");
      s2.push(h2), s2.push(c2 - (h2 << 8));
    }
    return String.fromCharCode.apply(void 0, s2);
  }, _e = L2.__private__.pdfEscape = L2.pdfEscape = function(t2, e3) {
    return Ae(t2, e3).replace(/\\/g, "\\\\").replace(/\(/g, "\\(").replace(/\)/g, "\\)");
  }, Se = L2.__private__.beginPage = function(t2) {
    et2[++Bt2] = [], Ot2[Bt2] = { objId: 0, contentsObjId: 0, userUnit: Number(v2), artBox: null, bleedBox: null, cropBox: null, trimBox: null, mediaBox: { bottomLeftX: 0, bottomLeftY: 0, topRightX: Number(t2[0]), topRightY: Number(t2[1]) } }, Fe(Bt2), at3(et2[Y2]);
  }, Pe = function(t2, e3) {
    var r5, a3, s2;
    switch (i2 = e3 || i2, "string" == typeof t2 && (r5 = S2(t2.toLowerCase()), Array.isArray(r5) && (a3 = r5[0], s2 = r5[1])), Array.isArray(t2) && (a3 = t2[0] * Nt2, s2 = t2[1] * Nt2), isNaN(a3) && (a3 = o2[0], s2 = o2[1]), (a3 > 14400 || s2 > 14400) && (n.warn("A page in a PDF can not be wider or taller than 14400 userUnit. jsPDF limits the width/height to 14400"), a3 = Math.min(14400, a3), s2 = Math.min(14400, s2)), o2 = [a3, s2], i2.substr(0, 1)) {
      case "l":
        s2 > a3 && (o2 = [s2, a3]);
        break;
      case "p":
        a3 > s2 && (o2 = [s2, a3]);
    }
    Se(o2), on(an), ot2(pn), 0 !== wn && ot2(wn + " J"), 0 !== Nn && ot2(Nn + " j"), Mt2.publish("addPage", { pageNumber: Bt2 });
  }, ke = function(t2) {
    t2 > 0 && t2 <= Bt2 && (et2.splice(t2, 1), Ot2.splice(t2, 1), Bt2--, Y2 > Bt2 && (Y2 = Bt2), this.setPage(Y2));
  }, Fe = function(t2) {
    t2 > 0 && t2 <= Bt2 && (Y2 = t2);
  }, Ie = L2.__private__.getNumberOfPages = L2.getNumberOfPages = function() {
    return et2.length - 1;
  }, Ce = function(t2, e3, r5) {
    var i3, a3 = void 0;
    return r5 = r5 || {}, t2 = void 0 !== t2 ? t2 : _t2[wt2].fontName, e3 = void 0 !== e3 ? e3 : _t2[wt2].fontStyle, i3 = t2.toLowerCase(), void 0 !== St2[i3] && void 0 !== St2[i3][e3] ? a3 = St2[i3][e3] : void 0 !== St2[t2] && void 0 !== St2[t2][e3] ? a3 = St2[t2][e3] : false === r5.disableWarning && n.warn("Unable to look up font label for font '" + t2 + "', '" + e3 + "'. Refer to getFontList() for available fonts."), a3 || r5.noFallback || null == (a3 = St2.times[e3]) && (a3 = St2.times.normal), a3;
  }, je = L2.__private__.putInfo = function() {
    for (var t2 in Wt2(), ot2("<<"), ot2("/Producer (jsPDF " + g.version + ")"), yt2)
      yt2.hasOwnProperty(t2) && yt2[t2] && ot2("/" + t2.substr(0, 1).toUpperCase() + t2.substr(1) + " (" + _e(yt2[t2]) + ")");
    ot2("/CreationDate (" + T2 + ")"), ot2(">>"), ot2("endobj");
  }, Be = L2.__private__.putCatalog = function(t2) {
    var e3 = (t2 = t2 || {}).rootDictionaryObjId || Jt2;
    switch (Wt2(), ot2("<<"), ot2("/Type /Catalog"), ot2("/Pages " + e3 + " 0 R"), lt2 || (lt2 = "fullwidth"), lt2) {
      case "fullwidth":
        ot2("/OpenAction [3 0 R /FitH null]");
        break;
      case "fullheight":
        ot2("/OpenAction [3 0 R /FitV null]");
        break;
      case "fullpage":
        ot2("/OpenAction [3 0 R /Fit]");
        break;
      case "original":
        ot2("/OpenAction [3 0 R /XYZ null null 1]");
        break;
      default:
        var n2 = "" + lt2;
        "%" === n2.substr(n2.length - 1) && (lt2 = parseInt(lt2) / 100), "number" == typeof lt2 && ot2("/OpenAction [3 0 R /XYZ null null " + O2(lt2) + "]");
    }
    switch (mt2 || (mt2 = "continuous"), mt2) {
      case "continuous":
        ot2("/PageLayout /OneColumn");
        break;
      case "single":
        ot2("/PageLayout /SinglePage");
        break;
      case "two":
      case "twoleft":
        ot2("/PageLayout /TwoColumnLeft");
        break;
      case "tworight":
        ot2("/PageLayout /TwoColumnRight");
    }
    pt2 && ot2("/PageMode /" + pt2), Mt2.publish("putCatalog"), ot2(">>"), ot2("endobj");
  }, Oe = L2.__private__.putTrailer = function() {
    ot2("trailer"), ot2("<<"), ot2("/Size " + (K2 + 1)), ot2("/Root " + K2 + " 0 R"), ot2("/Info " + (K2 - 1) + " 0 R"), ot2("/ID [ <" + D2 + "> <" + D2 + "> ]"), ot2(">>");
  }, Me = L2.__private__.putHeader = function() {
    ot2("%PDF-" + x2), ot2("%ºß¬à");
  }, Ee = L2.__private__.putXRef = function() {
    var t2 = "0000000000";
    ot2("xref"), ot2("0 " + (K2 + 1)), ot2("0000000000 65535 f ");
    for (var e3 = 1; e3 <= K2; e3++) {
      "function" == typeof Z2[e3] ? ot2((t2 + Z2[e3]()).slice(-10) + " 00000 n ") : void 0 !== Z2[e3] ? ot2((t2 + Z2[e3]).slice(-10) + " 00000 n ") : ot2("0000000000 00000 n ");
    }
  }, qe = L2.__private__.buildDocument = function() {
    it2(), at3($2), Mt2.publish("buildDocument"), Me(), ee2(), ye(), be(), je(), Be();
    var t2 = Q2;
    return Ee(), Oe(), ot2("startxref"), ot2("" + t2), ot2("%%EOF"), at3(et2[Y2]), $2.join("\n");
  }, Re = L2.__private__.getBlob = function(t2) {
    return new Blob([ut2(t2)], { type: "application/pdf" });
  }, Te = L2.output = L2.__private__.output = xe(function(e3, r5) {
    switch ("string" == typeof (r5 = r5 || {}) ? r5 = { filename: r5 } : r5.filename = r5.filename || "generated.pdf", e3) {
      case void 0:
        return qe();
      case "save":
        L2.save(r5.filename);
        break;
      case "arraybuffer":
        return ut2(qe());
      case "blob":
        return Re(qe());
      case "bloburi":
      case "bloburl":
        if (void 0 !== t.URL && "function" == typeof t.URL.createObjectURL)
          return t.URL && t.URL.createObjectURL(Re(qe())) || void 0;
        n.warn("bloburl is not supported by your system, because URL.createObjectURL is not supported by your browser.");
        break;
      case "datauristring":
      case "dataurlstring":
        var i3 = "", a3 = qe();
        try {
          i3 = s(a3);
        } catch (t2) {
          i3 = s(unescape(encodeURIComponent(a3)));
        }
        return "data:application/pdf;filename=" + r5.filename + ";base64," + i3;
      case "pdfobjectnewwindow":
        if ("[object Window]" === Object.prototype.toString.call(t)) {
          var o3 = '<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><script src="' + (r5.pdfObjectUrl || "https://cdnjs.cloudflare.com/ajax/libs/pdfobject/2.1.1/pdfobject.min.js") + '"><\/script><script >PDFObject.embed("' + this.output("dataurlstring") + '", ' + JSON.stringify(r5) + ");<\/script></body></html>", u2 = t.open();
          return null !== u2 && u2.document.write(o3), u2;
        }
        throw new Error("The option pdfobjectnewwindow just works in a browser-environment.");
      case "pdfjsnewwindow":
        if ("[object Window]" === Object.prototype.toString.call(t)) {
          var c2 = '<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe id="pdfViewer" src="' + (r5.pdfJsUrl || "examples/PDF.js/web/viewer.html") + "?file=&downloadName=" + r5.filename + '" width="500px" height="400px" /></body></html>', h2 = t.open();
          if (null !== h2) {
            h2.document.write(c2);
            var l2 = this;
            h2.document.documentElement.querySelector("#pdfViewer").onload = function() {
              h2.document.title = r5.filename, h2.document.documentElement.querySelector("#pdfViewer").contentWindow.PDFViewerApplication.open(l2.output("bloburl"));
            };
          }
          return h2;
        }
        throw new Error("The option pdfjsnewwindow just works in a browser-environment.");
      case "dataurlnewwindow":
        if ("[object Window]" !== Object.prototype.toString.call(t))
          throw new Error("The option dataurlnewwindow just works in a browser-environment.");
        var f3 = '<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe src="' + this.output("datauristring", r5) + '"></iframe></body></html>', d2 = t.open();
        if (null !== d2 && (d2.document.write(f3), d2.document.title = r5.filename), d2 || "undefined" == typeof safari)
          return d2;
        break;
      case "datauri":
      case "dataurl":
        return t.document.location.href = this.output("datauristring", r5);
      default:
        return null;
    }
  }), De = function(t2) {
    return true === Array.isArray(Et2) && Et2.indexOf(t2) > -1;
  };
  switch (a2) {
    case "pt":
      Nt2 = 1;
      break;
    case "mm":
      Nt2 = 72 / 25.4;
      break;
    case "cm":
      Nt2 = 72 / 2.54;
      break;
    case "in":
      Nt2 = 72;
      break;
    case "px":
      Nt2 = 1 == De("px_scaling") ? 0.75 : 96 / 72;
      break;
    case "pc":
    case "em":
      Nt2 = 12;
      break;
    case "ex":
      Nt2 = 6;
      break;
    default:
      throw new Error("Invalid unit: " + a2);
  }
  V2(), z2();
  var Ue = L2.__private__.getPageInfo = L2.getPageInfo = function(t2) {
    if (isNaN(t2) || t2 % 1 != 0)
      throw new Error("Invalid argument passed to jsPDF.getPageInfo");
    return { objId: Ot2[t2].objId, pageNumber: t2, pageContext: Ot2[t2] };
  }, ze = L2.__private__.getPageInfoByObjId = function(t2) {
    if (isNaN(t2) || t2 % 1 != 0)
      throw new Error("Invalid argument passed to jsPDF.getPageInfoByObjId");
    for (var e3 in Ot2)
      if (Ot2[e3].objId === t2)
        break;
    return Ue(e3);
  }, He = L2.__private__.getCurrentPageInfo = L2.getCurrentPageInfo = function() {
    return { objId: Ot2[Y2].objId, pageNumber: Y2, pageContext: Ot2[Y2] };
  };
  L2.addPage = function() {
    return Pe.apply(this, arguments), this;
  }, L2.setPage = function() {
    return Fe.apply(this, arguments), at3.call(this, et2[Y2]), this;
  }, L2.insertPage = function(t2) {
    return this.addPage(), this.movePage(Y2, t2), this;
  }, L2.movePage = function(t2, e3) {
    var n2, r5;
    if (t2 > e3) {
      n2 = et2[t2], r5 = Ot2[t2];
      for (var i3 = t2; i3 > e3; i3--)
        et2[i3] = et2[i3 - 1], Ot2[i3] = Ot2[i3 - 1];
      et2[e3] = n2, Ot2[e3] = r5, this.setPage(e3);
    } else if (t2 < e3) {
      n2 = et2[t2], r5 = Ot2[t2];
      for (var a3 = t2; a3 < e3; a3++)
        et2[a3] = et2[a3 + 1], Ot2[a3] = Ot2[a3 + 1];
      et2[e3] = n2, Ot2[e3] = r5, this.setPage(e3);
    }
    return this;
  }, L2.deletePage = function() {
    return ke.apply(this, arguments), this;
  }, L2.__private__.text = L2.text = function(t2, e3, n2, r5, i3) {
    var a3, o3, s2, u2, c2, h2, l2, f3, d2 = (r5 = r5 || {}).scope || this;
    if ("number" == typeof t2 && "number" == typeof e3 && ("string" == typeof n2 || Array.isArray(n2))) {
      var p2 = n2;
      n2 = e3, e3 = t2, t2 = p2;
    }
    if (arguments[3] instanceof Dt2 == false ? (s2 = arguments[4], u2 = arguments[5], "object" == typeof (l2 = arguments[3]) && null !== l2 || ("string" == typeof s2 && (u2 = s2, s2 = null), "string" == typeof l2 && (u2 = l2, l2 = null), "number" == typeof l2 && (s2 = l2, l2 = null), r5 = { flags: l2, angle: s2, align: u2 })) : (j2("The transform parameter of text() with a Matrix value"), f3 = i3), isNaN(e3) || isNaN(n2) || null == t2)
      throw new Error("Invalid arguments passed to jsPDF.text");
    if (0 === t2.length)
      return d2;
    var g2 = "", m3 = false, v3 = "number" == typeof r5.lineHeightFactor ? r5.lineHeightFactor : rn, b3 = d2.internal.scaleFactor;
    function y3(t3) {
      return t3 = t3.split("	").join(Array(r5.TabLen || 9).join(" ")), _e(t3, l2);
    }
    function w3(t3) {
      for (var e4, n3 = t3.concat(), r6 = [], i4 = n3.length; i4--; )
        "string" == typeof (e4 = n3.shift()) ? r6.push(e4) : Array.isArray(t3) && (1 === e4.length || void 0 === e4[1] && void 0 === e4[2]) ? r6.push(e4[0]) : r6.push([e4[0], e4[1], e4[2]]);
      return r6;
    }
    function L3(t3, e4) {
      var n3;
      if ("string" == typeof t3)
        n3 = e4(t3)[0];
      else if (Array.isArray(t3)) {
        for (var r6, i4, a4 = t3.concat(), o4 = [], s3 = a4.length; s3--; )
          "string" == typeof (r6 = a4.shift()) ? o4.push(e4(r6)[0]) : Array.isArray(r6) && "string" == typeof r6[0] && (i4 = e4(r6[0], r6[1], r6[2]), o4.push([i4[0], i4[1], i4[2]]));
        n3 = o4;
      }
      return n3;
    }
    var x3 = false, A3 = true;
    if ("string" == typeof t2)
      x3 = true;
    else if (Array.isArray(t2)) {
      var _3 = t2.concat();
      o3 = [];
      for (var S3, F3 = _3.length; F3--; )
        ("string" != typeof (S3 = _3.shift()) || Array.isArray(S3) && "string" != typeof S3[0]) && (A3 = false);
      x3 = A3;
    }
    if (false === x3)
      throw new Error('Type of text must be string or Array. "' + t2 + '" is not recognized.');
    "string" == typeof t2 && (t2 = t2.match(/[\r?\n]/) ? t2.split(/\r\n|\r|\n/g) : [t2]);
    var I3 = ht2 / d2.internal.scaleFactor, B3 = I3 * (rn - 1);
    switch (r5.baseline) {
      case "bottom":
        n2 -= B3;
        break;
      case "top":
        n2 += I3 - B3;
        break;
      case "hanging":
        n2 += I3 - 2 * B3;
        break;
      case "middle":
        n2 += I3 / 2 - B3;
    }
    if ((h2 = r5.maxWidth || 0) > 0 && ("string" == typeof t2 ? t2 = d2.splitTextToSize(t2, h2) : "[object Array]" === Object.prototype.toString.call(t2) && (t2 = d2.splitTextToSize(t2.join(" "), h2))), a3 = { text: t2, x: e3, y: n2, options: r5, mutex: { pdfEscape: _e, activeFontKey: wt2, fonts: _t2, activeFontSize: ht2 } }, Mt2.publish("preProcessText", a3), t2 = a3.text, s2 = (r5 = a3.options).angle, f3 instanceof Dt2 == false && s2 && "number" == typeof s2) {
      s2 *= Math.PI / 180, 0 === r5.rotationDirection && (s2 = -s2), k2 === P2.ADVANCED && (s2 = -s2);
      var O3 = Math.cos(s2), M3 = Math.sin(s2);
      f3 = new Dt2(O3, M3, -M3, O3, 0, 0);
    } else
      s2 && s2 instanceof Dt2 && (f3 = s2);
    k2 !== P2.ADVANCED || f3 || (f3 = zt2), void 0 !== (c2 = r5.charSpace || bn) && (g2 += C2(E2(c2)) + " Tc\n", this.setCharSpace(this.getCharSpace() || 0));
    r5.lang;
    var q3 = -1, R3 = void 0 !== r5.renderingMode ? r5.renderingMode : r5.stroke, T3 = d2.internal.getCurrentPageInfo().pageContext;
    switch (R3) {
      case 0:
      case false:
      case "fill":
        q3 = 0;
        break;
      case 1:
      case true:
      case "stroke":
        q3 = 1;
        break;
      case 2:
      case "fillThenStroke":
        q3 = 2;
        break;
      case 3:
      case "invisible":
        q3 = 3;
        break;
      case 4:
      case "fillAndAddForClipping":
        q3 = 4;
        break;
      case 5:
      case "strokeAndAddPathForClipping":
        q3 = 5;
        break;
      case 6:
      case "fillThenStrokeAndAddToPathForClipping":
        q3 = 6;
        break;
      case 7:
      case "addToPathForClipping":
        q3 = 7;
    }
    var D3 = void 0 !== T3.usedRenderingMode ? T3.usedRenderingMode : -1;
    -1 !== q3 ? g2 += q3 + " Tr\n" : -1 !== D3 && (g2 += "0 Tr\n"), -1 !== q3 && (T3.usedRenderingMode = q3), u2 = r5.align || "left";
    var U3, z3 = ht2 * v3, H3 = d2.internal.pageSize.getWidth(), W3 = _t2[wt2];
    c2 = r5.charSpace || bn, h2 = r5.maxWidth || 0, l2 = {};
    var V3 = [];
    if ("[object Array]" === Object.prototype.toString.call(t2)) {
      var G3;
      o3 = w3(t2), "left" !== u2 && (U3 = o3.map(function(t3) {
        return d2.getStringUnitWidth(t3, { font: W3, charSpace: c2, fontSize: ht2, doKerning: false }) * ht2 / b3;
      }));
      var Y3, J3 = 0;
      if ("right" === u2) {
        e3 -= U3[0], t2 = [], F3 = o3.length;
        for (var X3 = 0; X3 < F3; X3++)
          0 === X3 ? (Y3 = hn(e3), G3 = ln(n2)) : (Y3 = E2(J3 - U3[X3]), G3 = -z3), t2.push([o3[X3], Y3, G3]), J3 = U3[X3];
      } else if ("center" === u2) {
        e3 -= U3[0] / 2, t2 = [], F3 = o3.length;
        for (var K3 = 0; K3 < F3; K3++)
          0 === K3 ? (Y3 = hn(e3), G3 = ln(n2)) : (Y3 = E2((J3 - U3[K3]) / 2), G3 = -z3), t2.push([o3[K3], Y3, G3]), J3 = U3[K3];
      } else if ("left" === u2) {
        t2 = [], F3 = o3.length;
        for (var Z3 = 0; Z3 < F3; Z3++)
          t2.push(o3[Z3]);
      } else {
        if ("justify" !== u2)
          throw new Error('Unrecognized alignment option, use "left", "center", "right" or "justify".');
        t2 = [], F3 = o3.length, h2 = 0 !== h2 ? h2 : H3;
        for (var $3 = 0; $3 < F3; $3++)
          G3 = 0 === $3 ? ln(n2) : -z3, Y3 = 0 === $3 ? hn(e3) : 0, $3 < F3 - 1 && V3.push(C2(E2((h2 - U3[$3]) / (o3[$3].split(" ").length - 1)))), t2.push([o3[$3], Y3, G3]);
      }
    }
    var Q3 = "boolean" == typeof r5.R2L ? r5.R2L : dt2;
    true === Q3 && (t2 = L3(t2, function(t3, e4, n3) {
      return [t3.split("").reverse().join(""), e4, n3];
    })), a3 = { text: t2, x: e3, y: n2, options: r5, mutex: { pdfEscape: _e, activeFontKey: wt2, fonts: _t2, activeFontSize: ht2 } }, Mt2.publish("postProcessText", a3), t2 = a3.text, m3 = a3.mutex.isHex || false;
    var tt3 = _t2[wt2].encoding;
    "WinAnsiEncoding" !== tt3 && "StandardEncoding" !== tt3 || (t2 = L3(t2, function(t3, e4, n3) {
      return [y3(t3), e4, n3];
    })), o3 = w3(t2), t2 = [];
    for (var et3, nt3, rt3, it3 = 0, at4 = 1, st3 = Array.isArray(o3[0]) ? at4 : it3, ut3 = "", ct3 = function(t3, e4, n3) {
      var i4 = "";
      return n3 instanceof Dt2 ? (n3 = "number" == typeof r5.angle ? Ut2(n3, new Dt2(1, 0, 0, 1, t3, e4)) : Ut2(new Dt2(1, 0, 0, 1, t3, e4), n3), k2 === P2.ADVANCED && (n3 = Ut2(new Dt2(1, 0, 0, -1, 0, 0), n3)), i4 = n3.join(" ") + " Tm\n") : i4 = C2(t3) + " " + C2(e4) + " Td\n", i4;
    }, lt3 = 0; lt3 < o3.length; lt3++) {
      switch (ut3 = "", st3) {
        case at4:
          rt3 = (m3 ? "<" : "(") + o3[lt3][0] + (m3 ? ">" : ")"), et3 = parseFloat(o3[lt3][1]), nt3 = parseFloat(o3[lt3][2]);
          break;
        case it3:
          rt3 = (m3 ? "<" : "(") + o3[lt3] + (m3 ? ">" : ")"), et3 = hn(e3), nt3 = ln(n2);
      }
      void 0 !== V3 && void 0 !== V3[lt3] && (ut3 = V3[lt3] + " Tw\n"), 0 === lt3 ? t2.push(ut3 + ct3(et3, nt3, f3) + rt3) : st3 === it3 ? t2.push(ut3 + rt3) : st3 === at4 && t2.push(ut3 + ct3(et3, nt3, f3) + rt3);
    }
    t2 = st3 === it3 ? t2.join(" Tj\nT* ") : t2.join(" Tj\n"), t2 += " Tj\n";
    var ft3 = "BT\n/";
    return ft3 += wt2 + " " + ht2 + " Tf\n", ft3 += C2(ht2 * v3) + " TL\n", ft3 += mn + "\n", ft3 += g2, ft3 += t2, ot2(ft3 += "ET"), N2[wt2] = true, d2;
  };
  var We = L2.__private__.clip = L2.clip = function(t2) {
    return ot2("evenodd" === t2 ? "W*" : "W"), this;
  };
  L2.clipEvenOdd = function() {
    return We("evenodd");
  }, L2.__private__.discardPath = L2.discardPath = function() {
    return ot2("n"), this;
  };
  var Ve = L2.__private__.isValidStyle = function(t2) {
    var e3 = false;
    return -1 !== [void 0, null, "S", "D", "F", "DF", "FD", "f", "f*", "B", "B*", "n"].indexOf(t2) && (e3 = true), e3;
  };
  L2.__private__.setDefaultPathOperation = L2.setDefaultPathOperation = function(t2) {
    return Ve(t2) && (y2 = t2), this;
  };
  var Ge = L2.__private__.getStyle = L2.getStyle = function(t2) {
    var e3 = y2;
    switch (t2) {
      case "D":
      case "S":
        e3 = "S";
        break;
      case "F":
        e3 = "f";
        break;
      case "FD":
      case "DF":
        e3 = "B";
        break;
      case "f":
      case "f*":
      case "B":
      case "B*":
        e3 = t2;
    }
    return e3;
  }, Ye = L2.close = function() {
    return ot2("h"), this;
  };
  L2.stroke = function() {
    return ot2("S"), this;
  }, L2.fill = function(t2) {
    return Je("f", t2), this;
  }, L2.fillEvenOdd = function(t2) {
    return Je("f*", t2), this;
  }, L2.fillStroke = function(t2) {
    return Je("B", t2), this;
  }, L2.fillStrokeEvenOdd = function(t2) {
    return Je("B*", t2), this;
  };
  var Je = function(t2, e3) {
    "object" == typeof e3 ? Ze(e3, t2) : ot2(t2);
  }, Xe = function(t2) {
    null === t2 || k2 === P2.ADVANCED && void 0 === t2 || (t2 = Ge(t2), ot2(t2));
  };
  function Ke(t2, e3, n2, r5, i3) {
    var a3 = new p(e3 || this.boundingBox, n2 || this.xStep, r5 || this.yStep, this.gState, i3 || this.matrix);
    a3.stream = this.stream;
    var o3 = t2 + "$$" + this.cloneIndex++ + "$$";
    return Ht2(o3, a3), a3;
  }
  var Ze = function(t2, e3) {
    var n2 = Ft2[t2.key], r5 = kt2[n2];
    if (r5 instanceof d)
      ot2("q"), ot2($e(e3)), r5.gState && L2.setGState(r5.gState), ot2(t2.matrix.toString() + " cm"), ot2("/" + n2 + " sh"), ot2("Q");
    else if (r5 instanceof p) {
      var i3 = new Dt2(1, 0, 0, -1, 0, Cn());
      t2.matrix && (i3 = i3.multiply(t2.matrix || zt2), n2 = Ke.call(r5, t2.key, t2.boundingBox, t2.xStep, t2.yStep, i3).id), ot2("q"), ot2("/Pattern cs"), ot2("/" + n2 + " scn"), r5.gState && L2.setGState(r5.gState), ot2(e3), ot2("Q");
    }
  }, $e = function(t2) {
    switch (t2) {
      case "f":
      case "F":
        return "W n";
      case "f*":
        return "W* n";
      case "B":
        return "W S";
      case "B*":
        return "W* S";
      case "S":
        return "W S";
      case "n":
        return "W n";
    }
  }, Qe = L2.moveTo = function(t2, e3) {
    return ot2(C2(E2(t2)) + " " + C2(R2(e3)) + " m"), this;
  }, tn = L2.lineTo = function(t2, e3) {
    return ot2(C2(E2(t2)) + " " + C2(R2(e3)) + " l"), this;
  }, en = L2.curveTo = function(t2, e3, n2, r5, i3, a3) {
    return ot2([C2(E2(t2)), C2(R2(e3)), C2(E2(n2)), C2(R2(r5)), C2(E2(i3)), C2(R2(a3)), "c"].join(" ")), this;
  };
  L2.__private__.line = L2.line = function(t2, e3, n2, r5, i3) {
    if (isNaN(t2) || isNaN(e3) || isNaN(n2) || isNaN(r5) || !Ve(i3))
      throw new Error("Invalid arguments passed to jsPDF.line");
    return k2 === P2.COMPAT ? this.lines([[n2 - t2, r5 - e3]], t2, e3, [1, 1], i3 || "S") : this.lines([[n2 - t2, r5 - e3]], t2, e3, [1, 1]).stroke();
  }, L2.__private__.lines = L2.lines = function(t2, e3, n2, r5, i3, a3) {
    var o3, s2, u2, c2, h2, l2, f3, d2, p2, g2, m3, v3;
    if ("number" == typeof t2 && (v3 = n2, n2 = e3, e3 = t2, t2 = v3), r5 = r5 || [1, 1], a3 = a3 || false, isNaN(e3) || isNaN(n2) || !Array.isArray(t2) || !Array.isArray(r5) || !Ve(i3) || "boolean" != typeof a3)
      throw new Error("Invalid arguments passed to jsPDF.lines");
    for (Qe(e3, n2), o3 = r5[0], s2 = r5[1], c2 = t2.length, g2 = e3, m3 = n2, u2 = 0; u2 < c2; u2++)
      2 === (h2 = t2[u2]).length ? (g2 = h2[0] * o3 + g2, m3 = h2[1] * s2 + m3, tn(g2, m3)) : (l2 = h2[0] * o3 + g2, f3 = h2[1] * s2 + m3, d2 = h2[2] * o3 + g2, p2 = h2[3] * s2 + m3, g2 = h2[4] * o3 + g2, m3 = h2[5] * s2 + m3, en(l2, f3, d2, p2, g2, m3));
    return a3 && Ye(), Xe(i3), this;
  }, L2.path = function(t2) {
    for (var e3 = 0; e3 < t2.length; e3++) {
      var n2 = t2[e3], r5 = n2.c;
      switch (n2.op) {
        case "m":
          Qe(r5[0], r5[1]);
          break;
        case "l":
          tn(r5[0], r5[1]);
          break;
        case "c":
          en.apply(this, r5);
          break;
        case "h":
          Ye();
      }
    }
    return this;
  }, L2.__private__.rect = L2.rect = function(t2, e3, n2, r5, i3) {
    if (isNaN(t2) || isNaN(e3) || isNaN(n2) || isNaN(r5) || !Ve(i3))
      throw new Error("Invalid arguments passed to jsPDF.rect");
    return k2 === P2.COMPAT && (r5 = -r5), ot2([C2(E2(t2)), C2(R2(e3)), C2(E2(n2)), C2(E2(r5)), "re"].join(" ")), Xe(i3), this;
  }, L2.__private__.triangle = L2.triangle = function(t2, e3, n2, r5, i3, a3, o3) {
    if (isNaN(t2) || isNaN(e3) || isNaN(n2) || isNaN(r5) || isNaN(i3) || isNaN(a3) || !Ve(o3))
      throw new Error("Invalid arguments passed to jsPDF.triangle");
    return this.lines([[n2 - t2, r5 - e3], [i3 - n2, a3 - r5], [t2 - i3, e3 - a3]], t2, e3, [1, 1], o3, true), this;
  }, L2.__private__.roundedRect = L2.roundedRect = function(t2, e3, n2, r5, i3, a3, o3) {
    if (isNaN(t2) || isNaN(e3) || isNaN(n2) || isNaN(r5) || isNaN(i3) || isNaN(a3) || !Ve(o3))
      throw new Error("Invalid arguments passed to jsPDF.roundedRect");
    var s2 = 4 / 3 * (Math.SQRT2 - 1);
    return i3 = Math.min(i3, 0.5 * n2), a3 = Math.min(a3, 0.5 * r5), this.lines([[n2 - 2 * i3, 0], [i3 * s2, 0, i3, a3 - a3 * s2, i3, a3], [0, r5 - 2 * a3], [0, a3 * s2, -i3 * s2, a3, -i3, a3], [2 * i3 - n2, 0], [-i3 * s2, 0, -i3, -a3 * s2, -i3, -a3], [0, 2 * a3 - r5], [0, -a3 * s2, i3 * s2, -a3, i3, -a3]], t2 + i3, e3, [1, 1], o3, true), this;
  }, L2.__private__.ellipse = L2.ellipse = function(t2, e3, n2, r5, i3) {
    if (isNaN(t2) || isNaN(e3) || isNaN(n2) || isNaN(r5) || !Ve(i3))
      throw new Error("Invalid arguments passed to jsPDF.ellipse");
    var a3 = 4 / 3 * (Math.SQRT2 - 1) * n2, o3 = 4 / 3 * (Math.SQRT2 - 1) * r5;
    return Qe(t2 + n2, e3), en(t2 + n2, e3 - o3, t2 + a3, e3 - r5, t2, e3 - r5), en(t2 - a3, e3 - r5, t2 - n2, e3 - o3, t2 - n2, e3), en(t2 - n2, e3 + o3, t2 - a3, e3 + r5, t2, e3 + r5), en(t2 + a3, e3 + r5, t2 + n2, e3 + o3, t2 + n2, e3), Xe(i3), this;
  }, L2.__private__.circle = L2.circle = function(t2, e3, n2, r5) {
    if (isNaN(t2) || isNaN(e3) || isNaN(n2) || !Ve(r5))
      throw new Error("Invalid arguments passed to jsPDF.circle");
    return this.ellipse(t2, e3, n2, n2, r5);
  }, L2.setFont = function(t2, e3) {
    return wt2 = Ce(t2, e3, { disableWarning: false }), this;
  };
  var nn = L2.__private__.getFont = L2.getFont = function() {
    return _t2[Ce.apply(L2, arguments)];
  };
  L2.__private__.getFontList = L2.getFontList = function() {
    var t2, e3, n2 = {};
    for (t2 in St2)
      if (St2.hasOwnProperty(t2))
        for (e3 in n2[t2] = [], St2[t2])
          St2[t2].hasOwnProperty(e3) && n2[t2].push(e3);
    return n2;
  }, L2.addFont = function(t2, e3, n2, r5) {
    return r5 = r5 || "Identity-H", Ne.call(this, t2, e3, n2, r5);
  };
  var rn, an = e2.lineWidth || 0.200025, on = L2.__private__.setLineWidth = L2.setLineWidth = function(t2) {
    return ot2(C2(E2(t2)) + " w"), this;
  };
  L2.__private__.setLineDash = g.API.setLineDash = g.API.setLineDashPattern = function(t2, e3) {
    if (t2 = t2 || [], e3 = e3 || 0, isNaN(e3) || !Array.isArray(t2))
      throw new Error("Invalid arguments passed to jsPDF.setLineDash");
    return t2 = t2.map(function(t3) {
      return C2(E2(t3));
    }).join(" "), e3 = C2(E2(e3)), ot2("[" + t2 + "] " + e3 + " d"), this;
  };
  var sn = L2.__private__.getLineHeight = L2.getLineHeight = function() {
    return ht2 * rn;
  };
  L2.__private__.getLineHeight = L2.getLineHeight = function() {
    return ht2 * rn;
  };
  var un = L2.__private__.setLineHeightFactor = L2.setLineHeightFactor = function(t2) {
    return "number" == typeof (t2 = t2 || 1.15) && (rn = t2), this;
  }, cn = L2.__private__.getLineHeightFactor = L2.getLineHeightFactor = function() {
    return rn;
  };
  un(e2.lineHeight);
  var hn = L2.__private__.getHorizontalCoordinate = function(t2) {
    return E2(t2);
  }, ln = L2.__private__.getVerticalCoordinate = function(t2) {
    return k2 === P2.ADVANCED ? t2 : Ot2[Y2].mediaBox.topRightY - Ot2[Y2].mediaBox.bottomLeftY - E2(t2);
  }, fn = L2.__private__.getHorizontalCoordinateString = L2.getHorizontalCoordinateString = function(t2) {
    return C2(hn(t2));
  }, dn = L2.__private__.getVerticalCoordinateString = L2.getVerticalCoordinateString = function(t2) {
    return C2(ln(t2));
  }, pn = e2.strokeColor || "0 G";
  L2.__private__.getStrokeColor = L2.getDrawColor = function() {
    return Kt2(pn);
  }, L2.__private__.setStrokeColor = L2.setDrawColor = function(t2, e3, n2, r5) {
    return pn = Zt2({ ch1: t2, ch2: e3, ch3: n2, ch4: r5, pdfColorType: "draw", precision: 2 }), ot2(pn), this;
  };
  var gn = e2.fillColor || "0 g";
  L2.__private__.getFillColor = L2.getFillColor = function() {
    return Kt2(gn);
  }, L2.__private__.setFillColor = L2.setFillColor = function(t2, e3, n2, r5) {
    return gn = Zt2({ ch1: t2, ch2: e3, ch3: n2, ch4: r5, pdfColorType: "fill", precision: 2 }), ot2(gn), this;
  };
  var mn = e2.textColor || "0 g", vn = L2.__private__.getTextColor = L2.getTextColor = function() {
    return Kt2(mn);
  };
  L2.__private__.setTextColor = L2.setTextColor = function(t2, e3, n2, r5) {
    return mn = Zt2({ ch1: t2, ch2: e3, ch3: n2, ch4: r5, pdfColorType: "text", precision: 3 }), this;
  };
  var bn = e2.charSpace, yn = L2.__private__.getCharSpace = L2.getCharSpace = function() {
    return parseFloat(bn || 0);
  };
  L2.__private__.setCharSpace = L2.setCharSpace = function(t2) {
    if (isNaN(t2))
      throw new Error("Invalid argument passed to jsPDF.setCharSpace");
    return bn = t2, this;
  };
  var wn = 0;
  L2.CapJoinStyles = { 0: 0, butt: 0, but: 0, miter: 0, 1: 1, round: 1, rounded: 1, circle: 1, 2: 2, projecting: 2, project: 2, square: 2, bevel: 2 }, L2.__private__.setLineCap = L2.setLineCap = function(t2) {
    var e3 = L2.CapJoinStyles[t2];
    if (void 0 === e3)
      throw new Error("Line cap style of '" + t2 + "' is not recognized. See or extend .CapJoinStyles property for valid styles");
    return wn = e3, ot2(e3 + " J"), this;
  };
  var Nn = 0;
  L2.__private__.setLineJoin = L2.setLineJoin = function(t2) {
    var e3 = L2.CapJoinStyles[t2];
    if (void 0 === e3)
      throw new Error("Line join style of '" + t2 + "' is not recognized. See or extend .CapJoinStyles property for valid styles");
    return Nn = e3, ot2(e3 + " j"), this;
  }, L2.__private__.setLineMiterLimit = L2.__private__.setMiterLimit = L2.setLineMiterLimit = L2.setMiterLimit = function(t2) {
    if (t2 = t2 || 0, isNaN(t2))
      throw new Error("Invalid argument passed to jsPDF.setLineMiterLimit");
    return ot2(C2(E2(t2)) + " M"), this;
  }, L2.GState = l, L2.setGState = function(t2) {
    (t2 = "string" == typeof t2 ? It2[Ct2[t2]] : Ln(null, t2)).equals(jt2) || (ot2("/" + t2.id + " gs"), jt2 = t2);
  };
  var Ln = function(t2, e3) {
    if (!t2 || !Ct2[t2]) {
      var n2 = false;
      for (var r5 in It2)
        if (It2.hasOwnProperty(r5) && It2[r5].equals(e3)) {
          n2 = true;
          break;
        }
      if (n2)
        e3 = It2[r5];
      else {
        var i3 = "GS" + (Object.keys(It2).length + 1).toString(10);
        It2[i3] = e3, e3.id = i3;
      }
      return t2 && (Ct2[t2] = e3.id), Mt2.publish("addGState", e3), e3;
    }
  };
  L2.addGState = function(t2, e3) {
    return Ln(t2, e3), this;
  }, L2.saveGraphicsState = function() {
    return ot2("q"), Pt2.push({ key: wt2, size: ht2, color: mn }), this;
  }, L2.restoreGraphicsState = function() {
    ot2("Q");
    var t2 = Pt2.pop();
    return wt2 = t2.key, ht2 = t2.size, mn = t2.color, jt2 = null, this;
  }, L2.setCurrentTransformationMatrix = function(t2) {
    return ot2(t2.toString() + " cm"), this;
  }, L2.comment = function(t2) {
    return ot2("#" + t2), this;
  };
  var xn = function(t2, e3) {
    var n2 = t2 || 0;
    Object.defineProperty(this, "x", { enumerable: true, get: function() {
      return n2;
    }, set: function(t3) {
      isNaN(t3) || (n2 = parseFloat(t3));
    } });
    var r5 = e3 || 0;
    Object.defineProperty(this, "y", { enumerable: true, get: function() {
      return r5;
    }, set: function(t3) {
      isNaN(t3) || (r5 = parseFloat(t3));
    } });
    var i3 = "pt";
    return Object.defineProperty(this, "type", { enumerable: true, get: function() {
      return i3;
    }, set: function(t3) {
      i3 = t3.toString();
    } }), this;
  }, An = function(t2, e3, n2, r5) {
    xn.call(this, t2, e3), this.type = "rect";
    var i3 = n2 || 0;
    Object.defineProperty(this, "w", { enumerable: true, get: function() {
      return i3;
    }, set: function(t3) {
      isNaN(t3) || (i3 = parseFloat(t3));
    } });
    var a3 = r5 || 0;
    return Object.defineProperty(this, "h", { enumerable: true, get: function() {
      return a3;
    }, set: function(t3) {
      isNaN(t3) || (a3 = parseFloat(t3));
    } }), this;
  }, _n = function() {
    this.page = Bt2, this.currentPage = Y2, this.pages = et2.slice(0), this.pagesContext = Ot2.slice(0), this.x = Lt2, this.y = xt2, this.matrix = At2, this.width = Fn(Y2), this.height = Cn(Y2), this.outputDestination = rt2, this.id = "", this.objectNumber = -1;
  };
  _n.prototype.restore = function() {
    Bt2 = this.page, Y2 = this.currentPage, Ot2 = this.pagesContext, et2 = this.pages, Lt2 = this.x, xt2 = this.y, At2 = this.matrix, In(Y2, this.width), jn(Y2, this.height), rt2 = this.outputDestination;
  };
  var Sn = function(t2, e3, n2, r5, i3) {
    Tt2.push(new _n()), Bt2 = Y2 = 0, et2 = [], Lt2 = t2, xt2 = e3, At2 = i3, Se([n2, r5]);
  }, Pn = function(t2) {
    if (!Rt2[t2]) {
      var e3 = new _n(), n2 = "Xo" + (Object.keys(qt2).length + 1).toString(10);
      e3.id = n2, Rt2[t2] = n2, qt2[n2] = e3, Mt2.publish("addFormObject", e3), Tt2.pop().restore();
    }
  };
  for (var kn in L2.beginFormObject = function(t2, e3, n2, r5, i3) {
    return Sn(t2, e3, n2, r5, i3), this;
  }, L2.endFormObject = function(t2) {
    return Pn(t2), this;
  }, L2.doFormObject = function(t2, e3) {
    var n2 = qt2[Rt2[t2]];
    return ot2("q"), ot2(e3.toString() + " cm"), ot2("/" + n2.id + " Do"), ot2("Q"), this;
  }, L2.getFormObject = function(t2) {
    var e3 = qt2[Rt2[t2]];
    return { x: e3.x, y: e3.y, width: e3.width, height: e3.height, matrix: e3.matrix };
  }, L2.save = function(e3, n2) {
    return e3 = e3 || "generated.pdf", (n2 = n2 || {}).returnPromise = n2.returnPromise || false, false === n2.returnPromise ? (u(Re(qe()), e3), "function" == typeof u.unload && t.setTimeout && setTimeout(u.unload, 911), this) : new Promise(function(n3, r5) {
      try {
        var i3 = u(Re(qe()), e3);
        "function" == typeof u.unload && t.setTimeout && setTimeout(u.unload, 911), n3(i3);
      } catch (t2) {
        r5(t2.message);
      }
    });
  }, g.API)
    g.API.hasOwnProperty(kn) && ("events" === kn && g.API.events.length ? function(t2, e3) {
      var n2, r5, i3;
      for (i3 = e3.length - 1; -1 !== i3; i3--)
        n2 = e3[i3][0], r5 = e3[i3][1], t2.subscribe.apply(t2, [n2].concat("function" == typeof r5 ? [r5] : r5));
    }(Mt2, g.API.events) : L2[kn] = g.API[kn]);
  var Fn = L2.getPageWidth = function(t2) {
    return (Ot2[t2 = t2 || Y2].mediaBox.topRightX - Ot2[t2].mediaBox.bottomLeftX) / Nt2;
  }, In = L2.setPageWidth = function(t2, e3) {
    Ot2[t2].mediaBox.topRightX = e3 * Nt2 + Ot2[t2].mediaBox.bottomLeftX;
  }, Cn = L2.getPageHeight = function(t2) {
    return (Ot2[t2 = t2 || Y2].mediaBox.topRightY - Ot2[t2].mediaBox.bottomLeftY) / Nt2;
  }, jn = L2.setPageHeight = function(t2, e3) {
    Ot2[t2].mediaBox.topRightY = e3 * Nt2 + Ot2[t2].mediaBox.bottomLeftY;
  };
  return L2.internal = { pdfEscape: _e, getStyle: Ge, getFont: nn, getFontSize: ft2, getCharSpace: yn, getTextColor: vn, getLineHeight: sn, getLineHeightFactor: cn, write: st2, getHorizontalCoordinate: hn, getVerticalCoordinate: ln, getCoordinateString: fn, getVerticalCoordinateString: dn, collections: {}, newObject: Wt2, newAdditionalObject: Yt2, newObjectDeferred: Vt2, newObjectDeferredBegin: Gt2, getFilters: $t2, putStream: Qt2, events: Mt2, scaleFactor: Nt2, pageSize: { getWidth: function() {
    return Fn(Y2);
  }, setWidth: function(t2) {
    In(Y2, t2);
  }, getHeight: function() {
    return Cn(Y2);
  }, setHeight: function(t2) {
    jn(Y2, t2);
  } }, output: Te, getNumberOfPages: Ie, pages: et2, out: ot2, f2: O2, f3: M2, getPageInfo: Ue, getPageInfoByObjId: ze, getCurrentPageInfo: He, getPDFVersion: A2, Point: xn, Rectangle: An, Matrix: Dt2, hasHotfix: De }, Object.defineProperty(L2.internal.pageSize, "width", { get: function() {
    return Fn(Y2);
  }, set: function(t2) {
    In(Y2, t2);
  }, enumerable: true, configurable: true }), Object.defineProperty(L2.internal.pageSize, "height", { get: function() {
    return Cn(Y2);
  }, set: function(t2) {
    jn(Y2, t2);
  }, enumerable: true, configurable: true }), Le.call(L2, ct2), wt2 = "F1", Pe(o2, i2), Mt2.publish("initialized"), L2;
}
function ft() {
  var t2 = this;
  function e2(t3, e3) {
    var n2 = 0;
    do {
      n2 |= 1 & t3, t3 >>>= 1, n2 <<= 1;
    } while (--e3 > 0);
    return n2 >>> 1;
  }
  t2.build_tree = function(n2) {
    var r4, i2, a2, o2 = t2.dyn_tree, s2 = t2.stat_desc.static_tree, u2 = t2.stat_desc.elems, c2 = -1;
    for (n2.heap_len = 0, n2.heap_max = 573, r4 = 0; r4 < u2; r4++)
      0 !== o2[2 * r4] ? (n2.heap[++n2.heap_len] = c2 = r4, n2.depth[r4] = 0) : o2[2 * r4 + 1] = 0;
    for (; n2.heap_len < 2; )
      o2[2 * (a2 = n2.heap[++n2.heap_len] = c2 < 2 ? ++c2 : 0)] = 1, n2.depth[a2] = 0, n2.opt_len--, s2 && (n2.static_len -= s2[2 * a2 + 1]);
    for (t2.max_code = c2, r4 = Math.floor(n2.heap_len / 2); r4 >= 1; r4--)
      n2.pqdownheap(o2, r4);
    a2 = u2;
    do {
      r4 = n2.heap[1], n2.heap[1] = n2.heap[n2.heap_len--], n2.pqdownheap(o2, 1), i2 = n2.heap[1], n2.heap[--n2.heap_max] = r4, n2.heap[--n2.heap_max] = i2, o2[2 * a2] = o2[2 * r4] + o2[2 * i2], n2.depth[a2] = Math.max(n2.depth[r4], n2.depth[i2]) + 1, o2[2 * r4 + 1] = o2[2 * i2 + 1] = a2, n2.heap[1] = a2++, n2.pqdownheap(o2, 1);
    } while (n2.heap_len >= 2);
    n2.heap[--n2.heap_max] = n2.heap[1], function(e3) {
      var n3, r5, i3, a3, o3, s3, u3 = t2.dyn_tree, c3 = t2.stat_desc.static_tree, h2 = t2.stat_desc.extra_bits, l2 = t2.stat_desc.extra_base, f2 = t2.stat_desc.max_length, d2 = 0;
      for (a3 = 0; a3 <= 15; a3++)
        e3.bl_count[a3] = 0;
      for (u3[2 * e3.heap[e3.heap_max] + 1] = 0, n3 = e3.heap_max + 1; n3 < 573; n3++)
        (a3 = u3[2 * u3[2 * (r5 = e3.heap[n3]) + 1] + 1] + 1) > f2 && (a3 = f2, d2++), u3[2 * r5 + 1] = a3, r5 > t2.max_code || (e3.bl_count[a3]++, o3 = 0, r5 >= l2 && (o3 = h2[r5 - l2]), s3 = u3[2 * r5], e3.opt_len += s3 * (a3 + o3), c3 && (e3.static_len += s3 * (c3[2 * r5 + 1] + o3)));
      if (0 !== d2) {
        do {
          for (a3 = f2 - 1; 0 === e3.bl_count[a3]; )
            a3--;
          e3.bl_count[a3]--, e3.bl_count[a3 + 1] += 2, e3.bl_count[f2]--, d2 -= 2;
        } while (d2 > 0);
        for (a3 = f2; 0 !== a3; a3--)
          for (r5 = e3.bl_count[a3]; 0 !== r5; )
            (i3 = e3.heap[--n3]) > t2.max_code || (u3[2 * i3 + 1] !== a3 && (e3.opt_len += (a3 - u3[2 * i3 + 1]) * u3[2 * i3], u3[2 * i3 + 1] = a3), r5--);
      }
    }(n2), function(t3, n3, r5) {
      var i3, a3, o3, s3 = [], u3 = 0;
      for (i3 = 1; i3 <= 15; i3++)
        s3[i3] = u3 = u3 + r5[i3 - 1] << 1;
      for (a3 = 0; a3 <= n3; a3++)
        0 !== (o3 = t3[2 * a3 + 1]) && (t3[2 * a3] = e2(s3[o3]++, o3));
    }(o2, t2.max_code, n2.bl_count);
  };
}
function dt(t2, e2, n2, r4, i2) {
  this.static_tree = t2, this.extra_bits = e2, this.extra_base = n2, this.elems = r4, this.max_length = i2;
}
function pt(t2, e2, n2, r4, i2) {
  this.good_length = t2, this.max_lazy = e2, this.nice_length = n2, this.max_chain = r4, this.func = i2;
}
function wt(t2, e2, n2, r4) {
  var i2 = t2[2 * e2], a2 = t2[2 * n2];
  return i2 < a2 || i2 === a2 && r4[e2] <= r4[n2];
}
function Nt() {
  var t2, e2, n2, r4, i2, a2, o2, s2, u2, c2, h2, l2, f2, d2, p2, g2, m2, v2, b2, y2, w2, N2, L2, x2, A2, _2, S2, P2, k2, F2, I2, C2, j2, B2, O2, M2, E2, q2, R2, T2, D2, U2 = this, z2 = new ft(), H2 = new ft(), W2 = new ft();
  function V2() {
    var t3;
    for (t3 = 0; t3 < 286; t3++)
      I2[2 * t3] = 0;
    for (t3 = 0; t3 < 30; t3++)
      C2[2 * t3] = 0;
    for (t3 = 0; t3 < 19; t3++)
      j2[2 * t3] = 0;
    I2[512] = 1, U2.opt_len = U2.static_len = 0, M2 = q2 = 0;
  }
  function G2(t3, e3) {
    var n3, r5, i3 = -1, a3 = t3[1], o3 = 0, s3 = 7, u3 = 4;
    for (0 === a3 && (s3 = 138, u3 = 3), t3[2 * (e3 + 1) + 1] = 65535, n3 = 0; n3 <= e3; n3++)
      r5 = a3, a3 = t3[2 * (n3 + 1) + 1], ++o3 < s3 && r5 === a3 || (o3 < u3 ? j2[2 * r5] += o3 : 0 !== r5 ? (r5 !== i3 && j2[2 * r5]++, j2[32]++) : o3 <= 10 ? j2[34]++ : j2[36]++, o3 = 0, i3 = r5, 0 === a3 ? (s3 = 138, u3 = 3) : r5 === a3 ? (s3 = 6, u3 = 3) : (s3 = 7, u3 = 4));
  }
  function Y2(t3) {
    U2.pending_buf[U2.pending++] = t3;
  }
  function J2(t3) {
    Y2(255 & t3), Y2(t3 >>> 8 & 255);
  }
  function X2(t3, e3) {
    var n3, r5 = e3;
    D2 > 16 - r5 ? (J2(T2 |= (n3 = t3) << D2 & 65535), T2 = n3 >>> 16 - D2, D2 += r5 - 16) : (T2 |= t3 << D2 & 65535, D2 += r5);
  }
  function K2(t3, e3) {
    var n3 = 2 * t3;
    X2(65535 & e3[n3], 65535 & e3[n3 + 1]);
  }
  function Z2(t3, e3) {
    var n3, r5, i3 = -1, a3 = t3[1], o3 = 0, s3 = 7, u3 = 4;
    for (0 === a3 && (s3 = 138, u3 = 3), n3 = 0; n3 <= e3; n3++)
      if (r5 = a3, a3 = t3[2 * (n3 + 1) + 1], !(++o3 < s3 && r5 === a3)) {
        if (o3 < u3)
          do {
            K2(r5, j2);
          } while (0 != --o3);
        else
          0 !== r5 ? (r5 !== i3 && (K2(r5, j2), o3--), K2(16, j2), X2(o3 - 3, 2)) : o3 <= 10 ? (K2(17, j2), X2(o3 - 3, 3)) : (K2(18, j2), X2(o3 - 11, 7));
        o3 = 0, i3 = r5, 0 === a3 ? (s3 = 138, u3 = 3) : r5 === a3 ? (s3 = 6, u3 = 3) : (s3 = 7, u3 = 4);
      }
  }
  function $2() {
    16 === D2 ? (J2(T2), T2 = 0, D2 = 0) : D2 >= 8 && (Y2(255 & T2), T2 >>>= 8, D2 -= 8);
  }
  function Q2(t3, e3) {
    var n3, r5, i3;
    if (U2.pending_buf[E2 + 2 * M2] = t3 >>> 8 & 255, U2.pending_buf[E2 + 2 * M2 + 1] = 255 & t3, U2.pending_buf[B2 + M2] = 255 & e3, M2++, 0 === t3 ? I2[2 * e3]++ : (q2++, t3--, I2[2 * (ft._length_code[e3] + 256 + 1)]++, C2[2 * ft.d_code(t3)]++), 0 == (8191 & M2) && S2 > 2) {
      for (n3 = 8 * M2, r5 = w2 - m2, i3 = 0; i3 < 30; i3++)
        n3 += C2[2 * i3] * (5 + ft.extra_dbits[i3]);
      if (n3 >>>= 3, q2 < Math.floor(M2 / 2) && n3 < Math.floor(r5 / 2))
        return true;
    }
    return M2 === O2 - 1;
  }
  function tt2(t3, e3) {
    var n3, r5, i3, a3, o3 = 0;
    if (0 !== M2)
      do {
        n3 = U2.pending_buf[E2 + 2 * o3] << 8 & 65280 | 255 & U2.pending_buf[E2 + 2 * o3 + 1], r5 = 255 & U2.pending_buf[B2 + o3], o3++, 0 === n3 ? K2(r5, t3) : (K2((i3 = ft._length_code[r5]) + 256 + 1, t3), 0 !== (a3 = ft.extra_lbits[i3]) && X2(r5 -= ft.base_length[i3], a3), n3--, K2(i3 = ft.d_code(n3), e3), 0 !== (a3 = ft.extra_dbits[i3]) && X2(n3 -= ft.base_dist[i3], a3));
      } while (o3 < M2);
    K2(256, t3), R2 = t3[513];
  }
  function et2() {
    D2 > 8 ? J2(T2) : D2 > 0 && Y2(255 & T2), T2 = 0, D2 = 0;
  }
  function nt2(t3, e3, n3) {
    X2(0 + (n3 ? 1 : 0), 3), function(t4, e4, n4) {
      et2(), R2 = 8, n4 && (J2(e4), J2(~e4)), U2.pending_buf.set(s2.subarray(t4, t4 + e4), U2.pending), U2.pending += e4;
    }(t3, e3, true);
  }
  function rt2(t3, e3, n3) {
    var r5, i3, a3 = 0;
    S2 > 0 ? (z2.build_tree(U2), H2.build_tree(U2), a3 = function() {
      var t4;
      for (G2(I2, z2.max_code), G2(C2, H2.max_code), W2.build_tree(U2), t4 = 18; t4 >= 3 && 0 === j2[2 * ft.bl_order[t4] + 1]; t4--)
        ;
      return U2.opt_len += 3 * (t4 + 1) + 5 + 5 + 4, t4;
    }(), r5 = U2.opt_len + 3 + 7 >>> 3, (i3 = U2.static_len + 3 + 7 >>> 3) <= r5 && (r5 = i3)) : r5 = i3 = e3 + 5, e3 + 4 <= r5 && -1 !== t3 ? nt2(t3, e3, n3) : i3 === r5 ? (X2(2 + (n3 ? 1 : 0), 3), tt2(dt.static_ltree, dt.static_dtree)) : (X2(4 + (n3 ? 1 : 0), 3), function(t4, e4, n4) {
      var r6;
      for (X2(t4 - 257, 5), X2(e4 - 1, 5), X2(n4 - 4, 4), r6 = 0; r6 < n4; r6++)
        X2(j2[2 * ft.bl_order[r6] + 1], 3);
      Z2(I2, t4 - 1), Z2(C2, e4 - 1);
    }(z2.max_code + 1, H2.max_code + 1, a3 + 1), tt2(I2, C2)), V2(), n3 && et2();
  }
  function it2(e3) {
    rt2(m2 >= 0 ? m2 : -1, w2 - m2, e3), m2 = w2, t2.flush_pending();
  }
  function at3() {
    var e3, n3, r5, a3;
    do {
      if (0 === (a3 = u2 - L2 - w2) && 0 === w2 && 0 === L2)
        a3 = i2;
      else if (-1 === a3)
        a3--;
      else if (w2 >= i2 + i2 - 262) {
        s2.set(s2.subarray(i2, i2 + i2), 0), N2 -= i2, w2 -= i2, m2 -= i2, r5 = e3 = f2;
        do {
          n3 = 65535 & h2[--r5], h2[r5] = n3 >= i2 ? n3 - i2 : 0;
        } while (0 != --e3);
        r5 = e3 = i2;
        do {
          n3 = 65535 & c2[--r5], c2[r5] = n3 >= i2 ? n3 - i2 : 0;
        } while (0 != --e3);
        a3 += i2;
      }
      if (0 === t2.avail_in)
        return;
      e3 = t2.read_buf(s2, w2 + L2, a3), (L2 += e3) >= 3 && (l2 = ((l2 = 255 & s2[w2]) << g2 ^ 255 & s2[w2 + 1]) & p2);
    } while (L2 < 262 && 0 !== t2.avail_in);
  }
  function ot2(t3) {
    var e3, n3, r5 = A2, a3 = w2, u3 = x2, h3 = w2 > i2 - 262 ? w2 - (i2 - 262) : 0, l3 = F2, f3 = o2, d3 = w2 + 258, p3 = s2[a3 + u3 - 1], g3 = s2[a3 + u3];
    x2 >= k2 && (r5 >>= 2), l3 > L2 && (l3 = L2);
    do {
      if (s2[(e3 = t3) + u3] === g3 && s2[e3 + u3 - 1] === p3 && s2[e3] === s2[a3] && s2[++e3] === s2[a3 + 1]) {
        a3 += 2, e3++;
        do {
        } while (s2[++a3] === s2[++e3] && s2[++a3] === s2[++e3] && s2[++a3] === s2[++e3] && s2[++a3] === s2[++e3] && s2[++a3] === s2[++e3] && s2[++a3] === s2[++e3] && s2[++a3] === s2[++e3] && s2[++a3] === s2[++e3] && a3 < d3);
        if (n3 = 258 - (d3 - a3), a3 = d3 - 258, n3 > u3) {
          if (N2 = t3, u3 = n3, n3 >= l3)
            break;
          p3 = s2[a3 + u3 - 1], g3 = s2[a3 + u3];
        }
      }
    } while ((t3 = 65535 & c2[t3 & f3]) > h3 && 0 != --r5);
    return u3 <= L2 ? u3 : L2;
  }
  function st2(t3) {
    return t3.total_in = t3.total_out = 0, t3.msg = null, U2.pending = 0, U2.pending_out = 0, e2 = 113, r4 = 0, z2.dyn_tree = I2, z2.stat_desc = dt.static_l_desc, H2.dyn_tree = C2, H2.stat_desc = dt.static_d_desc, W2.dyn_tree = j2, W2.stat_desc = dt.static_bl_desc, T2 = 0, D2 = 0, R2 = 8, V2(), function() {
      var t4;
      for (u2 = 2 * i2, h2[f2 - 1] = 0, t4 = 0; t4 < f2 - 1; t4++)
        h2[t4] = 0;
      _2 = bt[S2].max_lazy, k2 = bt[S2].good_length, F2 = bt[S2].nice_length, A2 = bt[S2].max_chain, w2 = 0, m2 = 0, L2 = 0, v2 = x2 = 2, y2 = 0, l2 = 0;
    }(), 0;
  }
  U2.depth = [], U2.bl_count = [], U2.heap = [], I2 = [], C2 = [], j2 = [], U2.pqdownheap = function(t3, e3) {
    for (var n3 = U2.heap, r5 = n3[e3], i3 = e3 << 1; i3 <= U2.heap_len && (i3 < U2.heap_len && wt(t3, n3[i3 + 1], n3[i3], U2.depth) && i3++, !wt(t3, r5, n3[i3], U2.depth)); )
      n3[e3] = n3[i3], e3 = i3, i3 <<= 1;
    n3[e3] = r5;
  }, U2.deflateInit = function(t3, e3, r5, u3, l3, m3) {
    return u3 || (u3 = 8), l3 || (l3 = 8), m3 || (m3 = 0), t3.msg = null, -1 === e3 && (e3 = 6), l3 < 1 || l3 > 9 || 8 !== u3 || r5 < 9 || r5 > 15 || e3 < 0 || e3 > 9 || m3 < 0 || m3 > 2 ? -2 : (t3.dstate = U2, o2 = (i2 = 1 << (a2 = r5)) - 1, p2 = (f2 = 1 << (d2 = l3 + 7)) - 1, g2 = Math.floor((d2 + 3 - 1) / 3), s2 = new Uint8Array(2 * i2), c2 = [], h2 = [], O2 = 1 << l3 + 6, U2.pending_buf = new Uint8Array(4 * O2), n2 = 4 * O2, E2 = Math.floor(O2 / 2), B2 = 3 * O2, S2 = e3, P2 = m3, st2(t3));
  }, U2.deflateEnd = function() {
    return 42 !== e2 && 113 !== e2 && 666 !== e2 ? -2 : (U2.pending_buf = null, h2 = null, c2 = null, s2 = null, U2.dstate = null, 113 === e2 ? -3 : 0);
  }, U2.deflateParams = function(t3, e3, n3) {
    var r5 = 0;
    return -1 === e3 && (e3 = 6), e3 < 0 || e3 > 9 || n3 < 0 || n3 > 2 ? -2 : (bt[S2].func !== bt[e3].func && 0 !== t3.total_in && (r5 = t3.deflate(1)), S2 !== e3 && (_2 = bt[S2 = e3].max_lazy, k2 = bt[S2].good_length, F2 = bt[S2].nice_length, A2 = bt[S2].max_chain), P2 = n3, r5);
  }, U2.deflateSetDictionary = function(t3, n3, r5) {
    var a3, u3 = r5, f3 = 0;
    if (!n3 || 42 !== e2)
      return -2;
    if (u3 < 3)
      return 0;
    for (u3 > i2 - 262 && (f3 = r5 - (u3 = i2 - 262)), s2.set(n3.subarray(f3, f3 + u3), 0), w2 = u3, m2 = u3, l2 = ((l2 = 255 & s2[0]) << g2 ^ 255 & s2[1]) & p2, a3 = 0; a3 <= u3 - 3; a3++)
      l2 = (l2 << g2 ^ 255 & s2[a3 + 2]) & p2, c2[a3 & o2] = h2[l2], h2[l2] = a3;
    return 0;
  }, U2.deflate = function(u3, d3) {
    var A3, k3, F3, I3, C3, j3;
    if (d3 > 4 || d3 < 0)
      return -2;
    if (!u3.next_out || !u3.next_in && 0 !== u3.avail_in || 666 === e2 && 4 !== d3)
      return u3.msg = yt[4], -2;
    if (0 === u3.avail_out)
      return u3.msg = yt[7], -5;
    if (t2 = u3, I3 = r4, r4 = d3, 42 === e2 && (k3 = 8 + (a2 - 8 << 4) << 8, (F3 = (S2 - 1 & 255) >> 1) > 3 && (F3 = 3), k3 |= F3 << 6, 0 !== w2 && (k3 |= 32), e2 = 113, Y2((j3 = k3 += 31 - k3 % 31) >> 8 & 255), Y2(255 & j3)), 0 !== U2.pending) {
      if (t2.flush_pending(), 0 === t2.avail_out)
        return r4 = -1, 0;
    } else if (0 === t2.avail_in && d3 <= I3 && 4 !== d3)
      return t2.msg = yt[7], -5;
    if (666 === e2 && 0 !== t2.avail_in)
      return u3.msg = yt[7], -5;
    if (0 !== t2.avail_in || 0 !== L2 || 0 !== d3 && 666 !== e2) {
      switch (C3 = -1, bt[S2].func) {
        case 0:
          C3 = function(e3) {
            var r5, a3 = 65535;
            for (a3 > n2 - 5 && (a3 = n2 - 5); ; ) {
              if (L2 <= 1) {
                if (at3(), 0 === L2 && 0 === e3)
                  return 0;
                if (0 === L2)
                  break;
              }
              if (w2 += L2, L2 = 0, r5 = m2 + a3, (0 === w2 || w2 >= r5) && (L2 = w2 - r5, w2 = r5, it2(false), 0 === t2.avail_out))
                return 0;
              if (w2 - m2 >= i2 - 262 && (it2(false), 0 === t2.avail_out))
                return 0;
            }
            return it2(4 === e3), 0 === t2.avail_out ? 4 === e3 ? 2 : 0 : 4 === e3 ? 3 : 1;
          }(d3);
          break;
        case 1:
          C3 = function(e3) {
            for (var n3, r5 = 0; ; ) {
              if (L2 < 262) {
                if (at3(), L2 < 262 && 0 === e3)
                  return 0;
                if (0 === L2)
                  break;
              }
              if (L2 >= 3 && (l2 = (l2 << g2 ^ 255 & s2[w2 + 2]) & p2, r5 = 65535 & h2[l2], c2[w2 & o2] = h2[l2], h2[l2] = w2), 0 !== r5 && (w2 - r5 & 65535) <= i2 - 262 && 2 !== P2 && (v2 = ot2(r5)), v2 >= 3)
                if (n3 = Q2(w2 - N2, v2 - 3), L2 -= v2, v2 <= _2 && L2 >= 3) {
                  v2--;
                  do {
                    w2++, l2 = (l2 << g2 ^ 255 & s2[w2 + 2]) & p2, r5 = 65535 & h2[l2], c2[w2 & o2] = h2[l2], h2[l2] = w2;
                  } while (0 != --v2);
                  w2++;
                } else
                  w2 += v2, v2 = 0, l2 = ((l2 = 255 & s2[w2]) << g2 ^ 255 & s2[w2 + 1]) & p2;
              else
                n3 = Q2(0, 255 & s2[w2]), L2--, w2++;
              if (n3 && (it2(false), 0 === t2.avail_out))
                return 0;
            }
            return it2(4 === e3), 0 === t2.avail_out ? 4 === e3 ? 2 : 0 : 4 === e3 ? 3 : 1;
          }(d3);
          break;
        case 2:
          C3 = function(e3) {
            for (var n3, r5, a3 = 0; ; ) {
              if (L2 < 262) {
                if (at3(), L2 < 262 && 0 === e3)
                  return 0;
                if (0 === L2)
                  break;
              }
              if (L2 >= 3 && (l2 = (l2 << g2 ^ 255 & s2[w2 + 2]) & p2, a3 = 65535 & h2[l2], c2[w2 & o2] = h2[l2], h2[l2] = w2), x2 = v2, b2 = N2, v2 = 2, 0 !== a3 && x2 < _2 && (w2 - a3 & 65535) <= i2 - 262 && (2 !== P2 && (v2 = ot2(a3)), v2 <= 5 && (1 === P2 || 3 === v2 && w2 - N2 > 4096) && (v2 = 2)), x2 >= 3 && v2 <= x2) {
                r5 = w2 + L2 - 3, n3 = Q2(w2 - 1 - b2, x2 - 3), L2 -= x2 - 1, x2 -= 2;
                do {
                  ++w2 <= r5 && (l2 = (l2 << g2 ^ 255 & s2[w2 + 2]) & p2, a3 = 65535 & h2[l2], c2[w2 & o2] = h2[l2], h2[l2] = w2);
                } while (0 != --x2);
                if (y2 = 0, v2 = 2, w2++, n3 && (it2(false), 0 === t2.avail_out))
                  return 0;
              } else if (0 !== y2) {
                if ((n3 = Q2(0, 255 & s2[w2 - 1])) && it2(false), w2++, L2--, 0 === t2.avail_out)
                  return 0;
              } else
                y2 = 1, w2++, L2--;
            }
            return 0 !== y2 && (n3 = Q2(0, 255 & s2[w2 - 1]), y2 = 0), it2(4 === e3), 0 === t2.avail_out ? 4 === e3 ? 2 : 0 : 4 === e3 ? 3 : 1;
          }(d3);
      }
      if (2 !== C3 && 3 !== C3 || (e2 = 666), 0 === C3 || 2 === C3)
        return 0 === t2.avail_out && (r4 = -1), 0;
      if (1 === C3) {
        if (1 === d3)
          X2(2, 3), K2(256, dt.static_ltree), $2(), 1 + R2 + 10 - D2 < 9 && (X2(2, 3), K2(256, dt.static_ltree), $2()), R2 = 7;
        else if (nt2(0, 0, false), 3 === d3)
          for (A3 = 0; A3 < f2; A3++)
            h2[A3] = 0;
        if (t2.flush_pending(), 0 === t2.avail_out)
          return r4 = -1, 0;
      }
    }
    return 4 !== d3 ? 0 : 1;
  };
}
function Lt() {
  this.next_in_index = 0, this.next_out_index = 0, this.avail_in = 0, this.total_in = 0, this.avail_out = 0, this.total_out = 0;
}
function xt(t2) {
  var e2 = new Lt(), n2 = new Uint8Array(512), r4 = t2 ? t2.level : -1;
  void 0 === r4 && (r4 = -1), e2.deflateInit(r4), e2.next_out = n2, this.append = function(t3, r5) {
    var i2, a2 = [], o2 = 0, s2 = 0, u2 = 0;
    if (t3.length) {
      e2.next_in_index = 0, e2.next_in = t3, e2.avail_in = t3.length;
      do {
        if (e2.next_out_index = 0, e2.avail_out = 512, 0 !== e2.deflate(0))
          throw new Error("deflating: " + e2.msg);
        e2.next_out_index && (512 === e2.next_out_index ? a2.push(new Uint8Array(n2)) : a2.push(new Uint8Array(n2.subarray(0, e2.next_out_index)))), u2 += e2.next_out_index, r5 && e2.next_in_index > 0 && e2.next_in_index !== o2 && (r5(e2.next_in_index), o2 = e2.next_in_index);
      } while (e2.avail_in > 0 || 0 === e2.avail_out);
      return i2 = new Uint8Array(u2), a2.forEach(function(t4) {
        i2.set(t4, s2), s2 += t4.length;
      }), i2;
    }
  }, this.flush = function() {
    var t3, r5, i2 = [], a2 = 0, o2 = 0;
    do {
      if (e2.next_out_index = 0, e2.avail_out = 512, 1 !== (t3 = e2.deflate(4)) && 0 !== t3)
        throw new Error("deflating: " + e2.msg);
      512 - e2.avail_out > 0 && i2.push(new Uint8Array(n2.subarray(0, e2.next_out_index))), o2 += e2.next_out_index;
    } while (e2.avail_in > 0 || 0 === e2.avail_out);
    return e2.deflateEnd(), r5 = new Uint8Array(o2), i2.forEach(function(t4) {
      r5.set(t4, a2), a2 += t4.length;
    }), r5;
  };
}
function jt(t2) {
  var e2 = 0;
  if (71 !== t2[e2++] || 73 !== t2[e2++] || 70 !== t2[e2++] || 56 !== t2[e2++] || 56 != (t2[e2++] + 1 & 253) || 97 !== t2[e2++])
    throw new Error("Invalid GIF 87a/89a header.");
  var n2 = t2[e2++] | t2[e2++] << 8, r4 = t2[e2++] | t2[e2++] << 8, i2 = t2[e2++], a2 = i2 >> 7, o2 = 1 << (7 & i2) + 1;
  t2[e2++];
  t2[e2++];
  var s2 = null, u2 = null;
  a2 && (s2 = e2, u2 = o2, e2 += 3 * o2);
  var c2 = true, h2 = [], l2 = 0, f2 = null, d2 = 0, p2 = null;
  for (this.width = n2, this.height = r4; c2 && e2 < t2.length; )
    switch (t2[e2++]) {
      case 33:
        switch (t2[e2++]) {
          case 255:
            if (11 !== t2[e2] || 78 == t2[e2 + 1] && 69 == t2[e2 + 2] && 84 == t2[e2 + 3] && 83 == t2[e2 + 4] && 67 == t2[e2 + 5] && 65 == t2[e2 + 6] && 80 == t2[e2 + 7] && 69 == t2[e2 + 8] && 50 == t2[e2 + 9] && 46 == t2[e2 + 10] && 48 == t2[e2 + 11] && 3 == t2[e2 + 12] && 1 == t2[e2 + 13] && 0 == t2[e2 + 16])
              e2 += 14, p2 = t2[e2++] | t2[e2++] << 8, e2++;
            else
              for (e2 += 12; ; ) {
                if (!((P2 = t2[e2++]) >= 0))
                  throw Error("Invalid block size");
                if (0 === P2)
                  break;
                e2 += P2;
              }
            break;
          case 249:
            if (4 !== t2[e2++] || 0 !== t2[e2 + 4])
              throw new Error("Invalid graphics extension block.");
            var g2 = t2[e2++];
            l2 = t2[e2++] | t2[e2++] << 8, f2 = t2[e2++], 0 == (1 & g2) && (f2 = null), d2 = g2 >> 2 & 7, e2++;
            break;
          case 254:
            for (; ; ) {
              if (!((P2 = t2[e2++]) >= 0))
                throw Error("Invalid block size");
              if (0 === P2)
                break;
              e2 += P2;
            }
            break;
          default:
            throw new Error("Unknown graphic control label: 0x" + t2[e2 - 1].toString(16));
        }
        break;
      case 44:
        var m2 = t2[e2++] | t2[e2++] << 8, v2 = t2[e2++] | t2[e2++] << 8, b2 = t2[e2++] | t2[e2++] << 8, y2 = t2[e2++] | t2[e2++] << 8, w2 = t2[e2++], N2 = w2 >> 6 & 1, L2 = 1 << (7 & w2) + 1, x2 = s2, A2 = u2, _2 = false;
        if (w2 >> 7) {
          _2 = true;
          x2 = e2, A2 = L2, e2 += 3 * L2;
        }
        var S2 = e2;
        for (e2++; ; ) {
          var P2;
          if (!((P2 = t2[e2++]) >= 0))
            throw Error("Invalid block size");
          if (0 === P2)
            break;
          e2 += P2;
        }
        h2.push({ x: m2, y: v2, width: b2, height: y2, has_local_palette: _2, palette_offset: x2, palette_size: A2, data_offset: S2, data_length: e2 - S2, transparent_index: f2, interlaced: !!N2, delay: l2, disposal: d2 });
        break;
      case 59:
        c2 = false;
        break;
      default:
        throw new Error("Unknown gif block: 0x" + t2[e2 - 1].toString(16));
    }
  this.numFrames = function() {
    return h2.length;
  }, this.loopCount = function() {
    return p2;
  }, this.frameInfo = function(t3) {
    if (t3 < 0 || t3 >= h2.length)
      throw new Error("Frame index out of range.");
    return h2[t3];
  }, this.decodeAndBlitFrameBGRA = function(e3, r5) {
    var i3 = this.frameInfo(e3), a3 = i3.width * i3.height, o3 = new Uint8Array(a3);
    Bt(t2, i3.data_offset, o3, a3);
    var s3 = i3.palette_offset, u3 = i3.transparent_index;
    null === u3 && (u3 = 256);
    var c3 = i3.width, h3 = n2 - c3, l3 = c3, f3 = 4 * (i3.y * n2 + i3.x), d3 = 4 * ((i3.y + i3.height) * n2 + i3.x), p3 = f3, g3 = 4 * h3;
    true === i3.interlaced && (g3 += 4 * n2 * 7);
    for (var m3 = 8, v3 = 0, b3 = o3.length; v3 < b3; ++v3) {
      var y3 = o3[v3];
      if (0 === l3 && (l3 = c3, (p3 += g3) >= d3 && (g3 = 4 * h3 + 4 * n2 * (m3 - 1), p3 = f3 + (c3 + h3) * (m3 << 1), m3 >>= 1)), y3 === u3)
        p3 += 4;
      else {
        var w3 = t2[s3 + 3 * y3], N3 = t2[s3 + 3 * y3 + 1], L3 = t2[s3 + 3 * y3 + 2];
        r5[p3++] = L3, r5[p3++] = N3, r5[p3++] = w3, r5[p3++] = 255;
      }
      --l3;
    }
  }, this.decodeAndBlitFrameRGBA = function(e3, r5) {
    var i3 = this.frameInfo(e3), a3 = i3.width * i3.height, o3 = new Uint8Array(a3);
    Bt(t2, i3.data_offset, o3, a3);
    var s3 = i3.palette_offset, u3 = i3.transparent_index;
    null === u3 && (u3 = 256);
    var c3 = i3.width, h3 = n2 - c3, l3 = c3, f3 = 4 * (i3.y * n2 + i3.x), d3 = 4 * ((i3.y + i3.height) * n2 + i3.x), p3 = f3, g3 = 4 * h3;
    true === i3.interlaced && (g3 += 4 * n2 * 7);
    for (var m3 = 8, v3 = 0, b3 = o3.length; v3 < b3; ++v3) {
      var y3 = o3[v3];
      if (0 === l3 && (l3 = c3, (p3 += g3) >= d3 && (g3 = 4 * h3 + 4 * n2 * (m3 - 1), p3 = f3 + (c3 + h3) * (m3 << 1), m3 >>= 1)), y3 === u3)
        p3 += 4;
      else {
        var w3 = t2[s3 + 3 * y3], N3 = t2[s3 + 3 * y3 + 1], L3 = t2[s3 + 3 * y3 + 2];
        r5[p3++] = w3, r5[p3++] = N3, r5[p3++] = L3, r5[p3++] = 255;
      }
      --l3;
    }
  };
}
function Bt(t2, e2, r4, i2) {
  for (var a2 = t2[e2++], o2 = 1 << a2, s2 = o2 + 1, u2 = s2 + 1, c2 = a2 + 1, h2 = (1 << c2) - 1, l2 = 0, f2 = 0, d2 = 0, p2 = t2[e2++], g2 = new Int32Array(4096), m2 = null; ; ) {
    for (; l2 < 16 && 0 !== p2; )
      f2 |= t2[e2++] << l2, l2 += 8, 1 === p2 ? p2 = t2[e2++] : --p2;
    if (l2 < c2)
      break;
    var v2 = f2 & h2;
    if (f2 >>= c2, l2 -= c2, v2 !== o2) {
      if (v2 === s2)
        break;
      for (var b2 = v2 < u2 ? v2 : m2, y2 = 0, w2 = b2; w2 > o2; )
        w2 = g2[w2] >> 8, ++y2;
      var N2 = w2;
      if (d2 + y2 + (b2 !== v2 ? 1 : 0) > i2)
        return void n.log("Warning, gif stream longer than expected.");
      r4[d2++] = N2;
      var L2 = d2 += y2;
      for (b2 !== v2 && (r4[d2++] = N2), w2 = b2; y2--; )
        w2 = g2[w2], r4[--L2] = 255 & w2, w2 >>= 8;
      null !== m2 && u2 < 4096 && (g2[u2++] = m2 << 8 | N2, u2 >= h2 + 1 && c2 < 12 && (++c2, h2 = h2 << 1 | 1)), m2 = v2;
    } else
      u2 = s2 + 1, h2 = (1 << (c2 = a2 + 1)) - 1, m2 = null;
  }
  return d2 !== i2 && n.log("Warning, gif stream shorter than expected."), r4;
}
function Ot(t2) {
  var e2, n2, r4, i2, a2, o2 = Math.floor, s2 = new Array(64), u2 = new Array(64), c2 = new Array(64), h2 = new Array(64), l2 = new Array(65535), f2 = new Array(65535), d2 = new Array(64), p2 = new Array(64), g2 = [], m2 = 0, v2 = 7, b2 = new Array(64), y2 = new Array(64), w2 = new Array(64), N2 = new Array(256), L2 = new Array(2048), x2 = [0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 17, 25, 30, 41, 43, 9, 11, 18, 24, 31, 40, 44, 53, 10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 50, 56, 59, 61, 35, 36, 48, 49, 57, 58, 62, 63], A2 = [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], _2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], S2 = [0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125], P2 = [1, 2, 3, 0, 4, 17, 5, 18, 33, 49, 65, 6, 19, 81, 97, 7, 34, 113, 20, 50, 129, 145, 161, 8, 35, 66, 177, 193, 21, 82, 209, 240, 36, 51, 98, 114, 130, 9, 10, 22, 23, 24, 25, 26, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], k2 = [0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], F2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], I2 = [0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119], C2 = [0, 1, 2, 3, 17, 4, 5, 33, 49, 6, 18, 65, 81, 7, 97, 113, 19, 34, 50, 129, 8, 20, 66, 145, 161, 177, 193, 9, 35, 51, 82, 240, 21, 98, 114, 209, 10, 22, 36, 52, 225, 37, 241, 23, 24, 25, 26, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250];
  function j2(t3, e3) {
    for (var n3 = 0, r5 = 0, i3 = new Array(), a3 = 1; a3 <= 16; a3++) {
      for (var o3 = 1; o3 <= t3[a3]; o3++)
        i3[e3[r5]] = [], i3[e3[r5]][0] = n3, i3[e3[r5]][1] = a3, r5++, n3++;
      n3 *= 2;
    }
    return i3;
  }
  function B2(t3) {
    for (var e3 = t3[0], n3 = t3[1] - 1; n3 >= 0; )
      e3 & 1 << n3 && (m2 |= 1 << v2), n3--, --v2 < 0 && (255 == m2 ? (O2(255), O2(0)) : O2(m2), v2 = 7, m2 = 0);
  }
  function O2(t3) {
    g2.push(t3);
  }
  function M2(t3) {
    O2(t3 >> 8 & 255), O2(255 & t3);
  }
  function E2(t3, e3, n3, r5, i3) {
    for (var a3, o3 = i3[0], s3 = i3[240], u3 = function(t4, e4) {
      var n4, r6, i4, a4, o4, s4, u4, c4, h4, l3, f3 = 0;
      for (h4 = 0; h4 < 8; ++h4) {
        n4 = t4[f3], r6 = t4[f3 + 1], i4 = t4[f3 + 2], a4 = t4[f3 + 3], o4 = t4[f3 + 4], s4 = t4[f3 + 5], u4 = t4[f3 + 6];
        var p3 = n4 + (c4 = t4[f3 + 7]), g4 = n4 - c4, m4 = r6 + u4, v4 = r6 - u4, b4 = i4 + s4, y4 = i4 - s4, w4 = a4 + o4, N3 = a4 - o4, L3 = p3 + w4, x3 = p3 - w4, A3 = m4 + b4, _3 = m4 - b4;
        t4[f3] = L3 + A3, t4[f3 + 4] = L3 - A3;
        var S3 = 0.707106781 * (_3 + x3);
        t4[f3 + 2] = x3 + S3, t4[f3 + 6] = x3 - S3;
        var P3 = 0.382683433 * ((L3 = N3 + y4) - (_3 = v4 + g4)), k3 = 0.5411961 * L3 + P3, F3 = 1.306562965 * _3 + P3, I3 = 0.707106781 * (A3 = y4 + v4), C3 = g4 + I3, j3 = g4 - I3;
        t4[f3 + 5] = j3 + k3, t4[f3 + 3] = j3 - k3, t4[f3 + 1] = C3 + F3, t4[f3 + 7] = C3 - F3, f3 += 8;
      }
      for (f3 = 0, h4 = 0; h4 < 8; ++h4) {
        n4 = t4[f3], r6 = t4[f3 + 8], i4 = t4[f3 + 16], a4 = t4[f3 + 24], o4 = t4[f3 + 32], s4 = t4[f3 + 40], u4 = t4[f3 + 48];
        var B3 = n4 + (c4 = t4[f3 + 56]), O3 = n4 - c4, M3 = r6 + u4, E3 = r6 - u4, q3 = i4 + s4, R2 = i4 - s4, T2 = a4 + o4, D2 = a4 - o4, U2 = B3 + T2, z2 = B3 - T2, H2 = M3 + q3, W2 = M3 - q3;
        t4[f3] = U2 + H2, t4[f3 + 32] = U2 - H2;
        var V2 = 0.707106781 * (W2 + z2);
        t4[f3 + 16] = z2 + V2, t4[f3 + 48] = z2 - V2;
        var G2 = 0.382683433 * ((U2 = D2 + R2) - (W2 = E3 + O3)), Y2 = 0.5411961 * U2 + G2, J2 = 1.306562965 * W2 + G2, X2 = 0.707106781 * (H2 = R2 + E3), K2 = O3 + X2, Z2 = O3 - X2;
        t4[f3 + 40] = Z2 + Y2, t4[f3 + 24] = Z2 - Y2, t4[f3 + 8] = K2 + J2, t4[f3 + 56] = K2 - J2, f3++;
      }
      for (h4 = 0; h4 < 64; ++h4)
        l3 = t4[h4] * e4[h4], d2[h4] = l3 > 0 ? l3 + 0.5 | 0 : l3 - 0.5 | 0;
      return d2;
    }(t3, e3), c3 = 0; c3 < 64; ++c3)
      p2[x2[c3]] = u3[c3];
    var h3 = p2[0] - n3;
    n3 = p2[0], 0 == h3 ? B2(r5[0]) : (B2(r5[f2[a3 = 32767 + h3]]), B2(l2[a3]));
    for (var g3 = 63; g3 > 0 && 0 == p2[g3]; )
      g3--;
    if (0 == g3)
      return B2(o3), n3;
    for (var m3, v3 = 1; v3 <= g3; ) {
      for (var b3 = v3; 0 == p2[v3] && v3 <= g3; )
        ++v3;
      var y3 = v3 - b3;
      if (y3 >= 16) {
        m3 = y3 >> 4;
        for (var w3 = 1; w3 <= m3; ++w3)
          B2(s3);
        y3 &= 15;
      }
      a3 = 32767 + p2[v3], B2(i3[(y3 << 4) + f2[a3]]), B2(l2[a3]), v3++;
    }
    return 63 != g3 && B2(o3), n3;
  }
  function q2(t3) {
    (t3 = Math.min(Math.max(t3, 1), 100), a2 != t3) && (!function(t4) {
      for (var e3 = [16, 11, 10, 16, 24, 40, 51, 61, 12, 12, 14, 19, 26, 58, 60, 55, 14, 13, 16, 24, 40, 57, 69, 56, 14, 17, 22, 29, 51, 87, 80, 62, 18, 22, 37, 56, 68, 109, 103, 77, 24, 35, 55, 64, 81, 104, 113, 92, 49, 64, 78, 87, 103, 121, 120, 101, 72, 92, 95, 98, 112, 100, 103, 99], n3 = 0; n3 < 64; n3++) {
        var r5 = o2((e3[n3] * t4 + 50) / 100);
        r5 = Math.min(Math.max(r5, 1), 255), s2[x2[n3]] = r5;
      }
      for (var i3 = [17, 18, 24, 47, 99, 99, 99, 99, 18, 21, 26, 66, 99, 99, 99, 99, 24, 26, 56, 99, 99, 99, 99, 99, 47, 66, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99], a3 = 0; a3 < 64; a3++) {
        var l3 = o2((i3[a3] * t4 + 50) / 100);
        l3 = Math.min(Math.max(l3, 1), 255), u2[x2[a3]] = l3;
      }
      for (var f3 = [1, 1.387039845, 1.306562965, 1.175875602, 1, 0.785694958, 0.5411961, 0.275899379], d3 = 0, p3 = 0; p3 < 8; p3++)
        for (var g3 = 0; g3 < 8; g3++)
          c2[d3] = 1 / (s2[x2[d3]] * f3[p3] * f3[g3] * 8), h2[d3] = 1 / (u2[x2[d3]] * f3[p3] * f3[g3] * 8), d3++;
    }(t3 < 50 ? Math.floor(5e3 / t3) : Math.floor(200 - 2 * t3)), a2 = t3);
  }
  this.encode = function(t3, a3) {
    a3 && q2(a3), g2 = new Array(), m2 = 0, v2 = 7, M2(65496), M2(65504), M2(16), O2(74), O2(70), O2(73), O2(70), O2(0), O2(1), O2(1), O2(0), M2(1), M2(1), O2(0), O2(0), function() {
      M2(65499), M2(132), O2(0);
      for (var t4 = 0; t4 < 64; t4++)
        O2(s2[t4]);
      O2(1);
      for (var e3 = 0; e3 < 64; e3++)
        O2(u2[e3]);
    }(), function(t4, e3) {
      M2(65472), M2(17), O2(8), M2(e3), M2(t4), O2(3), O2(1), O2(17), O2(0), O2(2), O2(17), O2(1), O2(3), O2(17), O2(1);
    }(t3.width, t3.height), function() {
      M2(65476), M2(418), O2(0);
      for (var t4 = 0; t4 < 16; t4++)
        O2(A2[t4 + 1]);
      for (var e3 = 0; e3 <= 11; e3++)
        O2(_2[e3]);
      O2(16);
      for (var n3 = 0; n3 < 16; n3++)
        O2(S2[n3 + 1]);
      for (var r5 = 0; r5 <= 161; r5++)
        O2(P2[r5]);
      O2(1);
      for (var i3 = 0; i3 < 16; i3++)
        O2(k2[i3 + 1]);
      for (var a4 = 0; a4 <= 11; a4++)
        O2(F2[a4]);
      O2(17);
      for (var o4 = 0; o4 < 16; o4++)
        O2(I2[o4 + 1]);
      for (var s3 = 0; s3 <= 161; s3++)
        O2(C2[s3]);
    }(), M2(65498), M2(12), O2(3), O2(1), O2(0), O2(2), O2(17), O2(3), O2(17), O2(0), O2(63), O2(0);
    var o3 = 0, l3 = 0, f3 = 0;
    m2 = 0, v2 = 7, this.encode.displayName = "_encode_";
    for (var d3, p3, N3, x3, j3, R2, T2, D2, U2, z2 = t3.data, H2 = t3.width, W2 = t3.height, V2 = 4 * H2, G2 = 0; G2 < W2; ) {
      for (d3 = 0; d3 < V2; ) {
        for (j3 = V2 * G2 + d3, T2 = -1, D2 = 0, U2 = 0; U2 < 64; U2++)
          R2 = j3 + (D2 = U2 >> 3) * V2 + (T2 = 4 * (7 & U2)), G2 + D2 >= W2 && (R2 -= V2 * (G2 + 1 + D2 - W2)), d3 + T2 >= V2 && (R2 -= d3 + T2 - V2 + 4), p3 = z2[R2++], N3 = z2[R2++], x3 = z2[R2++], b2[U2] = (L2[p3] + L2[N3 + 256 >> 0] + L2[x3 + 512 >> 0] >> 16) - 128, y2[U2] = (L2[p3 + 768 >> 0] + L2[N3 + 1024 >> 0] + L2[x3 + 1280 >> 0] >> 16) - 128, w2[U2] = (L2[p3 + 1280 >> 0] + L2[N3 + 1536 >> 0] + L2[x3 + 1792 >> 0] >> 16) - 128;
        o3 = E2(b2, c2, o3, e2, r4), l3 = E2(y2, h2, l3, n2, i2), f3 = E2(w2, h2, f3, n2, i2), d3 += 32;
      }
      G2 += 8;
    }
    if (v2 >= 0) {
      var Y2 = [];
      Y2[1] = v2 + 1, Y2[0] = (1 << v2 + 1) - 1, B2(Y2);
    }
    return M2(65497), new Uint8Array(g2);
  }, t2 = t2 || 50, function() {
    for (var t3 = String.fromCharCode, e3 = 0; e3 < 256; e3++)
      N2[e3] = t3(e3);
  }(), e2 = j2(A2, _2), n2 = j2(k2, F2), r4 = j2(S2, P2), i2 = j2(I2, C2), function() {
    for (var t3 = 1, e3 = 2, n3 = 1; n3 <= 15; n3++) {
      for (var r5 = t3; r5 < e3; r5++)
        f2[32767 + r5] = n3, l2[32767 + r5] = [], l2[32767 + r5][1] = n3, l2[32767 + r5][0] = r5;
      for (var i3 = -(e3 - 1); i3 <= -t3; i3++)
        f2[32767 + i3] = n3, l2[32767 + i3] = [], l2[32767 + i3][1] = n3, l2[32767 + i3][0] = e3 - 1 + i3;
      t3 <<= 1, e3 <<= 1;
    }
  }(), function() {
    for (var t3 = 0; t3 < 256; t3++)
      L2[t3] = 19595 * t3, L2[t3 + 256 >> 0] = 38470 * t3, L2[t3 + 512 >> 0] = 7471 * t3 + 32768, L2[t3 + 768 >> 0] = -11059 * t3, L2[t3 + 1024 >> 0] = -21709 * t3, L2[t3 + 1280 >> 0] = 32768 * t3 + 8421375, L2[t3 + 1536 >> 0] = -27439 * t3, L2[t3 + 1792 >> 0] = -5329 * t3;
  }(), q2(t2);
}
function Mt(t2, e2) {
  if (this.pos = 0, this.buffer = t2, this.datav = new DataView(t2.buffer), this.is_with_alpha = !!e2, this.bottom_up = true, this.flag = String.fromCharCode(this.buffer[0]) + String.fromCharCode(this.buffer[1]), this.pos += 2, -1 === ["BM", "BA", "CI", "CP", "IC", "PT"].indexOf(this.flag))
    throw new Error("Invalid BMP File");
  this.parseHeader(), this.parseBGR();
}
function Et(t2) {
  function e2(t3) {
    if (!t3)
      throw Error("assert :P");
  }
  function n2(t3, e3, n3) {
    for (var r5 = 0; 4 > r5; r5++)
      if (t3[e3 + r5] != n3.charCodeAt(r5))
        return true;
    return false;
  }
  function r4(t3, e3, n3, r5, i3) {
    for (var a3 = 0; a3 < i3; a3++)
      t3[e3 + a3] = n3[r5 + a3];
  }
  function i2(t3, e3, n3, r5) {
    for (var i3 = 0; i3 < r5; i3++)
      t3[e3 + i3] = n3;
  }
  function a2(t3) {
    return new Int32Array(t3);
  }
  function o2(t3, e3) {
    for (var n3 = [], r5 = 0; r5 < t3; r5++)
      n3.push(new e3());
    return n3;
  }
  function s2(t3, e3) {
    var n3 = [];
    return function t4(n4, r5, i3) {
      for (var a3 = i3[r5], o3 = 0; o3 < a3 && (n4.push(i3.length > r5 + 1 ? [] : new e3()), !(i3.length < r5 + 1)); o3++)
        t4(n4[o3], r5 + 1, i3);
    }(n3, 0, t3), n3;
  }
  function u2(t3, e3) {
    for (var n3 = "", r5 = 0; r5 < 4; r5++)
      n3 += String.fromCharCode(t3[e3++]);
    return n3;
  }
  function c2(t3, e3) {
    return (t3[e3 + 0] << 0 | t3[e3 + 1] << 8 | t3[e3 + 2] << 16) >>> 0;
  }
  function h2(t3, e3) {
    return (t3[e3 + 0] << 0 | t3[e3 + 1] << 8 | t3[e3 + 2] << 16 | t3[e3 + 3] << 24) >>> 0;
  }
  new (Et = function() {
    var t3 = this;
    function u3(t4, e3) {
      for (var n3 = 1 << e3 - 1 >>> 0; t4 & n3; )
        n3 >>>= 1;
      return n3 ? (t4 & n3 - 1) + n3 : t4;
    }
    function c3(t4, n3, r5, i3, a3) {
      e2(!(i3 % r5));
      do {
        t4[n3 + (i3 -= r5)] = a3;
      } while (0 < i3);
    }
    function h3(t4, n3, r5, i3, o3) {
      if (e2(2328 >= o3), 512 >= o3)
        var s3 = a2(512);
      else if (null == (s3 = a2(o3)))
        return 0;
      return function(t5, n4, r6, i4, o4, s4) {
        var h4, f4, d4 = n4, p4 = 1 << r6, g4 = a2(16), m4 = a2(16);
        for (e2(0 != o4), e2(null != i4), e2(null != t5), e2(0 < r6), f4 = 0; f4 < o4; ++f4) {
          if (15 < i4[f4])
            return 0;
          ++g4[i4[f4]];
        }
        if (g4[0] == o4)
          return 0;
        for (m4[1] = 0, h4 = 1; 15 > h4; ++h4) {
          if (g4[h4] > 1 << h4)
            return 0;
          m4[h4 + 1] = m4[h4] + g4[h4];
        }
        for (f4 = 0; f4 < o4; ++f4)
          h4 = i4[f4], 0 < i4[f4] && (s4[m4[h4]++] = f4);
        if (1 == m4[15])
          return (i4 = new l3()).g = 0, i4.value = s4[0], c3(t5, d4, 1, p4, i4), p4;
        var v4, b4 = -1, y4 = p4 - 1, w4 = 0, N4 = 1, L4 = 1, x3 = 1 << r6;
        for (f4 = 0, h4 = 1, o4 = 2; h4 <= r6; ++h4, o4 <<= 1) {
          if (N4 += L4 <<= 1, 0 > (L4 -= g4[h4]))
            return 0;
          for (; 0 < g4[h4]; --g4[h4])
            (i4 = new l3()).g = h4, i4.value = s4[f4++], c3(t5, d4 + w4, o4, x3, i4), w4 = u3(w4, h4);
        }
        for (h4 = r6 + 1, o4 = 2; 15 >= h4; ++h4, o4 <<= 1) {
          if (N4 += L4 <<= 1, 0 > (L4 -= g4[h4]))
            return 0;
          for (; 0 < g4[h4]; --g4[h4]) {
            if (i4 = new l3(), (w4 & y4) != b4) {
              for (d4 += x3, v4 = 1 << (b4 = h4) - r6; 15 > b4 && !(0 >= (v4 -= g4[b4])); )
                ++b4, v4 <<= 1;
              p4 += x3 = 1 << (v4 = b4 - r6), t5[n4 + (b4 = w4 & y4)].g = v4 + r6, t5[n4 + b4].value = d4 - n4 - b4;
            }
            i4.g = h4 - r6, i4.value = s4[f4++], c3(t5, d4 + (w4 >> r6), o4, x3, i4), w4 = u3(w4, h4);
          }
        }
        return N4 != 2 * m4[15] - 1 ? 0 : p4;
      }(t4, n3, r5, i3, o3, s3);
    }
    function l3() {
      this.value = this.g = 0;
    }
    function f3() {
      this.value = this.g = 0;
    }
    function d3() {
      this.G = o2(5, l3), this.H = a2(5), this.jc = this.Qb = this.qb = this.nd = 0, this.pd = o2(Tn, f3);
    }
    function p3(t4, n3, r5, i3) {
      e2(null != t4), e2(null != n3), e2(2147483648 > i3), t4.Ca = 254, t4.I = 0, t4.b = -8, t4.Ka = 0, t4.oa = n3, t4.pa = r5, t4.Jd = n3, t4.Yc = r5 + i3, t4.Zc = 4 <= i3 ? r5 + i3 - 4 + 1 : r5, S2(t4);
    }
    function g3(t4, e3) {
      for (var n3 = 0; 0 < e3--; )
        n3 |= k2(t4, 128) << e3;
      return n3;
    }
    function m3(t4, e3) {
      var n3 = g3(t4, e3);
      return P2(t4) ? -n3 : n3;
    }
    function v3(t4, n3, r5, i3) {
      var a3, o3 = 0;
      for (e2(null != t4), e2(null != n3), e2(4294967288 > i3), t4.Sb = i3, t4.Ra = 0, t4.u = 0, t4.h = 0, 4 < i3 && (i3 = 4), a3 = 0; a3 < i3; ++a3)
        o3 += n3[r5 + a3] << 8 * a3;
      t4.Ra = o3, t4.bb = i3, t4.oa = n3, t4.pa = r5;
    }
    function b3(t4) {
      for (; 8 <= t4.u && t4.bb < t4.Sb; )
        t4.Ra >>>= 8, t4.Ra += t4.oa[t4.pa + t4.bb] << zn - 8 >>> 0, ++t4.bb, t4.u -= 8;
      x2(t4) && (t4.h = 1, t4.u = 0);
    }
    function y3(t4, n3) {
      if (e2(0 <= n3), !t4.h && n3 <= Un) {
        var r5 = L3(t4) & Dn[n3];
        return t4.u += n3, b3(t4), r5;
      }
      return t4.h = 1, t4.u = 0;
    }
    function w3() {
      this.b = this.Ca = this.I = 0, this.oa = [], this.pa = 0, this.Jd = [], this.Yc = 0, this.Zc = [], this.Ka = 0;
    }
    function N3() {
      this.Ra = 0, this.oa = [], this.h = this.u = this.bb = this.Sb = this.pa = 0;
    }
    function L3(t4) {
      return t4.Ra >>> (t4.u & zn - 1) >>> 0;
    }
    function x2(t4) {
      return e2(t4.bb <= t4.Sb), t4.h || t4.bb == t4.Sb && t4.u > zn;
    }
    function A2(t4, e3) {
      t4.u = e3, t4.h = x2(t4);
    }
    function _2(t4) {
      t4.u >= Hn && (e2(t4.u >= Hn), b3(t4));
    }
    function S2(t4) {
      e2(null != t4 && null != t4.oa), t4.pa < t4.Zc ? (t4.I = (t4.oa[t4.pa++] | t4.I << 8) >>> 0, t4.b += 8) : (e2(null != t4 && null != t4.oa), t4.pa < t4.Yc ? (t4.b += 8, t4.I = t4.oa[t4.pa++] | t4.I << 8) : t4.Ka ? t4.b = 0 : (t4.I <<= 8, t4.b += 8, t4.Ka = 1));
    }
    function P2(t4) {
      return g3(t4, 1);
    }
    function k2(t4, e3) {
      var n3 = t4.Ca;
      0 > t4.b && S2(t4);
      var r5 = t4.b, i3 = n3 * e3 >>> 8, a3 = (t4.I >>> r5 > i3) + 0;
      for (a3 ? (n3 -= i3, t4.I -= i3 + 1 << r5 >>> 0) : n3 = i3 + 1, r5 = n3, i3 = 0; 256 <= r5; )
        i3 += 8, r5 >>= 8;
      return r5 = 7 ^ i3 + Wn[r5], t4.b -= r5, t4.Ca = (n3 << r5) - 1, a3;
    }
    function F2(t4, e3, n3) {
      t4[e3 + 0] = n3 >> 24 & 255, t4[e3 + 1] = n3 >> 16 & 255, t4[e3 + 2] = n3 >> 8 & 255, t4[e3 + 3] = n3 >> 0 & 255;
    }
    function I2(t4, e3) {
      return t4[e3 + 0] << 0 | t4[e3 + 1] << 8;
    }
    function C2(t4, e3) {
      return I2(t4, e3) | t4[e3 + 2] << 16;
    }
    function j2(t4, e3) {
      return I2(t4, e3) | I2(t4, e3 + 2) << 16;
    }
    function B2(t4, n3) {
      var r5 = 1 << n3;
      return e2(null != t4), e2(0 < n3), t4.X = a2(r5), null == t4.X ? 0 : (t4.Mb = 32 - n3, t4.Xa = n3, 1);
    }
    function O2(t4, n3) {
      e2(null != t4), e2(null != n3), e2(t4.Xa == n3.Xa), r4(n3.X, 0, t4.X, 0, 1 << n3.Xa);
    }
    function M2() {
      this.X = [], this.Xa = this.Mb = 0;
    }
    function E2(t4, n3, r5, i3) {
      e2(null != r5), e2(null != i3);
      var a3 = r5[0], o3 = i3[0];
      return 0 == a3 && (a3 = (t4 * o3 + n3 / 2) / n3), 0 == o3 && (o3 = (n3 * a3 + t4 / 2) / t4), 0 >= a3 || 0 >= o3 ? 0 : (r5[0] = a3, i3[0] = o3, 1);
    }
    function q2(t4, e3) {
      return t4 + (1 << e3) - 1 >>> e3;
    }
    function R2(t4, e3) {
      return ((4278255360 & t4) + (4278255360 & e3) >>> 0 & 4278255360) + ((16711935 & t4) + (16711935 & e3) >>> 0 & 16711935) >>> 0;
    }
    function T2(e3, n3) {
      t3[n3] = function(n4, r5, i3, a3, o3, s3, u4) {
        var c4;
        for (c4 = 0; c4 < o3; ++c4) {
          var h4 = t3[e3](s3[u4 + c4 - 1], i3, a3 + c4);
          s3[u4 + c4] = R2(n4[r5 + c4], h4);
        }
      };
    }
    function D2() {
      this.ud = this.hd = this.jd = 0;
    }
    function U2(t4, e3) {
      return ((4278124286 & (t4 ^ e3)) >>> 1) + (t4 & e3) >>> 0;
    }
    function z2(t4) {
      return 0 <= t4 && 256 > t4 ? t4 : 0 > t4 ? 0 : 255 < t4 ? 255 : void 0;
    }
    function H2(t4, e3) {
      return z2(t4 + (t4 - e3 + 0.5 >> 1));
    }
    function W2(t4, e3, n3) {
      return Math.abs(e3 - n3) - Math.abs(t4 - n3);
    }
    function V2(t4, e3, n3, r5, i3, a3, o3) {
      for (r5 = a3[o3 - 1], n3 = 0; n3 < i3; ++n3)
        a3[o3 + n3] = r5 = R2(t4[e3 + n3], r5);
    }
    function G2(t4, e3, n3, r5, i3) {
      var a3;
      for (a3 = 0; a3 < n3; ++a3) {
        var o3 = t4[e3 + a3], s3 = o3 >> 8 & 255, u4 = 16711935 & (u4 = (u4 = 16711935 & o3) + ((s3 << 16) + s3));
        r5[i3 + a3] = (4278255360 & o3) + u4 >>> 0;
      }
    }
    function Y2(t4, e3) {
      e3.jd = t4 >> 0 & 255, e3.hd = t4 >> 8 & 255, e3.ud = t4 >> 16 & 255;
    }
    function J2(t4, e3, n3, r5, i3, a3) {
      var o3;
      for (o3 = 0; o3 < r5; ++o3) {
        var s3 = e3[n3 + o3], u4 = s3 >>> 8, c4 = s3, h4 = 255 & (h4 = (h4 = s3 >>> 16) + ((t4.jd << 24 >> 24) * (u4 << 24 >> 24) >>> 5));
        c4 = 255 & (c4 = (c4 = c4 + ((t4.hd << 24 >> 24) * (u4 << 24 >> 24) >>> 5)) + ((t4.ud << 24 >> 24) * (h4 << 24 >> 24) >>> 5));
        i3[a3 + o3] = (4278255360 & s3) + (h4 << 16) + c4;
      }
    }
    function X2(e3, n3, r5, i3, a3) {
      t3[n3] = function(t4, e4, n4, r6, o3, s3, u4, c4, h4) {
        for (r6 = u4; r6 < c4; ++r6)
          for (u4 = 0; u4 < h4; ++u4)
            o3[s3++] = a3(n4[i3(t4[e4++])]);
      }, t3[e3] = function(e4, n4, o3, s3, u4, c4, h4) {
        var l4 = 8 >> e4.b, f4 = e4.Ea, d4 = e4.K[0], p4 = e4.w;
        if (8 > l4)
          for (e4 = (1 << e4.b) - 1, p4 = (1 << l4) - 1; n4 < o3; ++n4) {
            var g4, m4 = 0;
            for (g4 = 0; g4 < f4; ++g4)
              g4 & e4 || (m4 = i3(s3[u4++])), c4[h4++] = a3(d4[m4 & p4]), m4 >>= l4;
          }
        else
          t3["VP8LMapColor" + r5](s3, u4, d4, p4, c4, h4, n4, o3, f4);
      };
    }
    function K2(t4, e3, n3, r5, i3) {
      for (n3 = e3 + n3; e3 < n3; ) {
        var a3 = t4[e3++];
        r5[i3++] = a3 >> 16 & 255, r5[i3++] = a3 >> 8 & 255, r5[i3++] = a3 >> 0 & 255;
      }
    }
    function Z2(t4, e3, n3, r5, i3) {
      for (n3 = e3 + n3; e3 < n3; ) {
        var a3 = t4[e3++];
        r5[i3++] = a3 >> 16 & 255, r5[i3++] = a3 >> 8 & 255, r5[i3++] = a3 >> 0 & 255, r5[i3++] = a3 >> 24 & 255;
      }
    }
    function $2(t4, e3, n3, r5, i3) {
      for (n3 = e3 + n3; e3 < n3; ) {
        var a3 = (o3 = t4[e3++]) >> 16 & 240 | o3 >> 12 & 15, o3 = o3 >> 0 & 240 | o3 >> 28 & 15;
        r5[i3++] = a3, r5[i3++] = o3;
      }
    }
    function Q2(t4, e3, n3, r5, i3) {
      for (n3 = e3 + n3; e3 < n3; ) {
        var a3 = (o3 = t4[e3++]) >> 16 & 248 | o3 >> 13 & 7, o3 = o3 >> 5 & 224 | o3 >> 3 & 31;
        r5[i3++] = a3, r5[i3++] = o3;
      }
    }
    function tt2(t4, e3, n3, r5, i3) {
      for (n3 = e3 + n3; e3 < n3; ) {
        var a3 = t4[e3++];
        r5[i3++] = a3 >> 0 & 255, r5[i3++] = a3 >> 8 & 255, r5[i3++] = a3 >> 16 & 255;
      }
    }
    function et2(t4, e3, n3, i3, a3, o3) {
      if (0 == o3)
        for (n3 = e3 + n3; e3 < n3; )
          F2(i3, ((o3 = t4[e3++])[0] >> 24 | o3[1] >> 8 & 65280 | o3[2] << 8 & 16711680 | o3[3] << 24) >>> 0), a3 += 32;
      else
        r4(i3, a3, t4, e3, n3);
    }
    function nt2(e3, n3) {
      t3[n3][0] = t3[e3 + "0"], t3[n3][1] = t3[e3 + "1"], t3[n3][2] = t3[e3 + "2"], t3[n3][3] = t3[e3 + "3"], t3[n3][4] = t3[e3 + "4"], t3[n3][5] = t3[e3 + "5"], t3[n3][6] = t3[e3 + "6"], t3[n3][7] = t3[e3 + "7"], t3[n3][8] = t3[e3 + "8"], t3[n3][9] = t3[e3 + "9"], t3[n3][10] = t3[e3 + "10"], t3[n3][11] = t3[e3 + "11"], t3[n3][12] = t3[e3 + "12"], t3[n3][13] = t3[e3 + "13"], t3[n3][14] = t3[e3 + "0"], t3[n3][15] = t3[e3 + "0"];
    }
    function rt2(t4) {
      return t4 == Hr || t4 == Wr || t4 == Vr || t4 == Gr;
    }
    function it2() {
      this.eb = [], this.size = this.A = this.fb = 0;
    }
    function at3() {
      this.y = [], this.f = [], this.ea = [], this.F = [], this.Tc = this.Ed = this.Cd = this.Fd = this.lb = this.Db = this.Ab = this.fa = this.J = this.W = this.N = this.O = 0;
    }
    function ot2() {
      this.Rd = this.height = this.width = this.S = 0, this.f = {}, this.f.RGBA = new it2(), this.f.kb = new at3(), this.sd = null;
    }
    function st2() {
      this.width = [0], this.height = [0], this.Pd = [0], this.Qd = [0], this.format = [0];
    }
    function ut2() {
      this.Id = this.fd = this.Md = this.hb = this.ib = this.da = this.bd = this.cd = this.j = this.v = this.Da = this.Sd = this.ob = 0;
    }
    function ct2(t4) {
      return alert("todo:WebPSamplerProcessPlane"), t4.T;
    }
    function ht2(t4, e3) {
      var n3 = t4.T, i3 = e3.ba.f.RGBA, a3 = i3.eb, o3 = i3.fb + t4.ka * i3.A, s3 = vi[e3.ba.S], u4 = t4.y, c4 = t4.O, h4 = t4.f, l4 = t4.N, f4 = t4.ea, d4 = t4.W, p4 = e3.cc, g4 = e3.dc, m4 = e3.Mc, v4 = e3.Nc, b4 = t4.ka, y4 = t4.ka + t4.T, w4 = t4.U, N4 = w4 + 1 >> 1;
      for (0 == b4 ? s3(u4, c4, null, null, h4, l4, f4, d4, h4, l4, f4, d4, a3, o3, null, null, w4) : (s3(e3.ec, e3.fc, u4, c4, p4, g4, m4, v4, h4, l4, f4, d4, a3, o3 - i3.A, a3, o3, w4), ++n3); b4 + 2 < y4; b4 += 2)
        p4 = h4, g4 = l4, m4 = f4, v4 = d4, l4 += t4.Rc, d4 += t4.Rc, o3 += 2 * i3.A, s3(u4, (c4 += 2 * t4.fa) - t4.fa, u4, c4, p4, g4, m4, v4, h4, l4, f4, d4, a3, o3 - i3.A, a3, o3, w4);
      return c4 += t4.fa, t4.j + y4 < t4.o ? (r4(e3.ec, e3.fc, u4, c4, w4), r4(e3.cc, e3.dc, h4, l4, N4), r4(e3.Mc, e3.Nc, f4, d4, N4), n3--) : 1 & y4 || s3(u4, c4, null, null, h4, l4, f4, d4, h4, l4, f4, d4, a3, o3 + i3.A, null, null, w4), n3;
    }
    function lt2(t4, n3, r5) {
      var i3 = t4.F, a3 = [t4.J];
      if (null != i3) {
        var o3 = t4.U, s3 = n3.ba.S, u4 = s3 == Dr || s3 == Vr;
        n3 = n3.ba.f.RGBA;
        var c4 = [0], h4 = t4.ka;
        c4[0] = t4.T, t4.Kb && (0 == h4 ? --c4[0] : (--h4, a3[0] -= t4.width), t4.j + t4.ka + t4.T == t4.o && (c4[0] = t4.o - t4.j - h4));
        var l4 = n3.eb;
        h4 = n3.fb + h4 * n3.A;
        t4 = _r(i3, a3[0], t4.width, o3, c4, l4, h4 + (u4 ? 0 : 3), n3.A), e2(r5 == c4), t4 && rt2(s3) && xr(l4, h4, u4, o3, c4, n3.A);
      }
      return 0;
    }
    function ft2(t4) {
      var e3 = t4.ma, n3 = e3.ba.S, r5 = 11 > n3, i3 = n3 == qr || n3 == Tr || n3 == Dr || n3 == Ur || 12 == n3 || rt2(n3);
      if (e3.memory = null, e3.Ib = null, e3.Jb = null, e3.Nd = null, !En(e3.Oa, t4, i3 ? 11 : 12))
        return 0;
      if (i3 && rt2(n3) && yn(), t4.da)
        alert("todo:use_scaling");
      else {
        if (r5) {
          if (e3.Ib = ct2, t4.Kb) {
            if (n3 = t4.U + 1 >> 1, e3.memory = a2(t4.U + 2 * n3), null == e3.memory)
              return 0;
            e3.ec = e3.memory, e3.fc = 0, e3.cc = e3.ec, e3.dc = e3.fc + t4.U, e3.Mc = e3.cc, e3.Nc = e3.dc + n3, e3.Ib = ht2, yn();
          }
        } else
          alert("todo:EmitYUV");
        i3 && (e3.Jb = lt2, r5 && vn());
      }
      if (r5 && !Ci) {
        for (t4 = 0; 256 > t4; ++t4)
          ji[t4] = 89858 * (t4 - 128) + Si >> _i, Mi[t4] = -22014 * (t4 - 128) + Si, Oi[t4] = -45773 * (t4 - 128), Bi[t4] = 113618 * (t4 - 128) + Si >> _i;
        for (t4 = Pi; t4 < ki; ++t4)
          e3 = 76283 * (t4 - 16) + Si >> _i, Ei[t4 - Pi] = Vt2(e3, 255), qi[t4 - Pi] = Vt2(e3 + 8 >> 4, 15);
        Ci = 1;
      }
      return 1;
    }
    function dt2(t4) {
      var n3 = t4.ma, r5 = t4.U, i3 = t4.T;
      return e2(!(1 & t4.ka)), 0 >= r5 || 0 >= i3 ? 0 : (r5 = n3.Ib(t4, n3), null != n3.Jb && n3.Jb(t4, n3, r5), n3.Dc += r5, 1);
    }
    function pt2(t4) {
      t4.ma.memory = null;
    }
    function gt2(t4, e3, n3, r5) {
      return 47 != y3(t4, 8) ? 0 : (e3[0] = y3(t4, 14) + 1, n3[0] = y3(t4, 14) + 1, r5[0] = y3(t4, 1), 0 != y3(t4, 3) ? 0 : !t4.h);
    }
    function mt2(t4, e3) {
      if (4 > t4)
        return t4 + 1;
      var n3 = t4 - 2 >> 1;
      return (2 + (1 & t4) << n3) + y3(e3, n3) + 1;
    }
    function vt2(t4, e3) {
      return 120 < e3 ? e3 - 120 : 1 <= (n3 = ((n3 = $r[e3 - 1]) >> 4) * t4 + (8 - (15 & n3))) ? n3 : 1;
      var n3;
    }
    function bt2(t4, e3, n3) {
      var r5 = L3(n3), i3 = t4[e3 += 255 & r5].g - 8;
      return 0 < i3 && (A2(n3, n3.u + 8), r5 = L3(n3), e3 += t4[e3].value, e3 += r5 & (1 << i3) - 1), A2(n3, n3.u + t4[e3].g), t4[e3].value;
    }
    function yt2(t4, n3, r5) {
      return r5.g += t4.g, r5.value += t4.value << n3 >>> 0, e2(8 >= r5.g), t4.g;
    }
    function wt2(t4, n3, r5) {
      var i3 = t4.xc;
      return e2((n3 = 0 == i3 ? 0 : t4.vc[t4.md * (r5 >> i3) + (n3 >> i3)]) < t4.Wb), t4.Ya[n3];
    }
    function Nt2(t4, n3, i3, a3) {
      var o3 = t4.ab, s3 = t4.c * n3, u4 = t4.C;
      n3 = u4 + n3;
      var c4 = i3, h4 = a3;
      for (a3 = t4.Ta, i3 = t4.Ua; 0 < o3--; ) {
        var l4 = t4.gc[o3], f4 = u4, d4 = n3, p4 = c4, g4 = h4, m4 = (h4 = a3, c4 = i3, l4.Ea);
        switch (e2(f4 < d4), e2(d4 <= l4.nc), l4.hc) {
          case 2:
            Yn(p4, g4, (d4 - f4) * m4, h4, c4);
            break;
          case 0:
            var v4 = f4, b4 = d4, y4 = h4, w4 = c4, N4 = (S3 = l4).Ea;
            0 == v4 && (Vn(p4, g4, null, null, 1, y4, w4), V2(p4, g4 + 1, 0, 0, N4 - 1, y4, w4 + 1), g4 += N4, w4 += N4, ++v4);
            for (var L4 = 1 << S3.b, x3 = L4 - 1, A3 = q2(N4, S3.b), _3 = S3.K, S3 = S3.w + (v4 >> S3.b) * A3; v4 < b4; ) {
              var P3 = _3, k3 = S3, F3 = 1;
              for (Gn(p4, g4, y4, w4 - N4, 1, y4, w4); F3 < N4; ) {
                var I3 = (F3 & ~x3) + L4;
                I3 > N4 && (I3 = N4), (0, $n[P3[k3++] >> 8 & 15])(p4, g4 + +F3, y4, w4 + F3 - N4, I3 - F3, y4, w4 + F3), F3 = I3;
              }
              g4 += N4, w4 += N4, ++v4 & x3 || (S3 += A3);
            }
            d4 != l4.nc && r4(h4, c4 - m4, h4, c4 + (d4 - f4 - 1) * m4, m4);
            break;
          case 1:
            for (m4 = p4, b4 = g4, N4 = (p4 = l4.Ea) - (w4 = p4 & ~(y4 = (g4 = 1 << l4.b) - 1)), v4 = q2(p4, l4.b), L4 = l4.K, l4 = l4.w + (f4 >> l4.b) * v4; f4 < d4; ) {
              for (x3 = L4, A3 = l4, _3 = new D2(), S3 = b4 + w4, P3 = b4 + p4; b4 < S3; )
                Y2(x3[A3++], _3), Qn(_3, m4, b4, g4, h4, c4), b4 += g4, c4 += g4;
              b4 < P3 && (Y2(x3[A3++], _3), Qn(_3, m4, b4, N4, h4, c4), b4 += N4, c4 += N4), ++f4 & y4 || (l4 += v4);
            }
            break;
          case 3:
            if (p4 == h4 && g4 == c4 && 0 < l4.b) {
              for (b4 = h4, p4 = m4 = c4 + (d4 - f4) * m4 - (w4 = (d4 - f4) * q2(l4.Ea, l4.b)), g4 = h4, y4 = c4, v4 = [], w4 = (N4 = w4) - 1; 0 <= w4; --w4)
                v4[w4] = g4[y4 + w4];
              for (w4 = N4 - 1; 0 <= w4; --w4)
                b4[p4 + w4] = v4[w4];
              Jn(l4, f4, d4, h4, m4, h4, c4);
            } else
              Jn(l4, f4, d4, p4, g4, h4, c4);
        }
        c4 = a3, h4 = i3;
      }
      h4 != i3 && r4(a3, i3, c4, h4, s3);
    }
    function Lt2(t4, n3) {
      var r5 = t4.V, i3 = t4.Ba + t4.c * t4.C, a3 = n3 - t4.C;
      if (e2(n3 <= t4.l.o), e2(16 >= a3), 0 < a3) {
        var o3 = t4.l, s3 = t4.Ta, u4 = t4.Ua, c4 = o3.width;
        if (Nt2(t4, a3, r5, i3), a3 = u4 = [u4], e2((r5 = t4.C) < (i3 = n3)), e2(o3.v < o3.va), i3 > o3.o && (i3 = o3.o), r5 < o3.j) {
          var h4 = o3.j - r5;
          r5 = o3.j;
          a3[0] += h4 * c4;
        }
        if (r5 >= i3 ? r5 = 0 : (a3[0] += 4 * o3.v, o3.ka = r5 - o3.j, o3.U = o3.va - o3.v, o3.T = i3 - r5, r5 = 1), r5) {
          if (u4 = u4[0], 11 > (r5 = t4.ca).S) {
            var l4 = r5.f.RGBA, f4 = (i3 = r5.S, a3 = o3.U, o3 = o3.T, h4 = l4.eb, l4.A), d4 = o3;
            for (l4 = l4.fb + t4.Ma * l4.A; 0 < d4--; ) {
              var p4 = s3, g4 = u4, m4 = a3, v4 = h4, b4 = l4;
              switch (i3) {
                case Er:
                  tr(p4, g4, m4, v4, b4);
                  break;
                case qr:
                  er(p4, g4, m4, v4, b4);
                  break;
                case Hr:
                  er(p4, g4, m4, v4, b4), xr(v4, b4, 0, m4, 1, 0);
                  break;
                case Rr:
                  ir(p4, g4, m4, v4, b4);
                  break;
                case Tr:
                  et2(p4, g4, m4, v4, b4, 1);
                  break;
                case Wr:
                  et2(p4, g4, m4, v4, b4, 1), xr(v4, b4, 0, m4, 1, 0);
                  break;
                case Dr:
                  et2(p4, g4, m4, v4, b4, 0);
                  break;
                case Vr:
                  et2(p4, g4, m4, v4, b4, 0), xr(v4, b4, 1, m4, 1, 0);
                  break;
                case Ur:
                  nr(p4, g4, m4, v4, b4);
                  break;
                case Gr:
                  nr(p4, g4, m4, v4, b4), Ar(v4, b4, m4, 1, 0);
                  break;
                case zr:
                  rr(p4, g4, m4, v4, b4);
                  break;
                default:
                  e2(0);
              }
              u4 += c4, l4 += f4;
            }
            t4.Ma += o3;
          } else
            alert("todo:EmitRescaledRowsYUVA");
          e2(t4.Ma <= r5.height);
        }
      }
      t4.C = n3, e2(t4.C <= t4.i);
    }
    function xt2(t4) {
      var e3;
      if (0 < t4.ua)
        return 0;
      for (e3 = 0; e3 < t4.Wb; ++e3) {
        var n3 = t4.Ya[e3].G, r5 = t4.Ya[e3].H;
        if (0 < n3[1][r5[1] + 0].g || 0 < n3[2][r5[2] + 0].g || 0 < n3[3][r5[3] + 0].g)
          return 0;
      }
      return 1;
    }
    function At2(t4, n3, r5, i3, a3, o3) {
      if (0 != t4.Z) {
        var s3 = t4.qd, u4 = t4.rd;
        for (e2(null != mi[t4.Z]); n3 < r5; ++n3)
          mi[t4.Z](s3, u4, i3, a3, i3, a3, o3), s3 = i3, u4 = a3, a3 += o3;
        t4.qd = s3, t4.rd = u4;
      }
    }
    function _t2(t4, n3) {
      var r5 = t4.l.ma, i3 = 0 == r5.Z || 1 == r5.Z ? t4.l.j : t4.C;
      i3 = t4.C < i3 ? i3 : t4.C;
      if (e2(n3 <= t4.l.o), n3 > i3) {
        var a3 = t4.l.width, o3 = r5.ca, s3 = r5.tb + a3 * i3, u4 = t4.V, c4 = t4.Ba + t4.c * i3, h4 = t4.gc;
        e2(1 == t4.ab), e2(3 == h4[0].hc), Kn(h4[0], i3, n3, u4, c4, o3, s3), At2(r5, i3, n3, o3, s3, a3);
      }
      t4.C = t4.Ma = n3;
    }
    function St2(t4, n3, r5, i3, a3, o3, s3) {
      var u4 = t4.$ / i3, c4 = t4.$ % i3, h4 = t4.m, l4 = t4.s, f4 = r5 + t4.$, d4 = f4;
      a3 = r5 + i3 * a3;
      var p4 = r5 + i3 * o3, g4 = 280 + l4.ua, m4 = t4.Pb ? u4 : 16777216, v4 = 0 < l4.ua ? l4.Wa : null, b4 = l4.wc, y4 = f4 < p4 ? wt2(l4, c4, u4) : null;
      e2(t4.C < o3), e2(p4 <= a3);
      var w4 = false;
      t:
        for (; ; ) {
          for (; w4 || f4 < p4; ) {
            var N4 = 0;
            if (u4 >= m4) {
              var S3 = f4 - r5;
              e2((m4 = t4).Pb), m4.wd = m4.m, m4.xd = S3, 0 < m4.s.ua && O2(m4.s.Wa, m4.s.vb), m4 = u4 + ti;
            }
            if (c4 & b4 || (y4 = wt2(l4, c4, u4)), e2(null != y4), y4.Qb && (n3[f4] = y4.qb, w4 = true), !w4)
              if (_2(h4), y4.jc) {
                N4 = h4, S3 = n3;
                var P3 = f4, k3 = y4.pd[L3(N4) & Tn - 1];
                e2(y4.jc), 256 > k3.g ? (A2(N4, N4.u + k3.g), S3[P3] = k3.value, N4 = 0) : (A2(N4, N4.u + k3.g - 256), e2(256 <= k3.value), N4 = k3.value), 0 == N4 && (w4 = true);
              } else
                N4 = bt2(y4.G[0], y4.H[0], h4);
            if (h4.h)
              break;
            if (w4 || 256 > N4) {
              if (!w4)
                if (y4.nd)
                  n3[f4] = (y4.qb | N4 << 8) >>> 0;
                else {
                  if (_2(h4), w4 = bt2(y4.G[1], y4.H[1], h4), _2(h4), S3 = bt2(y4.G[2], y4.H[2], h4), P3 = bt2(y4.G[3], y4.H[3], h4), h4.h)
                    break;
                  n3[f4] = (P3 << 24 | w4 << 16 | N4 << 8 | S3) >>> 0;
                }
              if (w4 = false, ++f4, ++c4 >= i3 && (c4 = 0, ++u4, null != s3 && u4 <= o3 && !(u4 % 16) && s3(t4, u4), null != v4))
                for (; d4 < f4; )
                  N4 = n3[d4++], v4.X[(506832829 * N4 & 4294967295) >>> v4.Mb] = N4;
            } else if (280 > N4) {
              if (N4 = mt2(N4 - 256, h4), S3 = bt2(y4.G[4], y4.H[4], h4), _2(h4), S3 = vt2(i3, S3 = mt2(S3, h4)), h4.h)
                break;
              if (f4 - r5 < S3 || a3 - f4 < N4)
                break t;
              for (P3 = 0; P3 < N4; ++P3)
                n3[f4 + P3] = n3[f4 + P3 - S3];
              for (f4 += N4, c4 += N4; c4 >= i3; )
                c4 -= i3, ++u4, null != s3 && u4 <= o3 && !(u4 % 16) && s3(t4, u4);
              if (e2(f4 <= a3), c4 & b4 && (y4 = wt2(l4, c4, u4)), null != v4)
                for (; d4 < f4; )
                  N4 = n3[d4++], v4.X[(506832829 * N4 & 4294967295) >>> v4.Mb] = N4;
            } else {
              if (!(N4 < g4))
                break t;
              for (w4 = N4 - 280, e2(null != v4); d4 < f4; )
                N4 = n3[d4++], v4.X[(506832829 * N4 & 4294967295) >>> v4.Mb] = N4;
              N4 = f4, e2(!(w4 >>> (S3 = v4).Xa)), n3[N4] = S3.X[w4], w4 = true;
            }
            w4 || e2(h4.h == x2(h4));
          }
          if (t4.Pb && h4.h && f4 < a3)
            e2(t4.m.h), t4.a = 5, t4.m = t4.wd, t4.$ = t4.xd, 0 < t4.s.ua && O2(t4.s.vb, t4.s.Wa);
          else {
            if (h4.h)
              break t;
            null != s3 && s3(t4, u4 > o3 ? o3 : u4), t4.a = 0, t4.$ = f4 - r5;
          }
          return 1;
        }
      return t4.a = 3, 0;
    }
    function Pt2(t4) {
      e2(null != t4), t4.vc = null, t4.yc = null, t4.Ya = null;
      var n3 = t4.Wa;
      null != n3 && (n3.X = null), t4.vb = null, e2(null != t4);
    }
    function kt2() {
      var e3 = new sn();
      return null == e3 ? null : (e3.a = 0, e3.xb = gi, nt2("Predictor", "VP8LPredictors"), nt2("Predictor", "VP8LPredictors_C"), nt2("PredictorAdd", "VP8LPredictorsAdd"), nt2("PredictorAdd", "VP8LPredictorsAdd_C"), Yn = G2, Qn = J2, tr = K2, er = Z2, nr = $2, rr = Q2, ir = tt2, t3.VP8LMapColor32b = Xn, t3.VP8LMapColor8b = Zn, e3);
    }
    function Ft2(t4, n3, r5, s3, u4) {
      var c4 = 1, f4 = [t4], p4 = [n3], g4 = s3.m, m4 = s3.s, v4 = null, b4 = 0;
      t:
        for (; ; ) {
          if (r5)
            for (; c4 && y3(g4, 1); ) {
              var w4 = f4, N4 = p4, x3 = s3, S3 = 1, P3 = x3.m, k3 = x3.gc[x3.ab], F3 = y3(P3, 2);
              if (x3.Oc & 1 << F3)
                c4 = 0;
              else {
                switch (x3.Oc |= 1 << F3, k3.hc = F3, k3.Ea = w4[0], k3.nc = N4[0], k3.K = [null], ++x3.ab, e2(4 >= x3.ab), F3) {
                  case 0:
                  case 1:
                    k3.b = y3(P3, 3) + 2, S3 = Ft2(q2(k3.Ea, k3.b), q2(k3.nc, k3.b), 0, x3, k3.K), k3.K = k3.K[0];
                    break;
                  case 3:
                    var I3, C3 = y3(P3, 8) + 1, j3 = 16 < C3 ? 0 : 4 < C3 ? 1 : 2 < C3 ? 2 : 3;
                    if (w4[0] = q2(k3.Ea, j3), k3.b = j3, I3 = S3 = Ft2(C3, 1, 0, x3, k3.K)) {
                      var O3, M3 = C3, E3 = k3, T3 = 1 << (8 >> E3.b), D3 = a2(T3);
                      if (null == D3)
                        I3 = 0;
                      else {
                        var U3 = E3.K[0], z3 = E3.w;
                        for (D3[0] = E3.K[0][0], O3 = 1; O3 < 1 * M3; ++O3)
                          D3[O3] = R2(U3[z3 + O3], D3[O3 - 1]);
                        for (; O3 < 4 * T3; ++O3)
                          D3[O3] = 0;
                        E3.K[0] = null, E3.K[0] = D3, I3 = 1;
                      }
                    }
                    S3 = I3;
                    break;
                  case 2:
                    break;
                  default:
                    e2(0);
                }
                c4 = S3;
              }
            }
          if (f4 = f4[0], p4 = p4[0], c4 && y3(g4, 1) && !(c4 = 1 <= (b4 = y3(g4, 4)) && 11 >= b4)) {
            s3.a = 3;
            break t;
          }
          var H3;
          if (H3 = c4)
            e: {
              var W3, V3, G3, Y3 = s3, J3 = f4, X3 = p4, K3 = b4, Z3 = r5, $3 = Y3.m, Q3 = Y3.s, tt3 = [null], et3 = 1, nt3 = 0, rt3 = Qr[K3];
              n:
                for (; ; ) {
                  if (Z3 && y3($3, 1)) {
                    var it3 = y3($3, 3) + 2, at4 = q2(J3, it3), ot3 = q2(X3, it3), st3 = at4 * ot3;
                    if (!Ft2(at4, ot3, 0, Y3, tt3))
                      break n;
                    for (tt3 = tt3[0], Q3.xc = it3, W3 = 0; W3 < st3; ++W3) {
                      var ut3 = tt3[W3] >> 8 & 65535;
                      tt3[W3] = ut3, ut3 >= et3 && (et3 = ut3 + 1);
                    }
                  }
                  if ($3.h)
                    break n;
                  for (V3 = 0; 5 > V3; ++V3) {
                    var ct3 = Xr[V3];
                    !V3 && 0 < K3 && (ct3 += 1 << K3), nt3 < ct3 && (nt3 = ct3);
                  }
                  var ht3 = o2(et3 * rt3, l3), lt3 = et3, ft3 = o2(lt3, d3);
                  if (null == ft3)
                    var dt3 = null;
                  else
                    e2(65536 >= lt3), dt3 = ft3;
                  var pt3 = a2(nt3);
                  if (null == dt3 || null == pt3 || null == ht3) {
                    Y3.a = 1;
                    break n;
                  }
                  var gt3 = ht3;
                  for (W3 = G3 = 0; W3 < et3; ++W3) {
                    var mt3 = dt3[W3], vt3 = mt3.G, bt3 = mt3.H, wt3 = 0, Nt3 = 1, Lt3 = 0;
                    for (V3 = 0; 5 > V3; ++V3) {
                      ct3 = Xr[V3], vt3[V3] = gt3, bt3[V3] = G3, !V3 && 0 < K3 && (ct3 += 1 << K3);
                      r: {
                        var xt3, At3 = ct3, _t3 = Y3, kt3 = pt3, It3 = gt3, Ct3 = G3, jt3 = 0, Bt3 = _t3.m, Ot3 = y3(Bt3, 1);
                        if (i2(kt3, 0, 0, At3), Ot3) {
                          var Mt3 = y3(Bt3, 1) + 1, Et3 = y3(Bt3, 1), qt3 = y3(Bt3, 0 == Et3 ? 1 : 8);
                          kt3[qt3] = 1, 2 == Mt3 && (kt3[qt3 = y3(Bt3, 8)] = 1);
                          var Rt3 = 1;
                        } else {
                          var Tt3 = a2(19), Dt3 = y3(Bt3, 4) + 4;
                          if (19 < Dt3) {
                            _t3.a = 3;
                            var Ut3 = 0;
                            break r;
                          }
                          for (xt3 = 0; xt3 < Dt3; ++xt3)
                            Tt3[Zr[xt3]] = y3(Bt3, 3);
                          var zt3 = void 0, Ht3 = void 0, Wt3 = _t3, Vt3 = Tt3, Gt3 = At3, Yt3 = kt3, Jt3 = 0, Xt3 = Wt3.m, Kt3 = 8, Zt3 = o2(128, l3);
                          i:
                            for (; h3(Zt3, 0, 7, Vt3, 19); ) {
                              if (y3(Xt3, 1)) {
                                var $t3 = 2 + 2 * y3(Xt3, 3);
                                if ((zt3 = 2 + y3(Xt3, $t3)) > Gt3)
                                  break i;
                              } else
                                zt3 = Gt3;
                              for (Ht3 = 0; Ht3 < Gt3 && zt3--; ) {
                                _2(Xt3);
                                var Qt3 = Zt3[0 + (127 & L3(Xt3))];
                                A2(Xt3, Xt3.u + Qt3.g);
                                var te3 = Qt3.value;
                                if (16 > te3)
                                  Yt3[Ht3++] = te3, 0 != te3 && (Kt3 = te3);
                                else {
                                  var ee3 = 16 == te3, ne3 = te3 - 16, re3 = Jr[ne3], ie2 = y3(Xt3, Yr[ne3]) + re3;
                                  if (Ht3 + ie2 > Gt3)
                                    break i;
                                  for (var ae2 = ee3 ? Kt3 : 0; 0 < ie2--; )
                                    Yt3[Ht3++] = ae2;
                                }
                              }
                              Jt3 = 1;
                              break i;
                            }
                          Jt3 || (Wt3.a = 3), Rt3 = Jt3;
                        }
                        (Rt3 = Rt3 && !Bt3.h) && (jt3 = h3(It3, Ct3, 8, kt3, At3)), Rt3 && 0 != jt3 ? Ut3 = jt3 : (_t3.a = 3, Ut3 = 0);
                      }
                      if (0 == Ut3)
                        break n;
                      if (Nt3 && 1 == Kr[V3] && (Nt3 = 0 == gt3[G3].g), wt3 += gt3[G3].g, G3 += Ut3, 3 >= V3) {
                        var oe2, se2 = pt3[0];
                        for (oe2 = 1; oe2 < ct3; ++oe2)
                          pt3[oe2] > se2 && (se2 = pt3[oe2]);
                        Lt3 += se2;
                      }
                    }
                    if (mt3.nd = Nt3, mt3.Qb = 0, Nt3 && (mt3.qb = (vt3[3][bt3[3] + 0].value << 24 | vt3[1][bt3[1] + 0].value << 16 | vt3[2][bt3[2] + 0].value) >>> 0, 0 == wt3 && 256 > vt3[0][bt3[0] + 0].value && (mt3.Qb = 1, mt3.qb += vt3[0][bt3[0] + 0].value << 8)), mt3.jc = !mt3.Qb && 6 > Lt3, mt3.jc) {
                      var ue2, ce2 = mt3;
                      for (ue2 = 0; ue2 < Tn; ++ue2) {
                        var he2 = ue2, le2 = ce2.pd[he2], fe2 = ce2.G[0][ce2.H[0] + he2];
                        256 <= fe2.value ? (le2.g = fe2.g + 256, le2.value = fe2.value) : (le2.g = 0, le2.value = 0, he2 >>= yt2(fe2, 8, le2), he2 >>= yt2(ce2.G[1][ce2.H[1] + he2], 16, le2), he2 >>= yt2(ce2.G[2][ce2.H[2] + he2], 0, le2), yt2(ce2.G[3][ce2.H[3] + he2], 24, le2));
                      }
                    }
                  }
                  Q3.vc = tt3, Q3.Wb = et3, Q3.Ya = dt3, Q3.yc = ht3, H3 = 1;
                  break e;
                }
              H3 = 0;
            }
          if (!(c4 = H3)) {
            s3.a = 3;
            break t;
          }
          if (0 < b4) {
            if (m4.ua = 1 << b4, !B2(m4.Wa, b4)) {
              s3.a = 1, c4 = 0;
              break t;
            }
          } else
            m4.ua = 0;
          var de2 = s3, pe2 = f4, ge2 = p4, me2 = de2.s, ve2 = me2.xc;
          if (de2.c = pe2, de2.i = ge2, me2.md = q2(pe2, ve2), me2.wc = 0 == ve2 ? -1 : (1 << ve2) - 1, r5) {
            s3.xb = pi;
            break t;
          }
          if (null == (v4 = a2(f4 * p4))) {
            s3.a = 1, c4 = 0;
            break t;
          }
          c4 = (c4 = St2(s3, v4, 0, f4, p4, p4, null)) && !g4.h;
          break t;
        }
      return c4 ? (null != u4 ? u4[0] = v4 : (e2(null == v4), e2(r5)), s3.$ = 0, r5 || Pt2(m4)) : Pt2(m4), c4;
    }
    function It2(t4, n3) {
      var r5 = t4.c * t4.i, i3 = r5 + n3 + 16 * n3;
      return e2(t4.c <= n3), t4.V = a2(i3), null == t4.V ? (t4.Ta = null, t4.Ua = 0, t4.a = 1, 0) : (t4.Ta = t4.V, t4.Ua = t4.Ba + r5 + n3, 1);
    }
    function Ct2(t4, n3) {
      var r5 = t4.C, i3 = n3 - r5, a3 = t4.V, o3 = t4.Ba + t4.c * r5;
      for (e2(n3 <= t4.l.o); 0 < i3; ) {
        var s3 = 16 < i3 ? 16 : i3, u4 = t4.l.ma, c4 = t4.l.width, h4 = c4 * s3, l4 = u4.ca, f4 = u4.tb + c4 * r5, d4 = t4.Ta, p4 = t4.Ua;
        Nt2(t4, s3, a3, o3), Sr(d4, p4, l4, f4, h4), At2(u4, r5, r5 + s3, l4, f4, c4), i3 -= s3, a3 += s3 * t4.c, r5 += s3;
      }
      e2(r5 == n3), t4.C = t4.Ma = n3;
    }
    function jt2() {
      this.ub = this.yd = this.td = this.Rb = 0;
    }
    function Bt2() {
      this.Kd = this.Ld = this.Ud = this.Td = this.i = this.c = 0;
    }
    function Ot2() {
      this.Fb = this.Bb = this.Cb = 0, this.Zb = a2(4), this.Lb = a2(4);
    }
    function Mt2() {
      this.Yb = function() {
        var t4 = [];
        return function t5(e3, n3, r5) {
          for (var i3 = r5[n3], a3 = 0; a3 < i3 && (e3.push(r5.length > n3 + 1 ? [] : 0), !(r5.length < n3 + 1)); a3++)
            t5(e3[a3], n3 + 1, r5);
        }(t4, 0, [3, 11]), t4;
      }();
    }
    function Et2() {
      this.jb = a2(3), this.Wc = s2([4, 8], Mt2), this.Xc = s2([4, 17], Mt2);
    }
    function qt2() {
      this.Pc = this.wb = this.Tb = this.zd = 0, this.vd = new a2(4), this.od = new a2(4);
    }
    function Rt2() {
      this.ld = this.La = this.dd = this.tc = 0;
    }
    function Tt2() {
      this.Na = this.la = 0;
    }
    function Dt2() {
      this.Sc = [0, 0], this.Eb = [0, 0], this.Qc = [0, 0], this.ia = this.lc = 0;
    }
    function Ut2() {
      this.ad = a2(384), this.Za = 0, this.Ob = a2(16), this.$b = this.Ad = this.ia = this.Gc = this.Hc = this.Dd = 0;
    }
    function zt2() {
      this.uc = this.M = this.Nb = 0, this.wa = Array(new Rt2()), this.Y = 0, this.ya = Array(new Ut2()), this.aa = 0, this.l = new Gt2();
    }
    function Ht2() {
      this.y = a2(16), this.f = a2(8), this.ea = a2(8);
    }
    function Wt2() {
      this.cb = this.a = 0, this.sc = "", this.m = new w3(), this.Od = new jt2(), this.Kc = new Bt2(), this.ed = new qt2(), this.Qa = new Ot2(), this.Ic = this.$c = this.Aa = 0, this.D = new zt2(), this.Xb = this.Va = this.Hb = this.zb = this.yb = this.Ub = this.za = 0, this.Jc = o2(8, w3), this.ia = 0, this.pb = o2(4, Dt2), this.Pa = new Et2(), this.Bd = this.kc = 0, this.Ac = [], this.Bc = 0, this.zc = [0, 0, 0, 0], this.Gd = Array(new Ht2()), this.Hd = 0, this.rb = Array(new Tt2()), this.sb = 0, this.wa = Array(new Rt2()), this.Y = 0, this.oc = [], this.pc = 0, this.sa = [], this.ta = 0, this.qa = [], this.ra = 0, this.Ha = [], this.B = this.R = this.Ia = 0, this.Ec = [], this.M = this.ja = this.Vb = this.Fc = 0, this.ya = Array(new Ut2()), this.L = this.aa = 0, this.gd = s2([4, 2], Rt2), this.ga = null, this.Fa = [], this.Cc = this.qc = this.P = 0, this.Gb = [], this.Uc = 0, this.mb = [], this.nb = 0, this.rc = [], this.Ga = this.Vc = 0;
    }
    function Vt2(t4, e3) {
      return 0 > t4 ? 0 : t4 > e3 ? e3 : t4;
    }
    function Gt2() {
      this.T = this.U = this.ka = this.height = this.width = 0, this.y = [], this.f = [], this.ea = [], this.Rc = this.fa = this.W = this.N = this.O = 0, this.ma = "void", this.put = "VP8IoPutHook", this.ac = "VP8IoSetupHook", this.bc = "VP8IoTeardownHook", this.ha = this.Kb = 0, this.data = [], this.hb = this.ib = this.da = this.o = this.j = this.va = this.v = this.Da = this.ob = this.w = 0, this.F = [], this.J = 0;
    }
    function Yt2() {
      var t4 = new Wt2();
      return null != t4 && (t4.a = 0, t4.sc = "OK", t4.cb = 0, t4.Xb = 0, ri || (ri = Zt2)), t4;
    }
    function Jt2(t4, e3, n3) {
      return 0 == t4.a && (t4.a = e3, t4.sc = n3, t4.cb = 0), 0;
    }
    function Xt2(t4, e3, n3) {
      return 3 <= n3 && 157 == t4[e3 + 0] && 1 == t4[e3 + 1] && 42 == t4[e3 + 2];
    }
    function Kt2(t4, n3) {
      if (null == t4)
        return 0;
      if (t4.a = 0, t4.sc = "OK", null == n3)
        return Jt2(t4, 2, "null VP8Io passed to VP8GetHeaders()");
      var r5 = n3.data, a3 = n3.w, o3 = n3.ha;
      if (4 > o3)
        return Jt2(t4, 7, "Truncated header.");
      var s3 = r5[a3 + 0] | r5[a3 + 1] << 8 | r5[a3 + 2] << 16, u4 = t4.Od;
      if (u4.Rb = !(1 & s3), u4.td = s3 >> 1 & 7, u4.yd = s3 >> 4 & 1, u4.ub = s3 >> 5, 3 < u4.td)
        return Jt2(t4, 3, "Incorrect keyframe parameters.");
      if (!u4.yd)
        return Jt2(t4, 4, "Frame not displayable.");
      a3 += 3, o3 -= 3;
      var c4 = t4.Kc;
      if (u4.Rb) {
        if (7 > o3)
          return Jt2(t4, 7, "cannot parse picture header");
        if (!Xt2(r5, a3, o3))
          return Jt2(t4, 3, "Bad code word");
        c4.c = 16383 & (r5[a3 + 4] << 8 | r5[a3 + 3]), c4.Td = r5[a3 + 4] >> 6, c4.i = 16383 & (r5[a3 + 6] << 8 | r5[a3 + 5]), c4.Ud = r5[a3 + 6] >> 6, a3 += 7, o3 -= 7, t4.za = c4.c + 15 >> 4, t4.Ub = c4.i + 15 >> 4, n3.width = c4.c, n3.height = c4.i, n3.Da = 0, n3.j = 0, n3.v = 0, n3.va = n3.width, n3.o = n3.height, n3.da = 0, n3.ib = n3.width, n3.hb = n3.height, n3.U = n3.width, n3.T = n3.height, i2((s3 = t4.Pa).jb, 0, 255, s3.jb.length), e2(null != (s3 = t4.Qa)), s3.Cb = 0, s3.Bb = 0, s3.Fb = 1, i2(s3.Zb, 0, 0, s3.Zb.length), i2(s3.Lb, 0, 0, s3.Lb);
      }
      if (u4.ub > o3)
        return Jt2(t4, 7, "bad partition length");
      p3(s3 = t4.m, r5, a3, u4.ub), a3 += u4.ub, o3 -= u4.ub, u4.Rb && (c4.Ld = P2(s3), c4.Kd = P2(s3)), c4 = t4.Qa;
      var h4, l4 = t4.Pa;
      if (e2(null != s3), e2(null != c4), c4.Cb = P2(s3), c4.Cb) {
        if (c4.Bb = P2(s3), P2(s3)) {
          for (c4.Fb = P2(s3), h4 = 0; 4 > h4; ++h4)
            c4.Zb[h4] = P2(s3) ? m3(s3, 7) : 0;
          for (h4 = 0; 4 > h4; ++h4)
            c4.Lb[h4] = P2(s3) ? m3(s3, 6) : 0;
        }
        if (c4.Bb)
          for (h4 = 0; 3 > h4; ++h4)
            l4.jb[h4] = P2(s3) ? g3(s3, 8) : 255;
      } else
        c4.Bb = 0;
      if (s3.Ka)
        return Jt2(t4, 3, "cannot parse segment header");
      if ((c4 = t4.ed).zd = P2(s3), c4.Tb = g3(s3, 6), c4.wb = g3(s3, 3), c4.Pc = P2(s3), c4.Pc && P2(s3)) {
        for (l4 = 0; 4 > l4; ++l4)
          P2(s3) && (c4.vd[l4] = m3(s3, 6));
        for (l4 = 0; 4 > l4; ++l4)
          P2(s3) && (c4.od[l4] = m3(s3, 6));
      }
      if (t4.L = 0 == c4.Tb ? 0 : c4.zd ? 1 : 2, s3.Ka)
        return Jt2(t4, 3, "cannot parse filter header");
      var f4 = o3;
      if (o3 = h4 = a3, a3 = h4 + f4, c4 = f4, t4.Xb = (1 << g3(t4.m, 2)) - 1, f4 < 3 * (l4 = t4.Xb))
        r5 = 7;
      else {
        for (h4 += 3 * l4, c4 -= 3 * l4, f4 = 0; f4 < l4; ++f4) {
          var d4 = r5[o3 + 0] | r5[o3 + 1] << 8 | r5[o3 + 2] << 16;
          d4 > c4 && (d4 = c4), p3(t4.Jc[+f4], r5, h4, d4), h4 += d4, c4 -= d4, o3 += 3;
        }
        p3(t4.Jc[+l4], r5, h4, c4), r5 = h4 < a3 ? 0 : 5;
      }
      if (0 != r5)
        return Jt2(t4, r5, "cannot parse partitions");
      for (r5 = g3(h4 = t4.m, 7), o3 = P2(h4) ? m3(h4, 4) : 0, a3 = P2(h4) ? m3(h4, 4) : 0, c4 = P2(h4) ? m3(h4, 4) : 0, l4 = P2(h4) ? m3(h4, 4) : 0, h4 = P2(h4) ? m3(h4, 4) : 0, f4 = t4.Qa, d4 = 0; 4 > d4; ++d4) {
        if (f4.Cb) {
          var v4 = f4.Zb[d4];
          f4.Fb || (v4 += r5);
        } else {
          if (0 < d4) {
            t4.pb[d4] = t4.pb[0];
            continue;
          }
          v4 = r5;
        }
        var b4 = t4.pb[d4];
        b4.Sc[0] = ei[Vt2(v4 + o3, 127)], b4.Sc[1] = ni[Vt2(v4 + 0, 127)], b4.Eb[0] = 2 * ei[Vt2(v4 + a3, 127)], b4.Eb[1] = 101581 * ni[Vt2(v4 + c4, 127)] >> 16, 8 > b4.Eb[1] && (b4.Eb[1] = 8), b4.Qc[0] = ei[Vt2(v4 + l4, 117)], b4.Qc[1] = ni[Vt2(v4 + h4, 127)], b4.lc = v4 + h4;
      }
      if (!u4.Rb)
        return Jt2(t4, 4, "Not a key frame.");
      for (P2(s3), u4 = t4.Pa, r5 = 0; 4 > r5; ++r5) {
        for (o3 = 0; 8 > o3; ++o3)
          for (a3 = 0; 3 > a3; ++a3)
            for (c4 = 0; 11 > c4; ++c4)
              l4 = k2(s3, ci[r5][o3][a3][c4]) ? g3(s3, 8) : si[r5][o3][a3][c4], u4.Wc[r5][o3].Yb[a3][c4] = l4;
        for (o3 = 0; 17 > o3; ++o3)
          u4.Xc[r5][o3] = u4.Wc[r5][hi[o3]];
      }
      return t4.kc = P2(s3), t4.kc && (t4.Bd = g3(s3, 8)), t4.cb = 1;
    }
    function Zt2(t4, e3, n3, r5, i3, a3, o3) {
      var s3 = e3[i3].Yb[n3];
      for (n3 = 0; 16 > i3; ++i3) {
        if (!k2(t4, s3[n3 + 0]))
          return i3;
        for (; !k2(t4, s3[n3 + 1]); )
          if (s3 = e3[++i3].Yb[0], n3 = 0, 16 == i3)
            return 16;
        var u4 = e3[i3 + 1].Yb;
        if (k2(t4, s3[n3 + 2])) {
          var c4 = t4, h4 = 0;
          if (k2(c4, (f4 = s3)[(l4 = n3) + 3]))
            if (k2(c4, f4[l4 + 6])) {
              for (s3 = 0, l4 = 2 * (h4 = k2(c4, f4[l4 + 8])) + (f4 = k2(c4, f4[l4 + 9 + h4])), h4 = 0, f4 = ii[l4]; f4[s3]; ++s3)
                h4 += h4 + k2(c4, f4[s3]);
              h4 += 3 + (8 << l4);
            } else
              k2(c4, f4[l4 + 7]) ? (h4 = 7 + 2 * k2(c4, 165), h4 += k2(c4, 145)) : h4 = 5 + k2(c4, 159);
          else
            h4 = k2(c4, f4[l4 + 4]) ? 3 + k2(c4, f4[l4 + 5]) : 2;
          s3 = u4[2];
        } else
          h4 = 1, s3 = u4[1];
        u4 = o3 + ai[i3], 0 > (c4 = t4).b && S2(c4);
        var l4, f4 = c4.b, d4 = (l4 = c4.Ca >> 1) - (c4.I >> f4) >> 31;
        --c4.b, c4.Ca += d4, c4.Ca |= 1, c4.I -= (l4 + 1 & d4) << f4, a3[u4] = ((h4 ^ d4) - d4) * r5[(0 < i3) + 0];
      }
      return 16;
    }
    function $t2(t4) {
      var e3 = t4.rb[t4.sb - 1];
      e3.la = 0, e3.Na = 0, i2(t4.zc, 0, 0, t4.zc.length), t4.ja = 0;
    }
    function Qt2(t4, n3) {
      if (null == t4)
        return 0;
      if (null == n3)
        return Jt2(t4, 2, "NULL VP8Io parameter in VP8Decode().");
      if (!t4.cb && !Kt2(t4, n3))
        return 0;
      if (e2(t4.cb), null == n3.ac || n3.ac(n3)) {
        n3.ob && (t4.L = 0);
        var s3 = Ti[t4.L];
        if (2 == t4.L ? (t4.yb = 0, t4.zb = 0) : (t4.yb = n3.v - s3 >> 4, t4.zb = n3.j - s3 >> 4, 0 > t4.yb && (t4.yb = 0), 0 > t4.zb && (t4.zb = 0)), t4.Va = n3.o + 15 + s3 >> 4, t4.Hb = n3.va + 15 + s3 >> 4, t4.Hb > t4.za && (t4.Hb = t4.za), t4.Va > t4.Ub && (t4.Va = t4.Ub), 0 < t4.L) {
          var u4 = t4.ed;
          for (s3 = 0; 4 > s3; ++s3) {
            var c4;
            if (t4.Qa.Cb) {
              var h4 = t4.Qa.Lb[s3];
              t4.Qa.Fb || (h4 += u4.Tb);
            } else
              h4 = u4.Tb;
            for (c4 = 0; 1 >= c4; ++c4) {
              var l4 = t4.gd[s3][c4], f4 = h4;
              if (u4.Pc && (f4 += u4.vd[0], c4 && (f4 += u4.od[0])), 0 < (f4 = 0 > f4 ? 0 : 63 < f4 ? 63 : f4)) {
                var d4 = f4;
                0 < u4.wb && ((d4 = 4 < u4.wb ? d4 >> 2 : d4 >> 1) > 9 - u4.wb && (d4 = 9 - u4.wb)), 1 > d4 && (d4 = 1), l4.dd = d4, l4.tc = 2 * f4 + d4, l4.ld = 40 <= f4 ? 2 : 15 <= f4 ? 1 : 0;
              } else
                l4.tc = 0;
              l4.La = c4;
            }
          }
        }
        s3 = 0;
      } else
        Jt2(t4, 6, "Frame setup failed"), s3 = t4.a;
      if (s3 = 0 == s3) {
        if (s3) {
          t4.$c = 0, 0 < t4.Aa || (t4.Ic = Ui);
          t: {
            s3 = t4.Ic;
            u4 = 4 * (d4 = t4.za);
            var p4 = 32 * d4, g4 = d4 + 1, m4 = 0 < t4.L ? d4 * (0 < t4.Aa ? 2 : 1) : 0, v4 = (2 == t4.Aa ? 2 : 1) * d4;
            if ((l4 = u4 + 832 + (c4 = 3 * (16 * s3 + Ti[t4.L]) / 2 * p4) + (h4 = null != t4.Fa && 0 < t4.Fa.length ? t4.Kc.c * t4.Kc.i : 0)) != l4)
              s3 = 0;
            else {
              if (l4 > t4.Vb) {
                if (t4.Vb = 0, t4.Ec = a2(l4), t4.Fc = 0, null == t4.Ec) {
                  s3 = Jt2(t4, 1, "no memory during frame initialization.");
                  break t;
                }
                t4.Vb = l4;
              }
              l4 = t4.Ec, f4 = t4.Fc, t4.Ac = l4, t4.Bc = f4, f4 += u4, t4.Gd = o2(p4, Ht2), t4.Hd = 0, t4.rb = o2(g4 + 1, Tt2), t4.sb = 1, t4.wa = m4 ? o2(m4, Rt2) : null, t4.Y = 0, t4.D.Nb = 0, t4.D.wa = t4.wa, t4.D.Y = t4.Y, 0 < t4.Aa && (t4.D.Y += d4), e2(true), t4.oc = l4, t4.pc = f4, f4 += 832, t4.ya = o2(v4, Ut2), t4.aa = 0, t4.D.ya = t4.ya, t4.D.aa = t4.aa, 2 == t4.Aa && (t4.D.aa += d4), t4.R = 16 * d4, t4.B = 8 * d4, d4 = (p4 = Ti[t4.L]) * t4.R, p4 = p4 / 2 * t4.B, t4.sa = l4, t4.ta = f4 + d4, t4.qa = t4.sa, t4.ra = t4.ta + 16 * s3 * t4.R + p4, t4.Ha = t4.qa, t4.Ia = t4.ra + 8 * s3 * t4.B + p4, t4.$c = 0, f4 += c4, t4.mb = h4 ? l4 : null, t4.nb = h4 ? f4 : null, e2(f4 + h4 <= t4.Fc + t4.Vb), $t2(t4), i2(t4.Ac, t4.Bc, 0, u4), s3 = 1;
            }
          }
          if (s3) {
            if (n3.ka = 0, n3.y = t4.sa, n3.O = t4.ta, n3.f = t4.qa, n3.N = t4.ra, n3.ea = t4.Ha, n3.Vd = t4.Ia, n3.fa = t4.R, n3.Rc = t4.B, n3.F = null, n3.J = 0, !Cr) {
              for (s3 = -255; 255 >= s3; ++s3)
                Pr[255 + s3] = 0 > s3 ? -s3 : s3;
              for (s3 = -1020; 1020 >= s3; ++s3)
                kr[1020 + s3] = -128 > s3 ? -128 : 127 < s3 ? 127 : s3;
              for (s3 = -112; 112 >= s3; ++s3)
                Fr[112 + s3] = -16 > s3 ? -16 : 15 < s3 ? 15 : s3;
              for (s3 = -255; 510 >= s3; ++s3)
                Ir[255 + s3] = 0 > s3 ? 0 : 255 < s3 ? 255 : s3;
              Cr = 1;
            }
            ar = ce, or = ae, ur = oe, cr = se, hr = ue, sr = ie, lr = Je, fr = Xe, dr = $e, pr = Qe, gr = Ke, mr = Ze, vr = tn, br = en, yr = ze, wr = He, Nr = We, Lr = Ve, fi[0] = Ae, fi[1] = le, fi[2] = Le, fi[3] = xe, fi[4] = _e, fi[5] = Pe, fi[6] = Se, fi[7] = ke, fi[8] = Ie, fi[9] = Fe, li[0] = ve, li[1] = de, li[2] = pe, li[3] = ge, li[4] = be, li[5] = ye, li[6] = we, di[0] = Oe, di[1] = fe, di[2] = Ce, di[3] = je, di[4] = Ee, di[5] = Me, di[6] = qe, s3 = 1;
          } else
            s3 = 0;
        }
        s3 && (s3 = function(t5, n4) {
          for (t5.M = 0; t5.M < t5.Va; ++t5.M) {
            var o3, s4 = t5.Jc[t5.M & t5.Xb], u5 = t5.m, c5 = t5;
            for (o3 = 0; o3 < c5.za; ++o3) {
              var h5 = u5, l5 = c5, f5 = l5.Ac, d5 = l5.Bc + 4 * o3, p5 = l5.zc, g5 = l5.ya[l5.aa + o3];
              if (l5.Qa.Bb ? g5.$b = k2(h5, l5.Pa.jb[0]) ? 2 + k2(h5, l5.Pa.jb[2]) : k2(h5, l5.Pa.jb[1]) : g5.$b = 0, l5.kc && (g5.Ad = k2(h5, l5.Bd)), g5.Za = !k2(h5, 145) + 0, g5.Za) {
                var m5 = g5.Ob, v5 = 0;
                for (l5 = 0; 4 > l5; ++l5) {
                  var b4, y4 = p5[0 + l5];
                  for (b4 = 0; 4 > b4; ++b4) {
                    y4 = ui[f5[d5 + b4]][y4];
                    for (var w4 = oi[k2(h5, y4[0])]; 0 < w4; )
                      w4 = oi[2 * w4 + k2(h5, y4[w4])];
                    y4 = -w4, f5[d5 + b4] = y4;
                  }
                  r4(m5, v5, f5, d5, 4), v5 += 4, p5[0 + l5] = y4;
                }
              } else
                y4 = k2(h5, 156) ? k2(h5, 128) ? 1 : 3 : k2(h5, 163) ? 2 : 0, g5.Ob[0] = y4, i2(f5, d5, y4, 4), i2(p5, 0, y4, 4);
              g5.Dd = k2(h5, 142) ? k2(h5, 114) ? k2(h5, 183) ? 1 : 3 : 2 : 0;
            }
            if (c5.m.Ka)
              return Jt2(t5, 7, "Premature end-of-partition0 encountered.");
            for (; t5.ja < t5.za; ++t5.ja) {
              if (c5 = s4, h5 = (u5 = t5).rb[u5.sb - 1], f5 = u5.rb[u5.sb + u5.ja], o3 = u5.ya[u5.aa + u5.ja], d5 = u5.kc ? o3.Ad : 0)
                h5.la = f5.la = 0, o3.Za || (h5.Na = f5.Na = 0), o3.Hc = 0, o3.Gc = 0, o3.ia = 0;
              else {
                var N4, L4;
                h5 = f5, f5 = c5, d5 = u5.Pa.Xc, p5 = u5.ya[u5.aa + u5.ja], g5 = u5.pb[p5.$b];
                if (l5 = p5.ad, m5 = 0, v5 = u5.rb[u5.sb - 1], y4 = b4 = 0, i2(l5, m5, 0, 384), p5.Za)
                  var x3 = 0, A3 = d5[3];
                else {
                  w4 = a2(16);
                  var _3 = h5.Na + v5.Na;
                  if (_3 = ri(f5, d5[1], _3, g5.Eb, 0, w4, 0), h5.Na = v5.Na = (0 < _3) + 0, 1 < _3)
                    ar(w4, 0, l5, m5);
                  else {
                    var S3 = w4[0] + 3 >> 3;
                    for (w4 = 0; 256 > w4; w4 += 16)
                      l5[m5 + w4] = S3;
                  }
                  x3 = 1, A3 = d5[0];
                }
                var P3 = 15 & h5.la, F3 = 15 & v5.la;
                for (w4 = 0; 4 > w4; ++w4) {
                  var I3 = 1 & F3;
                  for (S3 = L4 = 0; 4 > S3; ++S3)
                    P3 = P3 >> 1 | (I3 = (_3 = ri(f5, A3, _3 = I3 + (1 & P3), g5.Sc, x3, l5, m5)) > x3) << 7, L4 = L4 << 2 | (3 < _3 ? 3 : 1 < _3 ? 2 : 0 != l5[m5 + 0]), m5 += 16;
                  P3 >>= 4, F3 = F3 >> 1 | I3 << 7, b4 = (b4 << 8 | L4) >>> 0;
                }
                for (A3 = P3, x3 = F3 >> 4, N4 = 0; 4 > N4; N4 += 2) {
                  for (L4 = 0, P3 = h5.la >> 4 + N4, F3 = v5.la >> 4 + N4, w4 = 0; 2 > w4; ++w4) {
                    for (I3 = 1 & F3, S3 = 0; 2 > S3; ++S3)
                      _3 = I3 + (1 & P3), P3 = P3 >> 1 | (I3 = 0 < (_3 = ri(f5, d5[2], _3, g5.Qc, 0, l5, m5))) << 3, L4 = L4 << 2 | (3 < _3 ? 3 : 1 < _3 ? 2 : 0 != l5[m5 + 0]), m5 += 16;
                    P3 >>= 2, F3 = F3 >> 1 | I3 << 5;
                  }
                  y4 |= L4 << 4 * N4, A3 |= P3 << 4 << N4, x3 |= (240 & F3) << N4;
                }
                h5.la = A3, v5.la = x3, p5.Hc = b4, p5.Gc = y4, p5.ia = 43690 & y4 ? 0 : g5.ia, d5 = !(b4 | y4);
              }
              if (0 < u5.L && (u5.wa[u5.Y + u5.ja] = u5.gd[o3.$b][o3.Za], u5.wa[u5.Y + u5.ja].La |= !d5), c5.Ka)
                return Jt2(t5, 7, "Premature end-of-file encountered.");
            }
            if ($t2(t5), u5 = n4, c5 = 1, o3 = (s4 = t5).D, h5 = 0 < s4.L && s4.M >= s4.zb && s4.M <= s4.Va, 0 == s4.Aa)
              t: {
                if (o3.M = s4.M, o3.uc = h5, On(s4, o3), c5 = 1, o3 = (L4 = s4.D).Nb, h5 = (y4 = Ti[s4.L]) * s4.R, f5 = y4 / 2 * s4.B, w4 = 16 * o3 * s4.R, S3 = 8 * o3 * s4.B, d5 = s4.sa, p5 = s4.ta - h5 + w4, g5 = s4.qa, l5 = s4.ra - f5 + S3, m5 = s4.Ha, v5 = s4.Ia - f5 + S3, F3 = 0 == (P3 = L4.M), b4 = P3 >= s4.Va - 1, 2 == s4.Aa && On(s4, L4), L4.uc)
                  for (I3 = (_3 = s4).D.M, e2(_3.D.uc), L4 = _3.yb; L4 < _3.Hb; ++L4) {
                    x3 = L4, A3 = I3;
                    var C3 = (j3 = (U3 = _3).D).Nb;
                    N4 = U3.R;
                    var j3 = j3.wa[j3.Y + x3], B3 = U3.sa, O3 = U3.ta + 16 * C3 * N4 + 16 * x3, M3 = j3.dd, E3 = j3.tc;
                    if (0 != E3)
                      if (e2(3 <= E3), 1 == U3.L)
                        0 < x3 && wr(B3, O3, N4, E3 + 4), j3.La && Lr(B3, O3, N4, E3), 0 < A3 && yr(B3, O3, N4, E3 + 4), j3.La && Nr(B3, O3, N4, E3);
                      else {
                        var q3 = U3.B, R3 = U3.qa, T3 = U3.ra + 8 * C3 * q3 + 8 * x3, D3 = U3.Ha, U3 = U3.Ia + 8 * C3 * q3 + 8 * x3;
                        C3 = j3.ld;
                        0 < x3 && (fr(B3, O3, N4, E3 + 4, M3, C3), pr(R3, T3, D3, U3, q3, E3 + 4, M3, C3)), j3.La && (mr(B3, O3, N4, E3, M3, C3), br(R3, T3, D3, U3, q3, E3, M3, C3)), 0 < A3 && (lr(B3, O3, N4, E3 + 4, M3, C3), dr(R3, T3, D3, U3, q3, E3 + 4, M3, C3)), j3.La && (gr(B3, O3, N4, E3, M3, C3), vr(R3, T3, D3, U3, q3, E3, M3, C3));
                      }
                  }
                if (s4.ia && alert("todo:DitherRow"), null != u5.put) {
                  if (L4 = 16 * P3, P3 = 16 * (P3 + 1), F3 ? (u5.y = s4.sa, u5.O = s4.ta + w4, u5.f = s4.qa, u5.N = s4.ra + S3, u5.ea = s4.Ha, u5.W = s4.Ia + S3) : (L4 -= y4, u5.y = d5, u5.O = p5, u5.f = g5, u5.N = l5, u5.ea = m5, u5.W = v5), b4 || (P3 -= y4), P3 > u5.o && (P3 = u5.o), u5.F = null, u5.J = null, null != s4.Fa && 0 < s4.Fa.length && L4 < P3 && (u5.J = fn(s4, u5, L4, P3 - L4), u5.F = s4.mb, null == u5.F && 0 == u5.F.length)) {
                    c5 = Jt2(s4, 3, "Could not decode alpha data.");
                    break t;
                  }
                  L4 < u5.j && (y4 = u5.j - L4, L4 = u5.j, e2(!(1 & y4)), u5.O += s4.R * y4, u5.N += s4.B * (y4 >> 1), u5.W += s4.B * (y4 >> 1), null != u5.F && (u5.J += u5.width * y4)), L4 < P3 && (u5.O += u5.v, u5.N += u5.v >> 1, u5.W += u5.v >> 1, null != u5.F && (u5.J += u5.v), u5.ka = L4 - u5.j, u5.U = u5.va - u5.v, u5.T = P3 - L4, c5 = u5.put(u5));
                }
                o3 + 1 != s4.Ic || b4 || (r4(s4.sa, s4.ta - h5, d5, p5 + 16 * s4.R, h5), r4(s4.qa, s4.ra - f5, g5, l5 + 8 * s4.B, f5), r4(s4.Ha, s4.Ia - f5, m5, v5 + 8 * s4.B, f5));
              }
            if (!c5)
              return Jt2(t5, 6, "Output aborted.");
          }
          return 1;
        }(t4, n3)), null != n3.bc && n3.bc(n3), s3 &= 1;
      }
      return s3 ? (t4.cb = 0, s3) : 0;
    }
    function te2(t4, e3, n3, r5, i3) {
      i3 = t4[e3 + n3 + 32 * r5] + (i3 >> 3), t4[e3 + n3 + 32 * r5] = -256 & i3 ? 0 > i3 ? 0 : 255 : i3;
    }
    function ee2(t4, e3, n3, r5, i3, a3) {
      te2(t4, e3, 0, n3, r5 + i3), te2(t4, e3, 1, n3, r5 + a3), te2(t4, e3, 2, n3, r5 - a3), te2(t4, e3, 3, n3, r5 - i3);
    }
    function ne2(t4) {
      return (20091 * t4 >> 16) + t4;
    }
    function re2(t4, e3, n3, r5) {
      var i3, o3 = 0, s3 = a2(16);
      for (i3 = 0; 4 > i3; ++i3) {
        var u4 = t4[e3 + 0] + t4[e3 + 8], c4 = t4[e3 + 0] - t4[e3 + 8], h4 = (35468 * t4[e3 + 4] >> 16) - ne2(t4[e3 + 12]), l4 = ne2(t4[e3 + 4]) + (35468 * t4[e3 + 12] >> 16);
        s3[o3 + 0] = u4 + l4, s3[o3 + 1] = c4 + h4, s3[o3 + 2] = c4 - h4, s3[o3 + 3] = u4 - l4, o3 += 4, e3++;
      }
      for (i3 = o3 = 0; 4 > i3; ++i3)
        u4 = (t4 = s3[o3 + 0] + 4) + s3[o3 + 8], c4 = t4 - s3[o3 + 8], h4 = (35468 * s3[o3 + 4] >> 16) - ne2(s3[o3 + 12]), te2(n3, r5, 0, 0, u4 + (l4 = ne2(s3[o3 + 4]) + (35468 * s3[o3 + 12] >> 16))), te2(n3, r5, 1, 0, c4 + h4), te2(n3, r5, 2, 0, c4 - h4), te2(n3, r5, 3, 0, u4 - l4), o3++, r5 += 32;
    }
    function ie(t4, e3, n3, r5) {
      var i3 = t4[e3 + 0] + 4, a3 = 35468 * t4[e3 + 4] >> 16, o3 = ne2(t4[e3 + 4]), s3 = 35468 * t4[e3 + 1] >> 16;
      ee2(n3, r5, 0, i3 + o3, t4 = ne2(t4[e3 + 1]), s3), ee2(n3, r5, 1, i3 + a3, t4, s3), ee2(n3, r5, 2, i3 - a3, t4, s3), ee2(n3, r5, 3, i3 - o3, t4, s3);
    }
    function ae(t4, e3, n3, r5, i3) {
      re2(t4, e3, n3, r5), i3 && re2(t4, e3 + 16, n3, r5 + 4);
    }
    function oe(t4, e3, n3, r5) {
      or(t4, e3 + 0, n3, r5, 1), or(t4, e3 + 32, n3, r5 + 128, 1);
    }
    function se(t4, e3, n3, r5) {
      var i3;
      for (t4 = t4[e3 + 0] + 4, i3 = 0; 4 > i3; ++i3)
        for (e3 = 0; 4 > e3; ++e3)
          te2(n3, r5, e3, i3, t4);
    }
    function ue(t4, e3, n3, r5) {
      t4[e3 + 0] && cr(t4, e3 + 0, n3, r5), t4[e3 + 16] && cr(t4, e3 + 16, n3, r5 + 4), t4[e3 + 32] && cr(t4, e3 + 32, n3, r5 + 128), t4[e3 + 48] && cr(t4, e3 + 48, n3, r5 + 128 + 4);
    }
    function ce(t4, e3, n3, r5) {
      var i3, o3 = a2(16);
      for (i3 = 0; 4 > i3; ++i3) {
        var s3 = t4[e3 + 0 + i3] + t4[e3 + 12 + i3], u4 = t4[e3 + 4 + i3] + t4[e3 + 8 + i3], c4 = t4[e3 + 4 + i3] - t4[e3 + 8 + i3], h4 = t4[e3 + 0 + i3] - t4[e3 + 12 + i3];
        o3[0 + i3] = s3 + u4, o3[8 + i3] = s3 - u4, o3[4 + i3] = h4 + c4, o3[12 + i3] = h4 - c4;
      }
      for (i3 = 0; 4 > i3; ++i3)
        s3 = (t4 = o3[0 + 4 * i3] + 3) + o3[3 + 4 * i3], u4 = o3[1 + 4 * i3] + o3[2 + 4 * i3], c4 = o3[1 + 4 * i3] - o3[2 + 4 * i3], h4 = t4 - o3[3 + 4 * i3], n3[r5 + 0] = s3 + u4 >> 3, n3[r5 + 16] = h4 + c4 >> 3, n3[r5 + 32] = s3 - u4 >> 3, n3[r5 + 48] = h4 - c4 >> 3, r5 += 64;
    }
    function he(t4, e3, n3) {
      var r5, i3 = e3 - 32, a3 = Or, o3 = 255 - t4[i3 - 1];
      for (r5 = 0; r5 < n3; ++r5) {
        var s3, u4 = a3, c4 = o3 + t4[e3 - 1];
        for (s3 = 0; s3 < n3; ++s3)
          t4[e3 + s3] = u4[c4 + t4[i3 + s3]];
        e3 += 32;
      }
    }
    function le(t4, e3) {
      he(t4, e3, 4);
    }
    function fe(t4, e3) {
      he(t4, e3, 8);
    }
    function de(t4, e3) {
      he(t4, e3, 16);
    }
    function pe(t4, e3) {
      var n3;
      for (n3 = 0; 16 > n3; ++n3)
        r4(t4, e3 + 32 * n3, t4, e3 - 32, 16);
    }
    function ge(t4, e3) {
      var n3;
      for (n3 = 16; 0 < n3; --n3)
        i2(t4, e3, t4[e3 - 1], 16), e3 += 32;
    }
    function me(t4, e3, n3) {
      var r5;
      for (r5 = 0; 16 > r5; ++r5)
        i2(e3, n3 + 32 * r5, t4, 16);
    }
    function ve(t4, e3) {
      var n3, r5 = 16;
      for (n3 = 0; 16 > n3; ++n3)
        r5 += t4[e3 - 1 + 32 * n3] + t4[e3 + n3 - 32];
      me(r5 >> 5, t4, e3);
    }
    function be(t4, e3) {
      var n3, r5 = 8;
      for (n3 = 0; 16 > n3; ++n3)
        r5 += t4[e3 - 1 + 32 * n3];
      me(r5 >> 4, t4, e3);
    }
    function ye(t4, e3) {
      var n3, r5 = 8;
      for (n3 = 0; 16 > n3; ++n3)
        r5 += t4[e3 + n3 - 32];
      me(r5 >> 4, t4, e3);
    }
    function we(t4, e3) {
      me(128, t4, e3);
    }
    function Ne(t4, e3, n3) {
      return t4 + 2 * e3 + n3 + 2 >> 2;
    }
    function Le(t4, e3) {
      var n3, i3 = e3 - 32;
      i3 = new Uint8Array([Ne(t4[i3 - 1], t4[i3 + 0], t4[i3 + 1]), Ne(t4[i3 + 0], t4[i3 + 1], t4[i3 + 2]), Ne(t4[i3 + 1], t4[i3 + 2], t4[i3 + 3]), Ne(t4[i3 + 2], t4[i3 + 3], t4[i3 + 4])]);
      for (n3 = 0; 4 > n3; ++n3)
        r4(t4, e3 + 32 * n3, i3, 0, i3.length);
    }
    function xe(t4, e3) {
      var n3 = t4[e3 - 1], r5 = t4[e3 - 1 + 32], i3 = t4[e3 - 1 + 64], a3 = t4[e3 - 1 + 96];
      F2(t4, e3 + 0, 16843009 * Ne(t4[e3 - 1 - 32], n3, r5)), F2(t4, e3 + 32, 16843009 * Ne(n3, r5, i3)), F2(t4, e3 + 64, 16843009 * Ne(r5, i3, a3)), F2(t4, e3 + 96, 16843009 * Ne(i3, a3, a3));
    }
    function Ae(t4, e3) {
      var n3, r5 = 4;
      for (n3 = 0; 4 > n3; ++n3)
        r5 += t4[e3 + n3 - 32] + t4[e3 - 1 + 32 * n3];
      for (r5 >>= 3, n3 = 0; 4 > n3; ++n3)
        i2(t4, e3 + 32 * n3, r5, 4);
    }
    function _e(t4, e3) {
      var n3 = t4[e3 - 1 + 0], r5 = t4[e3 - 1 + 32], i3 = t4[e3 - 1 + 64], a3 = t4[e3 - 1 - 32], o3 = t4[e3 + 0 - 32], s3 = t4[e3 + 1 - 32], u4 = t4[e3 + 2 - 32], c4 = t4[e3 + 3 - 32];
      t4[e3 + 0 + 96] = Ne(r5, i3, t4[e3 - 1 + 96]), t4[e3 + 1 + 96] = t4[e3 + 0 + 64] = Ne(n3, r5, i3), t4[e3 + 2 + 96] = t4[e3 + 1 + 64] = t4[e3 + 0 + 32] = Ne(a3, n3, r5), t4[e3 + 3 + 96] = t4[e3 + 2 + 64] = t4[e3 + 1 + 32] = t4[e3 + 0 + 0] = Ne(o3, a3, n3), t4[e3 + 3 + 64] = t4[e3 + 2 + 32] = t4[e3 + 1 + 0] = Ne(s3, o3, a3), t4[e3 + 3 + 32] = t4[e3 + 2 + 0] = Ne(u4, s3, o3), t4[e3 + 3 + 0] = Ne(c4, u4, s3);
    }
    function Se(t4, e3) {
      var n3 = t4[e3 + 1 - 32], r5 = t4[e3 + 2 - 32], i3 = t4[e3 + 3 - 32], a3 = t4[e3 + 4 - 32], o3 = t4[e3 + 5 - 32], s3 = t4[e3 + 6 - 32], u4 = t4[e3 + 7 - 32];
      t4[e3 + 0 + 0] = Ne(t4[e3 + 0 - 32], n3, r5), t4[e3 + 1 + 0] = t4[e3 + 0 + 32] = Ne(n3, r5, i3), t4[e3 + 2 + 0] = t4[e3 + 1 + 32] = t4[e3 + 0 + 64] = Ne(r5, i3, a3), t4[e3 + 3 + 0] = t4[e3 + 2 + 32] = t4[e3 + 1 + 64] = t4[e3 + 0 + 96] = Ne(i3, a3, o3), t4[e3 + 3 + 32] = t4[e3 + 2 + 64] = t4[e3 + 1 + 96] = Ne(a3, o3, s3), t4[e3 + 3 + 64] = t4[e3 + 2 + 96] = Ne(o3, s3, u4), t4[e3 + 3 + 96] = Ne(s3, u4, u4);
    }
    function Pe(t4, e3) {
      var n3 = t4[e3 - 1 + 0], r5 = t4[e3 - 1 + 32], i3 = t4[e3 - 1 + 64], a3 = t4[e3 - 1 - 32], o3 = t4[e3 + 0 - 32], s3 = t4[e3 + 1 - 32], u4 = t4[e3 + 2 - 32], c4 = t4[e3 + 3 - 32];
      t4[e3 + 0 + 0] = t4[e3 + 1 + 64] = a3 + o3 + 1 >> 1, t4[e3 + 1 + 0] = t4[e3 + 2 + 64] = o3 + s3 + 1 >> 1, t4[e3 + 2 + 0] = t4[e3 + 3 + 64] = s3 + u4 + 1 >> 1, t4[e3 + 3 + 0] = u4 + c4 + 1 >> 1, t4[e3 + 0 + 96] = Ne(i3, r5, n3), t4[e3 + 0 + 64] = Ne(r5, n3, a3), t4[e3 + 0 + 32] = t4[e3 + 1 + 96] = Ne(n3, a3, o3), t4[e3 + 1 + 32] = t4[e3 + 2 + 96] = Ne(a3, o3, s3), t4[e3 + 2 + 32] = t4[e3 + 3 + 96] = Ne(o3, s3, u4), t4[e3 + 3 + 32] = Ne(s3, u4, c4);
    }
    function ke(t4, e3) {
      var n3 = t4[e3 + 0 - 32], r5 = t4[e3 + 1 - 32], i3 = t4[e3 + 2 - 32], a3 = t4[e3 + 3 - 32], o3 = t4[e3 + 4 - 32], s3 = t4[e3 + 5 - 32], u4 = t4[e3 + 6 - 32], c4 = t4[e3 + 7 - 32];
      t4[e3 + 0 + 0] = n3 + r5 + 1 >> 1, t4[e3 + 1 + 0] = t4[e3 + 0 + 64] = r5 + i3 + 1 >> 1, t4[e3 + 2 + 0] = t4[e3 + 1 + 64] = i3 + a3 + 1 >> 1, t4[e3 + 3 + 0] = t4[e3 + 2 + 64] = a3 + o3 + 1 >> 1, t4[e3 + 0 + 32] = Ne(n3, r5, i3), t4[e3 + 1 + 32] = t4[e3 + 0 + 96] = Ne(r5, i3, a3), t4[e3 + 2 + 32] = t4[e3 + 1 + 96] = Ne(i3, a3, o3), t4[e3 + 3 + 32] = t4[e3 + 2 + 96] = Ne(a3, o3, s3), t4[e3 + 3 + 64] = Ne(o3, s3, u4), t4[e3 + 3 + 96] = Ne(s3, u4, c4);
    }
    function Fe(t4, e3) {
      var n3 = t4[e3 - 1 + 0], r5 = t4[e3 - 1 + 32], i3 = t4[e3 - 1 + 64], a3 = t4[e3 - 1 + 96];
      t4[e3 + 0 + 0] = n3 + r5 + 1 >> 1, t4[e3 + 2 + 0] = t4[e3 + 0 + 32] = r5 + i3 + 1 >> 1, t4[e3 + 2 + 32] = t4[e3 + 0 + 64] = i3 + a3 + 1 >> 1, t4[e3 + 1 + 0] = Ne(n3, r5, i3), t4[e3 + 3 + 0] = t4[e3 + 1 + 32] = Ne(r5, i3, a3), t4[e3 + 3 + 32] = t4[e3 + 1 + 64] = Ne(i3, a3, a3), t4[e3 + 3 + 64] = t4[e3 + 2 + 64] = t4[e3 + 0 + 96] = t4[e3 + 1 + 96] = t4[e3 + 2 + 96] = t4[e3 + 3 + 96] = a3;
    }
    function Ie(t4, e3) {
      var n3 = t4[e3 - 1 + 0], r5 = t4[e3 - 1 + 32], i3 = t4[e3 - 1 + 64], a3 = t4[e3 - 1 + 96], o3 = t4[e3 - 1 - 32], s3 = t4[e3 + 0 - 32], u4 = t4[e3 + 1 - 32], c4 = t4[e3 + 2 - 32];
      t4[e3 + 0 + 0] = t4[e3 + 2 + 32] = n3 + o3 + 1 >> 1, t4[e3 + 0 + 32] = t4[e3 + 2 + 64] = r5 + n3 + 1 >> 1, t4[e3 + 0 + 64] = t4[e3 + 2 + 96] = i3 + r5 + 1 >> 1, t4[e3 + 0 + 96] = a3 + i3 + 1 >> 1, t4[e3 + 3 + 0] = Ne(s3, u4, c4), t4[e3 + 2 + 0] = Ne(o3, s3, u4), t4[e3 + 1 + 0] = t4[e3 + 3 + 32] = Ne(n3, o3, s3), t4[e3 + 1 + 32] = t4[e3 + 3 + 64] = Ne(r5, n3, o3), t4[e3 + 1 + 64] = t4[e3 + 3 + 96] = Ne(i3, r5, n3), t4[e3 + 1 + 96] = Ne(a3, i3, r5);
    }
    function Ce(t4, e3) {
      var n3;
      for (n3 = 0; 8 > n3; ++n3)
        r4(t4, e3 + 32 * n3, t4, e3 - 32, 8);
    }
    function je(t4, e3) {
      var n3;
      for (n3 = 0; 8 > n3; ++n3)
        i2(t4, e3, t4[e3 - 1], 8), e3 += 32;
    }
    function Be(t4, e3, n3) {
      var r5;
      for (r5 = 0; 8 > r5; ++r5)
        i2(e3, n3 + 32 * r5, t4, 8);
    }
    function Oe(t4, e3) {
      var n3, r5 = 8;
      for (n3 = 0; 8 > n3; ++n3)
        r5 += t4[e3 + n3 - 32] + t4[e3 - 1 + 32 * n3];
      Be(r5 >> 4, t4, e3);
    }
    function Me(t4, e3) {
      var n3, r5 = 4;
      for (n3 = 0; 8 > n3; ++n3)
        r5 += t4[e3 + n3 - 32];
      Be(r5 >> 3, t4, e3);
    }
    function Ee(t4, e3) {
      var n3, r5 = 4;
      for (n3 = 0; 8 > n3; ++n3)
        r5 += t4[e3 - 1 + 32 * n3];
      Be(r5 >> 3, t4, e3);
    }
    function qe(t4, e3) {
      Be(128, t4, e3);
    }
    function Re(t4, e3, n3) {
      var r5 = t4[e3 - n3], i3 = t4[e3 + 0], a3 = 3 * (i3 - r5) + jr[1020 + t4[e3 - 2 * n3] - t4[e3 + n3]], o3 = Br[112 + (a3 + 4 >> 3)];
      t4[e3 - n3] = Or[255 + r5 + Br[112 + (a3 + 3 >> 3)]], t4[e3 + 0] = Or[255 + i3 - o3];
    }
    function Te(t4, e3, n3, r5) {
      var i3 = t4[e3 + 0], a3 = t4[e3 + n3];
      return Mr[255 + t4[e3 - 2 * n3] - t4[e3 - n3]] > r5 || Mr[255 + a3 - i3] > r5;
    }
    function De(t4, e3, n3, r5) {
      return 4 * Mr[255 + t4[e3 - n3] - t4[e3 + 0]] + Mr[255 + t4[e3 - 2 * n3] - t4[e3 + n3]] <= r5;
    }
    function Ue(t4, e3, n3, r5, i3) {
      var a3 = t4[e3 - 3 * n3], o3 = t4[e3 - 2 * n3], s3 = t4[e3 - n3], u4 = t4[e3 + 0], c4 = t4[e3 + n3], h4 = t4[e3 + 2 * n3], l4 = t4[e3 + 3 * n3];
      return 4 * Mr[255 + s3 - u4] + Mr[255 + o3 - c4] > r5 ? 0 : Mr[255 + t4[e3 - 4 * n3] - a3] <= i3 && Mr[255 + a3 - o3] <= i3 && Mr[255 + o3 - s3] <= i3 && Mr[255 + l4 - h4] <= i3 && Mr[255 + h4 - c4] <= i3 && Mr[255 + c4 - u4] <= i3;
    }
    function ze(t4, e3, n3, r5) {
      var i3 = 2 * r5 + 1;
      for (r5 = 0; 16 > r5; ++r5)
        De(t4, e3 + r5, n3, i3) && Re(t4, e3 + r5, n3);
    }
    function He(t4, e3, n3, r5) {
      var i3 = 2 * r5 + 1;
      for (r5 = 0; 16 > r5; ++r5)
        De(t4, e3 + r5 * n3, 1, i3) && Re(t4, e3 + r5 * n3, 1);
    }
    function We(t4, e3, n3, r5) {
      var i3;
      for (i3 = 3; 0 < i3; --i3)
        ze(t4, e3 += 4 * n3, n3, r5);
    }
    function Ve(t4, e3, n3, r5) {
      var i3;
      for (i3 = 3; 0 < i3; --i3)
        He(t4, e3 += 4, n3, r5);
    }
    function Ge(t4, e3, n3, r5, i3, a3, o3, s3) {
      for (a3 = 2 * a3 + 1; 0 < i3--; ) {
        if (Ue(t4, e3, n3, a3, o3))
          if (Te(t4, e3, n3, s3))
            Re(t4, e3, n3);
          else {
            var u4 = t4, c4 = e3, h4 = n3, l4 = u4[c4 - 2 * h4], f4 = u4[c4 - h4], d4 = u4[c4 + 0], p4 = u4[c4 + h4], g4 = u4[c4 + 2 * h4], m4 = 27 * (b4 = jr[1020 + 3 * (d4 - f4) + jr[1020 + l4 - p4]]) + 63 >> 7, v4 = 18 * b4 + 63 >> 7, b4 = 9 * b4 + 63 >> 7;
            u4[c4 - 3 * h4] = Or[255 + u4[c4 - 3 * h4] + b4], u4[c4 - 2 * h4] = Or[255 + l4 + v4], u4[c4 - h4] = Or[255 + f4 + m4], u4[c4 + 0] = Or[255 + d4 - m4], u4[c4 + h4] = Or[255 + p4 - v4], u4[c4 + 2 * h4] = Or[255 + g4 - b4];
          }
        e3 += r5;
      }
    }
    function Ye(t4, e3, n3, r5, i3, a3, o3, s3) {
      for (a3 = 2 * a3 + 1; 0 < i3--; ) {
        if (Ue(t4, e3, n3, a3, o3))
          if (Te(t4, e3, n3, s3))
            Re(t4, e3, n3);
          else {
            var u4 = t4, c4 = e3, h4 = n3, l4 = u4[c4 - h4], f4 = u4[c4 + 0], d4 = u4[c4 + h4], p4 = Br[112 + ((g4 = 3 * (f4 - l4)) + 4 >> 3)], g4 = Br[112 + (g4 + 3 >> 3)], m4 = p4 + 1 >> 1;
            u4[c4 - 2 * h4] = Or[255 + u4[c4 - 2 * h4] + m4], u4[c4 - h4] = Or[255 + l4 + g4], u4[c4 + 0] = Or[255 + f4 - p4], u4[c4 + h4] = Or[255 + d4 - m4];
          }
        e3 += r5;
      }
    }
    function Je(t4, e3, n3, r5, i3, a3) {
      Ge(t4, e3, n3, 1, 16, r5, i3, a3);
    }
    function Xe(t4, e3, n3, r5, i3, a3) {
      Ge(t4, e3, 1, n3, 16, r5, i3, a3);
    }
    function Ke(t4, e3, n3, r5, i3, a3) {
      var o3;
      for (o3 = 3; 0 < o3; --o3)
        Ye(t4, e3 += 4 * n3, n3, 1, 16, r5, i3, a3);
    }
    function Ze(t4, e3, n3, r5, i3, a3) {
      var o3;
      for (o3 = 3; 0 < o3; --o3)
        Ye(t4, e3 += 4, 1, n3, 16, r5, i3, a3);
    }
    function $e(t4, e3, n3, r5, i3, a3, o3, s3) {
      Ge(t4, e3, i3, 1, 8, a3, o3, s3), Ge(n3, r5, i3, 1, 8, a3, o3, s3);
    }
    function Qe(t4, e3, n3, r5, i3, a3, o3, s3) {
      Ge(t4, e3, 1, i3, 8, a3, o3, s3), Ge(n3, r5, 1, i3, 8, a3, o3, s3);
    }
    function tn(t4, e3, n3, r5, i3, a3, o3, s3) {
      Ye(t4, e3 + 4 * i3, i3, 1, 8, a3, o3, s3), Ye(n3, r5 + 4 * i3, i3, 1, 8, a3, o3, s3);
    }
    function en(t4, e3, n3, r5, i3, a3, o3, s3) {
      Ye(t4, e3 + 4, 1, i3, 8, a3, o3, s3), Ye(n3, r5 + 4, 1, i3, 8, a3, o3, s3);
    }
    function nn() {
      this.ba = new ot2(), this.ec = [], this.cc = [], this.Mc = [], this.Dc = this.Nc = this.dc = this.fc = 0, this.Oa = new ut2(), this.memory = 0, this.Ib = "OutputFunc", this.Jb = "OutputAlphaFunc", this.Nd = "OutputRowFunc";
    }
    function rn() {
      this.data = [], this.offset = this.kd = this.ha = this.w = 0, this.na = [], this.xa = this.gb = this.Ja = this.Sa = this.P = 0;
    }
    function an() {
      this.nc = this.Ea = this.b = this.hc = 0, this.K = [], this.w = 0;
    }
    function on() {
      this.ua = 0, this.Wa = new M2(), this.vb = new M2(), this.md = this.xc = this.wc = 0, this.vc = [], this.Wb = 0, this.Ya = new d3(), this.yc = new l3();
    }
    function sn() {
      this.xb = this.a = 0, this.l = new Gt2(), this.ca = new ot2(), this.V = [], this.Ba = 0, this.Ta = [], this.Ua = 0, this.m = new N3(), this.Pb = 0, this.wd = new N3(), this.Ma = this.$ = this.C = this.i = this.c = this.xd = 0, this.s = new on(), this.ab = 0, this.gc = o2(4, an), this.Oc = 0;
    }
    function un() {
      this.Lc = this.Z = this.$a = this.i = this.c = 0, this.l = new Gt2(), this.ic = 0, this.ca = [], this.tb = 0, this.qd = null, this.rd = 0;
    }
    function cn(t4, e3, n3, r5, i3, a3, o3) {
      for (t4 = null == t4 ? 0 : t4[e3 + 0], e3 = 0; e3 < o3; ++e3)
        i3[a3 + e3] = t4 + n3[r5 + e3] & 255, t4 = i3[a3 + e3];
    }
    function hn(t4, e3, n3, r5, i3, a3, o3) {
      var s3;
      if (null == t4)
        cn(null, null, n3, r5, i3, a3, o3);
      else
        for (s3 = 0; s3 < o3; ++s3)
          i3[a3 + s3] = t4[e3 + s3] + n3[r5 + s3] & 255;
    }
    function ln(t4, e3, n3, r5, i3, a3, o3) {
      if (null == t4)
        cn(null, null, n3, r5, i3, a3, o3);
      else {
        var s3, u4 = t4[e3 + 0], c4 = u4, h4 = u4;
        for (s3 = 0; s3 < o3; ++s3)
          c4 = h4 + (u4 = t4[e3 + s3]) - c4, h4 = n3[r5 + s3] + (-256 & c4 ? 0 > c4 ? 0 : 255 : c4) & 255, c4 = u4, i3[a3 + s3] = h4;
      }
    }
    function fn(t4, n3, i3, o3) {
      var s3 = n3.width, u4 = n3.o;
      if (e2(null != t4 && null != n3), 0 > i3 || 0 >= o3 || i3 + o3 > u4)
        return null;
      if (!t4.Cc) {
        if (null == t4.ga) {
          var c4;
          if (t4.ga = new un(), (c4 = null == t4.ga) || (c4 = n3.width * n3.o, e2(0 == t4.Gb.length), t4.Gb = a2(c4), t4.Uc = 0, null == t4.Gb ? c4 = 0 : (t4.mb = t4.Gb, t4.nb = t4.Uc, t4.rc = null, c4 = 1), c4 = !c4), !c4) {
            c4 = t4.ga;
            var h4 = t4.Fa, l4 = t4.P, f4 = t4.qc, d4 = t4.mb, p4 = t4.nb, g4 = l4 + 1, m4 = f4 - 1, b4 = c4.l;
            if (e2(null != h4 && null != d4 && null != n3), mi[0] = null, mi[1] = cn, mi[2] = hn, mi[3] = ln, c4.ca = d4, c4.tb = p4, c4.c = n3.width, c4.i = n3.height, e2(0 < c4.c && 0 < c4.i), 1 >= f4)
              n3 = 0;
            else if (c4.$a = h4[l4 + 0] >> 0 & 3, c4.Z = h4[l4 + 0] >> 2 & 3, c4.Lc = h4[l4 + 0] >> 4 & 3, l4 = h4[l4 + 0] >> 6 & 3, 0 > c4.$a || 1 < c4.$a || 4 <= c4.Z || 1 < c4.Lc || l4)
              n3 = 0;
            else if (b4.put = dt2, b4.ac = ft2, b4.bc = pt2, b4.ma = c4, b4.width = n3.width, b4.height = n3.height, b4.Da = n3.Da, b4.v = n3.v, b4.va = n3.va, b4.j = n3.j, b4.o = n3.o, c4.$a)
              t: {
                e2(1 == c4.$a), n3 = kt2();
                e:
                  for (; ; ) {
                    if (null == n3) {
                      n3 = 0;
                      break t;
                    }
                    if (e2(null != c4), c4.mc = n3, n3.c = c4.c, n3.i = c4.i, n3.l = c4.l, n3.l.ma = c4, n3.l.width = c4.c, n3.l.height = c4.i, n3.a = 0, v3(n3.m, h4, g4, m4), !Ft2(c4.c, c4.i, 1, n3, null))
                      break e;
                    if (1 == n3.ab && 3 == n3.gc[0].hc && xt2(n3.s) ? (c4.ic = 1, h4 = n3.c * n3.i, n3.Ta = null, n3.Ua = 0, n3.V = a2(h4), n3.Ba = 0, null == n3.V ? (n3.a = 1, n3 = 0) : n3 = 1) : (c4.ic = 0, n3 = It2(n3, c4.c)), !n3)
                      break e;
                    n3 = 1;
                    break t;
                  }
                c4.mc = null, n3 = 0;
              }
            else
              n3 = m4 >= c4.c * c4.i;
            c4 = !n3;
          }
          if (c4)
            return null;
          1 != t4.ga.Lc ? t4.Ga = 0 : o3 = u4 - i3;
        }
        e2(null != t4.ga), e2(i3 + o3 <= u4);
        t: {
          if (n3 = (h4 = t4.ga).c, u4 = h4.l.o, 0 == h4.$a) {
            if (g4 = t4.rc, m4 = t4.Vc, b4 = t4.Fa, l4 = t4.P + 1 + i3 * n3, f4 = t4.mb, d4 = t4.nb + i3 * n3, e2(l4 <= t4.P + t4.qc), 0 != h4.Z)
              for (e2(null != mi[h4.Z]), c4 = 0; c4 < o3; ++c4)
                mi[h4.Z](g4, m4, b4, l4, f4, d4, n3), g4 = f4, m4 = d4, d4 += n3, l4 += n3;
            else
              for (c4 = 0; c4 < o3; ++c4)
                r4(f4, d4, b4, l4, n3), g4 = f4, m4 = d4, d4 += n3, l4 += n3;
            t4.rc = g4, t4.Vc = m4;
          } else {
            if (e2(null != h4.mc), n3 = i3 + o3, e2(null != (c4 = h4.mc)), e2(n3 <= c4.i), c4.C >= n3)
              n3 = 1;
            else if (h4.ic || vn(), h4.ic) {
              h4 = c4.V, g4 = c4.Ba, m4 = c4.c;
              var y4 = c4.i, w4 = (b4 = 1, l4 = c4.$ / m4, f4 = c4.$ % m4, d4 = c4.m, p4 = c4.s, c4.$), N4 = m4 * y4, L4 = m4 * n3, A3 = p4.wc, S3 = w4 < L4 ? wt2(p4, f4, l4) : null;
              e2(w4 <= N4), e2(n3 <= y4), e2(xt2(p4));
              e:
                for (; ; ) {
                  for (; !d4.h && w4 < L4; ) {
                    if (f4 & A3 || (S3 = wt2(p4, f4, l4)), e2(null != S3), _2(d4), 256 > (y4 = bt2(S3.G[0], S3.H[0], d4)))
                      h4[g4 + w4] = y4, ++w4, ++f4 >= m4 && (f4 = 0, ++l4 <= n3 && !(l4 % 16) && _t2(c4, l4));
                    else {
                      if (!(280 > y4)) {
                        b4 = 0;
                        break e;
                      }
                      y4 = mt2(y4 - 256, d4);
                      var P3, k3 = bt2(S3.G[4], S3.H[4], d4);
                      if (_2(d4), !(w4 >= (k3 = vt2(m4, k3 = mt2(k3, d4))) && N4 - w4 >= y4)) {
                        b4 = 0;
                        break e;
                      }
                      for (P3 = 0; P3 < y4; ++P3)
                        h4[g4 + w4 + P3] = h4[g4 + w4 + P3 - k3];
                      for (w4 += y4, f4 += y4; f4 >= m4; )
                        f4 -= m4, ++l4 <= n3 && !(l4 % 16) && _t2(c4, l4);
                      w4 < L4 && f4 & A3 && (S3 = wt2(p4, f4, l4));
                    }
                    e2(d4.h == x2(d4));
                  }
                  _t2(c4, l4 > n3 ? n3 : l4);
                  break e;
                }
              !b4 || d4.h && w4 < N4 ? (b4 = 0, c4.a = d4.h ? 5 : 3) : c4.$ = w4, n3 = b4;
            } else
              n3 = St2(c4, c4.V, c4.Ba, c4.c, c4.i, n3, Ct2);
            if (!n3) {
              o3 = 0;
              break t;
            }
          }
          i3 + o3 >= u4 && (t4.Cc = 1), o3 = 1;
        }
        if (!o3)
          return null;
        if (t4.Cc && (null != (o3 = t4.ga) && (o3.mc = null), t4.ga = null, 0 < t4.Ga))
          return alert("todo:WebPDequantizeLevels"), null;
      }
      return t4.nb + i3 * s3;
    }
    function dn(t4, e3, n3, r5, i3, a3) {
      for (; 0 < i3--; ) {
        var o3, s3 = t4, u4 = e3 + (n3 ? 1 : 0), c4 = t4, h4 = e3 + (n3 ? 0 : 3);
        for (o3 = 0; o3 < r5; ++o3) {
          var l4 = c4[h4 + 4 * o3];
          255 != l4 && (l4 *= 32897, s3[u4 + 4 * o3 + 0] = s3[u4 + 4 * o3 + 0] * l4 >> 23, s3[u4 + 4 * o3 + 1] = s3[u4 + 4 * o3 + 1] * l4 >> 23, s3[u4 + 4 * o3 + 2] = s3[u4 + 4 * o3 + 2] * l4 >> 23);
        }
        e3 += a3;
      }
    }
    function pn(t4, e3, n3, r5, i3) {
      for (; 0 < r5--; ) {
        var a3;
        for (a3 = 0; a3 < n3; ++a3) {
          var o3 = t4[e3 + 2 * a3 + 0], s3 = 15 & (c4 = t4[e3 + 2 * a3 + 1]), u4 = 4369 * s3, c4 = (240 & c4 | c4 >> 4) * u4 >> 16;
          t4[e3 + 2 * a3 + 0] = (240 & o3 | o3 >> 4) * u4 >> 16 & 240 | (15 & o3 | o3 << 4) * u4 >> 16 >> 4 & 15, t4[e3 + 2 * a3 + 1] = 240 & c4 | s3;
        }
        e3 += i3;
      }
    }
    function gn(t4, e3, n3, r5, i3, a3, o3, s3) {
      var u4, c4, h4 = 255;
      for (c4 = 0; c4 < i3; ++c4) {
        for (u4 = 0; u4 < r5; ++u4) {
          var l4 = t4[e3 + u4];
          a3[o3 + 4 * u4] = l4, h4 &= l4;
        }
        e3 += n3, o3 += s3;
      }
      return 255 != h4;
    }
    function mn(t4, e3, n3, r5, i3) {
      var a3;
      for (a3 = 0; a3 < i3; ++a3)
        n3[r5 + a3] = t4[e3 + a3] >> 8;
    }
    function vn() {
      xr = dn, Ar = pn, _r = gn, Sr = mn;
    }
    function bn(n3, r5, i3) {
      t3[n3] = function(t4, n4, a3, o3, s3, u4, c4, h4, l4, f4, d4, p4, g4, m4, v4, b4, y4) {
        var w4, N4 = y4 - 1 >> 1, L4 = s3[u4 + 0] | c4[h4 + 0] << 16, x3 = l4[f4 + 0] | d4[p4 + 0] << 16;
        e2(null != t4);
        var A3 = 3 * L4 + x3 + 131074 >> 2;
        for (r5(t4[n4 + 0], 255 & A3, A3 >> 16, g4, m4), null != a3 && (A3 = 3 * x3 + L4 + 131074 >> 2, r5(a3[o3 + 0], 255 & A3, A3 >> 16, v4, b4)), w4 = 1; w4 <= N4; ++w4) {
          var _3 = s3[u4 + w4] | c4[h4 + w4] << 16, S3 = l4[f4 + w4] | d4[p4 + w4] << 16, P3 = L4 + _3 + x3 + S3 + 524296, k3 = P3 + 2 * (_3 + x3) >> 3;
          A3 = k3 + L4 >> 1, L4 = (P3 = P3 + 2 * (L4 + S3) >> 3) + _3 >> 1, r5(t4[n4 + 2 * w4 - 1], 255 & A3, A3 >> 16, g4, m4 + (2 * w4 - 1) * i3), r5(t4[n4 + 2 * w4 - 0], 255 & L4, L4 >> 16, g4, m4 + (2 * w4 - 0) * i3), null != a3 && (A3 = P3 + x3 >> 1, L4 = k3 + S3 >> 1, r5(a3[o3 + 2 * w4 - 1], 255 & A3, A3 >> 16, v4, b4 + (2 * w4 - 1) * i3), r5(a3[o3 + 2 * w4 + 0], 255 & L4, L4 >> 16, v4, b4 + (2 * w4 + 0) * i3)), L4 = _3, x3 = S3;
        }
        1 & y4 || (A3 = 3 * L4 + x3 + 131074 >> 2, r5(t4[n4 + y4 - 1], 255 & A3, A3 >> 16, g4, m4 + (y4 - 1) * i3), null != a3 && (A3 = 3 * x3 + L4 + 131074 >> 2, r5(a3[o3 + y4 - 1], 255 & A3, A3 >> 16, v4, b4 + (y4 - 1) * i3)));
      };
    }
    function yn() {
      vi[Er] = bi, vi[qr] = wi, vi[Rr] = yi, vi[Tr] = Ni, vi[Dr] = Li, vi[Ur] = xi, vi[zr] = Ai, vi[Hr] = wi, vi[Wr] = Ni, vi[Vr] = Li, vi[Gr] = xi;
    }
    function wn(t4) {
      return t4 & ~Ii ? 0 > t4 ? 0 : 255 : t4 >> Fi;
    }
    function Nn(t4, e3) {
      return wn((19077 * t4 >> 8) + (26149 * e3 >> 8) - 14234);
    }
    function Ln(t4, e3, n3) {
      return wn((19077 * t4 >> 8) - (6419 * e3 >> 8) - (13320 * n3 >> 8) + 8708);
    }
    function xn(t4, e3) {
      return wn((19077 * t4 >> 8) + (33050 * e3 >> 8) - 17685);
    }
    function An(t4, e3, n3, r5, i3) {
      r5[i3 + 0] = Nn(t4, n3), r5[i3 + 1] = Ln(t4, e3, n3), r5[i3 + 2] = xn(t4, e3);
    }
    function _n(t4, e3, n3, r5, i3) {
      r5[i3 + 0] = xn(t4, e3), r5[i3 + 1] = Ln(t4, e3, n3), r5[i3 + 2] = Nn(t4, n3);
    }
    function Sn(t4, e3, n3, r5, i3) {
      var a3 = Ln(t4, e3, n3);
      e3 = a3 << 3 & 224 | xn(t4, e3) >> 3, r5[i3 + 0] = 248 & Nn(t4, n3) | a3 >> 5, r5[i3 + 1] = e3;
    }
    function Pn(t4, e3, n3, r5, i3) {
      var a3 = 240 & xn(t4, e3) | 15;
      r5[i3 + 0] = 240 & Nn(t4, n3) | Ln(t4, e3, n3) >> 4, r5[i3 + 1] = a3;
    }
    function kn(t4, e3, n3, r5, i3) {
      r5[i3 + 0] = 255, An(t4, e3, n3, r5, i3 + 1);
    }
    function Fn(t4, e3, n3, r5, i3) {
      _n(t4, e3, n3, r5, i3), r5[i3 + 3] = 255;
    }
    function In(t4, e3, n3, r5, i3) {
      An(t4, e3, n3, r5, i3), r5[i3 + 3] = 255;
    }
    function Vt2(t4, e3) {
      return 0 > t4 ? 0 : t4 > e3 ? e3 : t4;
    }
    function Cn(e3, n3, r5) {
      t3[e3] = function(t4, e4, i3, a3, o3, s3, u4, c4, h4) {
        for (var l4 = c4 + (-2 & h4) * r5; c4 != l4; )
          n3(t4[e4 + 0], i3[a3 + 0], o3[s3 + 0], u4, c4), n3(t4[e4 + 1], i3[a3 + 0], o3[s3 + 0], u4, c4 + r5), e4 += 2, ++a3, ++s3, c4 += 2 * r5;
        1 & h4 && n3(t4[e4 + 0], i3[a3 + 0], o3[s3 + 0], u4, c4);
      };
    }
    function jn(t4, e3, n3) {
      return 0 == n3 ? 0 == t4 ? 0 == e3 ? 6 : 5 : 0 == e3 ? 4 : 0 : n3;
    }
    function Bn(t4, e3, n3, r5, i3) {
      switch (t4 >>> 30) {
        case 3:
          or(e3, n3, r5, i3, 0);
          break;
        case 2:
          sr(e3, n3, r5, i3);
          break;
        case 1:
          cr(e3, n3, r5, i3);
      }
    }
    function On(t4, e3) {
      var n3, a3, o3 = e3.M, s3 = e3.Nb, u4 = t4.oc, c4 = t4.pc + 40, h4 = t4.oc, l4 = t4.pc + 584, f4 = t4.oc, d4 = t4.pc + 600;
      for (n3 = 0; 16 > n3; ++n3)
        u4[c4 + 32 * n3 - 1] = 129;
      for (n3 = 0; 8 > n3; ++n3)
        h4[l4 + 32 * n3 - 1] = 129, f4[d4 + 32 * n3 - 1] = 129;
      for (0 < o3 ? u4[c4 - 1 - 32] = h4[l4 - 1 - 32] = f4[d4 - 1 - 32] = 129 : (i2(u4, c4 - 32 - 1, 127, 21), i2(h4, l4 - 32 - 1, 127, 9), i2(f4, d4 - 32 - 1, 127, 9)), a3 = 0; a3 < t4.za; ++a3) {
        var p4 = e3.ya[e3.aa + a3];
        if (0 < a3) {
          for (n3 = -1; 16 > n3; ++n3)
            r4(u4, c4 + 32 * n3 - 4, u4, c4 + 32 * n3 + 12, 4);
          for (n3 = -1; 8 > n3; ++n3)
            r4(h4, l4 + 32 * n3 - 4, h4, l4 + 32 * n3 + 4, 4), r4(f4, d4 + 32 * n3 - 4, f4, d4 + 32 * n3 + 4, 4);
        }
        var g4 = t4.Gd, m4 = t4.Hd + a3, v4 = p4.ad, b4 = p4.Hc;
        if (0 < o3 && (r4(u4, c4 - 32, g4[m4].y, 0, 16), r4(h4, l4 - 32, g4[m4].f, 0, 8), r4(f4, d4 - 32, g4[m4].ea, 0, 8)), p4.Za) {
          var y4 = u4, w4 = c4 - 32 + 16;
          for (0 < o3 && (a3 >= t4.za - 1 ? i2(y4, w4, g4[m4].y[15], 4) : r4(y4, w4, g4[m4 + 1].y, 0, 4)), n3 = 0; 4 > n3; n3++)
            y4[w4 + 128 + n3] = y4[w4 + 256 + n3] = y4[w4 + 384 + n3] = y4[w4 + 0 + n3];
          for (n3 = 0; 16 > n3; ++n3, b4 <<= 2)
            y4 = u4, w4 = c4 + Ri[n3], fi[p4.Ob[n3]](y4, w4), Bn(b4, v4, 16 * +n3, y4, w4);
        } else if (y4 = jn(a3, o3, p4.Ob[0]), li[y4](u4, c4), 0 != b4)
          for (n3 = 0; 16 > n3; ++n3, b4 <<= 2)
            Bn(b4, v4, 16 * +n3, u4, c4 + Ri[n3]);
        for (n3 = p4.Gc, y4 = jn(a3, o3, p4.Dd), di[y4](h4, l4), di[y4](f4, d4), b4 = v4, y4 = h4, w4 = l4, 255 & (p4 = n3 >> 0) && (170 & p4 ? ur(b4, 256, y4, w4) : hr(b4, 256, y4, w4)), p4 = f4, b4 = d4, 255 & (n3 >>= 8) && (170 & n3 ? ur(v4, 320, p4, b4) : hr(v4, 320, p4, b4)), o3 < t4.Ub - 1 && (r4(g4[m4].y, 0, u4, c4 + 480, 16), r4(g4[m4].f, 0, h4, l4 + 224, 8), r4(g4[m4].ea, 0, f4, d4 + 224, 8)), n3 = 8 * s3 * t4.B, g4 = t4.sa, m4 = t4.ta + 16 * a3 + 16 * s3 * t4.R, v4 = t4.qa, p4 = t4.ra + 8 * a3 + n3, b4 = t4.Ha, y4 = t4.Ia + 8 * a3 + n3, n3 = 0; 16 > n3; ++n3)
          r4(g4, m4 + n3 * t4.R, u4, c4 + 32 * n3, 16);
        for (n3 = 0; 8 > n3; ++n3)
          r4(v4, p4 + n3 * t4.B, h4, l4 + 32 * n3, 8), r4(b4, y4 + n3 * t4.B, f4, d4 + 32 * n3, 8);
      }
    }
    function Mn(t4, r5, i3, a3, o3, s3, u4, c4, h4) {
      var l4 = [0], f4 = [0], d4 = 0, p4 = null != h4 ? h4.kd : 0, g4 = null != h4 ? h4 : new rn();
      if (null == t4 || 12 > i3)
        return 7;
      g4.data = t4, g4.w = r5, g4.ha = i3, r5 = [r5], i3 = [i3], g4.gb = [g4.gb];
      t: {
        var m4 = r5, b4 = i3, y4 = g4.gb;
        if (e2(null != t4), e2(null != b4), e2(null != y4), y4[0] = 0, 12 <= b4[0] && !n2(t4, m4[0], "RIFF")) {
          if (n2(t4, m4[0] + 8, "WEBP")) {
            y4 = 3;
            break t;
          }
          var w4 = j2(t4, m4[0] + 4);
          if (12 > w4 || 4294967286 < w4) {
            y4 = 3;
            break t;
          }
          if (p4 && w4 > b4[0] - 8) {
            y4 = 7;
            break t;
          }
          y4[0] = w4, m4[0] += 12, b4[0] -= 12;
        }
        y4 = 0;
      }
      if (0 != y4)
        return y4;
      for (w4 = 0 < g4.gb[0], i3 = i3[0]; ; ) {
        t: {
          var L4 = t4;
          b4 = r5, y4 = i3;
          var x3 = l4, A3 = f4, _3 = m4 = [0];
          if ((k3 = d4 = [d4])[0] = 0, 8 > y4[0])
            y4 = 7;
          else {
            if (!n2(L4, b4[0], "VP8X")) {
              if (10 != j2(L4, b4[0] + 4)) {
                y4 = 3;
                break t;
              }
              if (18 > y4[0]) {
                y4 = 7;
                break t;
              }
              var S3 = j2(L4, b4[0] + 8), P3 = 1 + C2(L4, b4[0] + 12);
              if (2147483648 <= P3 * (L4 = 1 + C2(L4, b4[0] + 15))) {
                y4 = 3;
                break t;
              }
              null != _3 && (_3[0] = S3), null != x3 && (x3[0] = P3), null != A3 && (A3[0] = L4), b4[0] += 18, y4[0] -= 18, k3[0] = 1;
            }
            y4 = 0;
          }
        }
        if (d4 = d4[0], m4 = m4[0], 0 != y4)
          return y4;
        if (b4 = !!(2 & m4), !w4 && d4)
          return 3;
        if (null != s3 && (s3[0] = !!(16 & m4)), null != u4 && (u4[0] = b4), null != c4 && (c4[0] = 0), u4 = l4[0], m4 = f4[0], d4 && b4 && null == h4) {
          y4 = 0;
          break;
        }
        if (4 > i3) {
          y4 = 7;
          break;
        }
        if (w4 && d4 || !w4 && !d4 && !n2(t4, r5[0], "ALPH")) {
          i3 = [i3], g4.na = [g4.na], g4.P = [g4.P], g4.Sa = [g4.Sa];
          t: {
            S3 = t4, y4 = r5, w4 = i3;
            var k3 = g4.gb;
            x3 = g4.na, A3 = g4.P, _3 = g4.Sa;
            P3 = 22, e2(null != S3), e2(null != w4), L4 = y4[0];
            var F3 = w4[0];
            for (e2(null != x3), e2(null != _3), x3[0] = null, A3[0] = null, _3[0] = 0; ; ) {
              if (y4[0] = L4, w4[0] = F3, 8 > F3) {
                y4 = 7;
                break t;
              }
              var I3 = j2(S3, L4 + 4);
              if (4294967286 < I3) {
                y4 = 3;
                break t;
              }
              var B3 = 8 + I3 + 1 & -2;
              if (P3 += B3, 0 < k3 && P3 > k3) {
                y4 = 3;
                break t;
              }
              if (!n2(S3, L4, "VP8 ") || !n2(S3, L4, "VP8L")) {
                y4 = 0;
                break t;
              }
              if (F3[0] < B3) {
                y4 = 7;
                break t;
              }
              n2(S3, L4, "ALPH") || (x3[0] = S3, A3[0] = L4 + 8, _3[0] = I3), L4 += B3, F3 -= B3;
            }
          }
          if (i3 = i3[0], g4.na = g4.na[0], g4.P = g4.P[0], g4.Sa = g4.Sa[0], 0 != y4)
            break;
        }
        i3 = [i3], g4.Ja = [g4.Ja], g4.xa = [g4.xa];
        t:
          if (k3 = t4, y4 = r5, w4 = i3, x3 = g4.gb[0], A3 = g4.Ja, _3 = g4.xa, S3 = y4[0], L4 = !n2(k3, S3, "VP8 "), P3 = !n2(k3, S3, "VP8L"), e2(null != k3), e2(null != w4), e2(null != A3), e2(null != _3), 8 > w4[0])
            y4 = 7;
          else {
            if (L4 || P3) {
              if (k3 = j2(k3, S3 + 4), 12 <= x3 && k3 > x3 - 12) {
                y4 = 3;
                break t;
              }
              if (p4 && k3 > w4[0] - 8) {
                y4 = 7;
                break t;
              }
              A3[0] = k3, y4[0] += 8, w4[0] -= 8, _3[0] = P3;
            } else
              _3[0] = 5 <= w4[0] && 47 == k3[S3 + 0] && !(k3[S3 + 4] >> 5), A3[0] = w4[0];
            y4 = 0;
          }
        if (i3 = i3[0], g4.Ja = g4.Ja[0], g4.xa = g4.xa[0], r5 = r5[0], 0 != y4)
          break;
        if (4294967286 < g4.Ja)
          return 3;
        if (null == c4 || b4 || (c4[0] = g4.xa ? 2 : 1), u4 = [u4], m4 = [m4], g4.xa) {
          if (5 > i3) {
            y4 = 7;
            break;
          }
          c4 = u4, p4 = m4, b4 = s3, null == t4 || 5 > i3 ? t4 = 0 : 5 <= i3 && 47 == t4[r5 + 0] && !(t4[r5 + 4] >> 5) ? (w4 = [0], k3 = [0], x3 = [0], v3(A3 = new N3(), t4, r5, i3), gt2(A3, w4, k3, x3) ? (null != c4 && (c4[0] = w4[0]), null != p4 && (p4[0] = k3[0]), null != b4 && (b4[0] = x3[0]), t4 = 1) : t4 = 0) : t4 = 0;
        } else {
          if (10 > i3) {
            y4 = 7;
            break;
          }
          c4 = m4, null == t4 || 10 > i3 || !Xt2(t4, r5 + 3, i3 - 3) ? t4 = 0 : (p4 = t4[r5 + 0] | t4[r5 + 1] << 8 | t4[r5 + 2] << 16, b4 = 16383 & (t4[r5 + 7] << 8 | t4[r5 + 6]), t4 = 16383 & (t4[r5 + 9] << 8 | t4[r5 + 8]), 1 & p4 || 3 < (p4 >> 1 & 7) || !(p4 >> 4 & 1) || p4 >> 5 >= g4.Ja || !b4 || !t4 ? t4 = 0 : (u4 && (u4[0] = b4), c4 && (c4[0] = t4), t4 = 1));
        }
        if (!t4)
          return 3;
        if (u4 = u4[0], m4 = m4[0], d4 && (l4[0] != u4 || f4[0] != m4))
          return 3;
        null != h4 && (h4[0] = g4, h4.offset = r5 - h4.w, e2(4294967286 > r5 - h4.w), e2(h4.offset == h4.ha - i3));
        break;
      }
      return 0 == y4 || 7 == y4 && d4 && null == h4 ? (null != s3 && (s3[0] |= null != g4.na && 0 < g4.na.length), null != a3 && (a3[0] = u4), null != o3 && (o3[0] = m4), 0) : y4;
    }
    function En(t4, e3, n3) {
      var r5 = e3.width, i3 = e3.height, a3 = 0, o3 = 0, s3 = r5, u4 = i3;
      if (e3.Da = null != t4 && 0 < t4.Da, e3.Da && (s3 = t4.cd, u4 = t4.bd, a3 = t4.v, o3 = t4.j, 11 > n3 || (a3 &= -2, o3 &= -2), 0 > a3 || 0 > o3 || 0 >= s3 || 0 >= u4 || a3 + s3 > r5 || o3 + u4 > i3))
        return 0;
      if (e3.v = a3, e3.j = o3, e3.va = a3 + s3, e3.o = o3 + u4, e3.U = s3, e3.T = u4, e3.da = null != t4 && 0 < t4.da, e3.da) {
        if (!E2(s3, u4, n3 = [t4.ib], a3 = [t4.hb]))
          return 0;
        e3.ib = n3[0], e3.hb = a3[0];
      }
      return e3.ob = null != t4 && t4.ob, e3.Kb = null == t4 || !t4.Sd, e3.da && (e3.ob = e3.ib < 3 * r5 / 4 && e3.hb < 3 * i3 / 4, e3.Kb = 0), 1;
    }
    function qn(t4) {
      if (null == t4)
        return 2;
      if (11 > t4.S) {
        var e3 = t4.f.RGBA;
        e3.fb += (t4.height - 1) * e3.A, e3.A = -e3.A;
      } else
        e3 = t4.f.kb, t4 = t4.height, e3.O += (t4 - 1) * e3.fa, e3.fa = -e3.fa, e3.N += (t4 - 1 >> 1) * e3.Ab, e3.Ab = -e3.Ab, e3.W += (t4 - 1 >> 1) * e3.Db, e3.Db = -e3.Db, null != e3.F && (e3.J += (t4 - 1) * e3.lb, e3.lb = -e3.lb);
      return 0;
    }
    function Rn(t4, e3, n3, r5) {
      if (null == r5 || 0 >= t4 || 0 >= e3)
        return 2;
      if (null != n3) {
        if (n3.Da) {
          var i3 = n3.cd, o3 = n3.bd, s3 = -2 & n3.v, u4 = -2 & n3.j;
          if (0 > s3 || 0 > u4 || 0 >= i3 || 0 >= o3 || s3 + i3 > t4 || u4 + o3 > e3)
            return 2;
          t4 = i3, e3 = o3;
        }
        if (n3.da) {
          if (!E2(t4, e3, i3 = [n3.ib], o3 = [n3.hb]))
            return 2;
          t4 = i3[0], e3 = o3[0];
        }
      }
      r5.width = t4, r5.height = e3;
      t: {
        var c4 = r5.width, h4 = r5.height;
        if (t4 = r5.S, 0 >= c4 || 0 >= h4 || !(t4 >= Er && 13 > t4))
          t4 = 2;
        else {
          if (0 >= r5.Rd && null == r5.sd) {
            s3 = o3 = i3 = e3 = 0;
            var l4 = (u4 = c4 * zi[t4]) * h4;
            if (11 > t4 || (o3 = (h4 + 1) / 2 * (e3 = (c4 + 1) / 2), 12 == t4 && (s3 = (i3 = c4) * h4)), null == (h4 = a2(l4 + 2 * o3 + s3))) {
              t4 = 1;
              break t;
            }
            r5.sd = h4, 11 > t4 ? ((c4 = r5.f.RGBA).eb = h4, c4.fb = 0, c4.A = u4, c4.size = l4) : ((c4 = r5.f.kb).y = h4, c4.O = 0, c4.fa = u4, c4.Fd = l4, c4.f = h4, c4.N = 0 + l4, c4.Ab = e3, c4.Cd = o3, c4.ea = h4, c4.W = 0 + l4 + o3, c4.Db = e3, c4.Ed = o3, 12 == t4 && (c4.F = h4, c4.J = 0 + l4 + 2 * o3), c4.Tc = s3, c4.lb = i3);
          }
          if (e3 = 1, i3 = r5.S, o3 = r5.width, s3 = r5.height, i3 >= Er && 13 > i3)
            if (11 > i3)
              t4 = r5.f.RGBA, e3 &= (u4 = Math.abs(t4.A)) * (s3 - 1) + o3 <= t4.size, e3 &= u4 >= o3 * zi[i3], e3 &= null != t4.eb;
            else {
              t4 = r5.f.kb, u4 = (o3 + 1) / 2, l4 = (s3 + 1) / 2, c4 = Math.abs(t4.fa);
              h4 = Math.abs(t4.Ab);
              var f4 = Math.abs(t4.Db), d4 = Math.abs(t4.lb), p4 = d4 * (s3 - 1) + o3;
              e3 &= c4 * (s3 - 1) + o3 <= t4.Fd, e3 &= h4 * (l4 - 1) + u4 <= t4.Cd, e3 = (e3 &= f4 * (l4 - 1) + u4 <= t4.Ed) & c4 >= o3 & h4 >= u4 & f4 >= u4, e3 &= null != t4.y, e3 &= null != t4.f, e3 &= null != t4.ea, 12 == i3 && (e3 &= d4 >= o3, e3 &= p4 <= t4.Tc, e3 &= null != t4.F);
            }
          else
            e3 = 0;
          t4 = e3 ? 0 : 2;
        }
      }
      return 0 != t4 || null != n3 && n3.fd && (t4 = qn(r5)), t4;
    }
    var Tn = 64, Dn = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215], Un = 24, zn = 32, Hn = 8, Wn = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7];
    T2("Predictor0", "PredictorAdd0"), t3.Predictor0 = function() {
      return 4278190080;
    }, t3.Predictor1 = function(t4) {
      return t4;
    }, t3.Predictor2 = function(t4, e3, n3) {
      return e3[n3 + 0];
    }, t3.Predictor3 = function(t4, e3, n3) {
      return e3[n3 + 1];
    }, t3.Predictor4 = function(t4, e3, n3) {
      return e3[n3 - 1];
    }, t3.Predictor5 = function(t4, e3, n3) {
      return U2(U2(t4, e3[n3 + 1]), e3[n3 + 0]);
    }, t3.Predictor6 = function(t4, e3, n3) {
      return U2(t4, e3[n3 - 1]);
    }, t3.Predictor7 = function(t4, e3, n3) {
      return U2(t4, e3[n3 + 0]);
    }, t3.Predictor8 = function(t4, e3, n3) {
      return U2(e3[n3 - 1], e3[n3 + 0]);
    }, t3.Predictor9 = function(t4, e3, n3) {
      return U2(e3[n3 + 0], e3[n3 + 1]);
    }, t3.Predictor10 = function(t4, e3, n3) {
      return U2(U2(t4, e3[n3 - 1]), U2(e3[n3 + 0], e3[n3 + 1]));
    }, t3.Predictor11 = function(t4, e3, n3) {
      var r5 = e3[n3 + 0];
      return 0 >= W2(r5 >> 24 & 255, t4 >> 24 & 255, (e3 = e3[n3 - 1]) >> 24 & 255) + W2(r5 >> 16 & 255, t4 >> 16 & 255, e3 >> 16 & 255) + W2(r5 >> 8 & 255, t4 >> 8 & 255, e3 >> 8 & 255) + W2(255 & r5, 255 & t4, 255 & e3) ? r5 : t4;
    }, t3.Predictor12 = function(t4, e3, n3) {
      var r5 = e3[n3 + 0];
      return (z2((t4 >> 24 & 255) + (r5 >> 24 & 255) - ((e3 = e3[n3 - 1]) >> 24 & 255)) << 24 | z2((t4 >> 16 & 255) + (r5 >> 16 & 255) - (e3 >> 16 & 255)) << 16 | z2((t4 >> 8 & 255) + (r5 >> 8 & 255) - (e3 >> 8 & 255)) << 8 | z2((255 & t4) + (255 & r5) - (255 & e3))) >>> 0;
    }, t3.Predictor13 = function(t4, e3, n3) {
      var r5 = e3[n3 - 1];
      return (H2((t4 = U2(t4, e3[n3 + 0])) >> 24 & 255, r5 >> 24 & 255) << 24 | H2(t4 >> 16 & 255, r5 >> 16 & 255) << 16 | H2(t4 >> 8 & 255, r5 >> 8 & 255) << 8 | H2(t4 >> 0 & 255, r5 >> 0 & 255)) >>> 0;
    };
    var Vn = t3.PredictorAdd0;
    t3.PredictorAdd1 = V2, T2("Predictor2", "PredictorAdd2"), T2("Predictor3", "PredictorAdd3"), T2("Predictor4", "PredictorAdd4"), T2("Predictor5", "PredictorAdd5"), T2("Predictor6", "PredictorAdd6"), T2("Predictor7", "PredictorAdd7"), T2("Predictor8", "PredictorAdd8"), T2("Predictor9", "PredictorAdd9"), T2("Predictor10", "PredictorAdd10"), T2("Predictor11", "PredictorAdd11"), T2("Predictor12", "PredictorAdd12"), T2("Predictor13", "PredictorAdd13");
    var Gn = t3.PredictorAdd2;
    X2("ColorIndexInverseTransform", "MapARGB", "32b", function(t4) {
      return t4 >> 8 & 255;
    }, function(t4) {
      return t4;
    }), X2("VP8LColorIndexInverseTransformAlpha", "MapAlpha", "8b", function(t4) {
      return t4;
    }, function(t4) {
      return t4 >> 8 & 255;
    });
    var Yn, Jn = t3.ColorIndexInverseTransform, Xn = t3.MapARGB, Kn = t3.VP8LColorIndexInverseTransformAlpha, Zn = t3.MapAlpha, $n = t3.VP8LPredictorsAdd = [];
    $n.length = 16, (t3.VP8LPredictors = []).length = 16, (t3.VP8LPredictorsAdd_C = []).length = 16, (t3.VP8LPredictors_C = []).length = 16;
    var Qn, tr, er, nr, rr, ir, ar, or, sr, ur, cr, hr, lr, fr, dr, pr, gr, mr, vr, br, yr, wr, Nr, Lr, xr, Ar, _r, Sr, Pr = a2(511), kr = a2(2041), Fr = a2(225), Ir = a2(767), Cr = 0, jr = kr, Br = Fr, Or = Ir, Mr = Pr, Er = 0, qr = 1, Rr = 2, Tr = 3, Dr = 4, Ur = 5, zr = 6, Hr = 7, Wr = 8, Vr = 9, Gr = 10, Yr = [2, 3, 7], Jr = [3, 3, 11], Xr = [280, 256, 256, 256, 40], Kr = [0, 1, 1, 1, 0], Zr = [17, 18, 0, 1, 2, 3, 4, 5, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], $r = [24, 7, 23, 25, 40, 6, 39, 41, 22, 26, 38, 42, 56, 5, 55, 57, 21, 27, 54, 58, 37, 43, 72, 4, 71, 73, 20, 28, 53, 59, 70, 74, 36, 44, 88, 69, 75, 52, 60, 3, 87, 89, 19, 29, 86, 90, 35, 45, 68, 76, 85, 91, 51, 61, 104, 2, 103, 105, 18, 30, 102, 106, 34, 46, 84, 92, 67, 77, 101, 107, 50, 62, 120, 1, 119, 121, 83, 93, 17, 31, 100, 108, 66, 78, 118, 122, 33, 47, 117, 123, 49, 63, 99, 109, 82, 94, 0, 116, 124, 65, 79, 16, 32, 98, 110, 48, 115, 125, 81, 95, 64, 114, 126, 97, 111, 80, 113, 127, 96, 112], Qr = [2954, 2956, 2958, 2962, 2970, 2986, 3018, 3082, 3212, 3468, 3980, 5004], ti = 8, ei = [4, 5, 6, 7, 8, 9, 10, 10, 11, 12, 13, 14, 15, 16, 17, 17, 18, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 25, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 96, 98, 100, 101, 102, 104, 106, 108, 110, 112, 114, 116, 118, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 143, 145, 148, 151, 154, 157], ni = [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 167, 170, 173, 177, 181, 185, 189, 193, 197, 201, 205, 209, 213, 217, 221, 225, 229, 234, 239, 245, 249, 254, 259, 264, 269, 274, 279, 284], ri = null, ii = [[173, 148, 140, 0], [176, 155, 140, 135, 0], [180, 157, 141, 134, 130, 0], [254, 254, 243, 230, 196, 177, 153, 140, 133, 130, 129, 0]], ai = [0, 1, 4, 8, 5, 2, 3, 6, 9, 12, 13, 10, 7, 11, 14, 15], oi = [-0, 1, -1, 2, -2, 3, 4, 6, -3, 5, -4, -5, -6, 7, -7, 8, -8, -9], si = [[[[128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128], [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128], [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128]], [[253, 136, 254, 255, 228, 219, 128, 128, 128, 128, 128], [189, 129, 242, 255, 227, 213, 255, 219, 128, 128, 128], [106, 126, 227, 252, 214, 209, 255, 255, 128, 128, 128]], [[1, 98, 248, 255, 236, 226, 255, 255, 128, 128, 128], [181, 133, 238, 254, 221, 234, 255, 154, 128, 128, 128], [78, 134, 202, 247, 198, 180, 255, 219, 128, 128, 128]], [[1, 185, 249, 255, 243, 255, 128, 128, 128, 128, 128], [184, 150, 247, 255, 236, 224, 128, 128, 128, 128, 128], [77, 110, 216, 255, 236, 230, 128, 128, 128, 128, 128]], [[1, 101, 251, 255, 241, 255, 128, 128, 128, 128, 128], [170, 139, 241, 252, 236, 209, 255, 255, 128, 128, 128], [37, 116, 196, 243, 228, 255, 255, 255, 128, 128, 128]], [[1, 204, 254, 255, 245, 255, 128, 128, 128, 128, 128], [207, 160, 250, 255, 238, 128, 128, 128, 128, 128, 128], [102, 103, 231, 255, 211, 171, 128, 128, 128, 128, 128]], [[1, 152, 252, 255, 240, 255, 128, 128, 128, 128, 128], [177, 135, 243, 255, 234, 225, 128, 128, 128, 128, 128], [80, 129, 211, 255, 194, 224, 128, 128, 128, 128, 128]], [[1, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128], [246, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128], [255, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128]]], [[[198, 35, 237, 223, 193, 187, 162, 160, 145, 155, 62], [131, 45, 198, 221, 172, 176, 220, 157, 252, 221, 1], [68, 47, 146, 208, 149, 167, 221, 162, 255, 223, 128]], [[1, 149, 241, 255, 221, 224, 255, 255, 128, 128, 128], [184, 141, 234, 253, 222, 220, 255, 199, 128, 128, 128], [81, 99, 181, 242, 176, 190, 249, 202, 255, 255, 128]], [[1, 129, 232, 253, 214, 197, 242, 196, 255, 255, 128], [99, 121, 210, 250, 201, 198, 255, 202, 128, 128, 128], [23, 91, 163, 242, 170, 187, 247, 210, 255, 255, 128]], [[1, 200, 246, 255, 234, 255, 128, 128, 128, 128, 128], [109, 178, 241, 255, 231, 245, 255, 255, 128, 128, 128], [44, 130, 201, 253, 205, 192, 255, 255, 128, 128, 128]], [[1, 132, 239, 251, 219, 209, 255, 165, 128, 128, 128], [94, 136, 225, 251, 218, 190, 255, 255, 128, 128, 128], [22, 100, 174, 245, 186, 161, 255, 199, 128, 128, 128]], [[1, 182, 249, 255, 232, 235, 128, 128, 128, 128, 128], [124, 143, 241, 255, 227, 234, 128, 128, 128, 128, 128], [35, 77, 181, 251, 193, 211, 255, 205, 128, 128, 128]], [[1, 157, 247, 255, 236, 231, 255, 255, 128, 128, 128], [121, 141, 235, 255, 225, 227, 255, 255, 128, 128, 128], [45, 99, 188, 251, 195, 217, 255, 224, 128, 128, 128]], [[1, 1, 251, 255, 213, 255, 128, 128, 128, 128, 128], [203, 1, 248, 255, 255, 128, 128, 128, 128, 128, 128], [137, 1, 177, 255, 224, 255, 128, 128, 128, 128, 128]]], [[[253, 9, 248, 251, 207, 208, 255, 192, 128, 128, 128], [175, 13, 224, 243, 193, 185, 249, 198, 255, 255, 128], [73, 17, 171, 221, 161, 179, 236, 167, 255, 234, 128]], [[1, 95, 247, 253, 212, 183, 255, 255, 128, 128, 128], [239, 90, 244, 250, 211, 209, 255, 255, 128, 128, 128], [155, 77, 195, 248, 188, 195, 255, 255, 128, 128, 128]], [[1, 24, 239, 251, 218, 219, 255, 205, 128, 128, 128], [201, 51, 219, 255, 196, 186, 128, 128, 128, 128, 128], [69, 46, 190, 239, 201, 218, 255, 228, 128, 128, 128]], [[1, 191, 251, 255, 255, 128, 128, 128, 128, 128, 128], [223, 165, 249, 255, 213, 255, 128, 128, 128, 128, 128], [141, 124, 248, 255, 255, 128, 128, 128, 128, 128, 128]], [[1, 16, 248, 255, 255, 128, 128, 128, 128, 128, 128], [190, 36, 230, 255, 236, 255, 128, 128, 128, 128, 128], [149, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128]], [[1, 226, 255, 128, 128, 128, 128, 128, 128, 128, 128], [247, 192, 255, 128, 128, 128, 128, 128, 128, 128, 128], [240, 128, 255, 128, 128, 128, 128, 128, 128, 128, 128]], [[1, 134, 252, 255, 255, 128, 128, 128, 128, 128, 128], [213, 62, 250, 255, 255, 128, 128, 128, 128, 128, 128], [55, 93, 255, 128, 128, 128, 128, 128, 128, 128, 128]], [[128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128], [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128], [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128]]], [[[202, 24, 213, 235, 186, 191, 220, 160, 240, 175, 255], [126, 38, 182, 232, 169, 184, 228, 174, 255, 187, 128], [61, 46, 138, 219, 151, 178, 240, 170, 255, 216, 128]], [[1, 112, 230, 250, 199, 191, 247, 159, 255, 255, 128], [166, 109, 228, 252, 211, 215, 255, 174, 128, 128, 128], [39, 77, 162, 232, 172, 180, 245, 178, 255, 255, 128]], [[1, 52, 220, 246, 198, 199, 249, 220, 255, 255, 128], [124, 74, 191, 243, 183, 193, 250, 221, 255, 255, 128], [24, 71, 130, 219, 154, 170, 243, 182, 255, 255, 128]], [[1, 182, 225, 249, 219, 240, 255, 224, 128, 128, 128], [149, 150, 226, 252, 216, 205, 255, 171, 128, 128, 128], [28, 108, 170, 242, 183, 194, 254, 223, 255, 255, 128]], [[1, 81, 230, 252, 204, 203, 255, 192, 128, 128, 128], [123, 102, 209, 247, 188, 196, 255, 233, 128, 128, 128], [20, 95, 153, 243, 164, 173, 255, 203, 128, 128, 128]], [[1, 222, 248, 255, 216, 213, 128, 128, 128, 128, 128], [168, 175, 246, 252, 235, 205, 255, 255, 128, 128, 128], [47, 116, 215, 255, 211, 212, 255, 255, 128, 128, 128]], [[1, 121, 236, 253, 212, 214, 255, 255, 128, 128, 128], [141, 84, 213, 252, 201, 202, 255, 219, 128, 128, 128], [42, 80, 160, 240, 162, 185, 255, 205, 128, 128, 128]], [[1, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128], [244, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128], [238, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128]]]], ui = [[[231, 120, 48, 89, 115, 113, 120, 152, 112], [152, 179, 64, 126, 170, 118, 46, 70, 95], [175, 69, 143, 80, 85, 82, 72, 155, 103], [56, 58, 10, 171, 218, 189, 17, 13, 152], [114, 26, 17, 163, 44, 195, 21, 10, 173], [121, 24, 80, 195, 26, 62, 44, 64, 85], [144, 71, 10, 38, 171, 213, 144, 34, 26], [170, 46, 55, 19, 136, 160, 33, 206, 71], [63, 20, 8, 114, 114, 208, 12, 9, 226], [81, 40, 11, 96, 182, 84, 29, 16, 36]], [[134, 183, 89, 137, 98, 101, 106, 165, 148], [72, 187, 100, 130, 157, 111, 32, 75, 80], [66, 102, 167, 99, 74, 62, 40, 234, 128], [41, 53, 9, 178, 241, 141, 26, 8, 107], [74, 43, 26, 146, 73, 166, 49, 23, 157], [65, 38, 105, 160, 51, 52, 31, 115, 128], [104, 79, 12, 27, 217, 255, 87, 17, 7], [87, 68, 71, 44, 114, 51, 15, 186, 23], [47, 41, 14, 110, 182, 183, 21, 17, 194], [66, 45, 25, 102, 197, 189, 23, 18, 22]], [[88, 88, 147, 150, 42, 46, 45, 196, 205], [43, 97, 183, 117, 85, 38, 35, 179, 61], [39, 53, 200, 87, 26, 21, 43, 232, 171], [56, 34, 51, 104, 114, 102, 29, 93, 77], [39, 28, 85, 171, 58, 165, 90, 98, 64], [34, 22, 116, 206, 23, 34, 43, 166, 73], [107, 54, 32, 26, 51, 1, 81, 43, 31], [68, 25, 106, 22, 64, 171, 36, 225, 114], [34, 19, 21, 102, 132, 188, 16, 76, 124], [62, 18, 78, 95, 85, 57, 50, 48, 51]], [[193, 101, 35, 159, 215, 111, 89, 46, 111], [60, 148, 31, 172, 219, 228, 21, 18, 111], [112, 113, 77, 85, 179, 255, 38, 120, 114], [40, 42, 1, 196, 245, 209, 10, 25, 109], [88, 43, 29, 140, 166, 213, 37, 43, 154], [61, 63, 30, 155, 67, 45, 68, 1, 209], [100, 80, 8, 43, 154, 1, 51, 26, 71], [142, 78, 78, 16, 255, 128, 34, 197, 171], [41, 40, 5, 102, 211, 183, 4, 1, 221], [51, 50, 17, 168, 209, 192, 23, 25, 82]], [[138, 31, 36, 171, 27, 166, 38, 44, 229], [67, 87, 58, 169, 82, 115, 26, 59, 179], [63, 59, 90, 180, 59, 166, 93, 73, 154], [40, 40, 21, 116, 143, 209, 34, 39, 175], [47, 15, 16, 183, 34, 223, 49, 45, 183], [46, 17, 33, 183, 6, 98, 15, 32, 183], [57, 46, 22, 24, 128, 1, 54, 17, 37], [65, 32, 73, 115, 28, 128, 23, 128, 205], [40, 3, 9, 115, 51, 192, 18, 6, 223], [87, 37, 9, 115, 59, 77, 64, 21, 47]], [[104, 55, 44, 218, 9, 54, 53, 130, 226], [64, 90, 70, 205, 40, 41, 23, 26, 57], [54, 57, 112, 184, 5, 41, 38, 166, 213], [30, 34, 26, 133, 152, 116, 10, 32, 134], [39, 19, 53, 221, 26, 114, 32, 73, 255], [31, 9, 65, 234, 2, 15, 1, 118, 73], [75, 32, 12, 51, 192, 255, 160, 43, 51], [88, 31, 35, 67, 102, 85, 55, 186, 85], [56, 21, 23, 111, 59, 205, 45, 37, 192], [55, 38, 70, 124, 73, 102, 1, 34, 98]], [[125, 98, 42, 88, 104, 85, 117, 175, 82], [95, 84, 53, 89, 128, 100, 113, 101, 45], [75, 79, 123, 47, 51, 128, 81, 171, 1], [57, 17, 5, 71, 102, 57, 53, 41, 49], [38, 33, 13, 121, 57, 73, 26, 1, 85], [41, 10, 67, 138, 77, 110, 90, 47, 114], [115, 21, 2, 10, 102, 255, 166, 23, 6], [101, 29, 16, 10, 85, 128, 101, 196, 26], [57, 18, 10, 102, 102, 213, 34, 20, 43], [117, 20, 15, 36, 163, 128, 68, 1, 26]], [[102, 61, 71, 37, 34, 53, 31, 243, 192], [69, 60, 71, 38, 73, 119, 28, 222, 37], [68, 45, 128, 34, 1, 47, 11, 245, 171], [62, 17, 19, 70, 146, 85, 55, 62, 70], [37, 43, 37, 154, 100, 163, 85, 160, 1], [63, 9, 92, 136, 28, 64, 32, 201, 85], [75, 15, 9, 9, 64, 255, 184, 119, 16], [86, 6, 28, 5, 64, 255, 25, 248, 1], [56, 8, 17, 132, 137, 255, 55, 116, 128], [58, 15, 20, 82, 135, 57, 26, 121, 40]], [[164, 50, 31, 137, 154, 133, 25, 35, 218], [51, 103, 44, 131, 131, 123, 31, 6, 158], [86, 40, 64, 135, 148, 224, 45, 183, 128], [22, 26, 17, 131, 240, 154, 14, 1, 209], [45, 16, 21, 91, 64, 222, 7, 1, 197], [56, 21, 39, 155, 60, 138, 23, 102, 213], [83, 12, 13, 54, 192, 255, 68, 47, 28], [85, 26, 85, 85, 128, 128, 32, 146, 171], [18, 11, 7, 63, 144, 171, 4, 4, 246], [35, 27, 10, 146, 174, 171, 12, 26, 128]], [[190, 80, 35, 99, 180, 80, 126, 54, 45], [85, 126, 47, 87, 176, 51, 41, 20, 32], [101, 75, 128, 139, 118, 146, 116, 128, 85], [56, 41, 15, 176, 236, 85, 37, 9, 62], [71, 30, 17, 119, 118, 255, 17, 18, 138], [101, 38, 60, 138, 55, 70, 43, 26, 142], [146, 36, 19, 30, 171, 255, 97, 27, 20], [138, 45, 61, 62, 219, 1, 81, 188, 64], [32, 41, 20, 117, 151, 142, 20, 21, 163], [112, 19, 12, 61, 195, 128, 48, 4, 24]]], ci = [[[[255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[176, 246, 255, 255, 255, 255, 255, 255, 255, 255, 255], [223, 241, 252, 255, 255, 255, 255, 255, 255, 255, 255], [249, 253, 253, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 244, 252, 255, 255, 255, 255, 255, 255, 255, 255], [234, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], [253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 246, 254, 255, 255, 255, 255, 255, 255, 255, 255], [239, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], [254, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 248, 254, 255, 255, 255, 255, 255, 255, 255, 255], [251, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], [251, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], [254, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 254, 253, 255, 254, 255, 255, 255, 255, 255, 255], [250, 255, 254, 255, 254, 255, 255, 255, 255, 255, 255], [254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]]], [[[217, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [225, 252, 241, 253, 255, 255, 254, 255, 255, 255, 255], [234, 250, 241, 250, 253, 255, 253, 254, 255, 255, 255]], [[255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255], [223, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], [238, 253, 254, 254, 255, 255, 255, 255, 255, 255, 255]], [[255, 248, 254, 255, 255, 255, 255, 255, 255, 255, 255], [249, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255], [247, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], [252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], [253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 254, 253, 255, 255, 255, 255, 255, 255, 255, 255], [250, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]]], [[[186, 251, 250, 255, 255, 255, 255, 255, 255, 255, 255], [234, 251, 244, 254, 255, 255, 255, 255, 255, 255, 255], [251, 251, 243, 253, 254, 255, 254, 255, 255, 255, 255]], [[255, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], [236, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], [251, 253, 253, 254, 254, 255, 255, 255, 255, 255, 255]], [[255, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], [254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255], [254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255], [254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]]], [[[248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [250, 254, 252, 254, 255, 255, 255, 255, 255, 255, 255], [248, 254, 249, 253, 255, 255, 255, 255, 255, 255, 255]], [[255, 253, 253, 255, 255, 255, 255, 255, 255, 255, 255], [246, 253, 253, 255, 255, 255, 255, 255, 255, 255, 255], [252, 254, 251, 254, 254, 255, 255, 255, 255, 255, 255]], [[255, 254, 252, 255, 255, 255, 255, 255, 255, 255, 255], [248, 254, 253, 255, 255, 255, 255, 255, 255, 255, 255], [253, 255, 254, 254, 255, 255, 255, 255, 255, 255, 255]], [[255, 251, 254, 255, 255, 255, 255, 255, 255, 255, 255], [245, 251, 254, 255, 255, 255, 255, 255, 255, 255, 255], [253, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255], [252, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], [255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255], [249, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 255, 253, 255, 255, 255, 255, 255, 255, 255, 255], [250, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]], [[255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]]]], hi = [0, 1, 2, 3, 6, 4, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 0], li = [], fi = [], di = [], pi = 1, gi = 2, mi = [], vi = [];
    bn("UpsampleRgbLinePair", An, 3), bn("UpsampleBgrLinePair", _n, 3), bn("UpsampleRgbaLinePair", In, 4), bn("UpsampleBgraLinePair", Fn, 4), bn("UpsampleArgbLinePair", kn, 4), bn("UpsampleRgba4444LinePair", Pn, 2), bn("UpsampleRgb565LinePair", Sn, 2);
    var bi = t3.UpsampleRgbLinePair, yi = t3.UpsampleBgrLinePair, wi = t3.UpsampleRgbaLinePair, Ni = t3.UpsampleBgraLinePair, Li = t3.UpsampleArgbLinePair, xi = t3.UpsampleRgba4444LinePair, Ai = t3.UpsampleRgb565LinePair, _i = 16, Si = 1 << _i - 1, Pi = -227, ki = 482, Fi = 6, Ii = (256 << Fi) - 1, Ci = 0, ji = a2(256), Bi = a2(256), Oi = a2(256), Mi = a2(256), Ei = a2(ki - Pi), qi = a2(ki - Pi);
    Cn("YuvToRgbRow", An, 3), Cn("YuvToBgrRow", _n, 3), Cn("YuvToRgbaRow", In, 4), Cn("YuvToBgraRow", Fn, 4), Cn("YuvToArgbRow", kn, 4), Cn("YuvToRgba4444Row", Pn, 2), Cn("YuvToRgb565Row", Sn, 2);
    var Ri = [0, 4, 8, 12, 128, 132, 136, 140, 256, 260, 264, 268, 384, 388, 392, 396], Ti = [0, 2, 8], Di = [8, 7, 6, 4, 4, 2, 2, 2, 1, 1, 1, 1], Ui = 1;
    this.WebPDecodeRGBA = function(t4, n3, r5, i3, a3) {
      var o3 = qr, s3 = new nn(), u4 = new ot2();
      s3.ba = u4, u4.S = o3, u4.width = [u4.width], u4.height = [u4.height];
      var c4 = u4.width, h4 = u4.height, l4 = new st2();
      if (null == l4 || null == t4)
        var f4 = 2;
      else
        e2(null != l4), f4 = Mn(t4, n3, r5, l4.width, l4.height, l4.Pd, l4.Qd, l4.format, null);
      if (0 != f4 ? c4 = 0 : (null != c4 && (c4[0] = l4.width[0]), null != h4 && (h4[0] = l4.height[0]), c4 = 1), c4) {
        u4.width = u4.width[0], u4.height = u4.height[0], null != i3 && (i3[0] = u4.width), null != a3 && (a3[0] = u4.height);
        t: {
          if (i3 = new Gt2(), (a3 = new rn()).data = t4, a3.w = n3, a3.ha = r5, a3.kd = 1, n3 = [0], e2(null != a3), (0 == (t4 = Mn(a3.data, a3.w, a3.ha, null, null, null, n3, null, a3)) || 7 == t4) && n3[0] && (t4 = 4), 0 == (n3 = t4)) {
            if (e2(null != s3), i3.data = a3.data, i3.w = a3.w + a3.offset, i3.ha = a3.ha - a3.offset, i3.put = dt2, i3.ac = ft2, i3.bc = pt2, i3.ma = s3, a3.xa) {
              if (null == (t4 = kt2())) {
                s3 = 1;
                break t;
              }
              if (function(t5, n4) {
                var r6 = [0], i4 = [0], a4 = [0];
                e:
                  for (; ; ) {
                    if (null == t5)
                      return 0;
                    if (null == n4)
                      return t5.a = 2, 0;
                    if (t5.l = n4, t5.a = 0, v3(t5.m, n4.data, n4.w, n4.ha), !gt2(t5.m, r6, i4, a4)) {
                      t5.a = 3;
                      break e;
                    }
                    if (t5.xb = gi, n4.width = r6[0], n4.height = i4[0], !Ft2(r6[0], i4[0], 1, t5, null))
                      break e;
                    return 1;
                  }
                return e2(0 != t5.a), 0;
              }(t4, i3)) {
                if (i3 = 0 == (n3 = Rn(i3.width, i3.height, s3.Oa, s3.ba))) {
                  e: {
                    i3 = t4;
                    n:
                      for (; ; ) {
                        if (null == i3) {
                          i3 = 0;
                          break e;
                        }
                        if (e2(null != i3.s.yc), e2(null != i3.s.Ya), e2(0 < i3.s.Wb), e2(null != (r5 = i3.l)), e2(null != (a3 = r5.ma)), 0 != i3.xb) {
                          if (i3.ca = a3.ba, i3.tb = a3.tb, e2(null != i3.ca), !En(a3.Oa, r5, Tr)) {
                            i3.a = 2;
                            break n;
                          }
                          if (!It2(i3, r5.width))
                            break n;
                          if (r5.da)
                            break n;
                          if ((r5.da || rt2(i3.ca.S)) && vn(), 11 > i3.ca.S || (alert("todo:WebPInitConvertARGBToYUV"), null != i3.ca.f.kb.F && vn()), i3.Pb && 0 < i3.s.ua && null == i3.s.vb.X && !B2(i3.s.vb, i3.s.Wa.Xa)) {
                            i3.a = 1;
                            break n;
                          }
                          i3.xb = 0;
                        }
                        if (!St2(i3, i3.V, i3.Ba, i3.c, i3.i, r5.o, Lt2))
                          break n;
                        a3.Dc = i3.Ma, i3 = 1;
                        break e;
                      }
                    e2(0 != i3.a), i3 = 0;
                  }
                  i3 = !i3;
                }
                i3 && (n3 = t4.a);
              } else
                n3 = t4.a;
            } else {
              if (null == (t4 = new Yt2())) {
                s3 = 1;
                break t;
              }
              if (t4.Fa = a3.na, t4.P = a3.P, t4.qc = a3.Sa, Kt2(t4, i3)) {
                if (0 == (n3 = Rn(i3.width, i3.height, s3.Oa, s3.ba))) {
                  if (t4.Aa = 0, r5 = s3.Oa, e2(null != (a3 = t4)), null != r5) {
                    if (0 < (c4 = 0 > (c4 = r5.Md) ? 0 : 100 < c4 ? 255 : 255 * c4 / 100)) {
                      for (h4 = l4 = 0; 4 > h4; ++h4)
                        12 > (f4 = a3.pb[h4]).lc && (f4.ia = c4 * Di[0 > f4.lc ? 0 : f4.lc] >> 3), l4 |= f4.ia;
                      l4 && (alert("todo:VP8InitRandom"), a3.ia = 1);
                    }
                    a3.Ga = r5.Id, 100 < a3.Ga ? a3.Ga = 100 : 0 > a3.Ga && (a3.Ga = 0);
                  }
                  Qt2(t4, i3) || (n3 = t4.a);
                }
              } else
                n3 = t4.a;
            }
            0 == n3 && null != s3.Oa && s3.Oa.fd && (n3 = qn(s3.ba));
          }
          s3 = n3;
        }
        o3 = 0 != s3 ? null : 11 > o3 ? u4.f.RGBA.eb : u4.f.kb.y;
      } else
        o3 = null;
      return o3;
    };
    var zi = [3, 4, 3, 4, 4, 2, 2, 4, 4, 4, 2, 1, 1];
  })();
  var l2 = [0], f2 = [0], d2 = [], p2 = new Et(), g2 = t2, m2 = function(t3, e3) {
    var n3 = {}, r5 = 0, i3 = false, a3 = 0, o3 = 0;
    if (n3.frames = [], !/** @license
       * Copyright (c) 2017 Dominik Homberger
    
    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
    
    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    
    https://webpjs.appspot.com
    WebPRiffParser dominikhlbg@gmail.com
    */
    function(t4, e4, n4, r6) {
      for (var i4 = 0; i4 < r6; i4++)
        if (t4[e4 + i4] != n4.charCodeAt(i4))
          return true;
      return false;
    }(t3, e3, "RIFF", 4)) {
      var s3, l3;
      h2(t3, e3 += 4);
      for (e3 += 8; e3 < t3.length; ) {
        var f3 = u2(t3, e3), d3 = h2(t3, e3 += 4);
        e3 += 4;
        var p3 = d3 + (1 & d3);
        switch (f3) {
          case "VP8 ":
          case "VP8L":
            void 0 === n3.frames[r5] && (n3.frames[r5] = {});
            (v3 = n3.frames[r5]).src_off = i3 ? o3 : e3 - 8, v3.src_size = a3 + d3 + 8, r5++, i3 && (i3 = false, a3 = 0, o3 = 0);
            break;
          case "VP8X":
            (v3 = n3.header = {}).feature_flags = t3[e3];
            var g3 = e3 + 4;
            v3.canvas_width = 1 + c2(t3, g3);
            g3 += 3;
            v3.canvas_height = 1 + c2(t3, g3);
            g3 += 3;
            break;
          case "ALPH":
            i3 = true, a3 = p3 + 8, o3 = e3 - 8;
            break;
          case "ANIM":
            (v3 = n3.header).bgcolor = h2(t3, e3);
            g3 = e3 + 4;
            v3.loop_count = (s3 = t3)[(l3 = g3) + 0] << 0 | s3[l3 + 1] << 8;
            g3 += 2;
            break;
          case "ANMF":
            var m3, v3;
            (v3 = n3.frames[r5] = {}).offset_x = 2 * c2(t3, e3), e3 += 3, v3.offset_y = 2 * c2(t3, e3), e3 += 3, v3.width = 1 + c2(t3, e3), e3 += 3, v3.height = 1 + c2(t3, e3), e3 += 3, v3.duration = c2(t3, e3), e3 += 3, m3 = t3[e3++], v3.dispose = 1 & m3, v3.blend = m3 >> 1 & 1;
        }
        "ANMF" != f3 && (e3 += p3);
      }
      return n3;
    }
  }(g2, 0);
  m2.response = g2, m2.rgbaoutput = true, m2.dataurl = false;
  var v2 = m2.header ? m2.header : null, b2 = m2.frames ? m2.frames : null;
  if (v2) {
    v2.loop_counter = v2.loop_count, l2 = [v2.canvas_height], f2 = [v2.canvas_width];
    for (var y2 = 0; y2 < b2.length && 0 != b2[y2].blend; y2++)
      ;
  }
  var w2 = b2[0], N2 = p2.WebPDecodeRGBA(g2, w2.src_off, w2.src_size, f2, l2);
  w2.rgba = N2, w2.imgwidth = f2[0], w2.imgheight = l2[0];
  for (var L2 = 0; L2 < f2[0] * l2[0] * 4; L2++)
    d2[L2] = N2[L2];
  return this.width = f2, this.height = l2, this.data = d2, this;
}
var t, n, o, s, u, m, v, b, y, w, N, L, x, A, _, S, P, k, F, I, C, j, B, O, M, E, q, R, T, D, U, z, H, W, V, G, Y, J, X, K, Z, $, Q, tt, et, nt, rt, it, at2, ot, st, ut, ct, ht, lt, gt, mt, vt, bt, yt, At, _t, St, Pt, kt, Ft, It, Ct, qt, Rt, Tt, Dt, Ut, zt, Ht, Wt, Vt, Gt, Yt, Jt, Xt, Kt, Zt, $t, Qt, te, ee, ne, re, jspdf_es_min_default;
var init_jspdf_es_min = __esm({
  "node_modules/jspdf/dist/jspdf.es.min.js"() {
    t = /* @__PURE__ */ function() {
      return "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this;
    }();
    n = { log: e, warn: function(n2) {
      t.console && ("function" == typeof t.console.warn ? t.console.warn.apply(t.console, arguments) : e.call(null, arguments));
    }, error: function(n2) {
      t.console && ("function" == typeof t.console.error ? t.console.error.apply(t.console, arguments) : e(n2));
    } };
    u = t.saveAs || ("object" != typeof window || window !== t ? function() {
    } : "download" in HTMLAnchorElement.prototype ? function(e2, n2, o2) {
      var s2 = t.URL || t.webkitURL, u2 = document.createElement("a");
      n2 = n2 || e2.name || "download", u2.download = n2, u2.rel = "noopener", "string" == typeof e2 ? (u2.href = e2, u2.origin !== location.origin ? i(u2.href) ? r3(e2, n2, o2) : a(u2, u2.target = "_blank") : a(u2)) : (u2.href = s2.createObjectURL(e2), setTimeout(function() {
        s2.revokeObjectURL(u2.href);
      }, 4e4), setTimeout(function() {
        a(u2);
      }, 0));
    } : "msSaveOrOpenBlob" in navigator ? function(t2, e2, o2) {
      if (e2 = e2 || t2.name || "download", "string" == typeof t2)
        if (i(t2))
          r3(t2, e2, o2);
        else {
          var s2 = document.createElement("a");
          s2.href = t2, s2.target = "_blank", setTimeout(function() {
            a(s2);
          });
        }
      else
        navigator.msSaveOrOpenBlob(function(t3, e3) {
          return void 0 === e3 ? e3 = { autoBom: false } : "object" != typeof e3 && (n.warn("Deprecated: Expected third argument to be a object"), e3 = { autoBom: !e3 }), e3.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t3.type) ? new Blob([String.fromCharCode(65279), t3], { type: t3.type }) : t3;
        }(t2, o2), e2);
    } : function(e2, n2, i2, a2) {
      if ((a2 = a2 || open("", "_blank")) && (a2.document.title = a2.document.body.innerText = "downloading..."), "string" == typeof e2)
        return r3(e2, n2, i2);
      var o2 = "application/octet-stream" === e2.type, s2 = /constructor/i.test(t.HTMLElement) || t.safari, u2 = /CriOS\/[\d]+/.test(navigator.userAgent);
      if ((u2 || o2 && s2) && "object" == typeof FileReader) {
        var c2 = new FileReader();
        c2.onloadend = function() {
          var t2 = c2.result;
          t2 = u2 ? t2 : t2.replace(/^data:[^;]*;/, "data:attachment/file;"), a2 ? a2.location.href = t2 : location = t2, a2 = null;
        }, c2.readAsDataURL(e2);
      } else {
        var h2 = t.URL || t.webkitURL, l2 = h2.createObjectURL(e2);
        a2 ? a2.location = l2 : location.href = l2, a2 = null, setTimeout(function() {
          h2.revokeObjectURL(l2);
        }, 4e4);
      }
    });
    o = t.atob, s = t.btoa, l.prototype.equals = function(t2) {
      var e2, n2 = "id,objectNumber,equals";
      if (!t2 || typeof t2 != typeof this)
        return false;
      var r4 = 0;
      for (e2 in this)
        if (!(n2.indexOf(e2) >= 0)) {
          if (this.hasOwnProperty(e2) && !t2.hasOwnProperty(e2))
            return false;
          if (this[e2] !== t2[e2])
            return false;
          r4++;
        }
      for (e2 in t2)
        t2.hasOwnProperty(e2) && n2.indexOf(e2) < 0 && r4--;
      return 0 === r4;
    }, g.API = { events: [] }, g.version = "2.1.0";
    v = g.API;
    b = 1;
    y = function(t2) {
      return t2.replace(/\\/g, "\\\\").replace(/\(/g, "\\(").replace(/\)/g, "\\)");
    };
    w = function(t2) {
      return t2.replace(/\\\\/g, "\\").replace(/\\\(/g, "(").replace(/\\\)/g, ")");
    };
    N = function(t2) {
      return t2.toFixed(2);
    };
    L = function(t2) {
      return t2.toFixed(5);
    };
    v.__acroform__ = {};
    x = function(t2, e2) {
      t2.prototype = Object.create(e2.prototype), t2.prototype.constructor = t2;
    };
    A = function(t2) {
      return t2 * b;
    };
    _ = function(t2) {
      var e2 = new J(), n2 = ut.internal.getHeight(t2) || 0, r4 = ut.internal.getWidth(t2) || 0;
      return e2.BBox = [0, 0, Number(N(r4)), Number(N(n2))], e2;
    };
    S = v.__acroform__.setBit = function(t2, e2) {
      if (t2 = t2 || 0, e2 = e2 || 0, isNaN(t2) || isNaN(e2))
        throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBit");
      return t2 |= 1 << e2;
    };
    P = v.__acroform__.clearBit = function(t2, e2) {
      if (t2 = t2 || 0, e2 = e2 || 0, isNaN(t2) || isNaN(e2))
        throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBit");
      return t2 &= ~(1 << e2);
    };
    k = v.__acroform__.getBit = function(t2, e2) {
      if (isNaN(t2) || isNaN(e2))
        throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBit");
      return 0 == (t2 & 1 << e2) ? 0 : 1;
    };
    F = v.__acroform__.getBitForPdf = function(t2, e2) {
      if (isNaN(t2) || isNaN(e2))
        throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf");
      return k(t2, e2 - 1);
    };
    I = v.__acroform__.setBitForPdf = function(t2, e2) {
      if (isNaN(t2) || isNaN(e2))
        throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf");
      return S(t2, e2 - 1);
    };
    C = v.__acroform__.clearBitForPdf = function(t2, e2) {
      if (isNaN(t2) || isNaN(e2))
        throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf");
      return P(t2, e2 - 1);
    };
    j = v.__acroform__.calculateCoordinates = function(t2) {
      var e2 = this.internal.getHorizontalCoordinate, n2 = this.internal.getVerticalCoordinate, r4 = t2[0], i2 = t2[1], a2 = t2[2], o2 = t2[3], s2 = {};
      return s2.lowerLeft_X = e2(r4) || 0, s2.lowerLeft_Y = n2(i2 + o2) || 0, s2.upperRight_X = e2(r4 + a2) || 0, s2.upperRight_Y = n2(i2) || 0, [Number(N(s2.lowerLeft_X)), Number(N(s2.lowerLeft_Y)), Number(N(s2.upperRight_X)), Number(N(s2.upperRight_Y))];
    };
    B = function(t2) {
      if (t2.appearanceStreamContent)
        return t2.appearanceStreamContent;
      if (t2.V || t2.DV) {
        var e2 = [], n2 = t2.V || t2.DV, r4 = O(t2, n2), i2 = m.internal.getFont(t2.fontName, t2.fontStyle).id;
        e2.push("/Tx BMC"), e2.push("q"), e2.push("BT"), e2.push(m.__private__.encodeColorString(t2.color)), e2.push("/" + i2 + " " + N(r4.fontSize) + " Tf"), e2.push("1 0 0 1 0 0 Tm"), e2.push(r4.text), e2.push("ET"), e2.push("Q"), e2.push("EMC");
        var a2 = new _(t2);
        return a2.stream = e2.join("\n"), a2;
      }
    };
    O = function(t2, e2) {
      var n2 = 0 === t2.fontSize ? t2.maxFontSize : t2.fontSize, r4 = { text: "", fontSize: "" }, i2 = (e2 = ")" == (e2 = "(" == e2.substr(0, 1) ? e2.substr(1) : e2).substr(e2.length - 1) ? e2.substr(0, e2.length - 1) : e2).split(" "), a2 = n2, o2 = ut.internal.getHeight(t2) || 0;
      o2 = o2 < 0 ? -o2 : o2;
      var s2 = ut.internal.getWidth(t2) || 0;
      s2 = s2 < 0 ? -s2 : s2;
      var u2 = function(e3, n3, r5) {
        if (e3 + 1 < i2.length) {
          var a3 = n3 + " " + i2[e3 + 1];
          return M(a3, t2, r5).width <= s2 - 4;
        }
        return false;
      };
      a2++;
      t:
        for (; a2 > 0; ) {
          e2 = "", a2--;
          var c2, h2, l2 = M("3", t2, a2).height, f2 = t2.multiline ? o2 - a2 : (o2 - l2) / 2, d2 = f2 += 2, p2 = 0, g2 = 0;
          if (a2 <= 0) {
            e2 = "(...) Tj\n", e2 += "% Width of Text: " + M(e2, t2, a2 = 12).width + ", FieldWidth:" + s2 + "\n";
            break;
          }
          var m2 = "", v2 = 0;
          for (var b2 in i2)
            if (i2.hasOwnProperty(b2)) {
              m2 = " " == (m2 += i2[b2] + " ").substr(m2.length - 1) ? m2.substr(0, m2.length - 1) : m2;
              var w2 = parseInt(b2), L2 = u2(w2, m2, a2), x2 = b2 >= i2.length - 1;
              if (L2 && !x2) {
                m2 += " ";
                continue;
              }
              if (L2 || x2) {
                if (x2)
                  g2 = w2;
                else if (t2.multiline && (l2 + 2) * (v2 + 2) + 2 > o2)
                  continue t;
              } else {
                if (!t2.multiline)
                  continue t;
                if ((l2 + 2) * (v2 + 2) + 2 > o2)
                  continue t;
                g2 = w2;
              }
              for (var A2 = "", _2 = p2; _2 <= g2; _2++)
                A2 += i2[_2] + " ";
              switch (A2 = " " == A2.substr(A2.length - 1) ? A2.substr(0, A2.length - 1) : A2, h2 = M(A2, t2, a2).width, t2.textAlign) {
                case "right":
                  c2 = s2 - h2 - 2;
                  break;
                case "center":
                  c2 = (s2 - h2) / 2;
                  break;
                case "left":
                default:
                  c2 = 2;
              }
              e2 += N(c2) + " " + N(d2) + " Td\n", e2 += "(" + y(A2) + ") Tj\n", e2 += -N(c2) + " 0 Td\n", d2 = -(a2 + 2), h2 = 0, p2 = g2 + 1, v2++, m2 = "";
            } else
              ;
          break;
        }
      return r4.text = e2, r4.fontSize = a2, r4;
    };
    M = function(t2, e2, n2) {
      var r4 = m.internal.getFont(e2.fontName, e2.fontStyle), i2 = m.getStringUnitWidth(t2, { font: r4, fontSize: parseFloat(n2), charSpace: 0 }) * parseFloat(n2);
      return { height: m.getStringUnitWidth("3", { font: r4, fontSize: parseFloat(n2), charSpace: 0 }) * parseFloat(n2) * 1.5, width: i2 };
    };
    E = { fields: [], xForms: [], acroFormDictionaryRoot: null, printedOut: false, internal: null, isInitialized: false };
    q = function() {
      m.internal.acroformPlugin.acroFormDictionaryRoot.objId = void 0;
      var t2 = m.internal.acroformPlugin.acroFormDictionaryRoot.Fields;
      for (var e2 in t2)
        if (t2.hasOwnProperty(e2)) {
          var n2 = t2[e2];
          n2.objId = void 0, n2.hasAnnotation && T.call(m, n2);
        }
    };
    R = function(t2) {
      m.internal.acroformPlugin.printedOut && (m.internal.acroformPlugin.printedOut = false, m.internal.acroformPlugin.acroFormDictionaryRoot = null), m.internal.acroformPlugin.acroFormDictionaryRoot || W.call(m), m.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(t2);
    };
    T = function(t2) {
      var e2 = { type: "reference", object: t2 };
      void 0 === m.internal.getPageInfo(t2.page).pageContext.annotations.find(function(t3) {
        return t3.type === e2.type && t3.object === e2.object;
      }) && m.internal.getPageInfo(t2.page).pageContext.annotations.push(e2);
    };
    D = function() {
      if (void 0 === m.internal.acroformPlugin.acroFormDictionaryRoot)
        throw new Error("putCatalogCallback: Root missing.");
      m.internal.write("/AcroForm " + m.internal.acroformPlugin.acroFormDictionaryRoot.objId + " 0 R");
    };
    U = function() {
      m.internal.events.unsubscribe(m.internal.acroformPlugin.acroFormDictionaryRoot._eventID), delete m.internal.acroformPlugin.acroFormDictionaryRoot._eventID, m.internal.acroformPlugin.printedOut = true;
    };
    z = function(t2) {
      var e2 = !t2;
      for (var n2 in t2 || (m.internal.newObjectDeferredBegin(m.internal.acroformPlugin.acroFormDictionaryRoot.objId, true), m.internal.acroformPlugin.acroFormDictionaryRoot.putStream()), t2 = t2 || m.internal.acroformPlugin.acroFormDictionaryRoot.Kids)
        if (t2.hasOwnProperty(n2)) {
          var r4 = t2[n2], i2 = [], a2 = r4.Rect;
          if (r4.Rect && (r4.Rect = j.call(this, r4.Rect)), m.internal.newObjectDeferredBegin(r4.objId, true), r4.DA = ut.createDefaultAppearanceStream(r4), "object" == typeof r4 && "function" == typeof r4.getKeyValueListForStream && (i2 = r4.getKeyValueListForStream()), r4.Rect = a2, r4.hasAppearanceStream && !r4.appearanceStreamContent) {
            var o2 = B.call(this, r4);
            i2.push({ key: "AP", value: "<</N " + o2 + ">>" }), m.internal.acroformPlugin.xForms.push(o2);
          }
          if (r4.appearanceStreamContent) {
            var s2 = "";
            for (var u2 in r4.appearanceStreamContent)
              if (r4.appearanceStreamContent.hasOwnProperty(u2)) {
                var c2 = r4.appearanceStreamContent[u2];
                if (s2 += "/" + u2 + " ", s2 += "<<", Object.keys(c2).length >= 1 || Array.isArray(c2)) {
                  for (var n2 in c2)
                    if (c2.hasOwnProperty(n2)) {
                      var h2 = c2[n2];
                      "function" == typeof h2 && (h2 = h2.call(this, r4)), s2 += "/" + n2 + " " + h2 + " ", m.internal.acroformPlugin.xForms.indexOf(h2) >= 0 || m.internal.acroformPlugin.xForms.push(h2);
                    }
                } else
                  "function" == typeof (h2 = c2) && (h2 = h2.call(this, r4)), s2 += "/" + n2 + " " + h2, m.internal.acroformPlugin.xForms.indexOf(h2) >= 0 || m.internal.acroformPlugin.xForms.push(h2);
                s2 += ">>";
              }
            i2.push({ key: "AP", value: "<<\n" + s2 + ">>" });
          }
          m.internal.putStream({ additionalKeyValues: i2 }), m.internal.out("endobj");
        }
      e2 && H.call(this, m.internal.acroformPlugin.xForms);
    };
    H = function(t2) {
      for (var e2 in t2)
        if (t2.hasOwnProperty(e2)) {
          var n2 = e2, r4 = t2[e2];
          m.internal.newObjectDeferredBegin(r4 && r4.objId, true), "object" == typeof r4 && "function" == typeof r4.putStream && r4.putStream(), delete t2[n2];
        }
    };
    W = function() {
      if (void 0 !== this.internal && (void 0 === this.internal.acroformPlugin || false === this.internal.acroformPlugin.isInitialized)) {
        if (m = this, K.FieldNum = 0, this.internal.acroformPlugin = JSON.parse(JSON.stringify(E)), this.internal.acroformPlugin.acroFormDictionaryRoot)
          throw new Error("Exception while creating AcroformDictionary");
        b = m.internal.scaleFactor, m.internal.acroformPlugin.acroFormDictionaryRoot = new X(), m.internal.acroformPlugin.acroFormDictionaryRoot._eventID = m.internal.events.subscribe("postPutResources", U), m.internal.events.subscribe("buildDocument", q), m.internal.events.subscribe("putCatalog", D), m.internal.events.subscribe("postPutPages", z), m.internal.acroformPlugin.isInitialized = true;
      }
    };
    V = v.__acroform__.arrayToPdfArray = function(t2) {
      if (Array.isArray(t2)) {
        for (var e2 = "[", n2 = 0; n2 < t2.length; n2++)
          switch (0 !== n2 && (e2 += " "), typeof t2[n2]) {
            case "boolean":
            case "number":
            case "object":
              e2 += t2[n2].toString();
              break;
            case "string":
              "/" !== t2[n2].substr(0, 1) ? e2 += "(" + y(t2[n2].toString()) + ")" : e2 += t2[n2].toString();
          }
        return e2 += "]";
      }
      throw new Error("Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray");
    };
    G = function(t2) {
      return (t2 = t2 || "").toString(), t2 = "(" + y(t2) + ")";
    };
    Y = function() {
      var t2;
      Object.defineProperty(this, "objId", { configurable: true, get: function() {
        return t2 || (t2 = m.internal.newObjectDeferred()), t2;
      }, set: function(e2) {
        t2 = e2;
      } });
    };
    Y.prototype.toString = function() {
      return this.objId + " 0 R";
    }, Y.prototype.putStream = function() {
      var t2 = this.getKeyValueListForStream();
      m.internal.putStream({ data: this.stream, additionalKeyValues: t2 }), m.internal.out("endobj");
    }, Y.prototype.getKeyValueListForStream = function() {
      return function(t2) {
        var e2 = [], n2 = Object.getOwnPropertyNames(t2).filter(function(t3) {
          return "content" != t3 && "appearanceStreamContent" != t3 && "_" != t3.substring(0, 1);
        });
        for (var r4 in n2)
          if (false === Object.getOwnPropertyDescriptor(t2, n2[r4]).configurable) {
            var i2 = n2[r4], a2 = t2[i2];
            a2 && (Array.isArray(a2) ? e2.push({ key: i2, value: V(a2) }) : a2 instanceof Y ? e2.push({ key: i2, value: a2.objId + " 0 R" }) : "function" != typeof a2 && e2.push({ key: i2, value: a2 }));
          }
        return e2;
      }(this);
    };
    J = function() {
      Y.call(this), Object.defineProperty(this, "Type", { value: "/XObject", configurable: false, writeable: true }), Object.defineProperty(this, "Subtype", { value: "/Form", configurable: false, writeable: true }), Object.defineProperty(this, "FormType", { value: 1, configurable: false, writeable: true });
      var t2, e2 = [];
      Object.defineProperty(this, "BBox", { configurable: false, writeable: true, get: function() {
        return e2;
      }, set: function(t3) {
        e2 = t3;
      } }), Object.defineProperty(this, "Resources", { value: "2 0 R", configurable: false, writeable: true }), Object.defineProperty(this, "stream", { enumerable: false, configurable: true, set: function(e3) {
        t2 = e3.trim();
      }, get: function() {
        return t2 || null;
      } });
    };
    x(J, Y);
    X = function() {
      Y.call(this);
      var t2, e2 = [];
      Object.defineProperty(this, "Kids", { enumerable: false, configurable: true, get: function() {
        return e2.length > 0 ? e2 : void 0;
      } }), Object.defineProperty(this, "Fields", { enumerable: false, configurable: false, get: function() {
        return e2;
      } }), Object.defineProperty(this, "DA", { enumerable: false, configurable: false, get: function() {
        if (t2)
          return "(" + t2 + ")";
      }, set: function(e3) {
        t2 = e3;
      } });
    };
    x(X, Y);
    K = function() {
      Y.call(this);
      var t2 = 4;
      Object.defineProperty(this, "F", { enumerable: false, configurable: false, get: function() {
        return t2;
      }, set: function(e3) {
        if (isNaN(e3))
          throw new Error('Invalid value "' + e3 + '" for attribute F supplied.');
        t2 = e3;
      } }), Object.defineProperty(this, "showWhenPrinted", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(t2, 3));
      }, set: function(e3) {
        true === Boolean(e3) ? this.F = I(t2, 3) : this.F = C(t2, 3);
      } });
      var e2 = 0;
      Object.defineProperty(this, "Ff", { enumerable: false, configurable: false, get: function() {
        return e2;
      }, set: function(t3) {
        if (isNaN(t3))
          throw new Error('Invalid value "' + t3 + '" for attribute Ff supplied.');
        e2 = t3;
      } });
      var n2 = [];
      Object.defineProperty(this, "Rect", { enumerable: false, configurable: false, get: function() {
        if (0 !== n2.length)
          return n2;
      }, set: function(t3) {
        n2 = void 0 !== t3 ? t3 : [];
      } }), Object.defineProperty(this, "x", { enumerable: true, configurable: true, get: function() {
        return !n2 || isNaN(n2[0]) ? 0 : n2[0];
      }, set: function(t3) {
        n2[0] = t3;
      } }), Object.defineProperty(this, "y", { enumerable: true, configurable: true, get: function() {
        return !n2 || isNaN(n2[1]) ? 0 : n2[1];
      }, set: function(t3) {
        n2[1] = t3;
      } }), Object.defineProperty(this, "width", { enumerable: true, configurable: true, get: function() {
        return !n2 || isNaN(n2[2]) ? 0 : n2[2];
      }, set: function(t3) {
        n2[2] = t3;
      } }), Object.defineProperty(this, "height", { enumerable: true, configurable: true, get: function() {
        return !n2 || isNaN(n2[3]) ? 0 : n2[3];
      }, set: function(t3) {
        n2[3] = t3;
      } });
      var r4 = "";
      Object.defineProperty(this, "FT", { enumerable: true, configurable: false, get: function() {
        return r4;
      }, set: function(t3) {
        switch (t3) {
          case "/Btn":
          case "/Tx":
          case "/Ch":
          case "/Sig":
            r4 = t3;
            break;
          default:
            throw new Error('Invalid value "' + t3 + '" for attribute FT supplied.');
        }
      } });
      var i2 = null;
      Object.defineProperty(this, "T", { enumerable: true, configurable: false, get: function() {
        if (!i2 || i2.length < 1) {
          if (this instanceof it)
            return;
          i2 = "FieldObject" + K.FieldNum++;
        }
        return "(" + y(i2) + ")";
      }, set: function(t3) {
        i2 = t3.toString();
      } }), Object.defineProperty(this, "fieldName", { configurable: true, enumerable: true, get: function() {
        return i2;
      }, set: function(t3) {
        i2 = t3;
      } });
      var a2 = "helvetica";
      Object.defineProperty(this, "fontName", { enumerable: true, configurable: true, get: function() {
        return a2;
      }, set: function(t3) {
        a2 = t3;
      } });
      var o2 = "normal";
      Object.defineProperty(this, "fontStyle", { enumerable: true, configurable: true, get: function() {
        return o2;
      }, set: function(t3) {
        o2 = t3;
      } });
      var s2 = 0;
      Object.defineProperty(this, "fontSize", { enumerable: true, configurable: true, get: function() {
        return s2;
      }, set: function(t3) {
        s2 = t3;
      } });
      var u2 = void 0;
      Object.defineProperty(this, "maxFontSize", { enumerable: true, configurable: true, get: function() {
        return void 0 === u2 ? 50 / b : u2;
      }, set: function(t3) {
        u2 = t3;
      } });
      var c2 = "black";
      Object.defineProperty(this, "color", { enumerable: true, configurable: true, get: function() {
        return c2;
      }, set: function(t3) {
        c2 = t3;
      } });
      var h2 = "/F1 0 Tf 0 g";
      Object.defineProperty(this, "DA", { enumerable: true, configurable: false, get: function() {
        if (!(!h2 || this instanceof it || this instanceof ot))
          return G(h2);
      }, set: function(t3) {
        t3 = t3.toString(), h2 = t3;
      } });
      var l2 = null;
      Object.defineProperty(this, "DV", { enumerable: false, configurable: false, get: function() {
        if (l2)
          return this instanceof et == false ? G(l2) : l2;
      }, set: function(t3) {
        t3 = t3.toString(), l2 = this instanceof et == false ? "(" === t3.substr(0, 1) ? w(t3.substr(1, t3.length - 2)) : w(t3) : t3;
      } }), Object.defineProperty(this, "defaultValue", { enumerable: true, configurable: true, get: function() {
        return this instanceof et == true ? w(l2.substr(1, l2.length - 1)) : l2;
      }, set: function(t3) {
        t3 = t3.toString(), l2 = this instanceof et == true ? "/" + t3 : t3;
      } });
      var f2 = null;
      Object.defineProperty(this, "V", { enumerable: false, configurable: false, get: function() {
        if (f2)
          return this instanceof et == false ? G(f2) : f2;
      }, set: function(t3) {
        t3 = t3.toString(), f2 = this instanceof et == false ? "(" === t3.substr(0, 1) ? w(t3.substr(1, t3.length - 2)) : w(t3) : t3;
      } }), Object.defineProperty(this, "value", { enumerable: true, configurable: true, get: function() {
        return this instanceof et == true ? w(f2.substr(1, f2.length - 1)) : f2;
      }, set: function(t3) {
        t3 = t3.toString(), f2 = this instanceof et == true ? "/" + t3 : t3;
      } }), Object.defineProperty(this, "hasAnnotation", { enumerable: true, configurable: true, get: function() {
        return this.Rect;
      } }), Object.defineProperty(this, "Type", { enumerable: true, configurable: false, get: function() {
        return this.hasAnnotation ? "/Annot" : null;
      } }), Object.defineProperty(this, "Subtype", { enumerable: true, configurable: false, get: function() {
        return this.hasAnnotation ? "/Widget" : null;
      } });
      var d2, p2 = false;
      Object.defineProperty(this, "hasAppearanceStream", { enumerable: true, configurable: true, writeable: true, get: function() {
        return p2;
      }, set: function(t3) {
        t3 = Boolean(t3), p2 = t3;
      } }), Object.defineProperty(this, "page", { enumerable: true, configurable: true, writeable: true, get: function() {
        if (d2)
          return d2;
      }, set: function(t3) {
        d2 = t3;
      } }), Object.defineProperty(this, "readOnly", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 1));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 1) : this.Ff = C(this.Ff, 1);
      } }), Object.defineProperty(this, "required", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 2));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 2) : this.Ff = C(this.Ff, 2);
      } }), Object.defineProperty(this, "noExport", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 3));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 3) : this.Ff = C(this.Ff, 3);
      } });
      var g2 = null;
      Object.defineProperty(this, "Q", { enumerable: true, configurable: false, get: function() {
        if (null !== g2)
          return g2;
      }, set: function(t3) {
        if (-1 === [0, 1, 2].indexOf(t3))
          throw new Error('Invalid value "' + t3 + '" for attribute Q supplied.');
        g2 = t3;
      } }), Object.defineProperty(this, "textAlign", { get: function() {
        var t3;
        switch (g2) {
          case 0:
          default:
            t3 = "left";
            break;
          case 1:
            t3 = "center";
            break;
          case 2:
            t3 = "right";
        }
        return t3;
      }, configurable: true, enumerable: true, set: function(t3) {
        switch (t3) {
          case "right":
          case 2:
            g2 = 2;
            break;
          case "center":
          case 1:
            g2 = 1;
            break;
          case "left":
          case 0:
          default:
            g2 = 0;
        }
      } });
    };
    x(K, Y);
    Z = function() {
      K.call(this), this.FT = "/Ch", this.V = "()", this.fontName = "zapfdingbats";
      var t2 = 0;
      Object.defineProperty(this, "TI", { enumerable: true, configurable: false, get: function() {
        return t2;
      }, set: function(e3) {
        t2 = e3;
      } }), Object.defineProperty(this, "topIndex", { enumerable: true, configurable: true, get: function() {
        return t2;
      }, set: function(e3) {
        t2 = e3;
      } });
      var e2 = [];
      Object.defineProperty(this, "Opt", { enumerable: true, configurable: false, get: function() {
        return V(e2);
      }, set: function(t3) {
        var n2, r4;
        r4 = [], "string" == typeof (n2 = t3) && (r4 = function(t4, e3, n3) {
          n3 || (n3 = 1);
          for (var r5, i2 = []; r5 = e3.exec(t4); )
            i2.push(r5[n3]);
          return i2;
        }(n2, /\((.*?)\)/g)), e2 = r4;
      } }), this.getOptions = function() {
        return e2;
      }, this.setOptions = function(t3) {
        e2 = t3, this.sort && e2.sort();
      }, this.addOption = function(t3) {
        t3 = (t3 = t3 || "").toString(), e2.push(t3), this.sort && e2.sort();
      }, this.removeOption = function(t3, n2) {
        for (n2 = n2 || false, t3 = (t3 = t3 || "").toString(); -1 !== e2.indexOf(t3) && (e2.splice(e2.indexOf(t3), 1), false !== n2); )
          ;
      }, Object.defineProperty(this, "combo", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 18));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 18) : this.Ff = C(this.Ff, 18);
      } }), Object.defineProperty(this, "edit", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 19));
      }, set: function(t3) {
        true === this.combo && (true === Boolean(t3) ? this.Ff = I(this.Ff, 19) : this.Ff = C(this.Ff, 19));
      } }), Object.defineProperty(this, "sort", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 20));
      }, set: function(t3) {
        true === Boolean(t3) ? (this.Ff = I(this.Ff, 20), e2.sort()) : this.Ff = C(this.Ff, 20);
      } }), Object.defineProperty(this, "multiSelect", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 22));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 22) : this.Ff = C(this.Ff, 22);
      } }), Object.defineProperty(this, "doNotSpellCheck", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 23));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 23) : this.Ff = C(this.Ff, 23);
      } }), Object.defineProperty(this, "commitOnSelChange", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 27));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 27) : this.Ff = C(this.Ff, 27);
      } }), this.hasAppearanceStream = false;
    };
    x(Z, K);
    $ = function() {
      Z.call(this), this.fontName = "helvetica", this.combo = false;
    };
    x($, Z);
    Q = function() {
      $.call(this), this.combo = true;
    };
    x(Q, $);
    tt = function() {
      Q.call(this), this.edit = true;
    };
    x(tt, Q);
    et = function() {
      K.call(this), this.FT = "/Btn", Object.defineProperty(this, "noToggleToOff", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 15));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 15) : this.Ff = C(this.Ff, 15);
      } }), Object.defineProperty(this, "radio", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 16));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 16) : this.Ff = C(this.Ff, 16);
      } }), Object.defineProperty(this, "pushButton", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 17));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 17) : this.Ff = C(this.Ff, 17);
      } }), Object.defineProperty(this, "radioIsUnison", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 26));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 26) : this.Ff = C(this.Ff, 26);
      } });
      var t2, e2 = {};
      Object.defineProperty(this, "MK", { enumerable: false, configurable: false, get: function() {
        if (0 !== Object.keys(e2).length) {
          var t3, n2 = [];
          for (t3 in n2.push("<<"), e2)
            n2.push("/" + t3 + " (" + e2[t3] + ")");
          return n2.push(">>"), n2.join("\n");
        }
      }, set: function(t3) {
        "object" == typeof t3 && (e2 = t3);
      } }), Object.defineProperty(this, "caption", { enumerable: true, configurable: true, get: function() {
        return e2.CA || "";
      }, set: function(t3) {
        "string" == typeof t3 && (e2.CA = t3);
      } }), Object.defineProperty(this, "AS", { enumerable: false, configurable: false, get: function() {
        return t2;
      }, set: function(e3) {
        t2 = e3;
      } }), Object.defineProperty(this, "appearanceState", { enumerable: true, configurable: true, get: function() {
        return t2.substr(1, t2.length - 1);
      }, set: function(e3) {
        t2 = "/" + e3;
      } });
    };
    x(et, K);
    nt = function() {
      et.call(this), this.pushButton = true;
    };
    x(nt, et);
    rt = function() {
      et.call(this), this.radio = true, this.pushButton = false;
      var t2 = [];
      Object.defineProperty(this, "Kids", { enumerable: true, configurable: false, get: function() {
        return t2;
      }, set: function(e2) {
        t2 = void 0 !== e2 ? e2 : [];
      } });
    };
    x(rt, et);
    it = function() {
      var t2, e2;
      K.call(this), Object.defineProperty(this, "Parent", { enumerable: false, configurable: false, get: function() {
        return t2;
      }, set: function(e3) {
        t2 = e3;
      } }), Object.defineProperty(this, "optionName", { enumerable: false, configurable: true, get: function() {
        return e2;
      }, set: function(t3) {
        e2 = t3;
      } });
      var n2, r4 = {};
      Object.defineProperty(this, "MK", { enumerable: false, configurable: false, get: function() {
        var t3, e3 = [];
        for (t3 in e3.push("<<"), r4)
          e3.push("/" + t3 + " (" + r4[t3] + ")");
        return e3.push(">>"), e3.join("\n");
      }, set: function(t3) {
        "object" == typeof t3 && (r4 = t3);
      } }), Object.defineProperty(this, "caption", { enumerable: true, configurable: true, get: function() {
        return r4.CA || "";
      }, set: function(t3) {
        "string" == typeof t3 && (r4.CA = t3);
      } }), Object.defineProperty(this, "AS", { enumerable: false, configurable: false, get: function() {
        return n2;
      }, set: function(t3) {
        n2 = t3;
      } }), Object.defineProperty(this, "appearanceState", { enumerable: true, configurable: true, get: function() {
        return n2.substr(1, n2.length - 1);
      }, set: function(t3) {
        n2 = "/" + t3;
      } }), this.caption = "l", this.appearanceState = "Off", this._AppearanceType = ut.RadioButton.Circle, this.appearanceStreamContent = this._AppearanceType.createAppearanceStream(this.optionName);
    };
    x(it, K), rt.prototype.setAppearance = function(t2) {
      if (!("createAppearanceStream" in t2) || !("getCA" in t2))
        throw new Error("Couldn't assign Appearance to RadioButton. Appearance was Invalid!");
      for (var e2 in this.Kids)
        if (this.Kids.hasOwnProperty(e2)) {
          var n2 = this.Kids[e2];
          n2.appearanceStreamContent = t2.createAppearanceStream(n2.optionName), n2.caption = t2.getCA();
        }
    }, rt.prototype.createOption = function(t2) {
      var e2 = new it();
      return e2.Parent = this, e2.optionName = t2, this.Kids.push(e2), ct.call(this, e2), e2;
    };
    at2 = function() {
      et.call(this), this.fontName = "zapfdingbats", this.caption = "3", this.appearanceState = "On", this.value = "On", this.textAlign = "center", this.appearanceStreamContent = ut.CheckBox.createAppearanceStream();
    };
    x(at2, et);
    ot = function() {
      K.call(this), this.FT = "/Tx", Object.defineProperty(this, "multiline", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 13));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 13) : this.Ff = C(this.Ff, 13);
      } }), Object.defineProperty(this, "fileSelect", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 21));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 21) : this.Ff = C(this.Ff, 21);
      } }), Object.defineProperty(this, "doNotSpellCheck", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 23));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 23) : this.Ff = C(this.Ff, 23);
      } }), Object.defineProperty(this, "doNotScroll", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 24));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 24) : this.Ff = C(this.Ff, 24);
      } }), Object.defineProperty(this, "comb", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 25));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 25) : this.Ff = C(this.Ff, 25);
      } }), Object.defineProperty(this, "richText", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 26));
      }, set: function(t3) {
        true === Boolean(t3) ? this.Ff = I(this.Ff, 26) : this.Ff = C(this.Ff, 26);
      } });
      var t2 = null;
      Object.defineProperty(this, "MaxLen", { enumerable: true, configurable: false, get: function() {
        return t2;
      }, set: function(e2) {
        t2 = e2;
      } }), Object.defineProperty(this, "maxLength", { enumerable: true, configurable: true, get: function() {
        return t2;
      }, set: function(e2) {
        Number.isInteger(e2) && (t2 = e2);
      } }), Object.defineProperty(this, "hasAppearanceStream", { enumerable: true, configurable: true, get: function() {
        return this.V || this.DV;
      } });
    };
    x(ot, K);
    st = function() {
      ot.call(this), Object.defineProperty(this, "password", { enumerable: true, configurable: true, get: function() {
        return Boolean(F(this.Ff, 14));
      }, set: function(t2) {
        true === Boolean(t2) ? this.Ff = I(this.Ff, 14) : this.Ff = C(this.Ff, 14);
      } }), this.password = true;
    };
    x(st, ot);
    ut = { CheckBox: { createAppearanceStream: function() {
      return { N: { On: ut.CheckBox.YesNormal }, D: { On: ut.CheckBox.YesPushDown, Off: ut.CheckBox.OffPushDown } };
    }, YesPushDown: function(t2) {
      var e2 = new _(t2), n2 = [], r4 = m.internal.getFont(t2.fontName, t2.fontStyle).id, i2 = m.__private__.encodeColorString(t2.color), a2 = O(t2, t2.caption);
      return n2.push("0.749023 g"), n2.push("0 0 " + N(ut.internal.getWidth(t2)) + " " + N(ut.internal.getHeight(t2)) + " re"), n2.push("f"), n2.push("BMC"), n2.push("q"), n2.push("0 0 1 rg"), n2.push("/" + r4 + " " + N(a2.fontSize) + " Tf " + i2), n2.push("BT"), n2.push(a2.text), n2.push("ET"), n2.push("Q"), n2.push("EMC"), e2.stream = n2.join("\n"), e2;
    }, YesNormal: function(t2) {
      var e2 = new _(t2), n2 = m.internal.getFont(t2.fontName, t2.fontStyle).id, r4 = m.__private__.encodeColorString(t2.color), i2 = [], a2 = ut.internal.getHeight(t2), o2 = ut.internal.getWidth(t2), s2 = O(t2, t2.caption);
      return i2.push("1 g"), i2.push("0 0 " + N(o2) + " " + N(a2) + " re"), i2.push("f"), i2.push("q"), i2.push("0 0 1 rg"), i2.push("0 0 " + N(o2 - 1) + " " + N(a2 - 1) + " re"), i2.push("W"), i2.push("n"), i2.push("0 g"), i2.push("BT"), i2.push("/" + n2 + " " + N(s2.fontSize) + " Tf " + r4), i2.push(s2.text), i2.push("ET"), i2.push("Q"), e2.stream = i2.join("\n"), e2;
    }, OffPushDown: function(t2) {
      var e2 = new _(t2), n2 = [];
      return n2.push("0.749023 g"), n2.push("0 0 " + N(ut.internal.getWidth(t2)) + " " + N(ut.internal.getHeight(t2)) + " re"), n2.push("f"), e2.stream = n2.join("\n"), e2;
    } }, RadioButton: { Circle: { createAppearanceStream: function(t2) {
      var e2 = { D: { Off: ut.RadioButton.Circle.OffPushDown }, N: {} };
      return e2.N[t2] = ut.RadioButton.Circle.YesNormal, e2.D[t2] = ut.RadioButton.Circle.YesPushDown, e2;
    }, getCA: function() {
      return "l";
    }, YesNormal: function(t2) {
      var e2 = new _(t2), n2 = [], r4 = ut.internal.getWidth(t2) <= ut.internal.getHeight(t2) ? ut.internal.getWidth(t2) / 4 : ut.internal.getHeight(t2) / 4;
      r4 = Number((0.9 * r4).toFixed(5));
      var i2 = ut.internal.Bezier_C, a2 = Number((r4 * i2).toFixed(5));
      return n2.push("q"), n2.push("1 0 0 1 " + L(ut.internal.getWidth(t2) / 2) + " " + L(ut.internal.getHeight(t2) / 2) + " cm"), n2.push(r4 + " 0 m"), n2.push(r4 + " " + a2 + " " + a2 + " " + r4 + " 0 " + r4 + " c"), n2.push("-" + a2 + " " + r4 + " -" + r4 + " " + a2 + " -" + r4 + " 0 c"), n2.push("-" + r4 + " -" + a2 + " -" + a2 + " -" + r4 + " 0 -" + r4 + " c"), n2.push(a2 + " -" + r4 + " " + r4 + " -" + a2 + " " + r4 + " 0 c"), n2.push("f"), n2.push("Q"), e2.stream = n2.join("\n"), e2;
    }, YesPushDown: function(t2) {
      var e2 = new _(t2), n2 = [], r4 = ut.internal.getWidth(t2) <= ut.internal.getHeight(t2) ? ut.internal.getWidth(t2) / 4 : ut.internal.getHeight(t2) / 4, i2 = (r4 = Number((0.9 * r4).toFixed(5)), Number((2 * r4).toFixed(5))), a2 = Number((i2 * ut.internal.Bezier_C).toFixed(5)), o2 = Number((r4 * ut.internal.Bezier_C).toFixed(5));
      return n2.push("0.749023 g"), n2.push("q"), n2.push("1 0 0 1 " + L(ut.internal.getWidth(t2) / 2) + " " + L(ut.internal.getHeight(t2) / 2) + " cm"), n2.push(i2 + " 0 m"), n2.push(i2 + " " + a2 + " " + a2 + " " + i2 + " 0 " + i2 + " c"), n2.push("-" + a2 + " " + i2 + " -" + i2 + " " + a2 + " -" + i2 + " 0 c"), n2.push("-" + i2 + " -" + a2 + " -" + a2 + " -" + i2 + " 0 -" + i2 + " c"), n2.push(a2 + " -" + i2 + " " + i2 + " -" + a2 + " " + i2 + " 0 c"), n2.push("f"), n2.push("Q"), n2.push("0 g"), n2.push("q"), n2.push("1 0 0 1 " + L(ut.internal.getWidth(t2) / 2) + " " + L(ut.internal.getHeight(t2) / 2) + " cm"), n2.push(r4 + " 0 m"), n2.push(r4 + " " + o2 + " " + o2 + " " + r4 + " 0 " + r4 + " c"), n2.push("-" + o2 + " " + r4 + " -" + r4 + " " + o2 + " -" + r4 + " 0 c"), n2.push("-" + r4 + " -" + o2 + " -" + o2 + " -" + r4 + " 0 -" + r4 + " c"), n2.push(o2 + " -" + r4 + " " + r4 + " -" + o2 + " " + r4 + " 0 c"), n2.push("f"), n2.push("Q"), e2.stream = n2.join("\n"), e2;
    }, OffPushDown: function(t2) {
      var e2 = new _(t2), n2 = [], r4 = ut.internal.getWidth(t2) <= ut.internal.getHeight(t2) ? ut.internal.getWidth(t2) / 4 : ut.internal.getHeight(t2) / 4;
      r4 = Number((0.9 * r4).toFixed(5));
      var i2 = Number((2 * r4).toFixed(5)), a2 = Number((i2 * ut.internal.Bezier_C).toFixed(5));
      return n2.push("0.749023 g"), n2.push("q"), n2.push("1 0 0 1 " + L(ut.internal.getWidth(t2) / 2) + " " + L(ut.internal.getHeight(t2) / 2) + " cm"), n2.push(i2 + " 0 m"), n2.push(i2 + " " + a2 + " " + a2 + " " + i2 + " 0 " + i2 + " c"), n2.push("-" + a2 + " " + i2 + " -" + i2 + " " + a2 + " -" + i2 + " 0 c"), n2.push("-" + i2 + " -" + a2 + " -" + a2 + " -" + i2 + " 0 -" + i2 + " c"), n2.push(a2 + " -" + i2 + " " + i2 + " -" + a2 + " " + i2 + " 0 c"), n2.push("f"), n2.push("Q"), e2.stream = n2.join("\n"), e2;
    } }, Cross: { createAppearanceStream: function(t2) {
      var e2 = { D: { Off: ut.RadioButton.Cross.OffPushDown }, N: {} };
      return e2.N[t2] = ut.RadioButton.Cross.YesNormal, e2.D[t2] = ut.RadioButton.Cross.YesPushDown, e2;
    }, getCA: function() {
      return "8";
    }, YesNormal: function(t2) {
      var e2 = new _(t2), n2 = [], r4 = ut.internal.calculateCross(t2);
      return n2.push("q"), n2.push("1 1 " + N(ut.internal.getWidth(t2) - 2) + " " + N(ut.internal.getHeight(t2) - 2) + " re"), n2.push("W"), n2.push("n"), n2.push(N(r4.x1.x) + " " + N(r4.x1.y) + " m"), n2.push(N(r4.x2.x) + " " + N(r4.x2.y) + " l"), n2.push(N(r4.x4.x) + " " + N(r4.x4.y) + " m"), n2.push(N(r4.x3.x) + " " + N(r4.x3.y) + " l"), n2.push("s"), n2.push("Q"), e2.stream = n2.join("\n"), e2;
    }, YesPushDown: function(t2) {
      var e2 = new _(t2), n2 = ut.internal.calculateCross(t2), r4 = [];
      return r4.push("0.749023 g"), r4.push("0 0 " + N(ut.internal.getWidth(t2)) + " " + N(ut.internal.getHeight(t2)) + " re"), r4.push("f"), r4.push("q"), r4.push("1 1 " + N(ut.internal.getWidth(t2) - 2) + " " + N(ut.internal.getHeight(t2) - 2) + " re"), r4.push("W"), r4.push("n"), r4.push(N(n2.x1.x) + " " + N(n2.x1.y) + " m"), r4.push(N(n2.x2.x) + " " + N(n2.x2.y) + " l"), r4.push(N(n2.x4.x) + " " + N(n2.x4.y) + " m"), r4.push(N(n2.x3.x) + " " + N(n2.x3.y) + " l"), r4.push("s"), r4.push("Q"), e2.stream = r4.join("\n"), e2;
    }, OffPushDown: function(t2) {
      var e2 = new _(t2), n2 = [];
      return n2.push("0.749023 g"), n2.push("0 0 " + N(ut.internal.getWidth(t2)) + " " + N(ut.internal.getHeight(t2)) + " re"), n2.push("f"), e2.stream = n2.join("\n"), e2;
    } } }, createDefaultAppearanceStream: function(t2) {
      var e2 = m.internal.getFont(t2.fontName, t2.fontStyle).id, n2 = m.__private__.encodeColorString(t2.color);
      return "/" + e2 + " " + t2.fontSize + " Tf " + n2;
    } };
    ut.internal = { Bezier_C: 0.551915024494, calculateCross: function(t2) {
      var e2 = ut.internal.getWidth(t2), n2 = ut.internal.getHeight(t2), r4 = Math.min(e2, n2);
      return { x1: { x: (e2 - r4) / 2, y: (n2 - r4) / 2 + r4 }, x2: { x: (e2 - r4) / 2 + r4, y: (n2 - r4) / 2 }, x3: { x: (e2 - r4) / 2, y: (n2 - r4) / 2 }, x4: { x: (e2 - r4) / 2 + r4, y: (n2 - r4) / 2 + r4 } };
    } }, ut.internal.getWidth = function(t2) {
      var e2 = 0;
      return "object" == typeof t2 && (e2 = A(t2.Rect[2])), e2;
    }, ut.internal.getHeight = function(t2) {
      var e2 = 0;
      return "object" == typeof t2 && (e2 = A(t2.Rect[3])), e2;
    };
    ct = v.addField = function(t2) {
      if (W.call(this), !(t2 instanceof K))
        throw new Error("Invalid argument passed to jsPDF.addField.");
      return R.call(this, t2), t2.page = m.internal.getCurrentPageInfo().pageNumber, this;
    };
    v.AcroFormChoiceField = Z, v.AcroFormListBox = $, v.AcroFormComboBox = Q, v.AcroFormEditBox = tt, v.AcroFormButton = et, v.AcroFormPushButton = nt, v.AcroFormRadioButton = rt, v.AcroFormCheckBox = at2, v.AcroFormTextField = ot, v.AcroFormPasswordField = st, v.AcroFormAppearance = ut, v.AcroForm = { ChoiceField: Z, ListBox: $, ComboBox: Q, EditBox: tt, Button: et, PushButton: nt, RadioButton: rt, CheckBox: at2, TextField: ot, PasswordField: st, Appearance: ut }, g.AcroForm = { ChoiceField: Z, ListBox: $, ComboBox: Q, EditBox: tt, Button: et, PushButton: nt, RadioButton: rt, CheckBox: at2, TextField: ot, PasswordField: st, Appearance: ut };
    ht = g.AcroForm;
    !function(t2) {
      t2.__addimage__ = {};
      var e2 = "UNKNOWN", n2 = { PNG: [[137, 80, 78, 71]], TIFF: [[77, 77, 0, 42], [73, 73, 42, 0]], JPEG: [[255, 216, 255, 224, void 0, void 0, 74, 70, 73, 70, 0], [255, 216, 255, 225, void 0, void 0, 69, 120, 105, 102, 0, 0], [255, 216, 255, 219], [255, 216, 255, 238]], JPEG2000: [[0, 0, 0, 12, 106, 80, 32, 32]], GIF87a: [[71, 73, 70, 56, 55, 97]], GIF89a: [[71, 73, 70, 56, 57, 97]], WEBP: [[82, 73, 70, 70, void 0, void 0, void 0, void 0, 87, 69, 66, 80]], BMP: [[66, 77], [66, 65], [67, 73], [67, 80], [73, 67], [80, 84]] }, r4 = t2.__addimage__.getImageFileTypeByImageData = function(t3, r5) {
        var i3, a3;
        r5 = r5 || e2;
        var o2, s2, u3, c3 = e2;
        if (A2(t3))
          for (u3 in n2)
            for (o2 = n2[u3], i3 = 0; i3 < o2.length; i3 += 1) {
              for (s2 = true, a3 = 0; a3 < o2[i3].length; a3 += 1)
                if (void 0 !== o2[i3][a3] && o2[i3][a3] !== t3[a3]) {
                  s2 = false;
                  break;
                }
              if (true === s2) {
                c3 = u3;
                break;
              }
            }
        else
          for (u3 in n2)
            for (o2 = n2[u3], i3 = 0; i3 < o2.length; i3 += 1) {
              for (s2 = true, a3 = 0; a3 < o2[i3].length; a3 += 1)
                if (void 0 !== o2[i3][a3] && o2[i3][a3] !== t3.charCodeAt(a3)) {
                  s2 = false;
                  break;
                }
              if (true === s2) {
                c3 = u3;
                break;
              }
            }
        return c3 === e2 && r5 !== e2 && (c3 = r5), c3;
      }, i2 = function(t3) {
        for (var e3 = this.internal.write, n3 = this.internal.putStream, r5 = (0, this.internal.getFilters)(); -1 !== r5.indexOf("FlateEncode"); )
          r5.splice(r5.indexOf("FlateEncode"), 1);
        t3.objectId = this.internal.newObject();
        var a3 = [];
        if (a3.push({ key: "Type", value: "/XObject" }), a3.push({ key: "Subtype", value: "/Image" }), a3.push({ key: "Width", value: t3.width }), a3.push({ key: "Height", value: t3.height }), t3.colorSpace === b2.INDEXED ? a3.push({ key: "ColorSpace", value: "[/Indexed /DeviceRGB " + (t3.palette.length / 3 - 1) + " " + ("sMask" in t3 && void 0 !== t3.sMask ? t3.objectId + 2 : t3.objectId + 1) + " 0 R]" }) : (a3.push({ key: "ColorSpace", value: "/" + t3.colorSpace }), t3.colorSpace === b2.DEVICE_CMYK && a3.push({ key: "Decode", value: "[1 0 1 0 1 0 1 0]" })), a3.push({ key: "BitsPerComponent", value: t3.bitsPerComponent }), "decodeParameters" in t3 && void 0 !== t3.decodeParameters && a3.push({ key: "DecodeParms", value: "<<" + t3.decodeParameters + ">>" }), "transparency" in t3 && Array.isArray(t3.transparency)) {
          for (var o2 = "", s2 = 0, u3 = t3.transparency.length; s2 < u3; s2++)
            o2 += t3.transparency[s2] + " " + t3.transparency[s2] + " ";
          a3.push({ key: "Mask", value: "[" + o2 + "]" });
        }
        void 0 !== t3.sMask && a3.push({ key: "SMask", value: t3.objectId + 1 + " 0 R" });
        var c3 = void 0 !== t3.filter ? ["/" + t3.filter] : void 0;
        if (n3({ data: t3.data, additionalKeyValues: a3, alreadyAppliedFilters: c3 }), e3("endobj"), "sMask" in t3 && void 0 !== t3.sMask) {
          var h3 = "/Predictor " + t3.predictor + " /Colors 1 /BitsPerComponent " + t3.bitsPerComponent + " /Columns " + t3.width, l3 = { width: t3.width, height: t3.height, colorSpace: "DeviceGray", bitsPerComponent: t3.bitsPerComponent, decodeParameters: h3, data: t3.sMask };
          "filter" in t3 && (l3.filter = t3.filter), i2.call(this, l3);
        }
        t3.colorSpace === b2.INDEXED && (this.internal.newObject(), n3({ data: S2(new Uint8Array(t3.palette)) }), e3("endobj"));
      }, a2 = function() {
        var t3 = this.internal.collections.addImage_images;
        for (var e3 in t3)
          i2.call(this, t3[e3]);
      }, u2 = function() {
        var t3, e3 = this.internal.collections.addImage_images, n3 = this.internal.write;
        for (var r5 in e3)
          n3("/I" + (t3 = e3[r5]).index, t3.objectId, "0", "R");
      }, c2 = function() {
        this.internal.collections.addImage_images || (this.internal.collections.addImage_images = {}, this.internal.events.subscribe("putResources", a2), this.internal.events.subscribe("putXobjectDict", u2));
      }, h2 = function() {
        var t3 = this.internal.collections.addImage_images;
        return c2.call(this), t3;
      }, l2 = function() {
        return Object.keys(this.internal.collections.addImage_images).length;
      }, f2 = function(e3) {
        return "function" == typeof t2["process" + e3.toUpperCase()];
      }, d2 = function(t3) {
        return "object" == typeof t3 && 1 === t3.nodeType;
      }, p2 = function(e3, n3) {
        if ("IMG" === e3.nodeName && e3.hasAttribute("src")) {
          var r5 = "" + e3.getAttribute("src");
          if (0 === r5.indexOf("data:image/"))
            return o(unescape(r5).split("base64,").pop());
          var i3 = t2.loadFile(r5, true);
          if (void 0 !== i3)
            return i3;
        }
        if ("CANVAS" === e3.nodeName) {
          var a3;
          switch (n3) {
            case "PNG":
              a3 = "image/png";
              break;
            case "WEBP":
              a3 = "image/webp";
              break;
            case "JPEG":
            case "JPG":
            default:
              a3 = "image/jpeg";
          }
          return o(e3.toDataURL(a3, 1).split("base64,").pop());
        }
      }, g2 = function(t3) {
        var e3 = this.internal.collections.addImage_images;
        if (e3) {
          for (var n3 in e3)
            if (t3 === e3[n3].alias)
              return e3[n3];
        }
      }, m2 = function(t3, e3, n3) {
        return t3 || e3 || (t3 = -96, e3 = -96), t3 < 0 && (t3 = -1 * n3.width * 72 / t3 / this.internal.scaleFactor), e3 < 0 && (e3 = -1 * n3.height * 72 / e3 / this.internal.scaleFactor), 0 === t3 && (t3 = e3 * n3.width / n3.height), 0 === e3 && (e3 = t3 * n3.height / n3.width), [t3, e3];
      }, v2 = function(t3, e3, n3, r5, i3, a3) {
        var o2 = m2.call(this, n3, r5, i3), s2 = this.internal.getCoordinateString, u3 = this.internal.getVerticalCoordinateString, c3 = h2.call(this);
        if (n3 = o2[0], r5 = o2[1], c3[i3.index] = i3, a3) {
          a3 *= Math.PI / 180;
          var l3 = Math.cos(a3), f3 = Math.sin(a3), d3 = function(t4) {
            return t4.toFixed(4);
          }, p3 = [d3(l3), d3(f3), d3(-1 * f3), d3(l3), 0, 0, "cm"];
        }
        this.internal.write("q"), a3 ? (this.internal.write([1, "0", "0", 1, s2(t3), u3(e3 + r5), "cm"].join(" ")), this.internal.write(p3.join(" ")), this.internal.write([s2(n3), "0", "0", s2(r5), "0", "0", "cm"].join(" "))) : this.internal.write([s2(n3), "0", "0", s2(r5), s2(t3), u3(e3 + r5), "cm"].join(" ")), this.isAdvancedAPI() && this.internal.write([1, 0, 0, -1, 0, 0, "cm"].join(" ")), this.internal.write("/I" + i3.index + " Do"), this.internal.write("Q");
      }, b2 = t2.color_spaces = { DEVICE_RGB: "DeviceRGB", DEVICE_GRAY: "DeviceGray", DEVICE_CMYK: "DeviceCMYK", CAL_GREY: "CalGray", CAL_RGB: "CalRGB", LAB: "Lab", ICC_BASED: "ICCBased", INDEXED: "Indexed", PATTERN: "Pattern", SEPARATION: "Separation", DEVICE_N: "DeviceN" };
      t2.decode = { DCT_DECODE: "DCTDecode", FLATE_DECODE: "FlateDecode", LZW_DECODE: "LZWDecode", JPX_DECODE: "JPXDecode", JBIG2_DECODE: "JBIG2Decode", ASCII85_DECODE: "ASCII85Decode", ASCII_HEX_DECODE: "ASCIIHexDecode", RUN_LENGTH_DECODE: "RunLengthDecode", CCITT_FAX_DECODE: "CCITTFaxDecode" };
      var y2 = t2.image_compression = { NONE: "NONE", FAST: "FAST", MEDIUM: "MEDIUM", SLOW: "SLOW" }, w2 = t2.__addimage__.sHashCode = function(t3) {
        var e3, n3, r5 = 0;
        if ("string" == typeof t3)
          for (n3 = t3.length, e3 = 0; e3 < n3; e3++)
            r5 = (r5 << 5) - r5 + t3.charCodeAt(e3), r5 |= 0;
        else if (A2(t3))
          for (n3 = t3.byteLength / 2, e3 = 0; e3 < n3; e3++)
            r5 = (r5 << 5) - r5 + t3[e3], r5 |= 0;
        return r5;
      }, N2 = t2.__addimage__.validateStringAsBase64 = function(t3) {
        (t3 = t3 || "").toString().trim();
        var e3 = true;
        return 0 === t3.length && (e3 = false), t3.length % 4 != 0 && (e3 = false), false === /^[A-Za-z0-9+/]+$/.test(t3.substr(0, t3.length - 2)) && (e3 = false), false === /^[A-Za-z0-9/][A-Za-z0-9+/]|[A-Za-z0-9+/]=|==$/.test(t3.substr(-2)) && (e3 = false), e3;
      }, L2 = t2.__addimage__.extractImageFromDataUrl = function(t3) {
        var e3 = (t3 = t3 || "").split("base64,"), n3 = null;
        if (2 === e3.length) {
          var r5 = /^data:(\w*\/\w*);*(charset=[\w=-]*)*;*$/.exec(e3[0]);
          Array.isArray(r5) && (n3 = { mimeType: r5[1], charset: r5[2], data: e3[1] });
        }
        return n3;
      }, x2 = t2.__addimage__.supportsArrayBuffer = function() {
        return "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array;
      };
      t2.__addimage__.isArrayBuffer = function(t3) {
        return x2() && t3 instanceof ArrayBuffer;
      };
      var A2 = t2.__addimage__.isArrayBufferView = function(t3) {
        return x2() && "undefined" != typeof Uint32Array && (t3 instanceof Int8Array || t3 instanceof Uint8Array || "undefined" != typeof Uint8ClampedArray && t3 instanceof Uint8ClampedArray || t3 instanceof Int16Array || t3 instanceof Uint16Array || t3 instanceof Int32Array || t3 instanceof Uint32Array || t3 instanceof Float32Array || t3 instanceof Float64Array);
      }, _2 = t2.__addimage__.binaryStringToUint8Array = function(t3) {
        for (var e3 = t3.length, n3 = new Uint8Array(e3), r5 = 0; r5 < e3; r5++)
          n3[r5] = t3.charCodeAt(r5);
        return n3;
      }, S2 = t2.__addimage__.arrayBufferToBinaryString = function(t3) {
        try {
          return o(s(String.fromCharCode.apply(null, t3)));
        } catch (e3) {
          if ("undefined" != typeof Uint8Array && void 0 !== Uint8Array.prototype.reduce)
            return new Uint8Array(t3).reduce(function(t4, e4) {
              return t4.push(String.fromCharCode(e4)), t4;
            }, []).join("");
        }
      };
      t2.addImage = function() {
        var t3, n3, r5, i3, a3, o2, s2, u3, h3;
        if ("number" == typeof arguments[1] ? (n3 = e2, r5 = arguments[1], i3 = arguments[2], a3 = arguments[3], o2 = arguments[4], s2 = arguments[5], u3 = arguments[6], h3 = arguments[7]) : (n3 = arguments[1], r5 = arguments[2], i3 = arguments[3], a3 = arguments[4], o2 = arguments[5], s2 = arguments[6], u3 = arguments[7], h3 = arguments[8]), "object" == typeof (t3 = arguments[0]) && !d2(t3) && "imageData" in t3) {
          var l3 = t3;
          t3 = l3.imageData, n3 = l3.format || n3 || e2, r5 = l3.x || r5 || 0, i3 = l3.y || i3 || 0, a3 = l3.w || l3.width || a3, o2 = l3.h || l3.height || o2, s2 = l3.alias || s2, u3 = l3.compression || u3, h3 = l3.rotation || l3.angle || h3;
        }
        var f3 = this.internal.getFilters();
        if (void 0 === u3 && -1 !== f3.indexOf("FlateEncode") && (u3 = "SLOW"), isNaN(r5) || isNaN(i3))
          throw new Error("Invalid coordinates passed to jsPDF.addImage");
        c2.call(this);
        var p3 = P2.call(this, t3, n3, s2, u3);
        return v2.call(this, r5, i3, a3, o2, p3, h3), this;
      };
      var P2 = function(n3, i3, a3, o2) {
        var s2, u3, c3;
        if ("string" == typeof n3 && r4(n3) === e2) {
          n3 = unescape(n3);
          var h3 = k2(n3, false);
          ("" !== h3 || void 0 !== (h3 = t2.loadFile(n3, true))) && (n3 = h3);
        }
        if (d2(n3) && (n3 = p2(n3, i3)), i3 = r4(n3, i3), !f2(i3))
          throw new Error("addImage does not support files of type '" + i3 + "', please ensure that a plugin for '" + i3 + "' support is added.");
        if ((null == (c3 = a3) || 0 === c3.length) && (a3 = function(t3) {
          return "string" == typeof t3 || A2(t3) ? w2(t3) : null;
        }(n3)), (s2 = g2.call(this, a3)) || (x2() && (n3 instanceof Uint8Array || (u3 = n3, n3 = _2(n3))), s2 = this["process" + i3.toUpperCase()](n3, l2.call(this), a3, function(e3) {
          return e3 && "string" == typeof e3 && (e3 = e3.toUpperCase()), e3 in t2.image_compression ? e3 : y2.NONE;
        }(o2), u3)), !s2)
          throw new Error("An unknown error occurred whilst processing the image.");
        return s2;
      }, k2 = t2.__addimage__.convertBase64ToBinaryString = function(t3, e3) {
        var n3;
        e3 = "boolean" != typeof e3 || e3;
        var r5, i3 = "";
        if ("string" == typeof t3) {
          r5 = null !== (n3 = L2(t3)) ? n3.data : t3;
          try {
            i3 = o(r5);
          } catch (t4) {
            if (e3)
              throw N2(r5) ? new Error("atob-Error in jsPDF.convertBase64ToBinaryString " + t4.message) : new Error("Supplied Data is not a valid base64-String jsPDF.convertBase64ToBinaryString ");
          }
        }
        return i3;
      };
      t2.getImageProperties = function(n3) {
        var i3, a3, o2 = "";
        if (d2(n3) && (n3 = p2(n3)), "string" == typeof n3 && r4(n3) === e2 && ("" === (o2 = k2(n3, false)) && (o2 = t2.loadFile(n3) || ""), n3 = o2), a3 = r4(n3), !f2(a3))
          throw new Error("addImage does not support files of type '" + a3 + "', please ensure that a plugin for '" + a3 + "' support is added.");
        if (!x2() || n3 instanceof Uint8Array || (n3 = _2(n3)), !(i3 = this["process" + a3.toUpperCase()](n3)))
          throw new Error("An unknown error occurred whilst processing the image");
        return i3.fileType = a3, i3;
      };
    }(g.API), /**
     * @license
     * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2) {
      var e2 = function(t3) {
        if (void 0 !== t3 && "" != t3)
          return true;
      };
      g.API.events.push(["addPage", function(t3) {
        this.internal.getPageInfo(t3.pageNumber).pageContext.annotations = [];
      }]), t2.events.push(["putPage", function(t3) {
        for (var n2, r4, i2, a2 = this.internal.getCoordinateString, o2 = this.internal.getVerticalCoordinateString, s2 = this.internal.getPageInfoByObjId(t3.objId), u2 = t3.pageContext.annotations, c2 = false, h2 = 0; h2 < u2.length && !c2; h2++)
          switch ((n2 = u2[h2]).type) {
            case "link":
              (e2(n2.options.url) || e2(n2.options.pageNumber)) && (c2 = true);
              break;
            case "reference":
            case "text":
            case "freetext":
              c2 = true;
          }
        if (0 != c2) {
          this.internal.write("/Annots [");
          for (var l2 = 0; l2 < u2.length; l2++)
            switch ((n2 = u2[l2]).type) {
              case "reference":
                this.internal.write(" " + n2.object.objId + " 0 R ");
                break;
              case "text":
                var f2 = this.internal.newAdditionalObject(), d2 = this.internal.newAdditionalObject(), p2 = n2.title || "Note";
                i2 = "<</Type /Annot /Subtype /Text " + (r4 = "/Rect [" + a2(n2.bounds.x) + " " + o2(n2.bounds.y + n2.bounds.h) + " " + a2(n2.bounds.x + n2.bounds.w) + " " + o2(n2.bounds.y) + "] ") + "/Contents (" + n2.contents + ")", i2 += " /Popup " + d2.objId + " 0 R", i2 += " /P " + s2.objId + " 0 R", i2 += " /T (" + p2 + ") >>", f2.content = i2;
                var g2 = f2.objId + " 0 R";
                i2 = "<</Type /Annot /Subtype /Popup " + (r4 = "/Rect [" + a2(n2.bounds.x + 30) + " " + o2(n2.bounds.y + n2.bounds.h) + " " + a2(n2.bounds.x + n2.bounds.w + 30) + " " + o2(n2.bounds.y) + "] ") + " /Parent " + g2, n2.open && (i2 += " /Open true"), i2 += " >>", d2.content = i2, this.internal.write(f2.objId, "0 R", d2.objId, "0 R");
                break;
              case "freetext":
                r4 = "/Rect [" + a2(n2.bounds.x) + " " + o2(n2.bounds.y) + " " + a2(n2.bounds.x + n2.bounds.w) + " " + o2(n2.bounds.y + n2.bounds.h) + "] ";
                var m2 = n2.color || "#000000";
                i2 = "<</Type /Annot /Subtype /FreeText " + r4 + "/Contents (" + n2.contents + ")", i2 += " /DS(font: Helvetica,sans-serif 12.0pt; text-align:left; color:#" + m2 + ")", i2 += " /Border [0 0 0]", i2 += " >>", this.internal.write(i2);
                break;
              case "link":
                if (n2.options.name) {
                  var v2 = this.annotations._nameMap[n2.options.name];
                  n2.options.pageNumber = v2.page, n2.options.top = v2.y;
                } else
                  n2.options.top || (n2.options.top = 0);
                if (r4 = "/Rect [" + a2(n2.x) + " " + o2(n2.y) + " " + a2(n2.x + n2.w) + " " + o2(n2.y + n2.h) + "] ", i2 = "", n2.options.url)
                  i2 = "<</Type /Annot /Subtype /Link " + r4 + "/Border [0 0 0] /A <</S /URI /URI (" + n2.options.url + ") >>";
                else if (n2.options.pageNumber) {
                  switch (i2 = "<</Type /Annot /Subtype /Link " + r4 + "/Border [0 0 0] /Dest [" + this.internal.getPageInfo(n2.options.pageNumber).objId + " 0 R", n2.options.magFactor = n2.options.magFactor || "XYZ", n2.options.magFactor) {
                    case "Fit":
                      i2 += " /Fit]";
                      break;
                    case "FitH":
                      i2 += " /FitH " + n2.options.top + "]";
                      break;
                    case "FitV":
                      n2.options.left = n2.options.left || 0, i2 += " /FitV " + n2.options.left + "]";
                      break;
                    case "XYZ":
                    default:
                      var b2 = o2(n2.options.top);
                      n2.options.left = n2.options.left || 0, void 0 === n2.options.zoom && (n2.options.zoom = 0), i2 += " /XYZ " + n2.options.left + " " + b2 + " " + n2.options.zoom + "]";
                  }
                }
                "" != i2 && (i2 += " >>", this.internal.write(i2));
            }
          this.internal.write("]");
        }
      }]), t2.createAnnotation = function(t3) {
        var e3 = this.internal.getCurrentPageInfo();
        switch (t3.type) {
          case "link":
            this.link(t3.bounds.x, t3.bounds.y, t3.bounds.w, t3.bounds.h, t3);
            break;
          case "text":
          case "freetext":
            e3.pageContext.annotations.push(t3);
        }
      }, t2.link = function(t3, e3, n2, r4, i2) {
        this.internal.getCurrentPageInfo().pageContext.annotations.push({ x: t3, y: e3, w: n2, h: r4, options: i2, type: "link" });
      }, t2.textWithLink = function(t3, e3, n2, r4) {
        var i2 = this.getTextWidth(t3), a2 = this.internal.getLineHeight() / this.internal.scaleFactor;
        return this.text(t3, e3, n2, r4), n2 += 0.2 * a2, this.link(e3, n2 - a2, i2, a2, r4), i2;
      }, t2.getTextWidth = function(t3) {
        var e3 = this.internal.getFontSize();
        return this.getStringUnitWidth(t3) * e3 / this.internal.scaleFactor;
      };
    }(g.API), /**
     * @license
     * Copyright (c) 2017 Aras Abbasi
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2) {
      var e2 = { 1569: [65152], 1570: [65153, 65154], 1571: [65155, 65156], 1572: [65157, 65158], 1573: [65159, 65160], 1574: [65161, 65162, 65163, 65164], 1575: [65165, 65166], 1576: [65167, 65168, 65169, 65170], 1577: [65171, 65172], 1578: [65173, 65174, 65175, 65176], 1579: [65177, 65178, 65179, 65180], 1580: [65181, 65182, 65183, 65184], 1581: [65185, 65186, 65187, 65188], 1582: [65189, 65190, 65191, 65192], 1583: [65193, 65194], 1584: [65195, 65196], 1585: [65197, 65198], 1586: [65199, 65200], 1587: [65201, 65202, 65203, 65204], 1588: [65205, 65206, 65207, 65208], 1589: [65209, 65210, 65211, 65212], 1590: [65213, 65214, 65215, 65216], 1591: [65217, 65218, 65219, 65220], 1592: [65221, 65222, 65223, 65224], 1593: [65225, 65226, 65227, 65228], 1594: [65229, 65230, 65231, 65232], 1601: [65233, 65234, 65235, 65236], 1602: [65237, 65238, 65239, 65240], 1603: [65241, 65242, 65243, 65244], 1604: [65245, 65246, 65247, 65248], 1605: [65249, 65250, 65251, 65252], 1606: [65253, 65254, 65255, 65256], 1607: [65257, 65258, 65259, 65260], 1608: [65261, 65262], 1609: [65263, 65264, 64488, 64489], 1610: [65265, 65266, 65267, 65268], 1649: [64336, 64337], 1655: [64477], 1657: [64358, 64359, 64360, 64361], 1658: [64350, 64351, 64352, 64353], 1659: [64338, 64339, 64340, 64341], 1662: [64342, 64343, 64344, 64345], 1663: [64354, 64355, 64356, 64357], 1664: [64346, 64347, 64348, 64349], 1667: [64374, 64375, 64376, 64377], 1668: [64370, 64371, 64372, 64373], 1670: [64378, 64379, 64380, 64381], 1671: [64382, 64383, 64384, 64385], 1672: [64392, 64393], 1676: [64388, 64389], 1677: [64386, 64387], 1678: [64390, 64391], 1681: [64396, 64397], 1688: [64394, 64395], 1700: [64362, 64363, 64364, 64365], 1702: [64366, 64367, 64368, 64369], 1705: [64398, 64399, 64400, 64401], 1709: [64467, 64468, 64469, 64470], 1711: [64402, 64403, 64404, 64405], 1713: [64410, 64411, 64412, 64413], 1715: [64406, 64407, 64408, 64409], 1722: [64414, 64415], 1723: [64416, 64417, 64418, 64419], 1726: [64426, 64427, 64428, 64429], 1728: [64420, 64421], 1729: [64422, 64423, 64424, 64425], 1733: [64480, 64481], 1734: [64473, 64474], 1735: [64471, 64472], 1736: [64475, 64476], 1737: [64482, 64483], 1739: [64478, 64479], 1740: [64508, 64509, 64510, 64511], 1744: [64484, 64485, 64486, 64487], 1746: [64430, 64431], 1747: [64432, 64433] }, n2 = { 65247: { 65154: 65269, 65156: 65271, 65160: 65273, 65166: 65275 }, 65248: { 65154: 65270, 65156: 65272, 65160: 65274, 65166: 65276 }, 65165: { 65247: { 65248: { 65258: 65010 } } }, 1617: { 1612: 64606, 1613: 64607, 1614: 64608, 1615: 64609, 1616: 64610 } }, r4 = { 1612: 64606, 1613: 64607, 1614: 64608, 1615: 64609, 1616: 64610 }, i2 = [1570, 1571, 1573, 1575];
      t2.__arabicParser__ = {};
      var a2 = t2.__arabicParser__.isInArabicSubstitutionA = function(t3) {
        return void 0 !== e2[t3.charCodeAt(0)];
      }, o2 = t2.__arabicParser__.isArabicLetter = function(t3) {
        return "string" == typeof t3 && /^[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFF]+$/.test(t3);
      }, s2 = t2.__arabicParser__.isArabicEndLetter = function(t3) {
        return o2(t3) && a2(t3) && e2[t3.charCodeAt(0)].length <= 2;
      }, u2 = t2.__arabicParser__.isArabicAlfLetter = function(t3) {
        return o2(t3) && i2.indexOf(t3.charCodeAt(0)) >= 0;
      };
      t2.__arabicParser__.arabicLetterHasIsolatedForm = function(t3) {
        return o2(t3) && a2(t3) && e2[t3.charCodeAt(0)].length >= 1;
      };
      var c2 = t2.__arabicParser__.arabicLetterHasFinalForm = function(t3) {
        return o2(t3) && a2(t3) && e2[t3.charCodeAt(0)].length >= 2;
      };
      t2.__arabicParser__.arabicLetterHasInitialForm = function(t3) {
        return o2(t3) && a2(t3) && e2[t3.charCodeAt(0)].length >= 3;
      };
      var h2 = t2.__arabicParser__.arabicLetterHasMedialForm = function(t3) {
        return o2(t3) && a2(t3) && 4 == e2[t3.charCodeAt(0)].length;
      }, l2 = t2.__arabicParser__.resolveLigatures = function(t3) {
        var e3 = 0, r5 = n2, i3 = "", a3 = 0;
        for (e3 = 0; e3 < t3.length; e3 += 1)
          void 0 !== r5[t3.charCodeAt(e3)] ? (a3++, "number" == typeof (r5 = r5[t3.charCodeAt(e3)]) && (i3 += String.fromCharCode(r5), r5 = n2, a3 = 0), e3 === t3.length - 1 && (r5 = n2, i3 += t3.charAt(e3 - (a3 - 1)), e3 -= a3 - 1, a3 = 0)) : (r5 = n2, i3 += t3.charAt(e3 - a3), e3 -= a3, a3 = 0);
        return i3;
      };
      t2.__arabicParser__.isArabicDiacritic = function(t3) {
        return void 0 !== t3 && void 0 !== r4[t3.charCodeAt(0)];
      };
      var f2 = t2.__arabicParser__.getCorrectForm = function(t3, e3, n3) {
        return o2(t3) ? false === a2(t3) ? -1 : !c2(t3) || !o2(e3) && !o2(n3) || !o2(n3) && s2(e3) || s2(t3) && !o2(e3) || s2(t3) && u2(e3) || s2(t3) && s2(e3) ? 0 : h2(t3) && o2(e3) && !s2(e3) && o2(n3) && c2(n3) ? 3 : s2(t3) || !o2(n3) ? 1 : 2 : -1;
      }, d2 = function(t3) {
        var n3 = 0, r5 = 0, i3 = 0, a3 = "", s3 = "", u3 = "", c3 = (t3 = t3 || "").split("\\s+"), h3 = [];
        for (n3 = 0; n3 < c3.length; n3 += 1) {
          for (h3.push(""), r5 = 0; r5 < c3[n3].length; r5 += 1)
            a3 = c3[n3][r5], s3 = c3[n3][r5 - 1], u3 = c3[n3][r5 + 1], o2(a3) ? (i3 = f2(a3, s3, u3), h3[n3] += -1 !== i3 ? String.fromCharCode(e2[a3.charCodeAt(0)][i3]) : a3) : h3[n3] += a3;
          h3[n3] = l2(h3[n3]);
        }
        return h3.join(" ");
      }, p2 = t2.__arabicParser__.processArabic = t2.processArabic = function() {
        var t3, e3 = "string" == typeof arguments[0] ? arguments[0] : arguments[0].text, n3 = [];
        if (Array.isArray(e3)) {
          var r5 = 0;
          for (n3 = [], r5 = 0; r5 < e3.length; r5 += 1)
            Array.isArray(e3[r5]) ? n3.push([d2(e3[r5][0]), e3[r5][1], e3[r5][2]]) : n3.push([d2(e3[r5])]);
          t3 = n3;
        } else
          t3 = d2(e3);
        return "string" == typeof arguments[0] ? t3 : (arguments[0].text = t3, arguments[0]);
      };
      t2.events.push(["preProcessText", p2]);
    }(g.API), g.API.autoPrint = function(t2) {
      var e2;
      switch ((t2 = t2 || {}).variant = t2.variant || "non-conform", t2.variant) {
        case "javascript":
          this.addJS("print({});");
          break;
        case "non-conform":
        default:
          this.internal.events.subscribe("postPutResources", function() {
            e2 = this.internal.newObject(), this.internal.out("<<"), this.internal.out("/S /Named"), this.internal.out("/Type /Action"), this.internal.out("/N /Print"), this.internal.out(">>"), this.internal.out("endobj");
          }), this.internal.events.subscribe("putCatalog", function() {
            this.internal.out("/OpenAction " + e2 + " 0 R");
          });
      }
      return this;
    }, /**
     * @license
     * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2) {
      var e2 = function() {
        var t3 = void 0;
        Object.defineProperty(this, "pdf", { get: function() {
          return t3;
        }, set: function(e4) {
          t3 = e4;
        } });
        var e3 = 150;
        Object.defineProperty(this, "width", { get: function() {
          return e3;
        }, set: function(t4) {
          e3 = isNaN(t4) || false === Number.isInteger(t4) || t4 < 0 ? 150 : t4, this.getContext("2d").pageWrapXEnabled && (this.getContext("2d").pageWrapX = e3 + 1);
        } });
        var n2 = 300;
        Object.defineProperty(this, "height", { get: function() {
          return n2;
        }, set: function(t4) {
          n2 = isNaN(t4) || false === Number.isInteger(t4) || t4 < 0 ? 300 : t4, this.getContext("2d").pageWrapYEnabled && (this.getContext("2d").pageWrapY = n2 + 1);
        } });
        var r4 = [];
        Object.defineProperty(this, "childNodes", { get: function() {
          return r4;
        }, set: function(t4) {
          r4 = t4;
        } });
        var i2 = {};
        Object.defineProperty(this, "style", { get: function() {
          return i2;
        }, set: function(t4) {
          i2 = t4;
        } }), Object.defineProperty(this, "parentNode", {});
      };
      e2.prototype.getContext = function(t3, e3) {
        var n2;
        if ("2d" !== (t3 = t3 || "2d"))
          return null;
        for (n2 in e3)
          this.pdf.context2d.hasOwnProperty(n2) && (this.pdf.context2d[n2] = e3[n2]);
        return this.pdf.context2d._canvas = this, this.pdf.context2d;
      }, e2.prototype.toDataURL = function() {
        throw new Error("toDataURL is not implemented.");
      }, t2.events.push(["initialized", function() {
        this.canvas = new e2(), this.canvas.pdf = this;
      }]);
    }(g.API), /**
     * @license
     * ====================================================================
     * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com
     *               2013 Eduardo Menezes de Morais, eduardo.morais@usp.br
     *               2013 Lee Driscoll, https://github.com/lsdriscoll
     *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
     *               2014 James Hall, james@parall.ax
     *               2014 Diego Casorran, https://github.com/diegocr
     *
     * Permission is hereby granted, free of charge, to any person obtaining
     * a copy of this software and associated documentation files (the
     * "Software"), to deal in the Software without restriction, including
     * without limitation the rights to use, copy, modify, merge, publish,
     * distribute, sublicense, and/or sell copies of the Software, and to
     * permit persons to whom the Software is furnished to do so, subject to
     * the following conditions:
     *
     * The above copyright notice and this permission notice shall be
     * included in all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
     * ====================================================================
     */
    function(t2) {
      var e2 = { left: 0, top: 0, bottom: 0, right: 0 }, n2 = false, r4 = function() {
        void 0 === this.internal.__cell__ && (this.internal.__cell__ = {}, this.internal.__cell__.padding = 3, this.internal.__cell__.headerFunction = void 0, this.internal.__cell__.margins = Object.assign({}, e2), this.internal.__cell__.margins.width = this.getPageWidth(), i2.call(this));
      }, i2 = function() {
        this.internal.__cell__.lastCell = new a2(), this.internal.__cell__.pages = 1;
      }, a2 = function() {
        var t3 = arguments[0];
        Object.defineProperty(this, "x", { enumerable: true, get: function() {
          return t3;
        }, set: function(e4) {
          t3 = e4;
        } });
        var e3 = arguments[1];
        Object.defineProperty(this, "y", { enumerable: true, get: function() {
          return e3;
        }, set: function(t4) {
          e3 = t4;
        } });
        var n3 = arguments[2];
        Object.defineProperty(this, "width", { enumerable: true, get: function() {
          return n3;
        }, set: function(t4) {
          n3 = t4;
        } });
        var r5 = arguments[3];
        Object.defineProperty(this, "height", { enumerable: true, get: function() {
          return r5;
        }, set: function(t4) {
          r5 = t4;
        } });
        var i3 = arguments[4];
        Object.defineProperty(this, "text", { enumerable: true, get: function() {
          return i3;
        }, set: function(t4) {
          i3 = t4;
        } });
        var a3 = arguments[5];
        Object.defineProperty(this, "lineNumber", { enumerable: true, get: function() {
          return a3;
        }, set: function(t4) {
          a3 = t4;
        } });
        var o3 = arguments[6];
        return Object.defineProperty(this, "align", { enumerable: true, get: function() {
          return o3;
        }, set: function(t4) {
          o3 = t4;
        } }), this;
      };
      a2.prototype.clone = function() {
        return new a2(this.x, this.y, this.width, this.height, this.text, this.lineNumber, this.align);
      }, a2.prototype.toArray = function() {
        return [this.x, this.y, this.width, this.height, this.text, this.lineNumber, this.align];
      }, t2.setHeaderFunction = function(t3) {
        return r4.call(this), this.internal.__cell__.headerFunction = "function" == typeof t3 ? t3 : void 0, this;
      }, t2.getTextDimensions = function(t3, e3) {
        r4.call(this);
        var n3 = (e3 = e3 || {}).fontSize || this.getFontSize(), i3 = e3.font || this.getFont(), a3 = e3.scaleFactor || this.internal.scaleFactor, o3 = 0, s3 = 0, u2 = 0;
        if (!Array.isArray(t3) && "string" != typeof t3) {
          if ("number" != typeof t3)
            throw new Error("getTextDimensions expects text-parameter to be of type String or type Number or an Array of Strings.");
          t3 = String(t3);
        }
        const c2 = e3.maxWidth;
        c2 > 0 ? "string" == typeof t3 ? t3 = this.splitTextToSize(t3, c2) : "[object Array]" === Object.prototype.toString.call(t3) && (t3 = this.splitTextToSize(t3.join(" "), c2)) : t3 = Array.isArray(t3) ? t3 : [t3];
        for (var h2 = 0; h2 < t3.length; h2++)
          o3 < (u2 = this.getStringUnitWidth(t3[h2], { font: i3 }) * n3) && (o3 = u2);
        return 0 !== o3 && (s3 = t3.length), { w: o3 /= a3, h: Math.max((s3 * n3 * this.getLineHeightFactor() - n3 * (this.getLineHeightFactor() - 1)) / a3, 0) };
      }, t2.cellAddPage = function() {
        r4.call(this), this.addPage();
        var t3 = this.internal.__cell__.margins || e2;
        return this.internal.__cell__.lastCell = new a2(t3.left, t3.top, void 0, void 0), this.internal.__cell__.pages += 1, this;
      };
      var o2 = t2.cell = function() {
        var t3;
        t3 = arguments[0] instanceof a2 ? arguments[0] : new a2(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]), r4.call(this);
        var i3 = this.internal.__cell__.lastCell, o3 = this.internal.__cell__.padding, s3 = this.internal.__cell__.margins || e2, u2 = this.internal.__cell__.tableHeaderRow, c2 = this.internal.__cell__.printHeaders;
        return void 0 !== i3.lineNumber && (i3.lineNumber === t3.lineNumber ? (t3.x = (i3.x || 0) + (i3.width || 0), t3.y = i3.y || 0) : i3.y + i3.height + t3.height + s3.bottom > this.getPageHeight() ? (this.cellAddPage(), t3.y = s3.top, c2 && u2 && (this.printHeaderRow(t3.lineNumber, true), t3.y += u2[0].height)) : t3.y = i3.y + i3.height || t3.y), void 0 !== t3.text[0] && (this.rect(t3.x, t3.y, t3.width, t3.height, true === n2 ? "FD" : void 0), "right" === t3.align ? this.text(t3.text, t3.x + t3.width - o3, t3.y + o3, { align: "right", baseline: "top" }) : "center" === t3.align ? this.text(t3.text, t3.x + t3.width / 2, t3.y + o3, { align: "center", baseline: "top", maxWidth: t3.width - o3 - o3 }) : this.text(t3.text, t3.x + o3, t3.y + o3, { align: "left", baseline: "top", maxWidth: t3.width - o3 - o3 })), this.internal.__cell__.lastCell = t3, this;
      };
      t2.table = function(t3, n3, u2, c2, h2) {
        if (r4.call(this), !u2)
          throw new Error("No data for PDF table.");
        var l2, f2, d2, p2, g2 = [], m2 = [], v2 = [], b2 = {}, y2 = {}, w2 = [], N2 = [], L2 = (h2 = h2 || {}).autoSize || false, x2 = false !== h2.printHeaders, A2 = h2.css && void 0 !== h2.css["font-size"] ? 16 * h2.css["font-size"] : h2.fontSize || 12, _2 = h2.margins || Object.assign({ width: this.getPageWidth() }, e2), S2 = "number" == typeof h2.padding ? h2.padding : 3, P2 = h2.headerBackgroundColor || "#c8c8c8";
        if (i2.call(this), this.internal.__cell__.printHeaders = x2, this.internal.__cell__.margins = _2, this.internal.__cell__.table_font_size = A2, this.internal.__cell__.padding = S2, this.internal.__cell__.headerBackgroundColor = P2, this.setFontSize(A2), null == c2)
          m2 = g2 = Object.keys(u2[0]), v2 = g2.map(function() {
            return "left";
          });
        else if (Array.isArray(c2) && "object" == typeof c2[0])
          for (g2 = c2.map(function(t4) {
            return t4.name;
          }), m2 = c2.map(function(t4) {
            return t4.prompt || t4.name || "";
          }), v2 = g2.map(function(t4) {
            return t4.align || "left";
          }), l2 = 0; l2 < c2.length; l2 += 1)
            y2[c2[l2].name] = c2[l2].width * (19.049976 / 25.4);
        else
          Array.isArray(c2) && "string" == typeof c2[0] && (m2 = g2 = c2, v2 = g2.map(function() {
            return "left";
          }));
        if (L2)
          for (l2 = 0; l2 < g2.length; l2 += 1) {
            for (b2[p2 = g2[l2]] = u2.map(function(t4) {
              return t4[p2];
            }), this.setFont(void 0, "bold"), w2.push(this.getTextDimensions(m2[l2], { fontSize: this.internal.__cell__.table_font_size, scaleFactor: this.internal.scaleFactor }).w), f2 = b2[p2], this.setFont(void 0, "normal"), d2 = 0; d2 < f2.length; d2 += 1)
              w2.push(this.getTextDimensions(f2[d2], { fontSize: this.internal.__cell__.table_font_size, scaleFactor: this.internal.scaleFactor }).w);
            y2[p2] = Math.max.apply(null, w2) + S2 + S2, w2 = [];
          }
        if (x2) {
          var k2 = {};
          for (l2 = 0; l2 < g2.length; l2 += 1)
            k2[g2[l2]] = {}, k2[g2[l2]].text = m2[l2], k2[g2[l2]].align = v2[l2];
          var F2 = s2.call(this, k2, y2);
          N2 = g2.map(function(e3) {
            return new a2(t3, n3, y2[e3], F2, k2[e3].text, void 0, k2[e3].align);
          }), this.setTableHeaderRow(N2), this.printHeaderRow(1, false);
        }
        var I2 = c2.reduce(function(t4, e3) {
          return t4[e3.name] = e3.align, t4;
        }, {});
        for (l2 = 0; l2 < u2.length; l2 += 1) {
          var C2 = s2.call(this, u2[l2], y2);
          for (d2 = 0; d2 < g2.length; d2 += 1)
            o2.call(this, new a2(t3, n3, y2[g2[d2]], C2, u2[l2][g2[d2]], l2 + 2, I2[g2[d2]]));
        }
        return this.internal.__cell__.table_x = t3, this.internal.__cell__.table_y = n3, this;
      };
      var s2 = function(t3, e3) {
        var n3 = this.internal.__cell__.padding, r5 = this.internal.__cell__.table_font_size, i3 = this.internal.scaleFactor;
        return Object.keys(t3).map(function(e4) {
          return [e4, t3[e4]];
        }).map(function(t4) {
          var e4 = t4[0], n4 = t4[1];
          return "object" == typeof n4 ? [e4, n4.text] : [e4, n4];
        }).map(function(t4) {
          var r6 = t4[0], i4 = t4[1];
          return this.splitTextToSize(i4, e3[r6] - n3 - n3);
        }, this).map(function(t4) {
          return this.getLineHeightFactor() * t4.length * r5 / i3 + n3 + n3;
        }, this).reduce(function(t4, e4) {
          return Math.max(t4, e4);
        }, 0);
      };
      t2.setTableHeaderRow = function(t3) {
        r4.call(this), this.internal.__cell__.tableHeaderRow = t3;
      }, t2.printHeaderRow = function(t3, e3) {
        if (r4.call(this), !this.internal.__cell__.tableHeaderRow)
          throw new Error("Property tableHeaderRow does not exist.");
        var i3;
        if (n2 = true, "function" == typeof this.internal.__cell__.headerFunction) {
          var s3 = this.internal.__cell__.headerFunction(this, this.internal.__cell__.pages);
          this.internal.__cell__.lastCell = new a2(s3[0], s3[1], s3[2], s3[3], void 0, -1);
        }
        this.setFont(void 0, "bold");
        for (var u2 = [], c2 = 0; c2 < this.internal.__cell__.tableHeaderRow.length; c2 += 1)
          i3 = this.internal.__cell__.tableHeaderRow[c2].clone(), e3 && (i3.y = this.internal.__cell__.margins.top || 0, u2.push(i3)), i3.lineNumber = t3, this.setFillColor(this.internal.__cell__.headerBackgroundColor), o2.call(this, i3);
        u2.length > 0 && this.setTableHeaderRow(u2), this.setFont(void 0, "normal"), n2 = false;
      };
    }(g.API), function(t2) {
      var e2, r4, i2, a2, o2, s2, u2, h2, l2, f2 = function(t3) {
        return t3 = t3 || {}, this.isStrokeTransparent = t3.isStrokeTransparent || false, this.strokeOpacity = t3.strokeOpacity || 1, this.strokeStyle = t3.strokeStyle || "#000000", this.fillStyle = t3.fillStyle || "#000000", this.isFillTransparent = t3.isFillTransparent || false, this.fillOpacity = t3.fillOpacity || 1, this.font = t3.font || "10px sans-serif", this.textBaseline = t3.textBaseline || "alphabetic", this.textAlign = t3.textAlign || "left", this.lineWidth = t3.lineWidth || 1, this.lineJoin = t3.lineJoin || "miter", this.lineCap = t3.lineCap || "butt", this.path = t3.path || [], this.transform = void 0 !== t3.transform ? t3.transform.clone() : new h2(), this.globalCompositeOperation = t3.globalCompositeOperation || "normal", this.globalAlpha = t3.globalAlpha || 1, this.clip_path = t3.clip_path || [], this.currentPoint = t3.currentPoint || new s2(), this.miterLimit = t3.miterLimit || 10, this.lastPoint = t3.lastPoint || new s2(), this.ignoreClearRect = "boolean" != typeof t3.ignoreClearRect || t3.ignoreClearRect, this;
      };
      t2.events.push(["initialized", function() {
        this.context2d = new d2(this), e2 = this.internal.f2, r4 = this.internal.getCoordinateString, i2 = this.internal.getVerticalCoordinateString, a2 = this.internal.getHorizontalCoordinate, o2 = this.internal.getVerticalCoordinate, s2 = this.internal.Point, u2 = this.internal.Rectangle, h2 = this.internal.Matrix, l2 = new f2();
      }]);
      var d2 = function(t3) {
        Object.defineProperty(this, "canvas", { get: function() {
          return { parentNode: false, style: false };
        } });
        var e3 = t3;
        Object.defineProperty(this, "pdf", { get: function() {
          return e3;
        } });
        var n2 = false;
        Object.defineProperty(this, "pageWrapXEnabled", { get: function() {
          return n2;
        }, set: function(t4) {
          n2 = Boolean(t4);
        } });
        var r5 = false;
        Object.defineProperty(this, "pageWrapYEnabled", { get: function() {
          return r5;
        }, set: function(t4) {
          r5 = Boolean(t4);
        } });
        var i3 = 0;
        Object.defineProperty(this, "posX", { get: function() {
          return i3;
        }, set: function(t4) {
          isNaN(t4) || (i3 = t4);
        } });
        var a3 = 0;
        Object.defineProperty(this, "posY", { get: function() {
          return a3;
        }, set: function(t4) {
          isNaN(t4) || (a3 = t4);
        } });
        var o3 = false;
        Object.defineProperty(this, "autoPaging", { get: function() {
          return o3;
        }, set: function(t4) {
          o3 = Boolean(t4);
        } });
        var s3 = 0;
        Object.defineProperty(this, "lastBreak", { get: function() {
          return s3;
        }, set: function(t4) {
          s3 = t4;
        } });
        var u3 = [];
        Object.defineProperty(this, "pageBreaks", { get: function() {
          return u3;
        }, set: function(t4) {
          u3 = t4;
        } }), Object.defineProperty(this, "ctx", { get: function() {
          return l2;
        }, set: function(t4) {
          t4 instanceof f2 && (l2 = t4);
        } }), Object.defineProperty(this, "path", { get: function() {
          return l2.path;
        }, set: function(t4) {
          l2.path = t4;
        } });
        var c2 = [];
        Object.defineProperty(this, "ctxStack", { get: function() {
          return c2;
        }, set: function(t4) {
          c2 = t4;
        } }), Object.defineProperty(this, "fillStyle", { get: function() {
          return this.ctx.fillStyle;
        }, set: function(t4) {
          var e4;
          e4 = p2(t4), this.ctx.fillStyle = e4.style, this.ctx.isFillTransparent = 0 === e4.a, this.ctx.fillOpacity = e4.a, this.pdf.setFillColor(e4.r, e4.g, e4.b, { a: e4.a }), this.pdf.setTextColor(e4.r, e4.g, e4.b, { a: e4.a });
        } }), Object.defineProperty(this, "strokeStyle", { get: function() {
          return this.ctx.strokeStyle;
        }, set: function(t4) {
          var e4 = p2(t4);
          this.ctx.strokeStyle = e4.style, this.ctx.isStrokeTransparent = 0 === e4.a, this.ctx.strokeOpacity = e4.a, 0 === e4.a ? this.pdf.setDrawColor(255, 255, 255) : (e4.a, this.pdf.setDrawColor(e4.r, e4.g, e4.b));
        } }), Object.defineProperty(this, "lineCap", { get: function() {
          return this.ctx.lineCap;
        }, set: function(t4) {
          -1 !== ["butt", "round", "square"].indexOf(t4) && (this.ctx.lineCap = t4, this.pdf.setLineCap(t4));
        } }), Object.defineProperty(this, "lineWidth", { get: function() {
          return this.ctx.lineWidth;
        }, set: function(t4) {
          isNaN(t4) || (this.ctx.lineWidth = t4, this.pdf.setLineWidth(t4));
        } }), Object.defineProperty(this, "lineJoin", { get: function() {
          return this.ctx.lineJoin;
        }, set: function(t4) {
          -1 !== ["bevel", "round", "miter"].indexOf(t4) && (this.ctx.lineJoin = t4, this.pdf.setLineJoin(t4));
        } }), Object.defineProperty(this, "miterLimit", { get: function() {
          return this.ctx.miterLimit;
        }, set: function(t4) {
          isNaN(t4) || (this.ctx.miterLimit = t4, this.pdf.setMiterLimit(t4));
        } }), Object.defineProperty(this, "textBaseline", { get: function() {
          return this.ctx.textBaseline;
        }, set: function(t4) {
          this.ctx.textBaseline = t4;
        } }), Object.defineProperty(this, "textAlign", { get: function() {
          return this.ctx.textAlign;
        }, set: function(t4) {
          -1 !== ["right", "end", "center", "left", "start"].indexOf(t4) && (this.ctx.textAlign = t4);
        } }), Object.defineProperty(this, "font", { get: function() {
          return this.ctx.font;
        }, set: function(t4) {
          var e4;
          if (this.ctx.font = t4, null !== (e4 = /^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-_,\"\'\sa-z]+?)\s*$/i.exec(t4))) {
            var n3 = e4[1], r6 = (e4[2], e4[3]), i4 = e4[4], a4 = (e4[5], e4[6]), o4 = /^([.\d]+)((?:%|in|[cem]m|ex|p[ctx]))$/i.exec(i4)[2];
            i4 = "px" === o4 ? Math.floor(parseFloat(i4) * this.pdf.internal.scaleFactor) : "em" === o4 ? Math.floor(parseFloat(i4) * this.pdf.getFontSize()) : Math.floor(parseFloat(i4) * this.pdf.internal.scaleFactor), this.pdf.setFontSize(i4);
            var s4 = "";
            ("bold" === r6 || parseInt(r6, 10) >= 700 || "bold" === n3) && (s4 = "bold"), "italic" === n3 && (s4 += "italic"), 0 === s4.length && (s4 = "normal");
            for (var u4 = "", c3 = a4.replace(/"|'/g, "").split(/\s*,\s*/), h3 = { arial: "Helvetica", Arial: "Helvetica", verdana: "Helvetica", Verdana: "Helvetica", helvetica: "Helvetica", Helvetica: "Helvetica", "sans-serif": "Helvetica", fixed: "Courier", monospace: "Courier", terminal: "Courier", cursive: "Times", fantasy: "Times", serif: "Times" }, l3 = 0; l3 < c3.length; l3++) {
              if (void 0 !== this.pdf.internal.getFont(c3[l3], s4, { noFallback: true, disableWarning: true })) {
                u4 = c3[l3];
                break;
              }
              if ("bolditalic" === s4 && void 0 !== this.pdf.internal.getFont(c3[l3], "bold", { noFallback: true, disableWarning: true }))
                u4 = c3[l3], s4 = "bold";
              else if (void 0 !== this.pdf.internal.getFont(c3[l3], "normal", { noFallback: true, disableWarning: true })) {
                u4 = c3[l3], s4 = "normal";
                break;
              }
            }
            if ("" === u4) {
              for (var f3 = 0; f3 < c3.length; f3++)
                if (h3[c3[f3]]) {
                  u4 = h3[c3[f3]];
                  break;
                }
            }
            u4 = "" === u4 ? "Times" : u4, this.pdf.setFont(u4, s4);
          }
        } }), Object.defineProperty(this, "globalCompositeOperation", { get: function() {
          return this.ctx.globalCompositeOperation;
        }, set: function(t4) {
          this.ctx.globalCompositeOperation = t4;
        } }), Object.defineProperty(this, "globalAlpha", { get: function() {
          return this.ctx.globalAlpha;
        }, set: function(t4) {
          this.ctx.globalAlpha = t4;
        } }), Object.defineProperty(this, "ignoreClearRect", { get: function() {
          return this.ctx.ignoreClearRect;
        }, set: function(t4) {
          this.ctx.ignoreClearRect = Boolean(t4);
        } });
      };
      d2.prototype.fill = function() {
        N2.call(this, "fill", false);
      }, d2.prototype.stroke = function() {
        N2.call(this, "stroke", false);
      }, d2.prototype.beginPath = function() {
        this.path = [{ type: "begin" }];
      }, d2.prototype.moveTo = function(t3, e3) {
        if (isNaN(t3) || isNaN(e3))
          throw n.error("jsPDF.context2d.moveTo: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.moveTo");
        var r5 = this.ctx.transform.applyToPoint(new s2(t3, e3));
        this.path.push({ type: "mt", x: r5.x, y: r5.y }), this.ctx.lastPoint = new s2(t3, e3);
      }, d2.prototype.closePath = function() {
        var t3 = new s2(0, 0), e3 = 0;
        for (e3 = this.path.length - 1; -1 !== e3; e3--)
          if ("begin" === this.path[e3].type && "object" == typeof this.path[e3 + 1] && "number" == typeof this.path[e3 + 1].x) {
            t3 = new s2(this.path[e3 + 1].x, this.path[e3 + 1].y), this.path.push({ type: "lt", x: t3.x, y: t3.y });
            break;
          }
        "object" == typeof this.path[e3 + 2] && "number" == typeof this.path[e3 + 2].x && this.path.push(JSON.parse(JSON.stringify(this.path[e3 + 2]))), this.path.push({ type: "close" }), this.ctx.lastPoint = new s2(t3.x, t3.y);
      }, d2.prototype.lineTo = function(t3, e3) {
        if (isNaN(t3) || isNaN(e3))
          throw n.error("jsPDF.context2d.lineTo: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.lineTo");
        var r5 = this.ctx.transform.applyToPoint(new s2(t3, e3));
        this.path.push({ type: "lt", x: r5.x, y: r5.y }), this.ctx.lastPoint = new s2(r5.x, r5.y);
      }, d2.prototype.clip = function() {
        this.ctx.clip_path = JSON.parse(JSON.stringify(this.path)), N2.call(this, null, true);
      }, d2.prototype.quadraticCurveTo = function(t3, e3, r5, i3) {
        if (isNaN(r5) || isNaN(i3) || isNaN(t3) || isNaN(e3))
          throw n.error("jsPDF.context2d.quadraticCurveTo: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.quadraticCurveTo");
        var a3 = this.ctx.transform.applyToPoint(new s2(r5, i3)), o3 = this.ctx.transform.applyToPoint(new s2(t3, e3));
        this.path.push({ type: "qct", x1: o3.x, y1: o3.y, x: a3.x, y: a3.y }), this.ctx.lastPoint = new s2(a3.x, a3.y);
      }, d2.prototype.bezierCurveTo = function(t3, e3, r5, i3, a3, o3) {
        if (isNaN(a3) || isNaN(o3) || isNaN(t3) || isNaN(e3) || isNaN(r5) || isNaN(i3))
          throw n.error("jsPDF.context2d.bezierCurveTo: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.bezierCurveTo");
        var u3 = this.ctx.transform.applyToPoint(new s2(a3, o3)), c2 = this.ctx.transform.applyToPoint(new s2(t3, e3)), h3 = this.ctx.transform.applyToPoint(new s2(r5, i3));
        this.path.push({ type: "bct", x1: c2.x, y1: c2.y, x2: h3.x, y2: h3.y, x: u3.x, y: u3.y }), this.ctx.lastPoint = new s2(u3.x, u3.y);
      }, d2.prototype.arc = function(t3, e3, r5, i3, a3, o3) {
        if (isNaN(t3) || isNaN(e3) || isNaN(r5) || isNaN(i3) || isNaN(a3))
          throw n.error("jsPDF.context2d.arc: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.arc");
        if (o3 = Boolean(o3), !this.ctx.transform.isIdentity) {
          var u3 = this.ctx.transform.applyToPoint(new s2(t3, e3));
          t3 = u3.x, e3 = u3.y;
          var c2 = this.ctx.transform.applyToPoint(new s2(0, r5)), h3 = this.ctx.transform.applyToPoint(new s2(0, 0));
          r5 = Math.sqrt(Math.pow(c2.x - h3.x, 2) + Math.pow(c2.y - h3.y, 2));
        }
        Math.abs(a3 - i3) >= 2 * Math.PI && (i3 = 0, a3 = 2 * Math.PI), this.path.push({ type: "arc", x: t3, y: e3, radius: r5, startAngle: i3, endAngle: a3, counterclockwise: o3 });
      }, d2.prototype.arcTo = function(t3, e3, n2, r5, i3) {
        throw new Error("arcTo not implemented.");
      }, d2.prototype.rect = function(t3, e3, r5, i3) {
        if (isNaN(t3) || isNaN(e3) || isNaN(r5) || isNaN(i3))
          throw n.error("jsPDF.context2d.rect: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.rect");
        this.moveTo(t3, e3), this.lineTo(t3 + r5, e3), this.lineTo(t3 + r5, e3 + i3), this.lineTo(t3, e3 + i3), this.lineTo(t3, e3), this.lineTo(t3 + r5, e3), this.lineTo(t3, e3);
      }, d2.prototype.fillRect = function(t3, e3, r5, i3) {
        if (isNaN(t3) || isNaN(e3) || isNaN(r5) || isNaN(i3))
          throw n.error("jsPDF.context2d.fillRect: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.fillRect");
        if (!g2.call(this)) {
          var a3 = {};
          "butt" !== this.lineCap && (a3.lineCap = this.lineCap, this.lineCap = "butt"), "miter" !== this.lineJoin && (a3.lineJoin = this.lineJoin, this.lineJoin = "miter"), this.beginPath(), this.rect(t3, e3, r5, i3), this.fill(), a3.hasOwnProperty("lineCap") && (this.lineCap = a3.lineCap), a3.hasOwnProperty("lineJoin") && (this.lineJoin = a3.lineJoin);
        }
      }, d2.prototype.strokeRect = function(t3, e3, r5, i3) {
        if (isNaN(t3) || isNaN(e3) || isNaN(r5) || isNaN(i3))
          throw n.error("jsPDF.context2d.strokeRect: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.strokeRect");
        m2.call(this) || (this.beginPath(), this.rect(t3, e3, r5, i3), this.stroke());
      }, d2.prototype.clearRect = function(t3, e3, r5, i3) {
        if (isNaN(t3) || isNaN(e3) || isNaN(r5) || isNaN(i3))
          throw n.error("jsPDF.context2d.clearRect: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.clearRect");
        this.ignoreClearRect || (this.fillStyle = "#ffffff", this.fillRect(t3, e3, r5, i3));
      }, d2.prototype.save = function(t3) {
        t3 = "boolean" != typeof t3 || t3;
        for (var e3 = this.pdf.internal.getCurrentPageInfo().pageNumber, n2 = 0; n2 < this.pdf.internal.getNumberOfPages(); n2++)
          this.pdf.setPage(n2 + 1), this.pdf.internal.out("q");
        if (this.pdf.setPage(e3), t3) {
          this.ctx.fontSize = this.pdf.internal.getFontSize();
          var r5 = new f2(this.ctx);
          this.ctxStack.push(this.ctx), this.ctx = r5;
        }
      }, d2.prototype.restore = function(t3) {
        t3 = "boolean" != typeof t3 || t3;
        for (var e3 = this.pdf.internal.getCurrentPageInfo().pageNumber, n2 = 0; n2 < this.pdf.internal.getNumberOfPages(); n2++)
          this.pdf.setPage(n2 + 1), this.pdf.internal.out("Q");
        this.pdf.setPage(e3), t3 && 0 !== this.ctxStack.length && (this.ctx = this.ctxStack.pop(), this.fillStyle = this.ctx.fillStyle, this.strokeStyle = this.ctx.strokeStyle, this.font = this.ctx.font, this.lineCap = this.ctx.lineCap, this.lineWidth = this.ctx.lineWidth, this.lineJoin = this.ctx.lineJoin);
      }, d2.prototype.toDataURL = function() {
        throw new Error("toDataUrl not implemented.");
      };
      var p2 = function(t3) {
        var e3, n2, r5, i3;
        if (true === t3.isCanvasGradient && (t3 = t3.getColor()), !t3)
          return { r: 0, g: 0, b: 0, a: 0, style: t3 };
        if (/transparent|rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*0+\s*\)/.test(t3))
          e3 = 0, n2 = 0, r5 = 0, i3 = 0;
        else {
          var a3 = /rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/.exec(t3);
          if (null !== a3)
            e3 = parseInt(a3[1]), n2 = parseInt(a3[2]), r5 = parseInt(a3[3]), i3 = 1;
          else if (null !== (a3 = /rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([\d.]+)\s*\)/.exec(t3)))
            e3 = parseInt(a3[1]), n2 = parseInt(a3[2]), r5 = parseInt(a3[3]), i3 = parseFloat(a3[4]);
          else {
            if (i3 = 1, "string" == typeof t3 && "#" !== t3.charAt(0)) {
              var o3 = new c(t3);
              t3 = o3.ok ? o3.toHex() : "#000000";
            }
            4 === t3.length ? (e3 = t3.substring(1, 2), e3 += e3, n2 = t3.substring(2, 3), n2 += n2, r5 = t3.substring(3, 4), r5 += r5) : (e3 = t3.substring(1, 3), n2 = t3.substring(3, 5), r5 = t3.substring(5, 7)), e3 = parseInt(e3, 16), n2 = parseInt(n2, 16), r5 = parseInt(r5, 16);
          }
        }
        return { r: e3, g: n2, b: r5, a: i3, style: t3 };
      }, g2 = function() {
        return this.ctx.isFillTransparent || 0 == this.globalAlpha;
      }, m2 = function() {
        return Boolean(this.ctx.isStrokeTransparent || 0 == this.globalAlpha);
      };
      d2.prototype.fillText = function(t3, e3, r5, i3) {
        if (isNaN(e3) || isNaN(r5) || "string" != typeof t3)
          throw n.error("jsPDF.context2d.fillText: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.fillText");
        if (i3 = isNaN(i3) ? void 0 : i3, !g2.call(this)) {
          r5 = x2.call(this, r5);
          var a3 = O2(this.ctx.transform.rotation), o3 = this.ctx.transform.scaleX;
          k2.call(this, { text: t3, x: e3, y: r5, scale: o3, angle: a3, align: this.textAlign, maxWidth: i3 });
        }
      }, d2.prototype.strokeText = function(t3, e3, r5, i3) {
        if (isNaN(e3) || isNaN(r5) || "string" != typeof t3)
          throw n.error("jsPDF.context2d.strokeText: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.strokeText");
        if (!m2.call(this)) {
          i3 = isNaN(i3) ? void 0 : i3, r5 = x2.call(this, r5);
          var a3 = O2(this.ctx.transform.rotation), o3 = this.ctx.transform.scaleX;
          k2.call(this, { text: t3, x: e3, y: r5, scale: o3, renderingMode: "stroke", angle: a3, align: this.textAlign, maxWidth: i3 });
        }
      }, d2.prototype.measureText = function(t3) {
        if ("string" != typeof t3)
          throw n.error("jsPDF.context2d.measureText: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.measureText");
        var e3 = this.pdf, r5 = this.pdf.internal.scaleFactor, i3 = e3.internal.getFontSize(), a3 = e3.getStringUnitWidth(t3) * i3 / e3.internal.scaleFactor, o3 = function(t4) {
          var e4 = (t4 = t4 || {}).width || 0;
          return Object.defineProperty(this, "width", { get: function() {
            return e4;
          } }), this;
        };
        return new o3({ width: a3 *= Math.round(96 * r5 / 72 * 1e4) / 1e4 });
      }, d2.prototype.scale = function(t3, e3) {
        if (isNaN(t3) || isNaN(e3))
          throw n.error("jsPDF.context2d.scale: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.scale");
        var r5 = new h2(t3, 0, 0, e3, 0, 0);
        this.ctx.transform = this.ctx.transform.multiply(r5);
      }, d2.prototype.rotate = function(t3) {
        if (isNaN(t3))
          throw n.error("jsPDF.context2d.rotate: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.rotate");
        var e3 = new h2(Math.cos(t3), Math.sin(t3), -Math.sin(t3), Math.cos(t3), 0, 0);
        this.ctx.transform = this.ctx.transform.multiply(e3);
      }, d2.prototype.translate = function(t3, e3) {
        if (isNaN(t3) || isNaN(e3))
          throw n.error("jsPDF.context2d.translate: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.translate");
        var r5 = new h2(1, 0, 0, 1, t3, e3);
        this.ctx.transform = this.ctx.transform.multiply(r5);
      }, d2.prototype.transform = function(t3, e3, r5, i3, a3, o3) {
        if (isNaN(t3) || isNaN(e3) || isNaN(r5) || isNaN(i3) || isNaN(a3) || isNaN(o3))
          throw n.error("jsPDF.context2d.transform: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.transform");
        var s3 = new h2(t3, e3, r5, i3, a3, o3);
        this.ctx.transform = this.ctx.transform.multiply(s3);
      }, d2.prototype.setTransform = function(t3, e3, n2, r5, i3, a3) {
        t3 = isNaN(t3) ? 1 : t3, e3 = isNaN(e3) ? 0 : e3, n2 = isNaN(n2) ? 0 : n2, r5 = isNaN(r5) ? 1 : r5, i3 = isNaN(i3) ? 0 : i3, a3 = isNaN(a3) ? 0 : a3, this.ctx.transform = new h2(t3, e3, n2, r5, i3, a3);
      }, d2.prototype.drawImage = function(t3, e3, n2, r5, i3, a3, o3, s3, c2) {
        var l3 = this.pdf.getImageProperties(t3), f3 = 1, d3 = 1, p3 = 1, g3 = 1;
        void 0 !== r5 && void 0 !== s3 && (p3 = s3 / r5, g3 = c2 / i3, f3 = l3.width / r5 * s3 / r5, d3 = l3.height / i3 * c2 / i3), void 0 === a3 && (a3 = e3, o3 = n2, e3 = 0, n2 = 0), void 0 !== r5 && void 0 === s3 && (s3 = r5, c2 = i3), void 0 === r5 && void 0 === s3 && (s3 = l3.width, c2 = l3.height);
        for (var m3, b3 = this.ctx.transform.decompose(), N3 = O2(b3.rotate.shx), x3 = new h2(), A3 = (x3 = (x3 = (x3 = x3.multiply(b3.translate)).multiply(b3.skew)).multiply(b3.scale)).applyToRectangle(new u2(a3 - e3 * p3, o3 - n2 * g3, r5 * f3, i3 * d3)), _3 = v2.call(this, A3), S3 = [], P3 = 0; P3 < _3.length; P3 += 1)
          -1 === S3.indexOf(_3[P3]) && S3.push(_3[P3]);
        if (w2(S3), this.autoPaging)
          for (var k3 = S3[0], F3 = S3[S3.length - 1], I3 = k3; I3 < F3 + 1; I3++) {
            if (this.pdf.setPage(I3), 0 !== this.ctx.clip_path.length) {
              var C3 = this.path;
              m3 = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = y2(m3, this.posX, -1 * this.pdf.internal.pageSize.height * (I3 - 1) + this.posY), L2.call(this, "fill", true), this.path = C3;
            }
            var j3 = JSON.parse(JSON.stringify(A3));
            j3 = y2([j3], this.posX, -1 * this.pdf.internal.pageSize.height * (I3 - 1) + this.posY)[0], this.pdf.addImage(t3, "JPEG", j3.x, j3.y, j3.w, j3.h, null, null, N3);
          }
        else
          this.pdf.addImage(t3, "JPEG", A3.x, A3.y, A3.w, A3.h, null, null, N3);
      };
      var v2 = function(t3, e3, n2) {
        var r5 = [];
        switch (e3 = e3 || this.pdf.internal.pageSize.width, n2 = n2 || this.pdf.internal.pageSize.height, t3.type) {
          default:
          case "mt":
          case "lt":
            r5.push(Math.floor((t3.y + this.posY) / n2) + 1);
            break;
          case "arc":
            r5.push(Math.floor((t3.y + this.posY - t3.radius) / n2) + 1), r5.push(Math.floor((t3.y + this.posY + t3.radius) / n2) + 1);
            break;
          case "qct":
            var i3 = M2(this.ctx.lastPoint.x, this.ctx.lastPoint.y, t3.x1, t3.y1, t3.x, t3.y);
            r5.push(Math.floor(i3.y / n2) + 1), r5.push(Math.floor((i3.y + i3.h) / n2) + 1);
            break;
          case "bct":
            var a3 = E2(this.ctx.lastPoint.x, this.ctx.lastPoint.y, t3.x1, t3.y1, t3.x2, t3.y2, t3.x, t3.y);
            r5.push(Math.floor(a3.y / n2) + 1), r5.push(Math.floor((a3.y + a3.h) / n2) + 1);
            break;
          case "rect":
            r5.push(Math.floor((t3.y + this.posY) / n2) + 1), r5.push(Math.floor((t3.y + t3.h + this.posY) / n2) + 1);
        }
        for (var o3 = 0; o3 < r5.length; o3 += 1)
          for (; this.pdf.internal.getNumberOfPages() < r5[o3]; )
            b2.call(this);
        return r5;
      }, b2 = function() {
        var t3 = this.fillStyle, e3 = this.strokeStyle, n2 = this.font, r5 = this.lineCap, i3 = this.lineWidth, a3 = this.lineJoin;
        this.pdf.addPage(), this.fillStyle = t3, this.strokeStyle = e3, this.font = n2, this.lineCap = r5, this.lineWidth = i3, this.lineJoin = a3;
      }, y2 = function(t3, e3, n2) {
        for (var r5 = 0; r5 < t3.length; r5++)
          switch (t3[r5].type) {
            case "bct":
              t3[r5].x2 += e3, t3[r5].y2 += n2;
            case "qct":
              t3[r5].x1 += e3, t3[r5].y1 += n2;
            case "mt":
            case "lt":
            case "arc":
            default:
              t3[r5].x += e3, t3[r5].y += n2;
          }
        return t3;
      }, w2 = function(t3) {
        return t3.sort(function(t4, e3) {
          return t4 - e3;
        });
      }, N2 = function(t3, e3) {
        for (var n2, r5, i3 = this.fillStyle, a3 = this.strokeStyle, o3 = this.lineCap, s3 = this.lineWidth, u3 = s3 * this.ctx.transform.scaleX, c2 = this.lineJoin, h3 = JSON.parse(JSON.stringify(this.path)), l3 = JSON.parse(JSON.stringify(this.path)), f3 = [], d3 = 0; d3 < l3.length; d3++)
          if (void 0 !== l3[d3].x)
            for (var p3 = v2.call(this, l3[d3]), g3 = 0; g3 < p3.length; g3 += 1)
              -1 === f3.indexOf(p3[g3]) && f3.push(p3[g3]);
        for (var m3 = 0; m3 < f3.length; m3++)
          for (; this.pdf.internal.getNumberOfPages() < f3[m3]; )
            b2.call(this);
        if (w2(f3), this.autoPaging)
          for (var N3 = f3[0], x3 = f3[f3.length - 1], A3 = N3; A3 < x3 + 1; A3++) {
            if (this.pdf.setPage(A3), this.fillStyle = i3, this.strokeStyle = a3, this.lineCap = o3, this.lineWidth = u3, this.lineJoin = c2, 0 !== this.ctx.clip_path.length) {
              var _3 = this.path;
              n2 = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = y2(n2, this.posX, -1 * this.pdf.internal.pageSize.height * (A3 - 1) + this.posY), L2.call(this, t3, true), this.path = _3;
            }
            r5 = JSON.parse(JSON.stringify(h3)), this.path = y2(r5, this.posX, -1 * this.pdf.internal.pageSize.height * (A3 - 1) + this.posY), false !== e3 && 0 !== A3 || L2.call(this, t3, e3), this.lineWidth = s3;
          }
        else
          this.lineWidth = u3, L2.call(this, t3, e3), this.lineWidth = s3;
        this.path = h3;
      }, L2 = function(t3, e3) {
        if (("stroke" !== t3 || e3 || !m2.call(this)) && ("stroke" === t3 || e3 || !g2.call(this))) {
          for (var n2, r5, i3 = [], a3 = this.path, o3 = 0; o3 < a3.length; o3++) {
            var s3 = a3[o3];
            switch (s3.type) {
              case "begin":
                i3.push({ begin: true });
                break;
              case "close":
                i3.push({ close: true });
                break;
              case "mt":
                i3.push({ start: s3, deltas: [], abs: [] });
                break;
              case "lt":
                var u3 = i3.length;
                if (!isNaN(a3[o3 - 1].x) && (n2 = [s3.x - a3[o3 - 1].x, s3.y - a3[o3 - 1].y], u3 > 0)) {
                  for (; u3 >= 0; u3--)
                    if (true !== i3[u3 - 1].close && true !== i3[u3 - 1].begin) {
                      i3[u3 - 1].deltas.push(n2), i3[u3 - 1].abs.push(s3);
                      break;
                    }
                }
                break;
              case "bct":
                n2 = [s3.x1 - a3[o3 - 1].x, s3.y1 - a3[o3 - 1].y, s3.x2 - a3[o3 - 1].x, s3.y2 - a3[o3 - 1].y, s3.x - a3[o3 - 1].x, s3.y - a3[o3 - 1].y], i3[i3.length - 1].deltas.push(n2);
                break;
              case "qct":
                var c2 = a3[o3 - 1].x + 2 / 3 * (s3.x1 - a3[o3 - 1].x), h3 = a3[o3 - 1].y + 2 / 3 * (s3.y1 - a3[o3 - 1].y), l3 = s3.x + 2 / 3 * (s3.x1 - s3.x), f3 = s3.y + 2 / 3 * (s3.y1 - s3.y), d3 = s3.x, p3 = s3.y;
                n2 = [c2 - a3[o3 - 1].x, h3 - a3[o3 - 1].y, l3 - a3[o3 - 1].x, f3 - a3[o3 - 1].y, d3 - a3[o3 - 1].x, p3 - a3[o3 - 1].y], i3[i3.length - 1].deltas.push(n2);
                break;
              case "arc":
                i3.push({ deltas: [], abs: [], arc: true }), Array.isArray(i3[i3.length - 1].abs) && i3[i3.length - 1].abs.push(s3);
            }
          }
          r5 = e3 ? null : "stroke" === t3 ? "stroke" : "fill";
          for (var v3 = 0; v3 < i3.length; v3++) {
            if (i3[v3].arc) {
              for (var b3 = i3[v3].abs, y3 = 0; y3 < b3.length; y3++) {
                var w3 = b3[y3];
                "arc" === w3.type ? A2.call(this, w3.x, w3.y, w3.radius, w3.startAngle, w3.endAngle, w3.counterclockwise, void 0, e3) : F2.call(this, w3.x, w3.y);
              }
              _2.call(this, r5), this.pdf.internal.out("h");
            }
            if (!i3[v3].arc && true !== i3[v3].close && true !== i3[v3].begin) {
              var N3 = i3[v3].start.x, L3 = i3[v3].start.y;
              I2.call(this, i3[v3].deltas, N3, L3);
            }
          }
          r5 && _2.call(this, r5), e3 && S2.call(this);
        }
      }, x2 = function(t3) {
        var e3 = this.pdf.internal.getFontSize() / this.pdf.internal.scaleFactor, n2 = e3 * (this.pdf.internal.getLineHeightFactor() - 1);
        switch (this.ctx.textBaseline) {
          case "bottom":
            return t3 - n2;
          case "top":
            return t3 + e3 - n2;
          case "hanging":
            return t3 + e3 - 2 * n2;
          case "middle":
            return t3 + e3 / 2 - n2;
          case "ideographic":
            return t3;
          case "alphabetic":
          default:
            return t3;
        }
      };
      d2.prototype.createLinearGradient = function() {
        var t3 = function() {
        };
        return t3.colorStops = [], t3.addColorStop = function(t4, e3) {
          this.colorStops.push([t4, e3]);
        }, t3.getColor = function() {
          return 0 === this.colorStops.length ? "#000000" : this.colorStops[0][1];
        }, t3.isCanvasGradient = true, t3;
      }, d2.prototype.createPattern = function() {
        return this.createLinearGradient();
      }, d2.prototype.createRadialGradient = function() {
        return this.createLinearGradient();
      };
      var A2 = function(t3, e3, n2, r5, i3, a3, o3, s3) {
        for (var u3 = j2.call(this, n2, r5, i3, a3), c2 = 0; c2 < u3.length; c2++) {
          var h3 = u3[c2];
          0 === c2 && P2.call(this, h3.x1 + t3, h3.y1 + e3), C2.call(this, t3, e3, h3.x2, h3.y2, h3.x3, h3.y3, h3.x4, h3.y4);
        }
        s3 ? S2.call(this) : _2.call(this, o3);
      }, _2 = function(t3) {
        switch (t3) {
          case "stroke":
            this.pdf.internal.out("S");
            break;
          case "fill":
            this.pdf.internal.out("f");
        }
      }, S2 = function() {
        this.pdf.clip(), this.pdf.discardPath();
      }, P2 = function(t3, e3) {
        this.pdf.internal.out(r4(t3) + " " + i2(e3) + " m");
      }, k2 = function(t3) {
        var e3;
        switch (t3.align) {
          case "right":
          case "end":
            e3 = "right";
            break;
          case "center":
            e3 = "center";
            break;
          case "left":
          case "start":
          default:
            e3 = "left";
        }
        var n2 = this.ctx.transform.applyToPoint(new s2(t3.x, t3.y)), r5 = this.ctx.transform.decompose(), i3 = new h2();
        i3 = (i3 = (i3 = i3.multiply(r5.translate)).multiply(r5.skew)).multiply(r5.scale);
        for (var a3, o3, c2, l3 = this.pdf.getTextDimensions(t3.text), f3 = this.ctx.transform.applyToRectangle(new u2(t3.x, t3.y, l3.w, l3.h)), d3 = i3.applyToRectangle(new u2(t3.x, t3.y - l3.h, l3.w, l3.h)), p3 = v2.call(this, d3), g3 = [], m3 = 0; m3 < p3.length; m3 += 1)
          -1 === g3.indexOf(p3[m3]) && g3.push(p3[m3]);
        if (w2(g3), true === this.autoPaging)
          for (var b3 = g3[0], N3 = g3[g3.length - 1], x3 = b3; x3 < N3 + 1; x3++) {
            if (this.pdf.setPage(x3), 0 !== this.ctx.clip_path.length) {
              var A3 = this.path;
              a3 = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = y2(a3, this.posX, -1 * this.pdf.internal.pageSize.height * (x3 - 1) + this.posY), L2.call(this, "fill", true), this.path = A3;
            }
            var _3 = JSON.parse(JSON.stringify(f3));
            _3 = y2([_3], this.posX, -1 * this.pdf.internal.pageSize.height * (x3 - 1) + this.posY)[0], t3.scale >= 0.01 && (o3 = this.pdf.internal.getFontSize(), this.pdf.setFontSize(o3 * t3.scale), c2 = this.lineWidth, this.lineWidth = c2 * t3.scale), this.pdf.text(t3.text, _3.x, _3.y, { angle: t3.angle, align: e3, renderingMode: t3.renderingMode, maxWidth: t3.maxWidth }), t3.scale >= 0.01 && (this.pdf.setFontSize(o3), this.lineWidth = c2);
          }
        else
          t3.scale >= 0.01 && (o3 = this.pdf.internal.getFontSize(), this.pdf.setFontSize(o3 * t3.scale), c2 = this.lineWidth, this.lineWidth = c2 * t3.scale), this.pdf.text(t3.text, n2.x + this.posX, n2.y + this.posY, { angle: t3.angle, align: e3, renderingMode: t3.renderingMode, maxWidth: t3.maxWidth }), t3.scale >= 0.01 && (this.pdf.setFontSize(o3), this.lineWidth = c2);
      }, F2 = function(t3, e3, n2, a3) {
        n2 = n2 || 0, a3 = a3 || 0, this.pdf.internal.out(r4(t3 + n2) + " " + i2(e3 + a3) + " l");
      }, I2 = function(t3, e3, n2) {
        return this.pdf.lines(t3, e3, n2, null, null);
      }, C2 = function(t3, n2, r5, i3, s3, u3, c2, h3) {
        this.pdf.internal.out([e2(a2(r5 + t3)), e2(o2(i3 + n2)), e2(a2(s3 + t3)), e2(o2(u3 + n2)), e2(a2(c2 + t3)), e2(o2(h3 + n2)), "c"].join(" "));
      }, j2 = function(t3, e3, n2, r5) {
        for (var i3 = 2 * Math.PI, a3 = Math.PI / 2; e3 > n2; )
          e3 -= i3;
        var o3 = Math.abs(n2 - e3);
        o3 < i3 && r5 && (o3 = i3 - o3);
        for (var s3 = [], u3 = r5 ? -1 : 1, c2 = e3; o3 > 1e-5; ) {
          var h3 = c2 + u3 * Math.min(o3, a3);
          s3.push(B2.call(this, t3, c2, h3)), o3 -= Math.abs(h3 - c2), c2 = h3;
        }
        return s3;
      }, B2 = function(t3, e3, n2) {
        var r5 = (n2 - e3) / 2, i3 = t3 * Math.cos(r5), a3 = t3 * Math.sin(r5), o3 = i3, s3 = -a3, u3 = o3 * o3 + s3 * s3, c2 = u3 + o3 * i3 + s3 * a3, h3 = 4 / 3 * (Math.sqrt(2 * u3 * c2) - c2) / (o3 * a3 - s3 * i3), l3 = o3 - h3 * s3, f3 = s3 + h3 * o3, d3 = l3, p3 = -f3, g3 = r5 + e3, m3 = Math.cos(g3), v3 = Math.sin(g3);
        return { x1: t3 * Math.cos(e3), y1: t3 * Math.sin(e3), x2: l3 * m3 - f3 * v3, y2: l3 * v3 + f3 * m3, x3: d3 * m3 - p3 * v3, y3: d3 * v3 + p3 * m3, x4: t3 * Math.cos(n2), y4: t3 * Math.sin(n2) };
      }, O2 = function(t3) {
        return 180 * t3 / Math.PI;
      }, M2 = function(t3, e3, n2, r5, i3, a3) {
        var o3 = t3 + 0.5 * (n2 - t3), s3 = e3 + 0.5 * (r5 - e3), c2 = i3 + 0.5 * (n2 - i3), h3 = a3 + 0.5 * (r5 - a3), l3 = Math.min(t3, i3, o3, c2), f3 = Math.max(t3, i3, o3, c2), d3 = Math.min(e3, a3, s3, h3), p3 = Math.max(e3, a3, s3, h3);
        return new u2(l3, d3, f3 - l3, p3 - d3);
      }, E2 = function(t3, e3, n2, r5, i3, a3, o3, s3) {
        var c2, h3, l3, f3, d3, p3, g3, m3, v3, b3, y3, w3, N3, L3, x3 = n2 - t3, A3 = r5 - e3, _3 = i3 - n2, S3 = a3 - r5, P3 = o3 - i3, k3 = s3 - a3;
        for (h3 = 0; h3 < 41; h3++)
          v3 = (g3 = (l3 = t3 + (c2 = h3 / 40) * x3) + c2 * ((d3 = n2 + c2 * _3) - l3)) + c2 * (d3 + c2 * (i3 + c2 * P3 - d3) - g3), b3 = (m3 = (f3 = e3 + c2 * A3) + c2 * ((p3 = r5 + c2 * S3) - f3)) + c2 * (p3 + c2 * (a3 + c2 * k3 - p3) - m3), 0 == h3 ? (y3 = v3, w3 = b3, N3 = v3, L3 = b3) : (y3 = Math.min(y3, v3), w3 = Math.min(w3, b3), N3 = Math.max(N3, v3), L3 = Math.max(L3, b3));
        return new u2(Math.round(y3), Math.round(w3), Math.round(N3 - y3), Math.round(L3 - w3));
      };
    }(g.API);
    lt = [0, 1, 2, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 16, 17, 18, 18, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29];
    ft._length_code = [0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28], ft.base_length = [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 0], ft.base_dist = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24, 32, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 6144, 8192, 12288, 16384, 24576], ft.d_code = function(t2) {
      return t2 < 256 ? lt[t2] : lt[256 + (t2 >>> 7)];
    }, ft.extra_lbits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], ft.extra_dbits = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], ft.extra_blbits = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], ft.bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], dt.static_ltree = [12, 8, 140, 8, 76, 8, 204, 8, 44, 8, 172, 8, 108, 8, 236, 8, 28, 8, 156, 8, 92, 8, 220, 8, 60, 8, 188, 8, 124, 8, 252, 8, 2, 8, 130, 8, 66, 8, 194, 8, 34, 8, 162, 8, 98, 8, 226, 8, 18, 8, 146, 8, 82, 8, 210, 8, 50, 8, 178, 8, 114, 8, 242, 8, 10, 8, 138, 8, 74, 8, 202, 8, 42, 8, 170, 8, 106, 8, 234, 8, 26, 8, 154, 8, 90, 8, 218, 8, 58, 8, 186, 8, 122, 8, 250, 8, 6, 8, 134, 8, 70, 8, 198, 8, 38, 8, 166, 8, 102, 8, 230, 8, 22, 8, 150, 8, 86, 8, 214, 8, 54, 8, 182, 8, 118, 8, 246, 8, 14, 8, 142, 8, 78, 8, 206, 8, 46, 8, 174, 8, 110, 8, 238, 8, 30, 8, 158, 8, 94, 8, 222, 8, 62, 8, 190, 8, 126, 8, 254, 8, 1, 8, 129, 8, 65, 8, 193, 8, 33, 8, 161, 8, 97, 8, 225, 8, 17, 8, 145, 8, 81, 8, 209, 8, 49, 8, 177, 8, 113, 8, 241, 8, 9, 8, 137, 8, 73, 8, 201, 8, 41, 8, 169, 8, 105, 8, 233, 8, 25, 8, 153, 8, 89, 8, 217, 8, 57, 8, 185, 8, 121, 8, 249, 8, 5, 8, 133, 8, 69, 8, 197, 8, 37, 8, 165, 8, 101, 8, 229, 8, 21, 8, 149, 8, 85, 8, 213, 8, 53, 8, 181, 8, 117, 8, 245, 8, 13, 8, 141, 8, 77, 8, 205, 8, 45, 8, 173, 8, 109, 8, 237, 8, 29, 8, 157, 8, 93, 8, 221, 8, 61, 8, 189, 8, 125, 8, 253, 8, 19, 9, 275, 9, 147, 9, 403, 9, 83, 9, 339, 9, 211, 9, 467, 9, 51, 9, 307, 9, 179, 9, 435, 9, 115, 9, 371, 9, 243, 9, 499, 9, 11, 9, 267, 9, 139, 9, 395, 9, 75, 9, 331, 9, 203, 9, 459, 9, 43, 9, 299, 9, 171, 9, 427, 9, 107, 9, 363, 9, 235, 9, 491, 9, 27, 9, 283, 9, 155, 9, 411, 9, 91, 9, 347, 9, 219, 9, 475, 9, 59, 9, 315, 9, 187, 9, 443, 9, 123, 9, 379, 9, 251, 9, 507, 9, 7, 9, 263, 9, 135, 9, 391, 9, 71, 9, 327, 9, 199, 9, 455, 9, 39, 9, 295, 9, 167, 9, 423, 9, 103, 9, 359, 9, 231, 9, 487, 9, 23, 9, 279, 9, 151, 9, 407, 9, 87, 9, 343, 9, 215, 9, 471, 9, 55, 9, 311, 9, 183, 9, 439, 9, 119, 9, 375, 9, 247, 9, 503, 9, 15, 9, 271, 9, 143, 9, 399, 9, 79, 9, 335, 9, 207, 9, 463, 9, 47, 9, 303, 9, 175, 9, 431, 9, 111, 9, 367, 9, 239, 9, 495, 9, 31, 9, 287, 9, 159, 9, 415, 9, 95, 9, 351, 9, 223, 9, 479, 9, 63, 9, 319, 9, 191, 9, 447, 9, 127, 9, 383, 9, 255, 9, 511, 9, 0, 7, 64, 7, 32, 7, 96, 7, 16, 7, 80, 7, 48, 7, 112, 7, 8, 7, 72, 7, 40, 7, 104, 7, 24, 7, 88, 7, 56, 7, 120, 7, 4, 7, 68, 7, 36, 7, 100, 7, 20, 7, 84, 7, 52, 7, 116, 7, 3, 8, 131, 8, 67, 8, 195, 8, 35, 8, 163, 8, 99, 8, 227, 8], dt.static_dtree = [0, 5, 16, 5, 8, 5, 24, 5, 4, 5, 20, 5, 12, 5, 28, 5, 2, 5, 18, 5, 10, 5, 26, 5, 6, 5, 22, 5, 14, 5, 30, 5, 1, 5, 17, 5, 9, 5, 25, 5, 5, 5, 21, 5, 13, 5, 29, 5, 3, 5, 19, 5, 11, 5, 27, 5, 7, 5, 23, 5], dt.static_l_desc = new dt(dt.static_ltree, ft.extra_lbits, 257, 286, 15), dt.static_d_desc = new dt(dt.static_dtree, ft.extra_dbits, 0, 30, 15), dt.static_bl_desc = new dt(null, ft.extra_blbits, 0, 19, 7);
    bt = [new pt(0, 0, 0, 0, 0), new pt(4, 4, 8, 4, 1), new pt(4, 5, 16, 8, 1), new pt(4, 6, 32, 32, 1), new pt(4, 4, 16, 16, 2), new pt(8, 16, 32, 32, 2), new pt(8, 16, 128, 128, 2), new pt(8, 32, 128, 256, 2), new pt(32, 128, 258, 1024, 2), new pt(32, 258, 258, 4096, 2)];
    yt = ["need dictionary", "stream end", "", "", "stream error", "data error", "", "buffer error", "", ""];
    Lt.prototype = { deflateInit: function(t2, e2) {
      return this.dstate = new Nt(), e2 || (e2 = 15), this.dstate.deflateInit(this, t2, e2);
    }, deflate: function(t2) {
      return this.dstate ? this.dstate.deflate(this, t2) : -2;
    }, deflateEnd: function() {
      if (!this.dstate)
        return -2;
      var t2 = this.dstate.deflateEnd();
      return this.dstate = null, t2;
    }, deflateParams: function(t2, e2) {
      return this.dstate ? this.dstate.deflateParams(this, t2, e2) : -2;
    }, deflateSetDictionary: function(t2, e2) {
      return this.dstate ? this.dstate.deflateSetDictionary(this, t2, e2) : -2;
    }, read_buf: function(t2, e2, n2) {
      var r4 = this.avail_in;
      return r4 > n2 && (r4 = n2), 0 === r4 ? 0 : (this.avail_in -= r4, t2.set(this.next_in.subarray(this.next_in_index, this.next_in_index + r4), e2), this.next_in_index += r4, this.total_in += r4, r4);
    }, flush_pending: function() {
      var t2 = this.dstate.pending;
      t2 > this.avail_out && (t2 = this.avail_out), 0 !== t2 && (this.next_out.set(this.dstate.pending_buf.subarray(this.dstate.pending_out, this.dstate.pending_out + t2), this.next_out_index), this.next_out_index += t2, this.dstate.pending_out += t2, this.total_out += t2, this.avail_out -= t2, this.dstate.pending -= t2, 0 === this.dstate.pending && (this.dstate.pending_out = 0));
    } }, function(t2) {
      var e2 = function(t3) {
        var e3, n3, r5, i3, a2, o2, s2, u2, c2, h2;
        for (/[^\x00-\xFF]/.test(t3), n3 = [], r5 = 0, i3 = (t3 += e3 = "\0\0\0\0".slice(t3.length % 4 || 4)).length; i3 > r5; r5 += 4)
          0 !== (a2 = (t3.charCodeAt(r5) << 24) + (t3.charCodeAt(r5 + 1) << 16) + (t3.charCodeAt(r5 + 2) << 8) + t3.charCodeAt(r5 + 3)) ? (o2 = (a2 = ((a2 = ((a2 = ((a2 = (a2 - (h2 = a2 % 85)) / 85) - (c2 = a2 % 85)) / 85) - (u2 = a2 % 85)) / 85) - (s2 = a2 % 85)) / 85) % 85, n3.push(o2 + 33, s2 + 33, u2 + 33, c2 + 33, h2 + 33)) : n3.push(122);
        return function(t4, e4) {
          for (var n4 = e4; n4 > 0; n4--)
            t4.pop();
        }(n3, e3.length), String.fromCharCode.apply(String, n3) + "~>";
      }, n2 = function(t3) {
        var e3, n3, r5, i3, a2, o2 = String, s2 = "length", u2 = 255, c2 = "charCodeAt", h2 = "slice", l2 = "replace";
        for (t3[h2](-2), t3 = t3[h2](0, -2)[l2](/\s/g, "")[l2]("z", "!!!!!"), r5 = [], i3 = 0, a2 = (t3 += e3 = "uuuuu"[h2](t3[s2] % 5 || 5))[s2]; a2 > i3; i3 += 5)
          n3 = 52200625 * (t3[c2](i3) - 33) + 614125 * (t3[c2](i3 + 1) - 33) + 7225 * (t3[c2](i3 + 2) - 33) + 85 * (t3[c2](i3 + 3) - 33) + (t3[c2](i3 + 4) - 33), r5.push(u2 & n3 >> 24, u2 & n3 >> 16, u2 & n3 >> 8, u2 & n3);
        return function(t4, e4) {
          for (var n4 = e4; n4 > 0; n4--)
            t4.pop();
        }(r5, e3[s2]), o2.fromCharCode.apply(o2, r5);
      }, r4 = function(t3) {
        var e3 = new RegExp(/^([0-9A-Fa-f]{2})+$/);
        if (-1 !== (t3 = t3.replace(/\s/g, "")).indexOf(">") && (t3 = t3.substr(0, t3.indexOf(">"))), t3.length % 2 && (t3 += "0"), false === e3.test(t3))
          return "";
        for (var n3 = "", r5 = 0; r5 < t3.length; r5 += 2)
          n3 += String.fromCharCode("0x" + (t3[r5] + t3[r5 + 1]));
        return n3;
      }, i2 = function(e3) {
        for (var n3, r5, i3, a2, o2, s2 = [], u2 = e3.length; u2--; )
          s2[u2] = e3.charCodeAt(u2);
        return n3 = t2.adler32cs.from(e3), e3 = (r5 = new xt(6)).append(new Uint8Array(s2)), i3 = e3, a2 = r5.flush(), (o2 = new Uint8Array(i3.byteLength + a2.byteLength)).set(new Uint8Array(i3), 0), o2.set(new Uint8Array(a2), i3.byteLength), e3 = o2, (s2 = new Uint8Array(e3.byteLength + 6)).set(new Uint8Array([120, 156])), s2.set(e3, 2), s2.set(new Uint8Array([255 & n3, n3 >> 8 & 255, n3 >> 16 & 255, n3 >> 24 & 255]), e3.byteLength + 2), e3 = s2.reduce(function(t3, e4) {
          return t3 + String.fromCharCode(e4);
        }, "");
      };
      t2.processDataByFilters = function(t3, a2) {
        var o2 = 0, s2 = t3 || "", u2 = [];
        for ("string" == typeof (a2 = a2 || []) && (a2 = [a2]), o2 = 0; o2 < a2.length; o2 += 1)
          switch (a2[o2]) {
            case "ASCII85Decode":
            case "/ASCII85Decode":
              s2 = n2(s2), u2.push("/ASCII85Encode");
              break;
            case "ASCII85Encode":
            case "/ASCII85Encode":
              s2 = e2(s2), u2.push("/ASCII85Decode");
              break;
            case "ASCIIHexDecode":
            case "/ASCIIHexDecode":
              s2 = r4(s2), u2.push("/ASCIIHexEncode");
              break;
            case "ASCIIHexEncode":
            case "/ASCIIHexEncode":
              s2 = s2.split("").map(function(t4) {
                return ("0" + t4.charCodeAt().toString(16)).slice(-2);
              }).join("") + ">", u2.push("/ASCIIHexDecode");
              break;
            case "FlateEncode":
            case "/FlateEncode":
              s2 = i2(s2), u2.push("/FlateDecode");
              break;
            default:
              throw new Error('The filter: "' + a2[o2] + '" is not implemented');
          }
        return { data: s2, reverseChain: u2.reverse().join(" ") };
      };
    }(g.API), /**
     * @license
     * jsPDF fileloading PlugIn
     * Copyright (c) 2018 Aras Abbasi (aras.abbasi@gmail.com)
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2) {
      t2.loadFile = function(t3, e2, n2) {
        return function(t4, e3, n3) {
          e3 = false !== e3, n3 = "function" == typeof n3 ? n3 : function() {
          };
          var r4 = void 0;
          try {
            r4 = function(t5, e4, n4) {
              var r5 = new XMLHttpRequest(), i2 = 0, a2 = function(t6) {
                var e5 = t6.length, n5 = [], r6 = String.fromCharCode;
                for (i2 = 0; i2 < e5; i2 += 1)
                  n5.push(r6(255 & t6.charCodeAt(i2)));
                return n5.join("");
              };
              if (r5.open("GET", t5, !e4), r5.overrideMimeType("text/plain; charset=x-user-defined"), false === e4 && (r5.onload = function() {
                200 === r5.status ? n4(a2(this.responseText)) : n4(void 0);
              }), r5.send(null), e4 && 200 === r5.status)
                return a2(r5.responseText);
            }(t4, e3, n3);
          } catch (t5) {
          }
          return r4;
        }(t3, e2, n2);
      }, t2.loadImageFile = t2.loadFile;
    }(g.API), /**
     * @license
     * Copyright (c) 2018 Erik Koopmans
     * Released under the MIT License.
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(e2) {
      function n2() {
        return (t.html2canvas ? Promise.resolve(t.html2canvas) : import("./html2canvas.esm-CHV7JX5G.js")).catch(function(t2) {
          return Promise.reject(new Error("Could not load dompurify: " + t2));
        }).then(function(t2) {
          return t2.default ? t2.default : t2;
        });
      }
      function r4() {
        return (t.DOMPurify ? Promise.resolve(t.DOMPurify) : import("./purify.es-XIOHE7H4.js")).catch(function(t2) {
          return Promise.reject(new Error("Could not load dompurify: " + t2));
        }).then(function(t2) {
          return t2.default ? t2.default : t2;
        });
      }
      var i2 = function(t2) {
        var e3 = typeof t2;
        return "undefined" === e3 ? "undefined" : "string" === e3 || t2 instanceof String ? "string" : "number" === e3 || t2 instanceof Number ? "number" : "function" === e3 || t2 instanceof Function ? "function" : t2 && t2.constructor === Array ? "array" : t2 && 1 === t2.nodeType ? "element" : "object" === e3 ? "object" : "unknown";
      }, a2 = function(t2, e3) {
        var n3 = document.createElement(t2);
        for (var r5 in e3.className && (n3.className = e3.className), e3.innerHTML && e3.dompurify && (n3.innerHTML = e3.dompurify.sanitize(e3.innerHTML)), e3.style)
          n3.style[r5] = e3.style[r5];
        return n3;
      }, o2 = function(t2, e3) {
        for (var n3 = 3 === t2.nodeType ? document.createTextNode(t2.nodeValue) : t2.cloneNode(false), r5 = t2.firstChild; r5; r5 = r5.nextSibling)
          true !== e3 && 1 === r5.nodeType && "SCRIPT" === r5.nodeName || n3.appendChild(o2(r5, e3));
        return 1 === t2.nodeType && ("CANVAS" === t2.nodeName ? (n3.width = t2.width, n3.height = t2.height, n3.getContext("2d").drawImage(t2, 0, 0)) : "TEXTAREA" !== t2.nodeName && "SELECT" !== t2.nodeName || (n3.value = t2.value), n3.addEventListener("load", function() {
          n3.scrollTop = t2.scrollTop, n3.scrollLeft = t2.scrollLeft;
        }, true)), n3;
      }, s2 = function t2(e3) {
        var n3 = Object.assign(t2.convert(Promise.resolve()), JSON.parse(JSON.stringify(t2.template))), r5 = t2.convert(Promise.resolve(), n3);
        return r5 = (r5 = r5.setProgress(1, t2, 1, [t2])).set(e3);
      };
      (s2.prototype = Object.create(Promise.prototype)).constructor = s2, s2.convert = function(t2, e3) {
        return t2.__proto__ = e3 || s2.prototype, t2;
      }, s2.template = { prop: { src: null, container: null, overlay: null, canvas: null, img: null, pdf: null, pageSize: null, callback: function() {
      } }, progress: { val: 0, state: null, n: 0, stack: [] }, opt: { filename: "file.pdf", margin: [0, 0, 0, 0], enableLinks: true, x: 0, y: 0, html2canvas: {}, jsPDF: {}, backgroundColor: "transparent" } }, s2.prototype.from = function(t2, e3) {
        return this.then(function() {
          switch (e3 = e3 || function(t3) {
            switch (i2(t3)) {
              case "string":
                return "string";
              case "element":
                return "canvas" === t3.nodeName.toLowerCase ? "canvas" : "element";
              default:
                return "unknown";
            }
          }(t2)) {
            case "string":
              return this.then(r4).then(function(e4) {
                return this.set({ src: a2("div", { innerHTML: t2, dompurify: e4 }) });
              });
            case "element":
              return this.set({ src: t2 });
            case "canvas":
              return this.set({ canvas: t2 });
            case "img":
              return this.set({ img: t2 });
            default:
              return this.error("Unknown source type.");
          }
        });
      }, s2.prototype.to = function(t2) {
        switch (t2) {
          case "container":
            return this.toContainer();
          case "canvas":
            return this.toCanvas();
          case "img":
            return this.toImg();
          case "pdf":
            return this.toPdf();
          default:
            return this.error("Invalid target.");
        }
      }, s2.prototype.toContainer = function() {
        return this.thenList([function() {
          return this.prop.src || this.error("Cannot duplicate - no source HTML.");
        }, function() {
          return this.prop.pageSize || this.setPageSize();
        }]).then(function() {
          var t2 = { position: "relative", display: "inline-block", width: Math.max(this.prop.src.clientWidth, this.prop.src.scrollWidth, this.prop.src.offsetWidth) + "px", left: 0, right: 0, top: 0, margin: "auto", backgroundColor: this.opt.backgroundColor }, e3 = o2(this.prop.src, this.opt.html2canvas.javascriptEnabled);
          "BODY" === e3.tagName && (t2.height = Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight) + "px"), this.prop.overlay = a2("div", { className: "html2pdf__overlay", style: { position: "fixed", overflow: "hidden", zIndex: 1e3, left: "-100000px", right: 0, bottom: 0, top: 0 } }), this.prop.container = a2("div", { className: "html2pdf__container", style: t2 }), this.prop.container.appendChild(e3), this.prop.container.firstChild.appendChild(a2("div", { style: { clear: "both", border: "0 none transparent", margin: 0, padding: 0, height: 0 } })), this.prop.container.style.float = "none", this.prop.overlay.appendChild(this.prop.container), document.body.appendChild(this.prop.overlay), this.prop.container.firstChild.style.position = "relative", this.prop.container.height = Math.max(this.prop.container.firstChild.clientHeight, this.prop.container.firstChild.scrollHeight, this.prop.container.firstChild.offsetHeight) + "px";
        });
      }, s2.prototype.toCanvas = function() {
        var t2 = [function() {
          return document.body.contains(this.prop.container) || this.toContainer();
        }];
        return this.thenList(t2).then(n2).then(function(t3) {
          var e3 = Object.assign({}, this.opt.html2canvas);
          return delete e3.onrendered, t3(this.prop.container, e3);
        }).then(function(t3) {
          (this.opt.html2canvas.onrendered || function() {
          })(t3), this.prop.canvas = t3, document.body.removeChild(this.prop.overlay);
        });
      }, s2.prototype.toContext2d = function() {
        var t2 = [function() {
          return document.body.contains(this.prop.container) || this.toContainer();
        }];
        return this.thenList(t2).then(n2).then(function(t3) {
          var e3 = this.opt.jsPDF, n3 = Object.assign({ async: true, allowTaint: true, scale: 1, scrollX: this.opt.scrollX || 0, scrollY: this.opt.scrollY || 0, backgroundColor: "#ffffff", imageTimeout: 15e3, logging: true, proxy: null, removeContainer: true, foreignObjectRendering: false, useCORS: false }, this.opt.html2canvas);
          return delete n3.onrendered, e3.context2d.autoPaging = true, e3.context2d.posX = this.opt.x, e3.context2d.posY = this.opt.y, n3.windowHeight = n3.windowHeight || 0, n3.windowHeight = 0 == n3.windowHeight ? Math.max(this.prop.container.clientHeight, this.prop.container.scrollHeight, this.prop.container.offsetHeight) : n3.windowHeight, t3(this.prop.container, n3);
        }).then(function(t3) {
          (this.opt.html2canvas.onrendered || function() {
          })(t3), this.prop.canvas = t3, document.body.removeChild(this.prop.overlay);
        });
      }, s2.prototype.toImg = function() {
        return this.thenList([function() {
          return this.prop.canvas || this.toCanvas();
        }]).then(function() {
          var t2 = this.prop.canvas.toDataURL("image/" + this.opt.image.type, this.opt.image.quality);
          this.prop.img = document.createElement("img"), this.prop.img.src = t2;
        });
      }, s2.prototype.toPdf = function() {
        return this.thenList([function() {
          return this.toContext2d();
        }]).then(function() {
          this.prop.pdf = this.prop.pdf || this.opt.jsPDF;
        });
      }, s2.prototype.output = function(t2, e3, n3) {
        return "img" === (n3 = n3 || "pdf").toLowerCase() || "image" === n3.toLowerCase() ? this.outputImg(t2, e3) : this.outputPdf(t2, e3);
      }, s2.prototype.outputPdf = function(t2, e3) {
        return this.thenList([function() {
          return this.prop.pdf || this.toPdf();
        }]).then(function() {
          return this.prop.pdf.output(t2, e3);
        });
      }, s2.prototype.outputImg = function(t2) {
        return this.thenList([function() {
          return this.prop.img || this.toImg();
        }]).then(function() {
          switch (t2) {
            case void 0:
            case "img":
              return this.prop.img;
            case "datauristring":
            case "dataurlstring":
              return this.prop.img.src;
            case "datauri":
            case "dataurl":
              return document.location.href = this.prop.img.src;
            default:
              throw 'Image output type "' + t2 + '" is not supported.';
          }
        });
      }, s2.prototype.save = function(t2) {
        return this.thenList([function() {
          return this.prop.pdf || this.toPdf();
        }]).set(t2 ? { filename: t2 } : null).then(function() {
          this.prop.pdf.save(this.opt.filename);
        });
      }, s2.prototype.doCallback = function() {
        return this.thenList([function() {
          return this.prop.pdf || this.toPdf();
        }]).then(function() {
          this.prop.callback(this.prop.pdf);
        });
      }, s2.prototype.set = function(t2) {
        if ("object" !== i2(t2))
          return this;
        var e3 = Object.keys(t2 || {}).map(function(e4) {
          if (e4 in s2.template.prop)
            return function() {
              this.prop[e4] = t2[e4];
            };
          switch (e4) {
            case "margin":
              return this.setMargin.bind(this, t2.margin);
            case "jsPDF":
              return function() {
                return this.opt.jsPDF = t2.jsPDF, this.setPageSize();
              };
            case "pageSize":
              return this.setPageSize.bind(this, t2.pageSize);
            default:
              return function() {
                this.opt[e4] = t2[e4];
              };
          }
        }, this);
        return this.then(function() {
          return this.thenList(e3);
        });
      }, s2.prototype.get = function(t2, e3) {
        return this.then(function() {
          var n3 = t2 in s2.template.prop ? this.prop[t2] : this.opt[t2];
          return e3 ? e3(n3) : n3;
        });
      }, s2.prototype.setMargin = function(t2) {
        return this.then(function() {
          switch (i2(t2)) {
            case "number":
              t2 = [t2, t2, t2, t2];
            case "array":
              if (2 === t2.length && (t2 = [t2[0], t2[1], t2[0], t2[1]]), 4 === t2.length)
                break;
            default:
              return this.error("Invalid margin array.");
          }
          this.opt.margin = t2;
        }).then(this.setPageSize);
      }, s2.prototype.setPageSize = function(t2) {
        function e3(t3, e4) {
          return Math.floor(t3 * e4 / 72 * 96);
        }
        return this.then(function() {
          (t2 = t2 || g.getPageSize(this.opt.jsPDF)).hasOwnProperty("inner") || (t2.inner = { width: t2.width - this.opt.margin[1] - this.opt.margin[3], height: t2.height - this.opt.margin[0] - this.opt.margin[2] }, t2.inner.px = { width: e3(t2.inner.width, t2.k), height: e3(t2.inner.height, t2.k) }, t2.inner.ratio = t2.inner.height / t2.inner.width), this.prop.pageSize = t2;
        });
      }, s2.prototype.setProgress = function(t2, e3, n3, r5) {
        return null != t2 && (this.progress.val = t2), null != e3 && (this.progress.state = e3), null != n3 && (this.progress.n = n3), null != r5 && (this.progress.stack = r5), this.progress.ratio = this.progress.val / this.progress.state, this;
      }, s2.prototype.updateProgress = function(t2, e3, n3, r5) {
        return this.setProgress(t2 ? this.progress.val + t2 : null, e3 || null, n3 ? this.progress.n + n3 : null, r5 ? this.progress.stack.concat(r5) : null);
      }, s2.prototype.then = function(t2, e3) {
        var n3 = this;
        return this.thenCore(t2, e3, function(t3, e4) {
          return n3.updateProgress(null, null, 1, [t3]), Promise.prototype.then.call(this, function(e5) {
            return n3.updateProgress(null, t3), e5;
          }).then(t3, e4).then(function(t4) {
            return n3.updateProgress(1), t4;
          });
        });
      }, s2.prototype.thenCore = function(t2, e3, n3) {
        n3 = n3 || Promise.prototype.then;
        t2 && (t2 = t2.bind(this)), e3 && (e3 = e3.bind(this));
        var r5 = -1 !== Promise.toString().indexOf("[native code]") && "Promise" === Promise.name ? this : s2.convert(Object.assign({}, this), Promise.prototype), i3 = n3.call(r5, t2, e3);
        return s2.convert(i3, this.__proto__);
      }, s2.prototype.thenExternal = function(t2, e3) {
        return Promise.prototype.then.call(this, t2, e3);
      }, s2.prototype.thenList = function(t2) {
        var e3 = this;
        return t2.forEach(function(t3) {
          e3 = e3.thenCore(t3);
        }), e3;
      }, s2.prototype.catch = function(t2) {
        t2 && (t2 = t2.bind(this));
        var e3 = Promise.prototype.catch.call(this, t2);
        return s2.convert(e3, this);
      }, s2.prototype.catchExternal = function(t2) {
        return Promise.prototype.catch.call(this, t2);
      }, s2.prototype.error = function(t2) {
        return this.then(function() {
          throw new Error(t2);
        });
      }, s2.prototype.using = s2.prototype.set, s2.prototype.saveAs = s2.prototype.save, s2.prototype.export = s2.prototype.output, s2.prototype.run = s2.prototype.then, g.getPageSize = function(t2, e3, n3) {
        if ("object" == typeof t2) {
          var r5 = t2;
          t2 = r5.orientation, e3 = r5.unit || e3, n3 = r5.format || n3;
        }
        e3 = e3 || "mm", n3 = n3 || "a4", t2 = ("" + (t2 || "P")).toLowerCase();
        var i3, a3 = ("" + n3).toLowerCase(), o3 = { a0: [2383.94, 3370.39], a1: [1683.78, 2383.94], a2: [1190.55, 1683.78], a3: [841.89, 1190.55], a4: [595.28, 841.89], a5: [419.53, 595.28], a6: [297.64, 419.53], a7: [209.76, 297.64], a8: [147.4, 209.76], a9: [104.88, 147.4], a10: [73.7, 104.88], b0: [2834.65, 4008.19], b1: [2004.09, 2834.65], b2: [1417.32, 2004.09], b3: [1000.63, 1417.32], b4: [708.66, 1000.63], b5: [498.9, 708.66], b6: [354.33, 498.9], b7: [249.45, 354.33], b8: [175.75, 249.45], b9: [124.72, 175.75], b10: [87.87, 124.72], c0: [2599.37, 3676.54], c1: [1836.85, 2599.37], c2: [1298.27, 1836.85], c3: [918.43, 1298.27], c4: [649.13, 918.43], c5: [459.21, 649.13], c6: [323.15, 459.21], c7: [229.61, 323.15], c8: [161.57, 229.61], c9: [113.39, 161.57], c10: [79.37, 113.39], dl: [311.81, 623.62], letter: [612, 792], "government-letter": [576, 756], legal: [612, 1008], "junior-legal": [576, 360], ledger: [1224, 792], tabloid: [792, 1224], "credit-card": [153, 243] };
        switch (e3) {
          case "pt":
            i3 = 1;
            break;
          case "mm":
            i3 = 72 / 25.4;
            break;
          case "cm":
            i3 = 72 / 2.54;
            break;
          case "in":
            i3 = 72;
            break;
          case "px":
            i3 = 0.75;
            break;
          case "pc":
          case "em":
            i3 = 12;
            break;
          case "ex":
            i3 = 6;
            break;
          default:
            throw "Invalid unit: " + e3;
        }
        var s3, u2 = 0, c2 = 0;
        if (o3.hasOwnProperty(a3))
          u2 = o3[a3][1] / i3, c2 = o3[a3][0] / i3;
        else
          try {
            u2 = n3[1], c2 = n3[0];
          } catch (t3) {
            throw new Error("Invalid format: " + n3);
          }
        if ("p" === t2 || "portrait" === t2)
          t2 = "p", c2 > u2 && (s3 = c2, c2 = u2, u2 = s3);
        else {
          if ("l" !== t2 && "landscape" !== t2)
            throw "Invalid orientation: " + t2;
          t2 = "l", u2 > c2 && (s3 = c2, c2 = u2, u2 = s3);
        }
        return { width: c2, height: u2, unit: e3, k: i3, orientation: t2 };
      }, e2.html = function(t2, e3) {
        (e3 = e3 || {}).callback = e3.callback || function() {
        }, e3.html2canvas = e3.html2canvas || {}, e3.html2canvas.canvas = e3.html2canvas.canvas || this.canvas, e3.jsPDF = e3.jsPDF || this;
        var n3 = new s2(e3);
        return e3.worker ? n3 : n3.from(t2).doCallback();
      };
    }(g.API), g.API.addJS = function(t2) {
      return vt = t2, this.internal.events.subscribe("postPutResources", function() {
        gt = this.internal.newObject(), this.internal.out("<<"), this.internal.out("/Names [(EmbeddedJS) " + (gt + 1) + " 0 R]"), this.internal.out(">>"), this.internal.out("endobj"), mt = this.internal.newObject(), this.internal.out("<<"), this.internal.out("/S /JavaScript"), this.internal.out("/JS (" + vt + ")"), this.internal.out(">>"), this.internal.out("endobj");
      }), this.internal.events.subscribe("putCatalog", function() {
        void 0 !== gt && void 0 !== mt && this.internal.out("/Names <</JavaScript " + gt + " 0 R>>");
      }), this;
    }, /**
     * @license
     * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2) {
      var e2;
      t2.events.push(["postPutResources", function() {
        var t3 = this, n2 = /^(\d+) 0 obj$/;
        if (this.outline.root.children.length > 0)
          for (var r4 = t3.outline.render().split(/\r\n/), i2 = 0; i2 < r4.length; i2++) {
            var a2 = r4[i2], o2 = n2.exec(a2);
            if (null != o2) {
              var s2 = o2[1];
              t3.internal.newObjectDeferredBegin(s2, false);
            }
            t3.internal.write(a2);
          }
        if (this.outline.createNamedDestinations) {
          var u2 = this.internal.pages.length, c2 = [];
          for (i2 = 0; i2 < u2; i2++) {
            var h2 = t3.internal.newObject();
            c2.push(h2);
            var l2 = t3.internal.getPageInfo(i2 + 1);
            t3.internal.write("<< /D[" + l2.objId + " 0 R /XYZ null null null]>> endobj");
          }
          var f2 = t3.internal.newObject();
          t3.internal.write("<< /Names [ ");
          for (i2 = 0; i2 < c2.length; i2++)
            t3.internal.write("(page_" + (i2 + 1) + ")" + c2[i2] + " 0 R");
          t3.internal.write(" ] >>", "endobj"), e2 = t3.internal.newObject(), t3.internal.write("<< /Dests " + f2 + " 0 R"), t3.internal.write(">>", "endobj");
        }
      }]), t2.events.push(["putCatalog", function() {
        this.outline.root.children.length > 0 && (this.internal.write("/Outlines", this.outline.makeRef(this.outline.root)), this.outline.createNamedDestinations && this.internal.write("/Names " + e2 + " 0 R"));
      }]), t2.events.push(["initialized", function() {
        var t3 = this;
        t3.outline = { createNamedDestinations: false, root: { children: [] } }, t3.outline.add = function(t4, e3, n2) {
          var r4 = { title: e3, options: n2, children: [] };
          return null == t4 && (t4 = this.root), t4.children.push(r4), r4;
        }, t3.outline.render = function() {
          return this.ctx = {}, this.ctx.val = "", this.ctx.pdf = t3, this.genIds_r(this.root), this.renderRoot(this.root), this.renderItems(this.root), this.ctx.val;
        }, t3.outline.genIds_r = function(e3) {
          e3.id = t3.internal.newObjectDeferred();
          for (var n2 = 0; n2 < e3.children.length; n2++)
            this.genIds_r(e3.children[n2]);
        }, t3.outline.renderRoot = function(t4) {
          this.objStart(t4), this.line("/Type /Outlines"), t4.children.length > 0 && (this.line("/First " + this.makeRef(t4.children[0])), this.line("/Last " + this.makeRef(t4.children[t4.children.length - 1]))), this.line("/Count " + this.count_r({ count: 0 }, t4)), this.objEnd();
        }, t3.outline.renderItems = function(e3) {
          for (var n2 = this.ctx.pdf.internal.getVerticalCoordinateString, r4 = 0; r4 < e3.children.length; r4++) {
            var i2 = e3.children[r4];
            this.objStart(i2), this.line("/Title " + this.makeString(i2.title)), this.line("/Parent " + this.makeRef(e3)), r4 > 0 && this.line("/Prev " + this.makeRef(e3.children[r4 - 1])), r4 < e3.children.length - 1 && this.line("/Next " + this.makeRef(e3.children[r4 + 1])), i2.children.length > 0 && (this.line("/First " + this.makeRef(i2.children[0])), this.line("/Last " + this.makeRef(i2.children[i2.children.length - 1])));
            var a2 = this.count = this.count_r({ count: 0 }, i2);
            if (a2 > 0 && this.line("/Count " + a2), i2.options && i2.options.pageNumber) {
              var o2 = t3.internal.getPageInfo(i2.options.pageNumber);
              this.line("/Dest [" + o2.objId + " 0 R /XYZ 0 " + n2(0) + " 0]");
            }
            this.objEnd();
          }
          for (var s2 = 0; s2 < e3.children.length; s2++)
            this.renderItems(e3.children[s2]);
        }, t3.outline.line = function(t4) {
          this.ctx.val += t4 + "\r\n";
        }, t3.outline.makeRef = function(t4) {
          return t4.id + " 0 R";
        }, t3.outline.makeString = function(e3) {
          return "(" + t3.internal.pdfEscape(e3) + ")";
        }, t3.outline.objStart = function(t4) {
          this.ctx.val += "\r\n" + t4.id + " 0 obj\r\n<<\r\n";
        }, t3.outline.objEnd = function() {
          this.ctx.val += ">> \r\nendobj\r\n";
        }, t3.outline.count_r = function(t4, e3) {
          for (var n2 = 0; n2 < e3.children.length; n2++)
            t4.count++, this.count_r(t4, e3.children[n2]);
          return t4.count;
        };
      }]);
    }(g.API), /**
     * @license
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2) {
      var e2 = [192, 193, 194, 195, 196, 197, 198, 199];
      t2.processJPEG = function(t3, n2, r4, i2, a2, o2) {
        var s2, u2 = this.decode.DCT_DECODE, c2 = null;
        if ("string" == typeof t3 || this.__addimage__.isArrayBuffer(t3) || this.__addimage__.isArrayBufferView(t3)) {
          switch (t3 = a2 || t3, t3 = this.__addimage__.isArrayBuffer(t3) ? new Uint8Array(t3) : t3, (s2 = function(t4) {
            for (var n3, r5 = 256 * t4.charCodeAt(4) + t4.charCodeAt(5), i3 = t4.length, a3 = { width: 0, height: 0, numcomponents: 1 }, o3 = 4; o3 < i3; o3 += 2) {
              if (o3 += r5, -1 !== e2.indexOf(t4.charCodeAt(o3 + 1))) {
                n3 = 256 * t4.charCodeAt(o3 + 5) + t4.charCodeAt(o3 + 6), a3 = { width: 256 * t4.charCodeAt(o3 + 7) + t4.charCodeAt(o3 + 8), height: n3, numcomponents: t4.charCodeAt(o3 + 9) };
                break;
              }
              r5 = 256 * t4.charCodeAt(o3 + 2) + t4.charCodeAt(o3 + 3);
            }
            return a3;
          }(t3 = this.__addimage__.isArrayBufferView(t3) ? this.__addimage__.arrayBufferToBinaryString(t3) : t3)).numcomponents) {
            case 1:
              o2 = this.color_spaces.DEVICE_GRAY;
              break;
            case 4:
              o2 = this.color_spaces.DEVICE_CMYK;
              break;
            case 3:
              o2 = this.color_spaces.DEVICE_RGB;
          }
          c2 = { data: t3, width: s2.width, height: s2.height, colorSpace: o2, bitsPerComponent: 8, filter: u2, index: n2, alias: r4 };
        }
        return c2;
      };
    }(g.API);
    Ft = function() {
      function t2() {
        this.pos = 0, this.bufferLength = 0, this.eof = false, this.buffer = null;
      }
      return t2.prototype = { ensureBuffer: function(t3) {
        var e2 = this.buffer, n2 = e2 ? e2.byteLength : 0;
        if (t3 < n2)
          return e2;
        for (var r4 = 512; r4 < t3; )
          r4 <<= 1;
        for (var i2 = new Uint8Array(r4), a2 = 0; a2 < n2; ++a2)
          i2[a2] = e2[a2];
        return this.buffer = i2;
      }, getByte: function() {
        for (var t3 = this.pos; this.bufferLength <= t3; ) {
          if (this.eof)
            return null;
          this.readBlock();
        }
        return this.buffer[this.pos++];
      }, getBytes: function(t3) {
        var e2 = this.pos;
        if (t3) {
          this.ensureBuffer(e2 + t3);
          for (var n2 = e2 + t3; !this.eof && this.bufferLength < n2; )
            this.readBlock();
          var r4 = this.bufferLength;
          n2 > r4 && (n2 = r4);
        } else {
          for (; !this.eof; )
            this.readBlock();
          n2 = this.bufferLength;
        }
        return this.pos = n2, this.buffer.subarray(e2, n2);
      }, lookChar: function() {
        for (var t3 = this.pos; this.bufferLength <= t3; ) {
          if (this.eof)
            return null;
          this.readBlock();
        }
        return String.fromCharCode(this.buffer[this.pos]);
      }, getChar: function() {
        for (var t3 = this.pos; this.bufferLength <= t3; ) {
          if (this.eof)
            return null;
          this.readBlock();
        }
        return String.fromCharCode(this.buffer[this.pos++]);
      }, makeSubStream: function(t3, e2, n2) {
        for (var r4 = t3 + e2; this.bufferLength <= r4 && !this.eof; )
          this.readBlock();
        return new Stream(this.buffer, t3, e2, n2);
      }, skip: function(t3) {
        t3 || (t3 = 1), this.pos += t3;
      }, reset: function() {
        this.pos = 0;
      } }, t2;
    }();
    It = ("undefined" != typeof self && self || "undefined" != typeof window && window || "undefined" != typeof global && global || Function('return typeof this === "object" && this.content')() || Function("return this")()).FlateStream = function() {
      if ("undefined" != typeof Uint32Array) {
        var t2 = new Uint32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), e2 = new Uint32Array([3, 4, 5, 6, 7, 8, 9, 10, 65547, 65549, 65551, 65553, 131091, 131095, 131099, 131103, 196643, 196651, 196659, 196667, 262211, 262227, 262243, 262259, 327811, 327843, 327875, 327907, 258, 258, 258]), n2 = new Uint32Array([1, 2, 3, 4, 65541, 65543, 131081, 131085, 196625, 196633, 262177, 262193, 327745, 327777, 393345, 393409, 459009, 459137, 524801, 525057, 590849, 591361, 657409, 658433, 724993, 727041, 794625, 798721, 868353, 876545]), r4 = [new Uint32Array([459008, 524368, 524304, 524568, 459024, 524400, 524336, 590016, 459016, 524384, 524320, 589984, 524288, 524416, 524352, 590048, 459012, 524376, 524312, 589968, 459028, 524408, 524344, 590032, 459020, 524392, 524328, 59e4, 524296, 524424, 524360, 590064, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590024, 459018, 524388, 524324, 589992, 524292, 524420, 524356, 590056, 459014, 524380, 524316, 589976, 459030, 524412, 524348, 590040, 459022, 524396, 524332, 590008, 524300, 524428, 524364, 590072, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590020, 459017, 524386, 524322, 589988, 524290, 524418, 524354, 590052, 459013, 524378, 524314, 589972, 459029, 524410, 524346, 590036, 459021, 524394, 524330, 590004, 524298, 524426, 524362, 590068, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590028, 459019, 524390, 524326, 589996, 524294, 524422, 524358, 590060, 459015, 524382, 524318, 589980, 459031, 524414, 524350, 590044, 459023, 524398, 524334, 590012, 524302, 524430, 524366, 590076, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590018, 459016, 524385, 524321, 589986, 524289, 524417, 524353, 590050, 459012, 524377, 524313, 589970, 459028, 524409, 524345, 590034, 459020, 524393, 524329, 590002, 524297, 524425, 524361, 590066, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590026, 459018, 524389, 524325, 589994, 524293, 524421, 524357, 590058, 459014, 524381, 524317, 589978, 459030, 524413, 524349, 590042, 459022, 524397, 524333, 590010, 524301, 524429, 524365, 590074, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590022, 459017, 524387, 524323, 589990, 524291, 524419, 524355, 590054, 459013, 524379, 524315, 589974, 459029, 524411, 524347, 590038, 459021, 524395, 524331, 590006, 524299, 524427, 524363, 590070, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590030, 459019, 524391, 524327, 589998, 524295, 524423, 524359, 590062, 459015, 524383, 524319, 589982, 459031, 524415, 524351, 590046, 459023, 524399, 524335, 590014, 524303, 524431, 524367, 590078, 459008, 524368, 524304, 524568, 459024, 524400, 524336, 590017, 459016, 524384, 524320, 589985, 524288, 524416, 524352, 590049, 459012, 524376, 524312, 589969, 459028, 524408, 524344, 590033, 459020, 524392, 524328, 590001, 524296, 524424, 524360, 590065, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590025, 459018, 524388, 524324, 589993, 524292, 524420, 524356, 590057, 459014, 524380, 524316, 589977, 459030, 524412, 524348, 590041, 459022, 524396, 524332, 590009, 524300, 524428, 524364, 590073, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590021, 459017, 524386, 524322, 589989, 524290, 524418, 524354, 590053, 459013, 524378, 524314, 589973, 459029, 524410, 524346, 590037, 459021, 524394, 524330, 590005, 524298, 524426, 524362, 590069, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590029, 459019, 524390, 524326, 589997, 524294, 524422, 524358, 590061, 459015, 524382, 524318, 589981, 459031, 524414, 524350, 590045, 459023, 524398, 524334, 590013, 524302, 524430, 524366, 590077, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590019, 459016, 524385, 524321, 589987, 524289, 524417, 524353, 590051, 459012, 524377, 524313, 589971, 459028, 524409, 524345, 590035, 459020, 524393, 524329, 590003, 524297, 524425, 524361, 590067, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590027, 459018, 524389, 524325, 589995, 524293, 524421, 524357, 590059, 459014, 524381, 524317, 589979, 459030, 524413, 524349, 590043, 459022, 524397, 524333, 590011, 524301, 524429, 524365, 590075, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590023, 459017, 524387, 524323, 589991, 524291, 524419, 524355, 590055, 459013, 524379, 524315, 589975, 459029, 524411, 524347, 590039, 459021, 524395, 524331, 590007, 524299, 524427, 524363, 590071, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590031, 459019, 524391, 524327, 589999, 524295, 524423, 524359, 590063, 459015, 524383, 524319, 589983, 459031, 524415, 524351, 590047, 459023, 524399, 524335, 590015, 524303, 524431, 524367, 590079]), 9], i2 = [new Uint32Array([327680, 327696, 327688, 327704, 327684, 327700, 327692, 327708, 327682, 327698, 327690, 327706, 327686, 327702, 327694, 0, 327681, 327697, 327689, 327705, 327685, 327701, 327693, 327709, 327683, 327699, 327691, 327707, 327687, 327703, 327695, 0]), 5];
        return o2.prototype = Object.create(Ft.prototype), o2.prototype.getBits = function(t3) {
          for (var e3, n3 = this.codeSize, r5 = this.codeBuf, i3 = this.bytes, o3 = this.bytesPos; n3 < t3; )
            void 0 === (e3 = i3[o3++]) && a2("Bad encoding in flate stream"), r5 |= e3 << n3, n3 += 8;
          return e3 = r5 & (1 << t3) - 1, this.codeBuf = r5 >> t3, this.codeSize = n3 -= t3, this.bytesPos = o3, e3;
        }, o2.prototype.getCode = function(t3) {
          for (var e3 = t3[0], n3 = t3[1], r5 = this.codeSize, i3 = this.codeBuf, o3 = this.bytes, s2 = this.bytesPos; r5 < n3; ) {
            var u2;
            void 0 === (u2 = o3[s2++]) && a2("Bad encoding in flate stream"), i3 |= u2 << r5, r5 += 8;
          }
          var c2 = e3[i3 & (1 << n3) - 1], h2 = c2 >> 16, l2 = 65535 & c2;
          return (0 == r5 || r5 < h2 || 0 == h2) && a2("Bad encoding in flate stream"), this.codeBuf = i3 >> h2, this.codeSize = r5 - h2, this.bytesPos = s2, l2;
        }, o2.prototype.generateHuffmanTable = function(t3) {
          for (var e3 = t3.length, n3 = 0, r5 = 0; r5 < e3; ++r5)
            t3[r5] > n3 && (n3 = t3[r5]);
          for (var i3 = 1 << n3, a3 = new Uint32Array(i3), o3 = 1, s2 = 0, u2 = 2; o3 <= n3; ++o3, s2 <<= 1, u2 <<= 1)
            for (var c2 = 0; c2 < e3; ++c2)
              if (t3[c2] == o3) {
                var h2 = 0, l2 = s2;
                for (r5 = 0; r5 < o3; ++r5)
                  h2 = h2 << 1 | 1 & l2, l2 >>= 1;
                for (r5 = h2; r5 < i3; r5 += u2)
                  a3[r5] = o3 << 16 | c2;
                ++s2;
              }
          return [a3, n3];
        }, o2.prototype.readBlock = function() {
          function o3(t3, e3, n3, r5, i3) {
            for (var a3 = t3.getBits(n3) + r5; a3-- > 0; )
              e3[p2++] = i3;
          }
          var s2 = this.getBits(3);
          if (1 & s2 && (this.eof = true), 0 != (s2 >>= 1)) {
            var u2, c2;
            if (1 == s2)
              u2 = r4, c2 = i2;
            else if (2 == s2) {
              for (var h2 = this.getBits(5) + 257, l2 = this.getBits(5) + 1, f2 = this.getBits(4) + 4, d2 = Array(t2.length), p2 = 0; p2 < f2; )
                d2[t2[p2++]] = this.getBits(3);
              for (var g2 = this.generateHuffmanTable(d2), m2 = 0, v2 = (p2 = 0, h2 + l2), b2 = new Array(v2); p2 < v2; ) {
                var y2 = this.getCode(g2);
                16 == y2 ? o3(this, b2, 2, 3, m2) : 17 == y2 ? o3(this, b2, 3, 3, m2 = 0) : 18 == y2 ? o3(this, b2, 7, 11, m2 = 0) : b2[p2++] = m2 = y2;
              }
              u2 = this.generateHuffmanTable(b2.slice(0, h2)), c2 = this.generateHuffmanTable(b2.slice(h2, v2));
            } else
              a2("Unknown block type in flate stream");
            for (var w2 = (j2 = this.buffer) ? j2.length : 0, N2 = this.bufferLength; ; ) {
              var L2 = this.getCode(u2);
              if (L2 < 256)
                N2 + 1 >= w2 && (w2 = (j2 = this.ensureBuffer(N2 + 1)).length), j2[N2++] = L2;
              else {
                if (256 == L2)
                  return void (this.bufferLength = N2);
                var x2 = (L2 = e2[L2 -= 257]) >> 16;
                x2 > 0 && (x2 = this.getBits(x2));
                m2 = (65535 & L2) + x2;
                L2 = this.getCode(c2), (x2 = (L2 = n2[L2]) >> 16) > 0 && (x2 = this.getBits(x2));
                var A2 = (65535 & L2) + x2;
                N2 + m2 >= w2 && (w2 = (j2 = this.ensureBuffer(N2 + m2)).length);
                for (var _2 = 0; _2 < m2; ++_2, ++N2)
                  j2[N2] = j2[N2 - A2];
              }
            }
          } else {
            var S2, P2 = this.bytes, k2 = this.bytesPos;
            void 0 === (S2 = P2[k2++]) && a2("Bad block header in flate stream");
            var F2 = S2;
            void 0 === (S2 = P2[k2++]) && a2("Bad block header in flate stream"), F2 |= S2 << 8, void 0 === (S2 = P2[k2++]) && a2("Bad block header in flate stream");
            var I2 = S2;
            void 0 === (S2 = P2[k2++]) && a2("Bad block header in flate stream"), (I2 |= S2 << 8) != (65535 & ~F2) && a2("Bad uncompressed block length in flate stream"), this.codeBuf = 0, this.codeSize = 0;
            var C2 = this.bufferLength, j2 = this.ensureBuffer(C2 + F2), B2 = C2 + F2;
            this.bufferLength = B2;
            for (var O2 = C2; O2 < B2; ++O2) {
              if (void 0 === (S2 = P2[k2++])) {
                this.eof = true;
                break;
              }
              j2[O2] = S2;
            }
            this.bytesPos = k2;
          }
        }, o2;
      }
      function a2(t3) {
        throw new Error(t3);
      }
      function o2(t3) {
        var e3 = 0, n3 = t3[e3++], r5 = t3[e3++];
        -1 != n3 && -1 != r5 || a2("Invalid header in flate stream"), 8 != (15 & n3) && a2("Unknown compression method in flate stream"), ((n3 << 8) + r5) % 31 != 0 && a2("Bad FCHECK in flate stream"), 32 & r5 && a2("FDICT bit set in flate stream"), this.bytes = t3, this.bytesPos = 2, this.codeSize = 0, this.codeBuf = 0, Ft.call(this);
      }
    }();
    Ct = function() {
      var e2, n2, r4;
      function i2(t2) {
        var e3, n3, r5, i3, a3, o2, s2, u2, c2, h2, l2, f2, d2, p2;
        for (this.data = t2, this.pos = 8, this.palette = [], this.imgData = [], this.transparency = {}, this.animation = null, this.text = {}, o2 = null; ; ) {
          switch (e3 = this.readUInt32(), c2 = (function() {
            var t3, e4;
            for (e4 = [], t3 = 0; t3 < 4; ++t3)
              e4.push(String.fromCharCode(this.data[this.pos++]));
            return e4;
          }).call(this).join("")) {
            case "IHDR":
              this.width = this.readUInt32(), this.height = this.readUInt32(), this.bits = this.data[this.pos++], this.colorType = this.data[this.pos++], this.compressionMethod = this.data[this.pos++], this.filterMethod = this.data[this.pos++], this.interlaceMethod = this.data[this.pos++];
              break;
            case "acTL":
              this.animation = { numFrames: this.readUInt32(), numPlays: this.readUInt32() || 1 / 0, frames: [] };
              break;
            case "PLTE":
              this.palette = this.read(e3);
              break;
            case "fcTL":
              o2 && this.animation.frames.push(o2), this.pos += 4, o2 = { width: this.readUInt32(), height: this.readUInt32(), xOffset: this.readUInt32(), yOffset: this.readUInt32() }, a3 = this.readUInt16(), i3 = this.readUInt16() || 100, o2.delay = 1e3 * a3 / i3, o2.disposeOp = this.data[this.pos++], o2.blendOp = this.data[this.pos++], o2.data = [];
              break;
            case "IDAT":
            case "fdAT":
              for ("fdAT" === c2 && (this.pos += 4, e3 -= 4), t2 = (null != o2 ? o2.data : void 0) || this.imgData, f2 = 0; 0 <= e3 ? f2 < e3 : f2 > e3; 0 <= e3 ? ++f2 : --f2)
                t2.push(this.data[this.pos++]);
              break;
            case "tRNS":
              switch (this.transparency = {}, this.colorType) {
                case 3:
                  if (r5 = this.palette.length / 3, this.transparency.indexed = this.read(e3), this.transparency.indexed.length > r5)
                    throw new Error("More transparent colors than palette size");
                  if ((h2 = r5 - this.transparency.indexed.length) > 0)
                    for (d2 = 0; 0 <= h2 ? d2 < h2 : d2 > h2; 0 <= h2 ? ++d2 : --d2)
                      this.transparency.indexed.push(255);
                  break;
                case 0:
                  this.transparency.grayscale = this.read(e3)[0];
                  break;
                case 2:
                  this.transparency.rgb = this.read(e3);
              }
              break;
            case "tEXt":
              s2 = (l2 = this.read(e3)).indexOf(0), u2 = String.fromCharCode.apply(String, l2.slice(0, s2)), this.text[u2] = String.fromCharCode.apply(String, l2.slice(s2 + 1));
              break;
            case "IEND":
              return o2 && this.animation.frames.push(o2), this.colors = (function() {
                switch (this.colorType) {
                  case 0:
                  case 3:
                  case 4:
                    return 1;
                  case 2:
                  case 6:
                    return 3;
                }
              }).call(this), this.hasAlphaChannel = 4 === (p2 = this.colorType) || 6 === p2, n3 = this.colors + (this.hasAlphaChannel ? 1 : 0), this.pixelBitlength = this.bits * n3, this.colorSpace = (function() {
                switch (this.colors) {
                  case 1:
                    return "DeviceGray";
                  case 3:
                    return "DeviceRGB";
                }
              }).call(this), void (this.imgData = new Uint8Array(this.imgData));
            default:
              this.pos += e3;
          }
          if (this.pos += 4, this.pos > this.data.length)
            throw new Error("Incomplete or corrupt PNG file");
        }
      }
      i2.prototype.read = function(t2) {
        var e3, n3;
        for (n3 = [], e3 = 0; 0 <= t2 ? e3 < t2 : e3 > t2; 0 <= t2 ? ++e3 : --e3)
          n3.push(this.data[this.pos++]);
        return n3;
      }, i2.prototype.readUInt32 = function() {
        return this.data[this.pos++] << 24 | this.data[this.pos++] << 16 | this.data[this.pos++] << 8 | this.data[this.pos++];
      }, i2.prototype.readUInt16 = function() {
        return this.data[this.pos++] << 8 | this.data[this.pos++];
      }, i2.prototype.decodePixels = function(t2) {
        var e3 = this.pixelBitlength / 8, n3 = new Uint8Array(this.width * this.height * e3), r5 = 0, i3 = this;
        if (null == t2 && (t2 = this.imgData), 0 === t2.length)
          return new Uint8Array(0);
        function a3(a4, o2, s2, u2) {
          var c2, h2, l2, f2, d2, p2, g2, m2, v2, b2, y2, w2, N2, L2, x2, A2, _2, S2, P2, k2, F2, I2 = Math.ceil((i3.width - a4) / s2), C2 = Math.ceil((i3.height - o2) / u2), j2 = i3.width == I2 && i3.height == C2;
          for (L2 = e3 * I2, w2 = j2 ? n3 : new Uint8Array(L2 * C2), p2 = t2.length, N2 = 0, h2 = 0; N2 < C2 && r5 < p2; ) {
            switch (t2[r5++]) {
              case 0:
                for (f2 = _2 = 0; _2 < L2; f2 = _2 += 1)
                  w2[h2++] = t2[r5++];
                break;
              case 1:
                for (f2 = S2 = 0; S2 < L2; f2 = S2 += 1)
                  c2 = t2[r5++], d2 = f2 < e3 ? 0 : w2[h2 - e3], w2[h2++] = (c2 + d2) % 256;
                break;
              case 2:
                for (f2 = P2 = 0; P2 < L2; f2 = P2 += 1)
                  c2 = t2[r5++], l2 = (f2 - f2 % e3) / e3, x2 = N2 && w2[(N2 - 1) * L2 + l2 * e3 + f2 % e3], w2[h2++] = (x2 + c2) % 256;
                break;
              case 3:
                for (f2 = k2 = 0; k2 < L2; f2 = k2 += 1)
                  c2 = t2[r5++], l2 = (f2 - f2 % e3) / e3, d2 = f2 < e3 ? 0 : w2[h2 - e3], x2 = N2 && w2[(N2 - 1) * L2 + l2 * e3 + f2 % e3], w2[h2++] = (c2 + Math.floor((d2 + x2) / 2)) % 256;
                break;
              case 4:
                for (f2 = F2 = 0; F2 < L2; f2 = F2 += 1)
                  c2 = t2[r5++], l2 = (f2 - f2 % e3) / e3, d2 = f2 < e3 ? 0 : w2[h2 - e3], 0 === N2 ? x2 = A2 = 0 : (x2 = w2[(N2 - 1) * L2 + l2 * e3 + f2 % e3], A2 = l2 && w2[(N2 - 1) * L2 + (l2 - 1) * e3 + f2 % e3]), g2 = d2 + x2 - A2, m2 = Math.abs(g2 - d2), b2 = Math.abs(g2 - x2), y2 = Math.abs(g2 - A2), v2 = m2 <= b2 && m2 <= y2 ? d2 : b2 <= y2 ? x2 : A2, w2[h2++] = (c2 + v2) % 256;
                break;
              default:
                throw new Error("Invalid filter algorithm: " + t2[r5 - 1]);
            }
            if (!j2) {
              var B2 = ((o2 + N2 * u2) * i3.width + a4) * e3, O2 = N2 * L2;
              for (f2 = 0; f2 < I2; f2 += 1) {
                for (var M2 = 0; M2 < e3; M2 += 1)
                  n3[B2++] = w2[O2++];
                B2 += (s2 - 1) * e3;
              }
            }
            N2++;
          }
        }
        return t2 = (t2 = new It(t2)).getBytes(), 1 == i3.interlaceMethod ? (a3(0, 0, 8, 8), a3(4, 0, 8, 8), a3(0, 4, 4, 8), a3(2, 0, 4, 4), a3(0, 2, 2, 4), a3(1, 0, 2, 2), a3(0, 1, 1, 2)) : a3(0, 0, 1, 1), n3;
      }, i2.prototype.decodePalette = function() {
        var t2, e3, n3, r5, i3, a3, o2, s2, u2;
        for (n3 = this.palette, a3 = this.transparency.indexed || [], i3 = new Uint8Array((a3.length || 0) + n3.length), r5 = 0, t2 = 0, e3 = o2 = 0, s2 = n3.length; o2 < s2; e3 = o2 += 3)
          i3[r5++] = n3[e3], i3[r5++] = n3[e3 + 1], i3[r5++] = n3[e3 + 2], i3[r5++] = null != (u2 = a3[t2++]) ? u2 : 255;
        return i3;
      }, i2.prototype.copyToImageData = function(t2, e3) {
        var n3, r5, i3, a3, o2, s2, u2, c2, h2, l2, f2;
        if (r5 = this.colors, h2 = null, n3 = this.hasAlphaChannel, this.palette.length && (h2 = null != (f2 = this._decodedPalette) ? f2 : this._decodedPalette = this.decodePalette(), r5 = 4, n3 = true), c2 = (i3 = t2.data || t2).length, o2 = h2 || e3, a3 = s2 = 0, 1 === r5)
          for (; a3 < c2; )
            u2 = h2 ? 4 * e3[a3 / 4] : s2, l2 = o2[u2++], i3[a3++] = l2, i3[a3++] = l2, i3[a3++] = l2, i3[a3++] = n3 ? o2[u2++] : 255, s2 = u2;
        else
          for (; a3 < c2; )
            u2 = h2 ? 4 * e3[a3 / 4] : s2, i3[a3++] = o2[u2++], i3[a3++] = o2[u2++], i3[a3++] = o2[u2++], i3[a3++] = n3 ? o2[u2++] : 255, s2 = u2;
      }, i2.prototype.decode = function() {
        var t2;
        return t2 = new Uint8Array(this.width * this.height * 4), this.copyToImageData(t2, this.decodePixels()), t2;
      };
      var a2 = function() {
        if ("[object Window]" === Object.prototype.toString.call(t)) {
          try {
            n2 = t.document.createElement("canvas"), r4 = n2.getContext("2d");
          } catch (t2) {
            return false;
          }
          return true;
        }
        return false;
      };
      return a2(), e2 = function(t2) {
        var e3;
        if (true === a2())
          return r4.width = t2.width, r4.height = t2.height, r4.clearRect(0, 0, t2.width, t2.height), r4.putImageData(t2, 0, 0), (e3 = new Image()).src = n2.toDataURL(), e3;
        throw new Error("This method requires a Browser with Canvas-capability.");
      }, i2.prototype.decodeFrames = function(t2) {
        var n3, r5, i3, a3, o2, s2, u2, c2;
        if (this.animation) {
          for (c2 = [], r5 = o2 = 0, s2 = (u2 = this.animation.frames).length; o2 < s2; r5 = ++o2)
            n3 = u2[r5], i3 = t2.createImageData(n3.width, n3.height), a3 = this.decodePixels(new Uint8Array(n3.data)), this.copyToImageData(i3, a3), n3.imageData = i3, c2.push(n3.image = e2(i3));
          return c2;
        }
      }, i2.prototype.renderFrame = function(t2, e3) {
        var n3, r5, i3;
        return n3 = (r5 = this.animation.frames)[e3], i3 = r5[e3 - 1], 0 === e3 && t2.clearRect(0, 0, this.width, this.height), 1 === (null != i3 ? i3.disposeOp : void 0) ? t2.clearRect(i3.xOffset, i3.yOffset, i3.width, i3.height) : 2 === (null != i3 ? i3.disposeOp : void 0) && t2.putImageData(i3.imageData, i3.xOffset, i3.yOffset), 0 === n3.blendOp && t2.clearRect(n3.xOffset, n3.yOffset, n3.width, n3.height), t2.drawImage(n3.image, n3.xOffset, n3.yOffset);
      }, i2.prototype.animate = function(t2) {
        var e3, n3, r5, i3, a3, o2, s2 = this;
        return n3 = 0, o2 = this.animation, i3 = o2.numFrames, r5 = o2.frames, a3 = o2.numPlays, (e3 = function() {
          var o3, u2;
          if (o3 = n3++ % i3, u2 = r5[o3], s2.renderFrame(t2, o3), i3 > 1 && n3 / i3 < a3)
            return s2.animation._timeout = setTimeout(e3, u2.delay);
        })();
      }, i2.prototype.stopAnimation = function() {
        var t2;
        return clearTimeout(null != (t2 = this.animation) ? t2._timeout : void 0);
      }, i2.prototype.render = function(t2) {
        var e3, n3;
        return t2._png && t2._png.stopAnimation(), t2._png = this, t2.width = this.width, t2.height = this.height, e3 = t2.getContext("2d"), this.animation ? (this.decodeFrames(e3), this.animate(e3)) : (n3 = e3.createImageData(this.width, this.height), this.copyToImageData(n3, this.decodePixels()), e3.putImageData(n3, 0, 0));
      }, i2;
    }();
    !function(t2) {
      var e2 = function() {
        return true;
      }, n2 = function(e3, n3, a3, h3) {
        var l3 = 5, f3 = s2;
        switch (h3) {
          case t2.image_compression.FAST:
            l3 = 3, f3 = o2;
            break;
          case t2.image_compression.MEDIUM:
            l3 = 6, f3 = u2;
            break;
          case t2.image_compression.SLOW:
            l3 = 9, f3 = c2;
        }
        e3 = i2(e3, n3, a3, f3);
        var d2 = new Uint8Array(r4(l3)), p2 = g.API.adler32cs.fromBuffer(e3.buffer), m2 = new xt(l3), v2 = m2.append(e3), b2 = m2.flush(), y2 = d2.length + v2.length + b2.length, w2 = new Uint8Array(y2 + 4);
        return w2.set(d2), w2.set(v2, d2.length), w2.set(b2, d2.length + v2.length), w2[y2++] = p2 >>> 24 & 255, w2[y2++] = p2 >>> 16 & 255, w2[y2++] = p2 >>> 8 & 255, w2[y2++] = 255 & p2, t2.__addimage__.arrayBufferToBinaryString(w2);
      }, r4 = function(t3) {
        var e3 = 30720;
        return e3 |= Math.min(3, (t3 - 1 & 255) >> 1) << 6, e3 |= 0, [120, 255 & (e3 += 31 - e3 % 31)];
      }, i2 = function(t3, e3, n3, r5) {
        for (var i3, a3, o3, s3 = t3.length / e3, u3 = new Uint8Array(t3.length + s3), c3 = l2(), h3 = 0; h3 < s3; h3 += 1) {
          if (o3 = h3 * e3, i3 = t3.subarray(o3, o3 + e3), r5)
            u3.set(r5(i3, n3, a3), o3 + h3);
          else {
            for (var d2, p2 = c3.length, g2 = []; d2 < p2; d2 += 1)
              g2[d2] = c3[d2](i3, n3, a3);
            var m2 = f2(g2.concat());
            u3.set(g2[m2], o3 + h3);
          }
          a3 = i3;
        }
        return u3;
      }, a2 = function(t3) {
        var e3 = Array.apply([], t3);
        return e3.unshift(0), e3;
      }, o2 = function(t3, e3) {
        var n3, r5 = [], i3 = t3.length;
        r5[0] = 1;
        for (var a3 = 0; a3 < i3; a3 += 1)
          n3 = t3[a3 - e3] || 0, r5[a3 + 1] = t3[a3] - n3 + 256 & 255;
        return r5;
      }, s2 = function(t3, e3, n3) {
        var r5, i3 = [], a3 = t3.length;
        i3[0] = 2;
        for (var o3 = 0; o3 < a3; o3 += 1)
          r5 = n3 && n3[o3] || 0, i3[o3 + 1] = t3[o3] - r5 + 256 & 255;
        return i3;
      }, u2 = function(t3, e3, n3) {
        var r5, i3, a3 = [], o3 = t3.length;
        a3[0] = 3;
        for (var s3 = 0; s3 < o3; s3 += 1)
          r5 = t3[s3 - e3] || 0, i3 = n3 && n3[s3] || 0, a3[s3 + 1] = t3[s3] + 256 - (r5 + i3 >>> 1) & 255;
        return a3;
      }, c2 = function(t3, e3, n3) {
        var r5, i3, a3, o3, s3 = [], u3 = t3.length;
        s3[0] = 4;
        for (var c3 = 0; c3 < u3; c3 += 1)
          r5 = t3[c3 - e3] || 0, i3 = n3 && n3[c3] || 0, a3 = n3 && n3[c3 - e3] || 0, o3 = h2(r5, i3, a3), s3[c3 + 1] = t3[c3] - o3 + 256 & 255;
        return s3;
      }, h2 = function(t3, e3, n3) {
        if (t3 === e3 && e3 === n3)
          return t3;
        var r5 = Math.abs(e3 - n3), i3 = Math.abs(t3 - n3), a3 = Math.abs(t3 + e3 - n3 - n3);
        return r5 <= i3 && r5 <= a3 ? t3 : i3 <= a3 ? e3 : n3;
      }, l2 = function() {
        return [a2, o2, s2, u2, c2];
      }, f2 = function(t3) {
        var e3 = t3.map(function(t4) {
          return t4.reduce(function(t5, e4) {
            return t5 + Math.abs(e4);
          }, 0);
        });
        return e3.indexOf(Math.min.apply(null, e3));
      };
      t2.processPNG = function(r5, i3, a3, o3) {
        var s3, u3, c3, h3, l3, f3, d2, p2, g2, m2, v2, b2, y2, w2, N2, L2 = this.decode.FLATE_DECODE, x2 = "";
        if (this.__addimage__.isArrayBuffer(r5) && (r5 = new Uint8Array(r5)), this.__addimage__.isArrayBufferView(r5)) {
          if (r5 = (c3 = new Ct(r5)).imgData, u3 = c3.bits, s3 = c3.colorSpace, l3 = c3.colors, -1 !== [4, 6].indexOf(c3.colorType)) {
            if (8 === c3.bits) {
              g2 = (p2 = 32 == c3.pixelBitlength ? new Uint32Array(c3.decodePixels().buffer) : 16 == c3.pixelBitlength ? new Uint16Array(c3.decodePixels().buffer) : new Uint8Array(c3.decodePixels().buffer)).length, v2 = new Uint8Array(g2 * c3.colors), m2 = new Uint8Array(g2);
              var A2, _2 = c3.pixelBitlength - c3.bits;
              for (w2 = 0, N2 = 0; w2 < g2; w2++) {
                for (y2 = p2[w2], A2 = 0; A2 < _2; )
                  v2[N2++] = y2 >>> A2 & 255, A2 += c3.bits;
                m2[w2] = y2 >>> A2 & 255;
              }
            }
            if (16 === c3.bits) {
              g2 = (p2 = new Uint32Array(c3.decodePixels().buffer)).length, v2 = new Uint8Array(g2 * (32 / c3.pixelBitlength) * c3.colors), m2 = new Uint8Array(g2 * (32 / c3.pixelBitlength)), b2 = c3.colors > 1, w2 = 0, N2 = 0;
              for (var S2 = 0; w2 < g2; )
                y2 = p2[w2++], v2[N2++] = y2 >>> 0 & 255, b2 && (v2[N2++] = y2 >>> 16 & 255, y2 = p2[w2++], v2[N2++] = y2 >>> 0 & 255), m2[S2++] = y2 >>> 16 & 255;
              u3 = 8;
            }
            o3 !== t2.image_compression.NONE && e2() ? (r5 = n2(v2, c3.width * c3.colors, c3.colors, o3), d2 = n2(m2, c3.width, 1, o3)) : (r5 = v2, d2 = m2, L2 = void 0);
          }
          if (3 === c3.colorType && (s3 = this.color_spaces.INDEXED, f3 = c3.palette, c3.transparency.indexed)) {
            var P2 = c3.transparency.indexed, k2 = 0;
            for (w2 = 0, g2 = P2.length; w2 < g2; ++w2)
              k2 += P2[w2];
            if ((k2 /= 255) === g2 - 1 && -1 !== P2.indexOf(0))
              h3 = [P2.indexOf(0)];
            else if (k2 !== g2) {
              for (p2 = c3.decodePixels(), m2 = new Uint8Array(p2.length), w2 = 0, g2 = p2.length; w2 < g2; w2++)
                m2[w2] = P2[p2[w2]];
              d2 = n2(m2, c3.width, 1);
            }
          }
          var F2 = function(e3) {
            var n3;
            switch (e3) {
              case t2.image_compression.FAST:
                n3 = 11;
                break;
              case t2.image_compression.MEDIUM:
                n3 = 13;
                break;
              case t2.image_compression.SLOW:
                n3 = 14;
                break;
              default:
                n3 = 12;
            }
            return n3;
          }(o3);
          return L2 === this.decode.FLATE_DECODE && (x2 = "/Predictor " + F2 + " "), x2 += "/Colors " + l3 + " /BitsPerComponent " + u3 + " /Columns " + c3.width, (this.__addimage__.isArrayBuffer(r5) || this.__addimage__.isArrayBufferView(r5)) && (r5 = this.__addimage__.arrayBufferToBinaryString(r5)), (d2 && this.__addimage__.isArrayBuffer(d2) || this.__addimage__.isArrayBufferView(d2)) && (d2 = this.__addimage__.arrayBufferToBinaryString(d2)), { alias: a3, data: r5, index: i3, filter: L2, decodeParameters: x2, transparency: h3, palette: f3, sMask: d2, predictor: F2, width: c3.width, height: c3.height, bitsPerComponent: u3, colorSpace: s3 };
        }
      };
    }(g.API), function(t2) {
      t2.processGIF89A = function(e2, n2, r4, i2) {
        var a2 = new jt(e2), o2 = a2.width, s2 = a2.height, u2 = [];
        a2.decodeAndBlitFrameRGBA(0, u2);
        var c2 = { data: u2, width: o2, height: s2 }, h2 = new Ot(100).encode(c2, 100);
        return t2.processJPEG.call(this, h2, n2, r4, i2);
      }, t2.processGIF87A = t2.processGIF89A;
    }(g.API), Mt.prototype.parseHeader = function() {
      if (this.fileSize = this.datav.getUint32(this.pos, true), this.pos += 4, this.reserved = this.datav.getUint32(this.pos, true), this.pos += 4, this.offset = this.datav.getUint32(this.pos, true), this.pos += 4, this.headerSize = this.datav.getUint32(this.pos, true), this.pos += 4, this.width = this.datav.getUint32(this.pos, true), this.pos += 4, this.height = this.datav.getInt32(this.pos, true), this.pos += 4, this.planes = this.datav.getUint16(this.pos, true), this.pos += 2, this.bitPP = this.datav.getUint16(this.pos, true), this.pos += 2, this.compress = this.datav.getUint32(this.pos, true), this.pos += 4, this.rawSize = this.datav.getUint32(this.pos, true), this.pos += 4, this.hr = this.datav.getUint32(this.pos, true), this.pos += 4, this.vr = this.datav.getUint32(this.pos, true), this.pos += 4, this.colors = this.datav.getUint32(this.pos, true), this.pos += 4, this.importantColors = this.datav.getUint32(this.pos, true), this.pos += 4, 16 === this.bitPP && this.is_with_alpha && (this.bitPP = 15), this.bitPP < 15) {
        var t2 = 0 === this.colors ? 1 << this.bitPP : this.colors;
        this.palette = new Array(t2);
        for (var e2 = 0; e2 < t2; e2++) {
          var n2 = this.datav.getUint8(this.pos++, true), r4 = this.datav.getUint8(this.pos++, true), i2 = this.datav.getUint8(this.pos++, true), a2 = this.datav.getUint8(this.pos++, true);
          this.palette[e2] = { red: i2, green: r4, blue: n2, quad: a2 };
        }
      }
      this.height < 0 && (this.height *= -1, this.bottom_up = false);
    }, Mt.prototype.parseBGR = function() {
      this.pos = this.offset;
      try {
        var t2 = "bit" + this.bitPP, e2 = this.width * this.height * 4;
        this.data = new Uint8Array(e2), this[t2]();
      } catch (t3) {
        n.log("bit decode error:" + t3);
      }
    }, Mt.prototype.bit1 = function() {
      var t2, e2 = Math.ceil(this.width / 8), n2 = e2 % 4;
      for (t2 = this.height - 1; t2 >= 0; t2--) {
        for (var r4 = this.bottom_up ? t2 : this.height - 1 - t2, i2 = 0; i2 < e2; i2++)
          for (var a2 = this.datav.getUint8(this.pos++, true), o2 = r4 * this.width * 4 + 8 * i2 * 4, s2 = 0; s2 < 8 && 8 * i2 + s2 < this.width; s2++) {
            var u2 = this.palette[a2 >> 7 - s2 & 1];
            this.data[o2 + 4 * s2] = u2.blue, this.data[o2 + 4 * s2 + 1] = u2.green, this.data[o2 + 4 * s2 + 2] = u2.red, this.data[o2 + 4 * s2 + 3] = 255;
          }
        0 !== n2 && (this.pos += 4 - n2);
      }
    }, Mt.prototype.bit4 = function() {
      for (var t2 = Math.ceil(this.width / 2), e2 = t2 % 4, n2 = this.height - 1; n2 >= 0; n2--) {
        for (var r4 = this.bottom_up ? n2 : this.height - 1 - n2, i2 = 0; i2 < t2; i2++) {
          var a2 = this.datav.getUint8(this.pos++, true), o2 = r4 * this.width * 4 + 2 * i2 * 4, s2 = a2 >> 4, u2 = 15 & a2, c2 = this.palette[s2];
          if (this.data[o2] = c2.blue, this.data[o2 + 1] = c2.green, this.data[o2 + 2] = c2.red, this.data[o2 + 3] = 255, 2 * i2 + 1 >= this.width)
            break;
          c2 = this.palette[u2], this.data[o2 + 4] = c2.blue, this.data[o2 + 4 + 1] = c2.green, this.data[o2 + 4 + 2] = c2.red, this.data[o2 + 4 + 3] = 255;
        }
        0 !== e2 && (this.pos += 4 - e2);
      }
    }, Mt.prototype.bit8 = function() {
      for (var t2 = this.width % 4, e2 = this.height - 1; e2 >= 0; e2--) {
        for (var n2 = this.bottom_up ? e2 : this.height - 1 - e2, r4 = 0; r4 < this.width; r4++) {
          var i2 = this.datav.getUint8(this.pos++, true), a2 = n2 * this.width * 4 + 4 * r4;
          if (i2 < this.palette.length) {
            var o2 = this.palette[i2];
            this.data[a2] = o2.red, this.data[a2 + 1] = o2.green, this.data[a2 + 2] = o2.blue, this.data[a2 + 3] = 255;
          } else
            this.data[a2] = 255, this.data[a2 + 1] = 255, this.data[a2 + 2] = 255, this.data[a2 + 3] = 255;
        }
        0 !== t2 && (this.pos += 4 - t2);
      }
    }, Mt.prototype.bit15 = function() {
      for (var t2 = this.width % 3, e2 = parseInt("11111", 2), n2 = this.height - 1; n2 >= 0; n2--) {
        for (var r4 = this.bottom_up ? n2 : this.height - 1 - n2, i2 = 0; i2 < this.width; i2++) {
          var a2 = this.datav.getUint16(this.pos, true);
          this.pos += 2;
          var o2 = (a2 & e2) / e2 * 255 | 0, s2 = (a2 >> 5 & e2) / e2 * 255 | 0, u2 = (a2 >> 10 & e2) / e2 * 255 | 0, c2 = a2 >> 15 ? 255 : 0, h2 = r4 * this.width * 4 + 4 * i2;
          this.data[h2] = u2, this.data[h2 + 1] = s2, this.data[h2 + 2] = o2, this.data[h2 + 3] = c2;
        }
        this.pos += t2;
      }
    }, Mt.prototype.bit16 = function() {
      for (var t2 = this.width % 3, e2 = parseInt("11111", 2), n2 = parseInt("111111", 2), r4 = this.height - 1; r4 >= 0; r4--) {
        for (var i2 = this.bottom_up ? r4 : this.height - 1 - r4, a2 = 0; a2 < this.width; a2++) {
          var o2 = this.datav.getUint16(this.pos, true);
          this.pos += 2;
          var s2 = (o2 & e2) / e2 * 255 | 0, u2 = (o2 >> 5 & n2) / n2 * 255 | 0, c2 = (o2 >> 11) / e2 * 255 | 0, h2 = i2 * this.width * 4 + 4 * a2;
          this.data[h2] = c2, this.data[h2 + 1] = u2, this.data[h2 + 2] = s2, this.data[h2 + 3] = 255;
        }
        this.pos += t2;
      }
    }, Mt.prototype.bit24 = function() {
      for (var t2 = this.height - 1; t2 >= 0; t2--) {
        for (var e2 = this.bottom_up ? t2 : this.height - 1 - t2, n2 = 0; n2 < this.width; n2++) {
          var r4 = this.datav.getUint8(this.pos++, true), i2 = this.datav.getUint8(this.pos++, true), a2 = this.datav.getUint8(this.pos++, true), o2 = e2 * this.width * 4 + 4 * n2;
          this.data[o2] = a2, this.data[o2 + 1] = i2, this.data[o2 + 2] = r4, this.data[o2 + 3] = 255;
        }
        this.pos += this.width % 4;
      }
    }, Mt.prototype.bit32 = function() {
      for (var t2 = this.height - 1; t2 >= 0; t2--)
        for (var e2 = this.bottom_up ? t2 : this.height - 1 - t2, n2 = 0; n2 < this.width; n2++) {
          var r4 = this.datav.getUint8(this.pos++, true), i2 = this.datav.getUint8(this.pos++, true), a2 = this.datav.getUint8(this.pos++, true), o2 = this.datav.getUint8(this.pos++, true), s2 = e2 * this.width * 4 + 4 * n2;
          this.data[s2] = a2, this.data[s2 + 1] = i2, this.data[s2 + 2] = r4, this.data[s2 + 3] = o2;
        }
    }, Mt.prototype.getData = function() {
      return this.data;
    }, /**
     * @license
     * Copyright (c) 2018 Aras Abbasi
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2) {
      t2.processBMP = function(e2, n2, r4, i2) {
        var a2 = new Mt(e2, false), o2 = a2.width, s2 = a2.height, u2 = { data: a2.getData(), width: o2, height: s2 }, c2 = new Ot(100).encode(u2, 100);
        return t2.processJPEG.call(this, c2, n2, r4, i2);
      };
    }(g.API), Et.prototype.getData = function() {
      return this.data;
    }, /**
     * @license
     * Copyright (c) 2019 Aras Abbasi
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2) {
      t2.processWEBP = function(e2, n2, r4, i2) {
        var a2 = new Et(e2, false), o2 = a2.width, s2 = a2.height, u2 = { data: a2.getData(), width: o2, height: s2 }, c2 = new Ot(100).encode(u2, 100);
        return t2.processJPEG.call(this, c2, n2, r4, i2);
      };
    }(g.API), g.API.setLanguage = function(t2) {
      return void 0 === this.internal.languageSettings && (this.internal.languageSettings = {}, this.internal.languageSettings.isSubscribed = false), void 0 !== { af: "Afrikaans", sq: "Albanian", ar: "Arabic (Standard)", "ar-DZ": "Arabic (Algeria)", "ar-BH": "Arabic (Bahrain)", "ar-EG": "Arabic (Egypt)", "ar-IQ": "Arabic (Iraq)", "ar-JO": "Arabic (Jordan)", "ar-KW": "Arabic (Kuwait)", "ar-LB": "Arabic (Lebanon)", "ar-LY": "Arabic (Libya)", "ar-MA": "Arabic (Morocco)", "ar-OM": "Arabic (Oman)", "ar-QA": "Arabic (Qatar)", "ar-SA": "Arabic (Saudi Arabia)", "ar-SY": "Arabic (Syria)", "ar-TN": "Arabic (Tunisia)", "ar-AE": "Arabic (U.A.E.)", "ar-YE": "Arabic (Yemen)", an: "Aragonese", hy: "Armenian", as: "Assamese", ast: "Asturian", az: "Azerbaijani", eu: "Basque", be: "Belarusian", bn: "Bengali", bs: "Bosnian", br: "Breton", bg: "Bulgarian", my: "Burmese", ca: "Catalan", ch: "Chamorro", ce: "Chechen", zh: "Chinese", "zh-HK": "Chinese (Hong Kong)", "zh-CN": "Chinese (PRC)", "zh-SG": "Chinese (Singapore)", "zh-TW": "Chinese (Taiwan)", cv: "Chuvash", co: "Corsican", cr: "Cree", hr: "Croatian", cs: "Czech", da: "Danish", nl: "Dutch (Standard)", "nl-BE": "Dutch (Belgian)", en: "English", "en-AU": "English (Australia)", "en-BZ": "English (Belize)", "en-CA": "English (Canada)", "en-IE": "English (Ireland)", "en-JM": "English (Jamaica)", "en-NZ": "English (New Zealand)", "en-PH": "English (Philippines)", "en-ZA": "English (South Africa)", "en-TT": "English (Trinidad & Tobago)", "en-GB": "English (United Kingdom)", "en-US": "English (United States)", "en-ZW": "English (Zimbabwe)", eo: "Esperanto", et: "Estonian", fo: "Faeroese", fj: "Fijian", fi: "Finnish", fr: "French (Standard)", "fr-BE": "French (Belgium)", "fr-CA": "French (Canada)", "fr-FR": "French (France)", "fr-LU": "French (Luxembourg)", "fr-MC": "French (Monaco)", "fr-CH": "French (Switzerland)", fy: "Frisian", fur: "Friulian", gd: "Gaelic (Scots)", "gd-IE": "Gaelic (Irish)", gl: "Galacian", ka: "Georgian", de: "German (Standard)", "de-AT": "German (Austria)", "de-DE": "German (Germany)", "de-LI": "German (Liechtenstein)", "de-LU": "German (Luxembourg)", "de-CH": "German (Switzerland)", el: "Greek", gu: "Gujurati", ht: "Haitian", he: "Hebrew", hi: "Hindi", hu: "Hungarian", is: "Icelandic", id: "Indonesian", iu: "Inuktitut", ga: "Irish", it: "Italian (Standard)", "it-CH": "Italian (Switzerland)", ja: "Japanese", kn: "Kannada", ks: "Kashmiri", kk: "Kazakh", km: "Khmer", ky: "Kirghiz", tlh: "Klingon", ko: "Korean", "ko-KP": "Korean (North Korea)", "ko-KR": "Korean (South Korea)", la: "Latin", lv: "Latvian", lt: "Lithuanian", lb: "Luxembourgish", mk: "FYRO Macedonian", ms: "Malay", ml: "Malayalam", mt: "Maltese", mi: "Maori", mr: "Marathi", mo: "Moldavian", nv: "Navajo", ng: "Ndonga", ne: "Nepali", no: "Norwegian", nb: "Norwegian (Bokmal)", nn: "Norwegian (Nynorsk)", oc: "Occitan", or: "Oriya", om: "Oromo", fa: "Persian", "fa-IR": "Persian/Iran", pl: "Polish", pt: "Portuguese", "pt-BR": "Portuguese (Brazil)", pa: "Punjabi", "pa-IN": "Punjabi (India)", "pa-PK": "Punjabi (Pakistan)", qu: "Quechua", rm: "Rhaeto-Romanic", ro: "Romanian", "ro-MO": "Romanian (Moldavia)", ru: "Russian", "ru-MO": "Russian (Moldavia)", sz: "Sami (Lappish)", sg: "Sango", sa: "Sanskrit", sc: "Sardinian", sd: "Sindhi", si: "Singhalese", sr: "Serbian", sk: "Slovak", sl: "Slovenian", so: "Somani", sb: "Sorbian", es: "Spanish", "es-AR": "Spanish (Argentina)", "es-BO": "Spanish (Bolivia)", "es-CL": "Spanish (Chile)", "es-CO": "Spanish (Colombia)", "es-CR": "Spanish (Costa Rica)", "es-DO": "Spanish (Dominican Republic)", "es-EC": "Spanish (Ecuador)", "es-SV": "Spanish (El Salvador)", "es-GT": "Spanish (Guatemala)", "es-HN": "Spanish (Honduras)", "es-MX": "Spanish (Mexico)", "es-NI": "Spanish (Nicaragua)", "es-PA": "Spanish (Panama)", "es-PY": "Spanish (Paraguay)", "es-PE": "Spanish (Peru)", "es-PR": "Spanish (Puerto Rico)", "es-ES": "Spanish (Spain)", "es-UY": "Spanish (Uruguay)", "es-VE": "Spanish (Venezuela)", sx: "Sutu", sw: "Swahili", sv: "Swedish", "sv-FI": "Swedish (Finland)", "sv-SV": "Swedish (Sweden)", ta: "Tamil", tt: "Tatar", te: "Teluga", th: "Thai", tig: "Tigre", ts: "Tsonga", tn: "Tswana", tr: "Turkish", tk: "Turkmen", uk: "Ukrainian", hsb: "Upper Sorbian", ur: "Urdu", ve: "Venda", vi: "Vietnamese", vo: "Volapuk", wa: "Walloon", cy: "Welsh", xh: "Xhosa", ji: "Yiddish", zu: "Zulu" }[t2] && (this.internal.languageSettings.languageCode = t2, false === this.internal.languageSettings.isSubscribed && (this.internal.events.subscribe("putCatalog", function() {
        this.internal.write("/Lang (" + this.internal.languageSettings.languageCode + ")");
      }), this.internal.languageSettings.isSubscribed = true)), this;
    }, /** @license
     * MIT license.
     * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
     *               2014 Diego Casorran, https://github.com/diegocr
     *
     * Permission is hereby granted, free of charge, to any person obtaining
     * a copy of this software and associated documentation files (the
     * "Software"), to deal in the Software without restriction, including
     * without limitation the rights to use, copy, modify, merge, publish,
     * distribute, sublicense, and/or sell copies of the Software, and to
     * permit persons to whom the Software is furnished to do so, subject to
     * the following conditions:
     *
     * The above copyright notice and this permission notice shall be
     * included in all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
     * ====================================================================
     */
    At = g.API, _t = At.getCharWidthsArray = function(t2, e2) {
      var n2, r4, i2 = (e2 = e2 || {}).font || this.internal.getFont(), a2 = e2.fontSize || this.internal.getFontSize(), o2 = e2.charSpace || this.internal.getCharSpace(), s2 = e2.widths ? e2.widths : i2.metadata.Unicode.widths, u2 = s2.fof ? s2.fof : 1, c2 = e2.kerning ? e2.kerning : i2.metadata.Unicode.kerning, h2 = c2.fof ? c2.fof : 1, l2 = false !== e2.doKerning, f2 = 0, d2 = t2.length, p2 = 0, g2 = s2[0] || u2, m2 = [];
      for (n2 = 0; n2 < d2; n2++)
        r4 = t2.charCodeAt(n2), "function" == typeof i2.metadata.widthOfString ? m2.push((i2.metadata.widthOfGlyph(i2.metadata.characterToGlyph(r4)) + o2 * (1e3 / a2) || 0) / 1e3) : (f2 = l2 && "object" == typeof c2[r4] && !isNaN(parseInt(c2[r4][p2], 10)) ? c2[r4][p2] / h2 : 0, m2.push((s2[r4] || g2) / u2 + f2)), p2 = r4;
      return m2;
    }, St = At.getStringUnitWidth = function(t2, e2) {
      var n2 = (e2 = e2 || {}).fontSize || this.internal.getFontSize(), r4 = e2.font || this.internal.getFont(), i2 = e2.charSpace || this.internal.getCharSpace();
      return At.processArabic && (t2 = At.processArabic(t2)), "function" == typeof r4.metadata.widthOfString ? r4.metadata.widthOfString(t2, n2, i2) / n2 : _t.apply(this, arguments).reduce(function(t3, e3) {
        return t3 + e3;
      }, 0);
    }, Pt = function(t2, e2, n2, r4) {
      for (var i2 = [], a2 = 0, o2 = t2.length, s2 = 0; a2 !== o2 && s2 + e2[a2] < n2; )
        s2 += e2[a2], a2++;
      i2.push(t2.slice(0, a2));
      var u2 = a2;
      for (s2 = 0; a2 !== o2; )
        s2 + e2[a2] > r4 && (i2.push(t2.slice(u2, a2)), s2 = 0, u2 = a2), s2 += e2[a2], a2++;
      return u2 !== a2 && i2.push(t2.slice(u2, a2)), i2;
    }, kt = function(t2, e2, n2) {
      n2 || (n2 = {});
      var r4, i2, a2, o2, s2, u2, c2, h2 = [], l2 = [h2], f2 = n2.textIndent || 0, d2 = 0, p2 = 0, g2 = t2.split(" "), m2 = _t.apply(this, [" ", n2])[0];
      if (u2 = -1 === n2.lineIndent ? g2[0].length + 2 : n2.lineIndent || 0) {
        var v2 = Array(u2).join(" "), b2 = [];
        g2.map(function(t3) {
          (t3 = t3.split(/\s*\n/)).length > 1 ? b2 = b2.concat(t3.map(function(t4, e3) {
            return (e3 && t4.length ? "\n" : "") + t4;
          })) : b2.push(t3[0]);
        }), g2 = b2, u2 = St.apply(this, [v2, n2]);
      }
      for (a2 = 0, o2 = g2.length; a2 < o2; a2++) {
        var y2 = 0;
        if (r4 = g2[a2], u2 && "\n" == r4[0] && (r4 = r4.substr(1), y2 = 1), f2 + d2 + (p2 = (i2 = _t.apply(this, [r4, n2])).reduce(function(t3, e3) {
          return t3 + e3;
        }, 0)) > e2 || y2) {
          if (p2 > e2) {
            for (s2 = Pt.apply(this, [r4, i2, e2 - (f2 + d2), e2]), h2.push(s2.shift()), h2 = [s2.pop()]; s2.length; )
              l2.push([s2.shift()]);
            p2 = i2.slice(r4.length - (h2[0] ? h2[0].length : 0)).reduce(function(t3, e3) {
              return t3 + e3;
            }, 0);
          } else
            h2 = [r4];
          l2.push(h2), f2 = p2 + u2, d2 = m2;
        } else
          h2.push(r4), f2 += d2 + p2, d2 = m2;
      }
      return c2 = u2 ? function(t3, e3) {
        return (e3 ? v2 : "") + t3.join(" ");
      } : function(t3) {
        return t3.join(" ");
      }, l2.map(c2);
    }, At.splitTextToSize = function(t2, e2, n2) {
      var r4, i2 = (n2 = n2 || {}).fontSize || this.internal.getFontSize(), a2 = (function(t3) {
        if (t3.widths && t3.kerning)
          return { widths: t3.widths, kerning: t3.kerning };
        var e3 = this.internal.getFont(t3.fontName, t3.fontStyle);
        return e3.metadata.Unicode ? { widths: e3.metadata.Unicode.widths || { 0: 1 }, kerning: e3.metadata.Unicode.kerning || {} } : { font: e3.metadata, fontSize: this.internal.getFontSize(), charSpace: this.internal.getCharSpace() };
      }).call(this, n2);
      r4 = Array.isArray(t2) ? t2 : String(t2).split(/\r?\n/);
      var o2 = 1 * this.internal.scaleFactor * e2 / i2;
      a2.textIndent = n2.textIndent ? 1 * n2.textIndent * this.internal.scaleFactor / i2 : 0, a2.lineIndent = n2.lineIndent;
      var s2, u2, c2 = [];
      for (s2 = 0, u2 = r4.length; s2 < u2; s2++)
        c2 = c2.concat(kt.apply(this, [r4[s2], o2, a2]));
      return c2;
    }, /** @license
     jsPDF standard_fonts_metrics plugin
     * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
     * MIT license.
     * Permission is hereby granted, free of charge, to any person obtaining
     * a copy of this software and associated documentation files (the
     * "Software"), to deal in the Software without restriction, including
     * without limitation the rights to use, copy, modify, merge, publish,
     * distribute, sublicense, and/or sell copies of the Software, and to
     * permit persons to whom the Software is furnished to do so, subject to
     * the following conditions:
     * 
     * The above copyright notice and this permission notice shall be
     * included in all copies or substantial portions of the Software.
     * 
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
     * ====================================================================
     */
    function(t2) {
      t2.__fontmetrics__ = t2.__fontmetrics__ || {};
      for (var e2 = "klmnopqrstuvwxyz", n2 = {}, r4 = {}, i2 = 0; i2 < e2.length; i2++)
        n2[e2[i2]] = "0123456789abcdef"[i2], r4["0123456789abcdef"[i2]] = e2[i2];
      var a2 = function(t3) {
        return "0x" + parseInt(t3, 10).toString(16);
      }, o2 = t2.__fontmetrics__.compress = function(t3) {
        var e3, n3, i3, s3, u3 = ["{"];
        for (var c3 in t3) {
          if (e3 = t3[c3], isNaN(parseInt(c3, 10)) ? n3 = "'" + c3 + "'" : (c3 = parseInt(c3, 10), n3 = (n3 = a2(c3).slice(2)).slice(0, -1) + r4[n3.slice(-1)]), "number" == typeof e3)
            e3 < 0 ? (i3 = a2(e3).slice(3), s3 = "-") : (i3 = a2(e3).slice(2), s3 = ""), i3 = s3 + i3.slice(0, -1) + r4[i3.slice(-1)];
          else {
            if ("object" != typeof e3)
              throw new Error("Don't know what to do with value type " + typeof e3 + ".");
            i3 = o2(e3);
          }
          u3.push(n3 + i3);
        }
        return u3.push("}"), u3.join("");
      }, s2 = t2.__fontmetrics__.uncompress = function(t3) {
        if ("string" != typeof t3)
          throw new Error("Invalid argument passed to uncompress.");
        for (var e3, r5, i3, a3, o3 = {}, s3 = 1, u3 = o3, c3 = [], h3 = "", l2 = "", f2 = t3.length - 1, d2 = 1; d2 < f2; d2 += 1)
          "'" == (a3 = t3[d2]) ? e3 ? (i3 = e3.join(""), e3 = void 0) : e3 = [] : e3 ? e3.push(a3) : "{" == a3 ? (c3.push([u3, i3]), u3 = {}, i3 = void 0) : "}" == a3 ? ((r5 = c3.pop())[0][r5[1]] = u3, i3 = void 0, u3 = r5[0]) : "-" == a3 ? s3 = -1 : void 0 === i3 ? n2.hasOwnProperty(a3) ? (h3 += n2[a3], i3 = parseInt(h3, 16) * s3, s3 = 1, h3 = "") : h3 += a3 : n2.hasOwnProperty(a3) ? (l2 += n2[a3], u3[i3] = parseInt(l2, 16) * s3, s3 = 1, i3 = void 0, l2 = "") : l2 += a3;
        return o3;
      }, u2 = { codePages: ["WinAnsiEncoding"], WinAnsiEncoding: s2("{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}") }, c2 = { Unicode: { Courier: u2, "Courier-Bold": u2, "Courier-BoldOblique": u2, "Courier-Oblique": u2, Helvetica: u2, "Helvetica-Bold": u2, "Helvetica-BoldOblique": u2, "Helvetica-Oblique": u2, "Times-Roman": u2, "Times-Bold": u2, "Times-BoldItalic": u2, "Times-Italic": u2 } }, h2 = { Unicode: { "Courier-Oblique": s2("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"), "Times-BoldItalic": s2("{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}"), "Helvetica-Bold": s2("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"), Courier: s2("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"), "Courier-BoldOblique": s2("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"), "Times-Bold": s2("{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}"), Symbol: s2("{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}"), Helvetica: s2("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}"), "Helvetica-BoldOblique": s2("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"), ZapfDingbats: s2("{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}"), "Courier-Bold": s2("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"), "Times-Italic": s2("{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}"), "Times-Roman": s2("{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}"), "Helvetica-Oblique": s2("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}") } };
      t2.events.push(["addFont", function(t3) {
        var e3 = t3.font, n3 = h2.Unicode[e3.postScriptName];
        n3 && (e3.metadata.Unicode = {}, e3.metadata.Unicode.widths = n3.widths, e3.metadata.Unicode.kerning = n3.kerning);
        var r5 = c2.Unicode[e3.postScriptName];
        r5 && (e3.metadata.Unicode.encoding = r5, e3.encoding = r5.codePages[0]);
      }]);
    }(g.API), /**
     * @license
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2) {
      var e2 = function(t3) {
        for (var e3 = t3.length, n2 = new Uint8Array(e3), r4 = 0; r4 < e3; r4++)
          n2[r4] = t3.charCodeAt(r4);
        return n2;
      };
      t2.API.events.push(["addFont", function(n2) {
        var r4 = void 0, i2 = n2.font, a2 = n2.instance;
        if (!i2.isStandardFont) {
          if (void 0 === a2)
            throw new Error("Font does not exist in vFS, import fonts or remove declaration doc.addFont('" + i2.postScriptName + "').");
          if ("string" != typeof (r4 = false === a2.existsFileInVFS(i2.postScriptName) ? a2.loadFile(i2.postScriptName) : a2.getFileFromVFS(i2.postScriptName)))
            throw new Error("Font is not stored as string-data in vFS, import fonts or remove declaration doc.addFont('" + i2.postScriptName + "').");
          !function(n3, r5) {
            r5 = /^\x00\x01\x00\x00/.test(r5) ? e2(r5) : e2(o(r5)), n3.metadata = t2.API.TTFFont.open(r5), n3.metadata.Unicode = n3.metadata.Unicode || { encoding: {}, kerning: {}, widths: [] }, n3.metadata.glyIdsUsed = [0];
          }(i2, r4);
        }
      }]);
    }(g), /** @license
     * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
     *
     * Permission is hereby granted, free of charge, to any person obtaining
     * a copy of this software and associated documentation files (the
     * "Software"), to deal in the Software without restriction, including
     * without limitation the rights to use, copy, modify, merge, publish,
     * distribute, sublicense, and/or sell copies of the Software, and to
     * permit persons to whom the Software is furnished to do so, subject to
     * the following conditions:
     *
     * The above copyright notice and this permission notice shall be
     * included in all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
     * ====================================================================
     */
    function(e2) {
      function r4() {
        return (t.canvg ? Promise.resolve(t.canvg) : import("./index.es-P75MKOE4.js")).catch(function(t2) {
          return Promise.reject(new Error("Could not load dompurify: " + t2));
        }).then(function(t2) {
          return t2.default ? t2.default : t2;
        });
      }
      g.API.addSvgAsImage = function(t2, e3, i2, a2, o2, s2, u2, c2) {
        if (isNaN(e3) || isNaN(i2))
          throw n.error("jsPDF.addSvgAsImage: Invalid coordinates", arguments), new Error("Invalid coordinates passed to jsPDF.addSvgAsImage");
        if (isNaN(a2) || isNaN(o2))
          throw n.error("jsPDF.addSvgAsImage: Invalid measurements", arguments), new Error("Invalid measurements (width and/or height) passed to jsPDF.addSvgAsImage");
        var h2 = document.createElement("canvas");
        h2.width = a2, h2.height = o2;
        var l2 = h2.getContext("2d");
        l2.fillStyle = "#fff", l2.fillRect(0, 0, h2.width, h2.height);
        var f2 = { ignoreMouse: true, ignoreAnimation: true, ignoreDimensions: true }, d2 = this;
        return r4().then(function(e4) {
          return e4.Canvg.fromString(l2, t2, f2);
        }, function() {
          return Promise.reject(new Error("Could not load canvg."));
        }).then(function(t3) {
          return t3.render(f2);
        }).then(function() {
          d2.addImage(h2.toDataURL("image/jpeg", 1), e3, i2, a2, o2, u2, c2);
        });
      };
    }(), g.API.putTotalPages = function(t2) {
      var e2, n2 = 0;
      parseInt(this.internal.getFont().id.substr(1), 10) < 15 ? (e2 = new RegExp(t2, "g"), n2 = this.internal.getNumberOfPages()) : (e2 = new RegExp(this.pdfEscape16(t2, this.internal.getFont()), "g"), n2 = this.pdfEscape16(this.internal.getNumberOfPages() + "", this.internal.getFont()));
      for (var r4 = 1; r4 <= this.internal.getNumberOfPages(); r4++)
        for (var i2 = 0; i2 < this.internal.pages[r4].length; i2++)
          this.internal.pages[r4][i2] = this.internal.pages[r4][i2].replace(e2, n2);
      return this;
    }, g.API.viewerPreferences = function(t2, e2) {
      var n2;
      t2 = t2 || {}, e2 = e2 || false;
      var r4, i2, a2, o2 = { HideToolbar: { defaultValue: false, value: false, type: "boolean", explicitSet: false, valueSet: [true, false], pdfVersion: 1.3 }, HideMenubar: { defaultValue: false, value: false, type: "boolean", explicitSet: false, valueSet: [true, false], pdfVersion: 1.3 }, HideWindowUI: { defaultValue: false, value: false, type: "boolean", explicitSet: false, valueSet: [true, false], pdfVersion: 1.3 }, FitWindow: { defaultValue: false, value: false, type: "boolean", explicitSet: false, valueSet: [true, false], pdfVersion: 1.3 }, CenterWindow: { defaultValue: false, value: false, type: "boolean", explicitSet: false, valueSet: [true, false], pdfVersion: 1.3 }, DisplayDocTitle: { defaultValue: false, value: false, type: "boolean", explicitSet: false, valueSet: [true, false], pdfVersion: 1.4 }, NonFullScreenPageMode: { defaultValue: "UseNone", value: "UseNone", type: "name", explicitSet: false, valueSet: ["UseNone", "UseOutlines", "UseThumbs", "UseOC"], pdfVersion: 1.3 }, Direction: { defaultValue: "L2R", value: "L2R", type: "name", explicitSet: false, valueSet: ["L2R", "R2L"], pdfVersion: 1.3 }, ViewArea: { defaultValue: "CropBox", value: "CropBox", type: "name", explicitSet: false, valueSet: ["MediaBox", "CropBox", "TrimBox", "BleedBox", "ArtBox"], pdfVersion: 1.4 }, ViewClip: { defaultValue: "CropBox", value: "CropBox", type: "name", explicitSet: false, valueSet: ["MediaBox", "CropBox", "TrimBox", "BleedBox", "ArtBox"], pdfVersion: 1.4 }, PrintArea: { defaultValue: "CropBox", value: "CropBox", type: "name", explicitSet: false, valueSet: ["MediaBox", "CropBox", "TrimBox", "BleedBox", "ArtBox"], pdfVersion: 1.4 }, PrintClip: { defaultValue: "CropBox", value: "CropBox", type: "name", explicitSet: false, valueSet: ["MediaBox", "CropBox", "TrimBox", "BleedBox", "ArtBox"], pdfVersion: 1.4 }, PrintScaling: { defaultValue: "AppDefault", value: "AppDefault", type: "name", explicitSet: false, valueSet: ["AppDefault", "None"], pdfVersion: 1.6 }, Duplex: { defaultValue: "", value: "none", type: "name", explicitSet: false, valueSet: ["Simplex", "DuplexFlipShortEdge", "DuplexFlipLongEdge", "none"], pdfVersion: 1.7 }, PickTrayByPDFSize: { defaultValue: false, value: false, type: "boolean", explicitSet: false, valueSet: [true, false], pdfVersion: 1.7 }, PrintPageRange: { defaultValue: "", value: "", type: "array", explicitSet: false, valueSet: null, pdfVersion: 1.7 }, NumCopies: { defaultValue: 1, value: 1, type: "integer", explicitSet: false, valueSet: null, pdfVersion: 1.7 } }, s2 = Object.keys(o2), u2 = [], c2 = 0, h2 = 0, l2 = 0;
      function f2(t3, e3) {
        var n3, r5 = false;
        for (n3 = 0; n3 < t3.length; n3 += 1)
          t3[n3] === e3 && (r5 = true);
        return r5;
      }
      if (void 0 === this.internal.viewerpreferences && (this.internal.viewerpreferences = {}, this.internal.viewerpreferences.configuration = JSON.parse(JSON.stringify(o2)), this.internal.viewerpreferences.isSubscribed = false), n2 = this.internal.viewerpreferences.configuration, "reset" === t2 || true === e2) {
        var d2 = s2.length;
        for (l2 = 0; l2 < d2; l2 += 1)
          n2[s2[l2]].value = n2[s2[l2]].defaultValue, n2[s2[l2]].explicitSet = false;
      }
      if ("object" == typeof t2) {
        for (i2 in t2)
          if (a2 = t2[i2], f2(s2, i2) && void 0 !== a2) {
            if ("boolean" === n2[i2].type && "boolean" == typeof a2)
              n2[i2].value = a2;
            else if ("name" === n2[i2].type && f2(n2[i2].valueSet, a2))
              n2[i2].value = a2;
            else if ("integer" === n2[i2].type && Number.isInteger(a2))
              n2[i2].value = a2;
            else if ("array" === n2[i2].type) {
              for (c2 = 0; c2 < a2.length; c2 += 1)
                if (r4 = true, 1 === a2[c2].length && "number" == typeof a2[c2][0])
                  u2.push(String(a2[c2] - 1));
                else if (a2[c2].length > 1) {
                  for (h2 = 0; h2 < a2[c2].length; h2 += 1)
                    "number" != typeof a2[c2][h2] && (r4 = false);
                  true === r4 && u2.push([a2[c2][0] - 1, a2[c2][1] - 1].join(" "));
                }
              n2[i2].value = "[" + u2.join(" ") + "]";
            } else
              n2[i2].value = n2[i2].defaultValue;
            n2[i2].explicitSet = true;
          }
      }
      return false === this.internal.viewerpreferences.isSubscribed && (this.internal.events.subscribe("putCatalog", function() {
        var t3, e3 = [];
        for (t3 in n2)
          true === n2[t3].explicitSet && ("name" === n2[t3].type ? e3.push("/" + t3 + " /" + n2[t3].value) : e3.push("/" + t3 + " " + n2[t3].value));
        0 !== e3.length && this.internal.write("/ViewerPreferences\n<<\n" + e3.join("\n") + "\n>>");
      }), this.internal.viewerpreferences.isSubscribed = true), this.internal.viewerpreferences.configuration = n2, this;
    }, /** ====================================================================
     * @license
     * jsPDF XMP metadata plugin
     * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi
     *
     * Permission is hereby granted, free of charge, to any person obtaining
     * a copy of this software and associated documentation files (the
     * "Software"), to deal in the Software without restriction, including
     * without limitation the rights to use, copy, modify, merge, publish,
     * distribute, sublicense, and/or sell copies of the Software, and to
     * permit persons to whom the Software is furnished to do so, subject to
     * the following conditions:
     *
     * The above copyright notice and this permission notice shall be
     * included in all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
     * ====================================================================
     */
    function(t2) {
      var e2 = function() {
        var t3 = '<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description rdf:about="" xmlns:jspdf="' + this.internal.__metadata__.namespaceuri + '"><jspdf:metadata>', e3 = unescape(encodeURIComponent('<x:xmpmeta xmlns:x="adobe:ns:meta/">')), n3 = unescape(encodeURIComponent(t3)), r4 = unescape(encodeURIComponent(this.internal.__metadata__.metadata)), i2 = unescape(encodeURIComponent("</jspdf:metadata></rdf:Description></rdf:RDF>")), a2 = unescape(encodeURIComponent("</x:xmpmeta>")), o2 = n3.length + r4.length + i2.length + e3.length + a2.length;
        this.internal.__metadata__.metadata_object_number = this.internal.newObject(), this.internal.write("<< /Type /Metadata /Subtype /XML /Length " + o2 + " >>"), this.internal.write("stream"), this.internal.write(e3 + n3 + r4 + i2 + a2), this.internal.write("endstream"), this.internal.write("endobj");
      }, n2 = function() {
        this.internal.__metadata__.metadata_object_number && this.internal.write("/Metadata " + this.internal.__metadata__.metadata_object_number + " 0 R");
      };
      t2.addMetadata = function(t3, r4) {
        return void 0 === this.internal.__metadata__ && (this.internal.__metadata__ = { metadata: t3, namespaceuri: r4 || "http://jspdf.default.namespaceuri/" }, this.internal.events.subscribe("putCatalog", n2), this.internal.events.subscribe("postPutResources", e2)), this;
      };
    }(g.API), function(t2) {
      var e2 = t2.API, n2 = e2.pdfEscape16 = function(t3, e3) {
        for (var n3, r5 = e3.metadata.Unicode.widths, i3 = ["", "0", "00", "000", "0000"], a2 = [""], o2 = 0, s2 = t3.length; o2 < s2; ++o2) {
          if (n3 = e3.metadata.characterToGlyph(t3.charCodeAt(o2)), e3.metadata.glyIdsUsed.push(n3), e3.metadata.toUnicode[n3] = t3.charCodeAt(o2), -1 == r5.indexOf(n3) && (r5.push(n3), r5.push([parseInt(e3.metadata.widthOfGlyph(n3), 10)])), "0" == n3)
            return a2.join("");
          n3 = n3.toString(16), a2.push(i3[4 - n3.length], n3);
        }
        return a2.join("");
      }, r4 = function(t3) {
        var e3, n3, r5, i3, a2, o2, s2;
        for (a2 = "/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange", r5 = [], o2 = 0, s2 = (n3 = Object.keys(t3).sort(function(t4, e4) {
          return t4 - e4;
        })).length; o2 < s2; o2++)
          e3 = n3[o2], r5.length >= 100 && (a2 += "\n" + r5.length + " beginbfchar\n" + r5.join("\n") + "\nendbfchar", r5 = []), void 0 !== t3[e3] && null !== t3[e3] && "function" == typeof t3[e3].toString && (i3 = ("0000" + t3[e3].toString(16)).slice(-4), e3 = ("0000" + (+e3).toString(16)).slice(-4), r5.push("<" + e3 + "><" + i3 + ">"));
        return r5.length && (a2 += "\n" + r5.length + " beginbfchar\n" + r5.join("\n") + "\nendbfchar\n"), a2 += "endcmap\nCMapName currentdict /CMap defineresource pop\nend\nend";
      };
      e2.events.push(["putFont", function(e3) {
        !function(e4) {
          var n3 = e4.font, i3 = e4.out, a2 = e4.newObject, o2 = e4.putStream, s2 = e4.pdfEscapeWithNeededParanthesis;
          if (n3.metadata instanceof t2.API.TTFFont && "Identity-H" === n3.encoding) {
            for (var u2 = n3.metadata.Unicode.widths, c2 = n3.metadata.subset.encode(n3.metadata.glyIdsUsed, 1), h2 = "", l2 = 0; l2 < c2.length; l2++)
              h2 += String.fromCharCode(c2[l2]);
            var f2 = a2();
            o2({ data: h2, addLength1: true }), i3("endobj");
            var d2 = a2();
            o2({ data: r4(n3.metadata.toUnicode), addLength1: true }), i3("endobj");
            var p2 = a2();
            i3("<<"), i3("/Type /FontDescriptor"), i3("/FontName /" + s2(n3.fontName)), i3("/FontFile2 " + f2 + " 0 R"), i3("/FontBBox " + t2.API.PDFObject.convert(n3.metadata.bbox)), i3("/Flags " + n3.metadata.flags), i3("/StemV " + n3.metadata.stemV), i3("/ItalicAngle " + n3.metadata.italicAngle), i3("/Ascent " + n3.metadata.ascender), i3("/Descent " + n3.metadata.decender), i3("/CapHeight " + n3.metadata.capHeight), i3(">>"), i3("endobj");
            var g2 = a2();
            i3("<<"), i3("/Type /Font"), i3("/BaseFont /" + s2(n3.fontName)), i3("/FontDescriptor " + p2 + " 0 R"), i3("/W " + t2.API.PDFObject.convert(u2)), i3("/CIDToGIDMap /Identity"), i3("/DW 1000"), i3("/Subtype /CIDFontType2"), i3("/CIDSystemInfo"), i3("<<"), i3("/Supplement 0"), i3("/Registry (Adobe)"), i3("/Ordering (" + n3.encoding + ")"), i3(">>"), i3(">>"), i3("endobj"), n3.objectNumber = a2(), i3("<<"), i3("/Type /Font"), i3("/Subtype /Type0"), i3("/ToUnicode " + d2 + " 0 R"), i3("/BaseFont /" + s2(n3.fontName)), i3("/Encoding /" + n3.encoding), i3("/DescendantFonts [" + g2 + " 0 R]"), i3(">>"), i3("endobj"), n3.isAlreadyPutted = true;
          }
        }(e3);
      }]);
      e2.events.push(["putFont", function(e3) {
        !function(e4) {
          var n3 = e4.font, i3 = e4.out, a2 = e4.newObject, o2 = e4.putStream, s2 = e4.pdfEscapeWithNeededParanthesis;
          if (n3.metadata instanceof t2.API.TTFFont && "WinAnsiEncoding" === n3.encoding) {
            for (var u2 = n3.metadata.rawData, c2 = "", h2 = 0; h2 < u2.length; h2++)
              c2 += String.fromCharCode(u2[h2]);
            var l2 = a2();
            o2({ data: c2, addLength1: true }), i3("endobj");
            var f2 = a2();
            o2({ data: r4(n3.metadata.toUnicode), addLength1: true }), i3("endobj");
            var d2 = a2();
            i3("<<"), i3("/Descent " + n3.metadata.decender), i3("/CapHeight " + n3.metadata.capHeight), i3("/StemV " + n3.metadata.stemV), i3("/Type /FontDescriptor"), i3("/FontFile2 " + l2 + " 0 R"), i3("/Flags 96"), i3("/FontBBox " + t2.API.PDFObject.convert(n3.metadata.bbox)), i3("/FontName /" + s2(n3.fontName)), i3("/ItalicAngle " + n3.metadata.italicAngle), i3("/Ascent " + n3.metadata.ascender), i3(">>"), i3("endobj"), n3.objectNumber = a2();
            for (var p2 = 0; p2 < n3.metadata.hmtx.widths.length; p2++)
              n3.metadata.hmtx.widths[p2] = parseInt(n3.metadata.hmtx.widths[p2] * (1e3 / n3.metadata.head.unitsPerEm));
            i3("<</Subtype/TrueType/Type/Font/ToUnicode " + f2 + " 0 R/BaseFont/" + n3.fontName + "/FontDescriptor " + d2 + " 0 R/Encoding/" + n3.encoding + " /FirstChar 29 /LastChar 255 /Widths " + t2.API.PDFObject.convert(n3.metadata.hmtx.widths) + ">>"), i3("endobj"), n3.isAlreadyPutted = true;
          }
        }(e3);
      }]);
      var i2 = function(t3) {
        var e3, r5 = t3.text || "", i3 = t3.x, a2 = t3.y, o2 = t3.options || {}, s2 = t3.mutex || {}, u2 = s2.pdfEscape, c2 = s2.activeFontKey, h2 = s2.fonts, l2 = c2, f2 = "", d2 = 0, p2 = "", g2 = h2[l2].encoding;
        if ("Identity-H" !== h2[l2].encoding)
          return { text: r5, x: i3, y: a2, options: o2, mutex: s2 };
        for (p2 = r5, l2 = c2, Array.isArray(r5) && (p2 = r5[0]), d2 = 0; d2 < p2.length; d2 += 1)
          h2[l2].metadata.hasOwnProperty("cmap") && (e3 = h2[l2].metadata.cmap.unicode.codeMap[p2[d2].charCodeAt(0)]), e3 || p2[d2].charCodeAt(0) < 256 && h2[l2].metadata.hasOwnProperty("Unicode") ? f2 += p2[d2] : f2 += "";
        var m2 = "";
        return parseInt(l2.slice(1)) < 14 || "WinAnsiEncoding" === g2 ? m2 = u2(f2, l2).split("").map(function(t4) {
          return t4.charCodeAt(0).toString(16);
        }).join("") : "Identity-H" === g2 && (m2 = n2(f2, h2[l2])), s2.isHex = true, { text: m2, x: i3, y: a2, options: o2, mutex: s2 };
      };
      e2.events.push(["postProcessText", function(t3) {
        var e3 = t3.text || "", n3 = [], r5 = { text: e3, x: t3.x, y: t3.y, options: t3.options, mutex: t3.mutex };
        if (Array.isArray(e3)) {
          var a2 = 0;
          for (a2 = 0; a2 < e3.length; a2 += 1)
            Array.isArray(e3[a2]) && 3 === e3[a2].length ? n3.push([i2(Object.assign({}, r5, { text: e3[a2][0] })).text, e3[a2][1], e3[a2][2]]) : n3.push(i2(Object.assign({}, r5, { text: e3[a2] })).text);
          t3.text = n3;
        } else
          t3.text = i2(Object.assign({}, r5, { text: e3 })).text;
      }]);
    }(g), /**
     * @license
     * jsPDF virtual FileSystem functionality
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2) {
      var e2 = function() {
        return void 0 === this.internal.vFS && (this.internal.vFS = {}), true;
      };
      t2.existsFileInVFS = function(t3) {
        return e2.call(this), void 0 !== this.internal.vFS[t3];
      }, t2.addFileToVFS = function(t3, n2) {
        return e2.call(this), this.internal.vFS[t3] = n2, this;
      }, t2.getFileFromVFS = function(t3) {
        return e2.call(this), void 0 !== this.internal.vFS[t3] ? this.internal.vFS[t3] : null;
      };
    }(g.API), /**
     * @license
     * Unicode Bidi Engine based on the work of Alex Shensis (@asthensis)
     * MIT License
     */
    function(t2) {
      t2.__bidiEngine__ = t2.prototype.__bidiEngine__ = function(t3) {
        var n3, r4, i2, a2, o2, s2, u2, c2 = e2, h2 = [[0, 3, 0, 1, 0, 0, 0], [0, 3, 0, 1, 2, 2, 0], [0, 3, 0, 17, 2, 0, 1], [0, 3, 5, 5, 4, 1, 0], [0, 3, 21, 21, 4, 0, 1], [0, 3, 5, 5, 4, 2, 0]], l2 = [[2, 0, 1, 1, 0, 1, 0], [2, 0, 1, 1, 0, 2, 0], [2, 0, 2, 1, 3, 2, 0], [2, 0, 2, 33, 3, 1, 1]], f2 = { L: 0, R: 1, EN: 2, AN: 3, N: 4, B: 5, S: 6 }, d2 = { 0: 0, 5: 1, 6: 2, 7: 3, 32: 4, 251: 5, 254: 6, 255: 7 }, p2 = ["(", ")", "(", "<", ">", "<", "[", "]", "[", "{", "}", "{", "«", "»", "«", "‹", "›", "‹", "⁅", "⁆", "⁅", "⁽", "⁾", "⁽", "₍", "₎", "₍", "≤", "≥", "≤", "〈", "〉", "〈", "﹙", "﹚", "﹙", "﹛", "﹜", "﹛", "﹝", "﹞", "﹝", "﹤", "﹥", "﹤"], g2 = new RegExp(/^([1-4|9]|1[0-9]|2[0-9]|3[0168]|4[04589]|5[012]|7[78]|159|16[0-9]|17[0-2]|21[569]|22[03489]|250)$/), m2 = false, v2 = 0;
        this.__bidiEngine__ = {};
        var b2 = function(t4) {
          var e3 = t4.charCodeAt(), n4 = e3 >> 8, r5 = d2[n4];
          return void 0 !== r5 ? c2[256 * r5 + (255 & e3)] : 252 === n4 || 253 === n4 ? "AL" : g2.test(n4) ? "L" : 8 === n4 ? "R" : "N";
        }, y2 = function(t4) {
          for (var e3, n4 = 0; n4 < t4.length; n4++) {
            if ("L" === (e3 = b2(t4.charAt(n4))))
              return false;
            if ("R" === e3)
              return true;
          }
          return false;
        }, w2 = function(t4, e3, o3, s3) {
          var u3, c3, h3, l3, f3 = e3[s3];
          switch (f3) {
            case "L":
            case "R":
              m2 = false;
              break;
            case "N":
            case "AN":
              break;
            case "EN":
              m2 && (f3 = "AN");
              break;
            case "AL":
              m2 = true, f3 = "R";
              break;
            case "WS":
              f3 = "N";
              break;
            case "CS":
              s3 < 1 || s3 + 1 >= e3.length || "EN" !== (u3 = o3[s3 - 1]) && "AN" !== u3 || "EN" !== (c3 = e3[s3 + 1]) && "AN" !== c3 ? f3 = "N" : m2 && (c3 = "AN"), f3 = c3 === u3 ? c3 : "N";
              break;
            case "ES":
              f3 = "EN" === (u3 = s3 > 0 ? o3[s3 - 1] : "B") && s3 + 1 < e3.length && "EN" === e3[s3 + 1] ? "EN" : "N";
              break;
            case "ET":
              if (s3 > 0 && "EN" === o3[s3 - 1]) {
                f3 = "EN";
                break;
              }
              if (m2) {
                f3 = "N";
                break;
              }
              for (h3 = s3 + 1, l3 = e3.length; h3 < l3 && "ET" === e3[h3]; )
                h3++;
              f3 = h3 < l3 && "EN" === e3[h3] ? "EN" : "N";
              break;
            case "NSM":
              if (i2 && !a2) {
                for (l3 = e3.length, h3 = s3 + 1; h3 < l3 && "NSM" === e3[h3]; )
                  h3++;
                if (h3 < l3) {
                  var d3 = t4[s3], p3 = d3 >= 1425 && d3 <= 2303 || 64286 === d3;
                  if (u3 = e3[h3], p3 && ("R" === u3 || "AL" === u3)) {
                    f3 = "R";
                    break;
                  }
                }
              }
              f3 = s3 < 1 || "B" === (u3 = e3[s3 - 1]) ? "N" : o3[s3 - 1];
              break;
            case "B":
              m2 = false, n3 = true, f3 = v2;
              break;
            case "S":
              r4 = true, f3 = "N";
              break;
            case "LRE":
            case "RLE":
            case "LRO":
            case "RLO":
            case "PDF":
              m2 = false;
              break;
            case "BN":
              f3 = "N";
          }
          return f3;
        }, N2 = function(t4, e3, n4) {
          var r5 = t4.split("");
          return n4 && L2(r5, n4, { hiLevel: v2 }), r5.reverse(), e3 && e3.reverse(), r5.join("");
        }, L2 = function(t4, e3, i3) {
          var a3, o3, s3, u3, c3, d3 = -1, p3 = t4.length, g3 = 0, y3 = [], N3 = v2 ? l2 : h2, L3 = [];
          for (m2 = false, n3 = false, r4 = false, o3 = 0; o3 < p3; o3++)
            L3[o3] = b2(t4[o3]);
          for (s3 = 0; s3 < p3; s3++) {
            if (c3 = g3, y3[s3] = w2(t4, L3, y3, s3), a3 = 240 & (g3 = N3[c3][f2[y3[s3]]]), g3 &= 15, e3[s3] = u3 = N3[g3][5], a3 > 0)
              if (16 === a3) {
                for (o3 = d3; o3 < s3; o3++)
                  e3[o3] = 1;
                d3 = -1;
              } else
                d3 = -1;
            if (N3[g3][6])
              -1 === d3 && (d3 = s3);
            else if (d3 > -1) {
              for (o3 = d3; o3 < s3; o3++)
                e3[o3] = u3;
              d3 = -1;
            }
            "B" === L3[s3] && (e3[s3] = 0), i3.hiLevel |= u3;
          }
          r4 && function(t5, e4, n4) {
            for (var r5 = 0; r5 < n4; r5++)
              if ("S" === t5[r5]) {
                e4[r5] = v2;
                for (var i4 = r5 - 1; i4 >= 0 && "WS" === t5[i4]; i4--)
                  e4[i4] = v2;
              }
          }(L3, e3, p3);
        }, x2 = function(t4, e3, r5, i3, a3) {
          if (!(a3.hiLevel < t4)) {
            if (1 === t4 && 1 === v2 && !n3)
              return e3.reverse(), void (r5 && r5.reverse());
            for (var o3, s3, u3, c3, h3 = e3.length, l3 = 0; l3 < h3; ) {
              if (i3[l3] >= t4) {
                for (u3 = l3 + 1; u3 < h3 && i3[u3] >= t4; )
                  u3++;
                for (c3 = l3, s3 = u3 - 1; c3 < s3; c3++, s3--)
                  o3 = e3[c3], e3[c3] = e3[s3], e3[s3] = o3, r5 && (o3 = r5[c3], r5[c3] = r5[s3], r5[s3] = o3);
                l3 = u3;
              }
              l3++;
            }
          }
        }, A2 = function(t4, e3, n4) {
          var r5 = t4.split(""), i3 = { hiLevel: v2 };
          return n4 || (n4 = []), L2(r5, n4, i3), function(t5, e4, n5) {
            if (0 !== n5.hiLevel && u2)
              for (var r6, i4 = 0; i4 < t5.length; i4++)
                1 === e4[i4] && (r6 = p2.indexOf(t5[i4])) >= 0 && (t5[i4] = p2[r6 + 1]);
          }(r5, n4, i3), x2(2, r5, e3, n4, i3), x2(1, r5, e3, n4, i3), r5.join("");
        };
        return this.__bidiEngine__.doBidiReorder = function(t4, e3, n4) {
          if (function(t5, e4) {
            if (e4)
              for (var n5 = 0; n5 < t5.length; n5++)
                e4[n5] = n5;
            void 0 === a2 && (a2 = y2(t5)), void 0 === s2 && (s2 = y2(t5));
          }(t4, e3), i2 || !o2 || s2)
            if (i2 && o2 && a2 ^ s2)
              v2 = a2 ? 1 : 0, t4 = N2(t4, e3, n4);
            else if (!i2 && o2 && s2)
              v2 = a2 ? 1 : 0, t4 = A2(t4, e3, n4), t4 = N2(t4, e3);
            else if (!i2 || a2 || o2 || s2) {
              if (i2 && !o2 && a2 ^ s2)
                t4 = N2(t4, e3), a2 ? (v2 = 0, t4 = A2(t4, e3, n4)) : (v2 = 1, t4 = A2(t4, e3, n4), t4 = N2(t4, e3));
              else if (i2 && a2 && !o2 && s2)
                v2 = 1, t4 = A2(t4, e3, n4), t4 = N2(t4, e3);
              else if (!i2 && !o2 && a2 ^ s2) {
                var r5 = u2;
                a2 ? (v2 = 1, t4 = A2(t4, e3, n4), v2 = 0, u2 = false, t4 = A2(t4, e3, n4), u2 = r5) : (v2 = 0, t4 = A2(t4, e3, n4), t4 = N2(t4, e3), v2 = 1, u2 = false, t4 = A2(t4, e3, n4), u2 = r5, t4 = N2(t4, e3));
              }
            } else
              v2 = 0, t4 = A2(t4, e3, n4);
          else
            v2 = a2 ? 1 : 0, t4 = A2(t4, e3, n4);
          return t4;
        }, this.__bidiEngine__.setOptions = function(t4) {
          t4 && (i2 = t4.isInputVisual, o2 = t4.isOutputVisual, a2 = t4.isInputRtl, s2 = t4.isOutputRtl, u2 = t4.isSymmetricSwapping);
        }, this.__bidiEngine__.setOptions(t3), this.__bidiEngine__;
      };
      var e2 = ["BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "S", "B", "S", "WS", "B", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "B", "B", "B", "S", "WS", "N", "N", "ET", "ET", "ET", "N", "N", "N", "N", "N", "ES", "CS", "ES", "CS", "CS", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "CS", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "N", "BN", "BN", "BN", "BN", "BN", "BN", "B", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "CS", "N", "ET", "ET", "ET", "ET", "N", "N", "N", "N", "L", "N", "N", "BN", "N", "N", "ET", "ET", "EN", "EN", "N", "L", "N", "N", "N", "EN", "L", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "L", "L", "L", "L", "L", "L", "L", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "L", "N", "N", "N", "N", "N", "ET", "N", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "R", "NSM", "R", "NSM", "NSM", "R", "NSM", "NSM", "R", "NSM", "N", "N", "N", "N", "N", "N", "N", "N", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "N", "N", "N", "N", "N", "R", "R", "R", "R", "R", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "AN", "AN", "AN", "AN", "AN", "AN", "N", "N", "AL", "ET", "ET", "AL", "CS", "AL", "N", "N", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "N", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "ET", "AN", "AN", "AL", "AL", "AL", "NSM", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AN", "N", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "NSM", "NSM", "N", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "N", "AL", "AL", "NSM", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "N", "N", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "R", "R", "N", "N", "N", "N", "R", "N", "N", "N", "N", "N", "WS", "WS", "WS", "WS", "WS", "WS", "WS", "WS", "WS", "WS", "WS", "BN", "BN", "BN", "L", "R", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "WS", "B", "LRE", "RLE", "PDF", "LRO", "RLO", "CS", "ET", "ET", "ET", "ET", "ET", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "CS", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "WS", "BN", "BN", "BN", "BN", "BN", "N", "LRI", "RLI", "FSI", "PDI", "BN", "BN", "BN", "BN", "BN", "BN", "EN", "L", "N", "N", "EN", "EN", "EN", "EN", "EN", "EN", "ES", "ES", "N", "N", "N", "L", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "ES", "ES", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "N", "N", "N", "N", "N", "R", "NSM", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "ES", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "N", "R", "R", "R", "R", "R", "N", "R", "N", "R", "R", "N", "R", "R", "N", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "CS", "N", "CS", "N", "N", "CS", "N", "N", "N", "N", "N", "N", "N", "N", "N", "ET", "N", "N", "ES", "ES", "N", "N", "N", "N", "N", "ET", "ET", "N", "N", "N", "N", "N", "AL", "AL", "AL", "AL", "AL", "N", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "N", "N", "BN", "N", "N", "N", "ET", "ET", "ET", "N", "N", "N", "N", "N", "ES", "CS", "ES", "CS", "CS", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "CS", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "L", "L", "L", "L", "L", "L", "N", "N", "L", "L", "L", "L", "L", "L", "N", "N", "L", "L", "L", "L", "L", "L", "N", "N", "L", "L", "L", "N", "N", "N", "ET", "ET", "N", "N", "N", "ET", "ET", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"], n2 = new t2.__bidiEngine__({ isInputVisual: true });
      t2.API.events.push(["postProcessText", function(t3) {
        var e3 = t3.text, r4 = (t3.x, t3.y, t3.options || {}), i2 = (t3.mutex, r4.lang, []);
        if (r4.isInputVisual = "boolean" != typeof r4.isInputVisual || r4.isInputVisual, n2.setOptions(r4), "[object Array]" === Object.prototype.toString.call(e3)) {
          var a2 = 0;
          for (i2 = [], a2 = 0; a2 < e3.length; a2 += 1)
            "[object Array]" === Object.prototype.toString.call(e3[a2]) ? i2.push([n2.doBidiReorder(e3[a2][0]), e3[a2][1], e3[a2][2]]) : i2.push([n2.doBidiReorder(e3[a2])]);
          t3.text = i2;
        } else
          t3.text = n2.doBidiReorder(e3);
        n2.setOptions({ isInputVisual: true });
      }]);
    }(g), g.API.TTFFont = function() {
      function t2(t3) {
        var e2;
        if (this.rawData = t3, e2 = this.contents = new Rt(t3), this.contents.pos = 4, "ttcf" === e2.readString(4))
          throw new Error("TTCF not supported.");
        e2.pos = 0, this.parse(), this.subset = new re(this), this.registerTTF();
      }
      return t2.open = function(e2) {
        return new t2(e2);
      }, t2.prototype.parse = function() {
        return this.directory = new Tt(this.contents), this.head = new zt(this), this.name = new Xt(this), this.cmap = new Wt(this), this.toUnicode = {}, this.hhea = new Vt(this), this.maxp = new Kt(this), this.hmtx = new Zt(this), this.post = new Yt(this), this.os2 = new Gt(this), this.loca = new ne(this), this.glyf = new Qt(this), this.ascender = this.os2.exists && this.os2.ascender || this.hhea.ascender, this.decender = this.os2.exists && this.os2.decender || this.hhea.decender, this.lineGap = this.os2.exists && this.os2.lineGap || this.hhea.lineGap, this.bbox = [this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax];
      }, t2.prototype.registerTTF = function() {
        var t3, e2, n2, r4, i2;
        if (this.scaleFactor = 1e3 / this.head.unitsPerEm, this.bbox = (function() {
          var e3, n3, r5, i3;
          for (i3 = [], e3 = 0, n3 = (r5 = this.bbox).length; e3 < n3; e3++)
            t3 = r5[e3], i3.push(Math.round(t3 * this.scaleFactor));
          return i3;
        }).call(this), this.stemV = 0, this.post.exists ? (n2 = 255 & (r4 = this.post.italic_angle), 0 != (32768 & (e2 = r4 >> 16)) && (e2 = -(1 + (65535 ^ e2))), this.italicAngle = +(e2 + "." + n2)) : this.italicAngle = 0, this.ascender = Math.round(this.ascender * this.scaleFactor), this.decender = Math.round(this.decender * this.scaleFactor), this.lineGap = Math.round(this.lineGap * this.scaleFactor), this.capHeight = this.os2.exists && this.os2.capHeight || this.ascender, this.xHeight = this.os2.exists && this.os2.xHeight || 0, this.familyClass = (this.os2.exists && this.os2.familyClass || 0) >> 8, this.isSerif = 1 === (i2 = this.familyClass) || 2 === i2 || 3 === i2 || 4 === i2 || 5 === i2 || 7 === i2, this.isScript = 10 === this.familyClass, this.flags = 0, this.post.isFixedPitch && (this.flags |= 1), this.isSerif && (this.flags |= 2), this.isScript && (this.flags |= 8), 0 !== this.italicAngle && (this.flags |= 64), this.flags |= 32, !this.cmap.unicode)
          throw new Error("No unicode cmap for font");
      }, t2.prototype.characterToGlyph = function(t3) {
        var e2;
        return (null != (e2 = this.cmap.unicode) ? e2.codeMap[t3] : void 0) || 0;
      }, t2.prototype.widthOfGlyph = function(t3) {
        var e2;
        return e2 = 1e3 / this.head.unitsPerEm, this.hmtx.forGlyph(t3).advance * e2;
      }, t2.prototype.widthOfString = function(t3, e2, n2) {
        var r4, i2, a2, o2;
        for (a2 = 0, i2 = 0, o2 = (t3 = "" + t3).length; 0 <= o2 ? i2 < o2 : i2 > o2; i2 = 0 <= o2 ? ++i2 : --i2)
          r4 = t3.charCodeAt(i2), a2 += this.widthOfGlyph(this.characterToGlyph(r4)) + n2 * (1e3 / e2) || 0;
        return a2 * (e2 / 1e3);
      }, t2.prototype.lineHeight = function(t3, e2) {
        var n2;
        return null == e2 && (e2 = false), n2 = e2 ? this.lineGap : 0, (this.ascender + n2 - this.decender) / 1e3 * t3;
      }, t2;
    }();
    Rt = function() {
      function t2(t3) {
        this.data = null != t3 ? t3 : [], this.pos = 0, this.length = this.data.length;
      }
      return t2.prototype.readByte = function() {
        return this.data[this.pos++];
      }, t2.prototype.writeByte = function(t3) {
        return this.data[this.pos++] = t3;
      }, t2.prototype.readUInt32 = function() {
        return 16777216 * this.readByte() + (this.readByte() << 16) + (this.readByte() << 8) + this.readByte();
      }, t2.prototype.writeUInt32 = function(t3) {
        return this.writeByte(t3 >>> 24 & 255), this.writeByte(t3 >> 16 & 255), this.writeByte(t3 >> 8 & 255), this.writeByte(255 & t3);
      }, t2.prototype.readInt32 = function() {
        var t3;
        return (t3 = this.readUInt32()) >= 2147483648 ? t3 - 4294967296 : t3;
      }, t2.prototype.writeInt32 = function(t3) {
        return t3 < 0 && (t3 += 4294967296), this.writeUInt32(t3);
      }, t2.prototype.readUInt16 = function() {
        return this.readByte() << 8 | this.readByte();
      }, t2.prototype.writeUInt16 = function(t3) {
        return this.writeByte(t3 >> 8 & 255), this.writeByte(255 & t3);
      }, t2.prototype.readInt16 = function() {
        var t3;
        return (t3 = this.readUInt16()) >= 32768 ? t3 - 65536 : t3;
      }, t2.prototype.writeInt16 = function(t3) {
        return t3 < 0 && (t3 += 65536), this.writeUInt16(t3);
      }, t2.prototype.readString = function(t3) {
        var e2, n2;
        for (n2 = [], e2 = 0; 0 <= t3 ? e2 < t3 : e2 > t3; e2 = 0 <= t3 ? ++e2 : --e2)
          n2[e2] = String.fromCharCode(this.readByte());
        return n2.join("");
      }, t2.prototype.writeString = function(t3) {
        var e2, n2, r4;
        for (r4 = [], e2 = 0, n2 = t3.length; 0 <= n2 ? e2 < n2 : e2 > n2; e2 = 0 <= n2 ? ++e2 : --e2)
          r4.push(this.writeByte(t3.charCodeAt(e2)));
        return r4;
      }, t2.prototype.readShort = function() {
        return this.readInt16();
      }, t2.prototype.writeShort = function(t3) {
        return this.writeInt16(t3);
      }, t2.prototype.readLongLong = function() {
        var t3, e2, n2, r4, i2, a2, o2, s2;
        return t3 = this.readByte(), e2 = this.readByte(), n2 = this.readByte(), r4 = this.readByte(), i2 = this.readByte(), a2 = this.readByte(), o2 = this.readByte(), s2 = this.readByte(), 128 & t3 ? -1 * (72057594037927940 * (255 ^ t3) + 281474976710656 * (255 ^ e2) + 1099511627776 * (255 ^ n2) + 4294967296 * (255 ^ r4) + 16777216 * (255 ^ i2) + 65536 * (255 ^ a2) + 256 * (255 ^ o2) + (255 ^ s2) + 1) : 72057594037927940 * t3 + 281474976710656 * e2 + 1099511627776 * n2 + 4294967296 * r4 + 16777216 * i2 + 65536 * a2 + 256 * o2 + s2;
      }, t2.prototype.writeLongLong = function(t3) {
        var e2, n2;
        return e2 = Math.floor(t3 / 4294967296), n2 = 4294967295 & t3, this.writeByte(e2 >> 24 & 255), this.writeByte(e2 >> 16 & 255), this.writeByte(e2 >> 8 & 255), this.writeByte(255 & e2), this.writeByte(n2 >> 24 & 255), this.writeByte(n2 >> 16 & 255), this.writeByte(n2 >> 8 & 255), this.writeByte(255 & n2);
      }, t2.prototype.readInt = function() {
        return this.readInt32();
      }, t2.prototype.writeInt = function(t3) {
        return this.writeInt32(t3);
      }, t2.prototype.read = function(t3) {
        var e2, n2;
        for (e2 = [], n2 = 0; 0 <= t3 ? n2 < t3 : n2 > t3; n2 = 0 <= t3 ? ++n2 : --n2)
          e2.push(this.readByte());
        return e2;
      }, t2.prototype.write = function(t3) {
        var e2, n2, r4, i2;
        for (i2 = [], n2 = 0, r4 = t3.length; n2 < r4; n2++)
          e2 = t3[n2], i2.push(this.writeByte(e2));
        return i2;
      }, t2;
    }();
    Tt = function() {
      var t2;
      function e2(t3) {
        var e3, n2, r4;
        for (this.scalarType = t3.readInt(), this.tableCount = t3.readShort(), this.searchRange = t3.readShort(), this.entrySelector = t3.readShort(), this.rangeShift = t3.readShort(), this.tables = {}, n2 = 0, r4 = this.tableCount; 0 <= r4 ? n2 < r4 : n2 > r4; n2 = 0 <= r4 ? ++n2 : --n2)
          e3 = { tag: t3.readString(4), checksum: t3.readInt(), offset: t3.readInt(), length: t3.readInt() }, this.tables[e3.tag] = e3;
      }
      return e2.prototype.encode = function(e3) {
        var n2, r4, i2, a2, o2, s2, u2, c2, h2, l2, f2, d2, p2;
        for (p2 in f2 = Object.keys(e3).length, s2 = Math.log(2), h2 = 16 * Math.floor(Math.log(f2) / s2), a2 = Math.floor(h2 / s2), c2 = 16 * f2 - h2, (r4 = new Rt()).writeInt(this.scalarType), r4.writeShort(f2), r4.writeShort(h2), r4.writeShort(a2), r4.writeShort(c2), i2 = 16 * f2, u2 = r4.pos + i2, o2 = null, d2 = [], e3)
          for (l2 = e3[p2], r4.writeString(p2), r4.writeInt(t2(l2)), r4.writeInt(u2), r4.writeInt(l2.length), d2 = d2.concat(l2), "head" === p2 && (o2 = u2), u2 += l2.length; u2 % 4; )
            d2.push(0), u2++;
        return r4.write(d2), n2 = 2981146554 - t2(r4.data), r4.pos = o2 + 8, r4.writeUInt32(n2), r4.data;
      }, t2 = function(t3) {
        var e3, n2, r4, i2;
        for (t3 = $t.call(t3); t3.length % 4; )
          t3.push(0);
        for (r4 = new Rt(t3), n2 = 0, e3 = 0, i2 = t3.length; e3 < i2; e3 = e3 += 4)
          n2 += r4.readUInt32();
        return 4294967295 & n2;
      }, e2;
    }();
    Dt = {}.hasOwnProperty;
    Ut = function(t2, e2) {
      for (var n2 in e2)
        Dt.call(e2, n2) && (t2[n2] = e2[n2]);
      function r4() {
        this.constructor = t2;
      }
      return r4.prototype = e2.prototype, t2.prototype = new r4(), t2.__super__ = e2.prototype, t2;
    };
    qt = function() {
      function t2(t3) {
        var e2;
        this.file = t3, e2 = this.file.directory.tables[this.tag], this.exists = !!e2, e2 && (this.offset = e2.offset, this.length = e2.length, this.parse(this.file.contents));
      }
      return t2.prototype.parse = function() {
      }, t2.prototype.encode = function() {
      }, t2.prototype.raw = function() {
        return this.exists ? (this.file.contents.pos = this.offset, this.file.contents.read(this.length)) : null;
      }, t2;
    }();
    zt = function(t2) {
      function e2() {
        return e2.__super__.constructor.apply(this, arguments);
      }
      return Ut(e2, qt), e2.prototype.tag = "head", e2.prototype.parse = function(t3) {
        return t3.pos = this.offset, this.version = t3.readInt(), this.revision = t3.readInt(), this.checkSumAdjustment = t3.readInt(), this.magicNumber = t3.readInt(), this.flags = t3.readShort(), this.unitsPerEm = t3.readShort(), this.created = t3.readLongLong(), this.modified = t3.readLongLong(), this.xMin = t3.readShort(), this.yMin = t3.readShort(), this.xMax = t3.readShort(), this.yMax = t3.readShort(), this.macStyle = t3.readShort(), this.lowestRecPPEM = t3.readShort(), this.fontDirectionHint = t3.readShort(), this.indexToLocFormat = t3.readShort(), this.glyphDataFormat = t3.readShort();
      }, e2.prototype.encode = function(t3) {
        var e3;
        return (e3 = new Rt()).writeInt(this.version), e3.writeInt(this.revision), e3.writeInt(this.checkSumAdjustment), e3.writeInt(this.magicNumber), e3.writeShort(this.flags), e3.writeShort(this.unitsPerEm), e3.writeLongLong(this.created), e3.writeLongLong(this.modified), e3.writeShort(this.xMin), e3.writeShort(this.yMin), e3.writeShort(this.xMax), e3.writeShort(this.yMax), e3.writeShort(this.macStyle), e3.writeShort(this.lowestRecPPEM), e3.writeShort(this.fontDirectionHint), e3.writeShort(t3), e3.writeShort(this.glyphDataFormat), e3.data;
      }, e2;
    }();
    Ht = function() {
      function t2(t3, e2) {
        var n2, r4, i2, a2, o2, s2, u2, c2, h2, l2, f2, d2, p2, g2, m2, v2, b2;
        switch (this.platformID = t3.readUInt16(), this.encodingID = t3.readShort(), this.offset = e2 + t3.readInt(), h2 = t3.pos, t3.pos = this.offset, this.format = t3.readUInt16(), this.length = t3.readUInt16(), this.language = t3.readUInt16(), this.isUnicode = 3 === this.platformID && 1 === this.encodingID && 4 === this.format || 0 === this.platformID && 4 === this.format, this.codeMap = {}, this.format) {
          case 0:
            for (s2 = 0; s2 < 256; ++s2)
              this.codeMap[s2] = t3.readByte();
            break;
          case 4:
            for (f2 = t3.readUInt16(), l2 = f2 / 2, t3.pos += 6, i2 = function() {
              var e3, n3;
              for (n3 = [], s2 = e3 = 0; 0 <= l2 ? e3 < l2 : e3 > l2; s2 = 0 <= l2 ? ++e3 : --e3)
                n3.push(t3.readUInt16());
              return n3;
            }(), t3.pos += 2, p2 = function() {
              var e3, n3;
              for (n3 = [], s2 = e3 = 0; 0 <= l2 ? e3 < l2 : e3 > l2; s2 = 0 <= l2 ? ++e3 : --e3)
                n3.push(t3.readUInt16());
              return n3;
            }(), u2 = function() {
              var e3, n3;
              for (n3 = [], s2 = e3 = 0; 0 <= l2 ? e3 < l2 : e3 > l2; s2 = 0 <= l2 ? ++e3 : --e3)
                n3.push(t3.readUInt16());
              return n3;
            }(), c2 = function() {
              var e3, n3;
              for (n3 = [], s2 = e3 = 0; 0 <= l2 ? e3 < l2 : e3 > l2; s2 = 0 <= l2 ? ++e3 : --e3)
                n3.push(t3.readUInt16());
              return n3;
            }(), r4 = (this.length - t3.pos + this.offset) / 2, o2 = function() {
              var e3, n3;
              for (n3 = [], s2 = e3 = 0; 0 <= r4 ? e3 < r4 : e3 > r4; s2 = 0 <= r4 ? ++e3 : --e3)
                n3.push(t3.readUInt16());
              return n3;
            }(), s2 = m2 = 0, b2 = i2.length; m2 < b2; s2 = ++m2)
              for (g2 = i2[s2], n2 = v2 = d2 = p2[s2]; d2 <= g2 ? v2 <= g2 : v2 >= g2; n2 = d2 <= g2 ? ++v2 : --v2)
                0 === c2[s2] ? a2 = n2 + u2[s2] : 0 !== (a2 = o2[c2[s2] / 2 + (n2 - d2) - (l2 - s2)] || 0) && (a2 += u2[s2]), this.codeMap[n2] = 65535 & a2;
        }
        t3.pos = h2;
      }
      return t2.encode = function(t3, e2) {
        var n2, r4, i2, a2, o2, s2, u2, c2, h2, l2, f2, d2, p2, g2, m2, v2, b2, y2, w2, N2, L2, x2, A2, _2, S2, P2, k2, F2, I2, C2, j2, B2, O2, M2, E2, q2, R2, T2, D2, U2, z2, H2, W2, V2, G2, Y2;
        switch (F2 = new Rt(), a2 = Object.keys(t3).sort(function(t4, e3) {
          return t4 - e3;
        }), e2) {
          case "macroman":
            for (p2 = 0, g2 = function() {
              var t4 = [];
              for (d2 = 0; d2 < 256; ++d2)
                t4.push(0);
              return t4;
            }(), v2 = { 0: 0 }, i2 = {}, I2 = 0, O2 = a2.length; I2 < O2; I2++)
              null == v2[W2 = t3[r4 = a2[I2]]] && (v2[W2] = ++p2), i2[r4] = { old: t3[r4], new: v2[t3[r4]] }, g2[r4] = v2[t3[r4]];
            return F2.writeUInt16(1), F2.writeUInt16(0), F2.writeUInt32(12), F2.writeUInt16(0), F2.writeUInt16(262), F2.writeUInt16(0), F2.write(g2), { charMap: i2, subtable: F2.data, maxGlyphID: p2 + 1 };
          case "unicode":
            for (P2 = [], h2 = [], b2 = 0, v2 = {}, n2 = {}, m2 = u2 = null, C2 = 0, M2 = a2.length; C2 < M2; C2++)
              null == v2[w2 = t3[r4 = a2[C2]]] && (v2[w2] = ++b2), n2[r4] = { old: w2, new: v2[w2] }, o2 = v2[w2] - r4, null != m2 && o2 === u2 || (m2 && h2.push(m2), P2.push(r4), u2 = o2), m2 = r4;
            for (m2 && h2.push(m2), h2.push(65535), P2.push(65535), _2 = 2 * (A2 = P2.length), x2 = 2 * Math.pow(Math.log(A2) / Math.LN2, 2), l2 = Math.log(x2 / 2) / Math.LN2, L2 = 2 * A2 - x2, s2 = [], N2 = [], f2 = [], d2 = j2 = 0, E2 = P2.length; j2 < E2; d2 = ++j2) {
              if (S2 = P2[d2], c2 = h2[d2], 65535 === S2) {
                s2.push(0), N2.push(0);
                break;
              }
              if (S2 - (k2 = n2[S2].new) >= 32768)
                for (s2.push(0), N2.push(2 * (f2.length + A2 - d2)), r4 = B2 = S2; S2 <= c2 ? B2 <= c2 : B2 >= c2; r4 = S2 <= c2 ? ++B2 : --B2)
                  f2.push(n2[r4].new);
              else
                s2.push(k2 - S2), N2.push(0);
            }
            for (F2.writeUInt16(3), F2.writeUInt16(1), F2.writeUInt32(12), F2.writeUInt16(4), F2.writeUInt16(16 + 8 * A2 + 2 * f2.length), F2.writeUInt16(0), F2.writeUInt16(_2), F2.writeUInt16(x2), F2.writeUInt16(l2), F2.writeUInt16(L2), z2 = 0, q2 = h2.length; z2 < q2; z2++)
              r4 = h2[z2], F2.writeUInt16(r4);
            for (F2.writeUInt16(0), H2 = 0, R2 = P2.length; H2 < R2; H2++)
              r4 = P2[H2], F2.writeUInt16(r4);
            for (V2 = 0, T2 = s2.length; V2 < T2; V2++)
              o2 = s2[V2], F2.writeUInt16(o2);
            for (G2 = 0, D2 = N2.length; G2 < D2; G2++)
              y2 = N2[G2], F2.writeUInt16(y2);
            for (Y2 = 0, U2 = f2.length; Y2 < U2; Y2++)
              p2 = f2[Y2], F2.writeUInt16(p2);
            return { charMap: n2, subtable: F2.data, maxGlyphID: b2 + 1 };
        }
      }, t2;
    }();
    Wt = function(t2) {
      function e2() {
        return e2.__super__.constructor.apply(this, arguments);
      }
      return Ut(e2, qt), e2.prototype.tag = "cmap", e2.prototype.parse = function(t3) {
        var e3, n2, r4;
        for (t3.pos = this.offset, this.version = t3.readUInt16(), r4 = t3.readUInt16(), this.tables = [], this.unicode = null, n2 = 0; 0 <= r4 ? n2 < r4 : n2 > r4; n2 = 0 <= r4 ? ++n2 : --n2)
          e3 = new Ht(t3, this.offset), this.tables.push(e3), e3.isUnicode && null == this.unicode && (this.unicode = e3);
        return true;
      }, e2.encode = function(t3, e3) {
        var n2, r4;
        return null == e3 && (e3 = "macroman"), n2 = Ht.encode(t3, e3), (r4 = new Rt()).writeUInt16(0), r4.writeUInt16(1), n2.table = r4.data.concat(n2.subtable), n2;
      }, e2;
    }();
    Vt = function(t2) {
      function e2() {
        return e2.__super__.constructor.apply(this, arguments);
      }
      return Ut(e2, qt), e2.prototype.tag = "hhea", e2.prototype.parse = function(t3) {
        return t3.pos = this.offset, this.version = t3.readInt(), this.ascender = t3.readShort(), this.decender = t3.readShort(), this.lineGap = t3.readShort(), this.advanceWidthMax = t3.readShort(), this.minLeftSideBearing = t3.readShort(), this.minRightSideBearing = t3.readShort(), this.xMaxExtent = t3.readShort(), this.caretSlopeRise = t3.readShort(), this.caretSlopeRun = t3.readShort(), this.caretOffset = t3.readShort(), t3.pos += 8, this.metricDataFormat = t3.readShort(), this.numberOfMetrics = t3.readUInt16();
      }, e2;
    }();
    Gt = function(t2) {
      function e2() {
        return e2.__super__.constructor.apply(this, arguments);
      }
      return Ut(e2, qt), e2.prototype.tag = "OS/2", e2.prototype.parse = function(t3) {
        if (t3.pos = this.offset, this.version = t3.readUInt16(), this.averageCharWidth = t3.readShort(), this.weightClass = t3.readUInt16(), this.widthClass = t3.readUInt16(), this.type = t3.readShort(), this.ySubscriptXSize = t3.readShort(), this.ySubscriptYSize = t3.readShort(), this.ySubscriptXOffset = t3.readShort(), this.ySubscriptYOffset = t3.readShort(), this.ySuperscriptXSize = t3.readShort(), this.ySuperscriptYSize = t3.readShort(), this.ySuperscriptXOffset = t3.readShort(), this.ySuperscriptYOffset = t3.readShort(), this.yStrikeoutSize = t3.readShort(), this.yStrikeoutPosition = t3.readShort(), this.familyClass = t3.readShort(), this.panose = function() {
          var e3, n2;
          for (n2 = [], e3 = 0; e3 < 10; ++e3)
            n2.push(t3.readByte());
          return n2;
        }(), this.charRange = function() {
          var e3, n2;
          for (n2 = [], e3 = 0; e3 < 4; ++e3)
            n2.push(t3.readInt());
          return n2;
        }(), this.vendorID = t3.readString(4), this.selection = t3.readShort(), this.firstCharIndex = t3.readShort(), this.lastCharIndex = t3.readShort(), this.version > 0 && (this.ascent = t3.readShort(), this.descent = t3.readShort(), this.lineGap = t3.readShort(), this.winAscent = t3.readShort(), this.winDescent = t3.readShort(), this.codePageRange = function() {
          var e3, n2;
          for (n2 = [], e3 = 0; e3 < 2; e3 = ++e3)
            n2.push(t3.readInt());
          return n2;
        }(), this.version > 1))
          return this.xHeight = t3.readShort(), this.capHeight = t3.readShort(), this.defaultChar = t3.readShort(), this.breakChar = t3.readShort(), this.maxContext = t3.readShort();
      }, e2;
    }();
    Yt = function(t2) {
      function e2() {
        return e2.__super__.constructor.apply(this, arguments);
      }
      return Ut(e2, qt), e2.prototype.tag = "post", e2.prototype.parse = function(t3) {
        var e3, n2, r4;
        switch (t3.pos = this.offset, this.format = t3.readInt(), this.italicAngle = t3.readInt(), this.underlinePosition = t3.readShort(), this.underlineThickness = t3.readShort(), this.isFixedPitch = t3.readInt(), this.minMemType42 = t3.readInt(), this.maxMemType42 = t3.readInt(), this.minMemType1 = t3.readInt(), this.maxMemType1 = t3.readInt(), this.format) {
          case 65536:
            break;
          case 131072:
            var i2;
            for (n2 = t3.readUInt16(), this.glyphNameIndex = [], i2 = 0; 0 <= n2 ? i2 < n2 : i2 > n2; i2 = 0 <= n2 ? ++i2 : --i2)
              this.glyphNameIndex.push(t3.readUInt16());
            for (this.names = [], r4 = []; t3.pos < this.offset + this.length; )
              e3 = t3.readByte(), r4.push(this.names.push(t3.readString(e3)));
            return r4;
          case 151552:
            return n2 = t3.readUInt16(), this.offsets = t3.read(n2);
          case 196608:
            break;
          case 262144:
            return this.map = (function() {
              var e4, n3, r5;
              for (r5 = [], i2 = e4 = 0, n3 = this.file.maxp.numGlyphs; 0 <= n3 ? e4 < n3 : e4 > n3; i2 = 0 <= n3 ? ++e4 : --e4)
                r5.push(t3.readUInt32());
              return r5;
            }).call(this);
        }
      }, e2;
    }();
    Jt = function(t2, e2) {
      this.raw = t2, this.length = t2.length, this.platformID = e2.platformID, this.encodingID = e2.encodingID, this.languageID = e2.languageID;
    };
    Xt = function(t2) {
      function e2() {
        return e2.__super__.constructor.apply(this, arguments);
      }
      return Ut(e2, qt), e2.prototype.tag = "name", e2.prototype.parse = function(t3) {
        var e3, n2, r4, i2, a2, o2, s2, u2, c2, h2, l2;
        for (t3.pos = this.offset, t3.readShort(), e3 = t3.readShort(), o2 = t3.readShort(), n2 = [], i2 = 0; 0 <= e3 ? i2 < e3 : i2 > e3; i2 = 0 <= e3 ? ++i2 : --i2)
          n2.push({ platformID: t3.readShort(), encodingID: t3.readShort(), languageID: t3.readShort(), nameID: t3.readShort(), length: t3.readShort(), offset: this.offset + o2 + t3.readShort() });
        for (s2 = {}, i2 = c2 = 0, h2 = n2.length; c2 < h2; i2 = ++c2)
          r4 = n2[i2], t3.pos = r4.offset, u2 = t3.readString(r4.length), a2 = new Jt(u2, r4), null == s2[l2 = r4.nameID] && (s2[l2] = []), s2[r4.nameID].push(a2);
        this.strings = s2, this.copyright = s2[0], this.fontFamily = s2[1], this.fontSubfamily = s2[2], this.uniqueSubfamily = s2[3], this.fontName = s2[4], this.version = s2[5];
        try {
          this.postscriptName = s2[6][0].raw.replace(/[\x00-\x19\x80-\xff]/g, "");
        } catch (t4) {
          this.postscriptName = s2[4][0].raw.replace(/[\x00-\x19\x80-\xff]/g, "");
        }
        return this.trademark = s2[7], this.manufacturer = s2[8], this.designer = s2[9], this.description = s2[10], this.vendorUrl = s2[11], this.designerUrl = s2[12], this.license = s2[13], this.licenseUrl = s2[14], this.preferredFamily = s2[15], this.preferredSubfamily = s2[17], this.compatibleFull = s2[18], this.sampleText = s2[19];
      }, e2;
    }();
    Kt = function(t2) {
      function e2() {
        return e2.__super__.constructor.apply(this, arguments);
      }
      return Ut(e2, qt), e2.prototype.tag = "maxp", e2.prototype.parse = function(t3) {
        return t3.pos = this.offset, this.version = t3.readInt(), this.numGlyphs = t3.readUInt16(), this.maxPoints = t3.readUInt16(), this.maxContours = t3.readUInt16(), this.maxCompositePoints = t3.readUInt16(), this.maxComponentContours = t3.readUInt16(), this.maxZones = t3.readUInt16(), this.maxTwilightPoints = t3.readUInt16(), this.maxStorage = t3.readUInt16(), this.maxFunctionDefs = t3.readUInt16(), this.maxInstructionDefs = t3.readUInt16(), this.maxStackElements = t3.readUInt16(), this.maxSizeOfInstructions = t3.readUInt16(), this.maxComponentElements = t3.readUInt16(), this.maxComponentDepth = t3.readUInt16();
      }, e2;
    }();
    Zt = function(t2) {
      function e2() {
        return e2.__super__.constructor.apply(this, arguments);
      }
      return Ut(e2, qt), e2.prototype.tag = "hmtx", e2.prototype.parse = function(t3) {
        var e3, n2, r4, i2, a2, o2, s2;
        for (t3.pos = this.offset, this.metrics = [], e3 = 0, o2 = this.file.hhea.numberOfMetrics; 0 <= o2 ? e3 < o2 : e3 > o2; e3 = 0 <= o2 ? ++e3 : --e3)
          this.metrics.push({ advance: t3.readUInt16(), lsb: t3.readInt16() });
        for (r4 = this.file.maxp.numGlyphs - this.file.hhea.numberOfMetrics, this.leftSideBearings = function() {
          var n3, i3;
          for (i3 = [], e3 = n3 = 0; 0 <= r4 ? n3 < r4 : n3 > r4; e3 = 0 <= r4 ? ++n3 : --n3)
            i3.push(t3.readInt16());
          return i3;
        }(), this.widths = (function() {
          var t4, e4, n3, r5;
          for (r5 = [], t4 = 0, e4 = (n3 = this.metrics).length; t4 < e4; t4++)
            i2 = n3[t4], r5.push(i2.advance);
          return r5;
        }).call(this), n2 = this.widths[this.widths.length - 1], s2 = [], e3 = a2 = 0; 0 <= r4 ? a2 < r4 : a2 > r4; e3 = 0 <= r4 ? ++a2 : --a2)
          s2.push(this.widths.push(n2));
        return s2;
      }, e2.prototype.forGlyph = function(t3) {
        return t3 in this.metrics ? this.metrics[t3] : { advance: this.metrics[this.metrics.length - 1].advance, lsb: this.leftSideBearings[t3 - this.metrics.length] };
      }, e2;
    }();
    $t = [].slice;
    Qt = function(t2) {
      function e2() {
        return e2.__super__.constructor.apply(this, arguments);
      }
      return Ut(e2, qt), e2.prototype.tag = "glyf", e2.prototype.parse = function() {
        return this.cache = {};
      }, e2.prototype.glyphFor = function(t3) {
        var e3, n2, r4, i2, a2, o2, s2, u2, c2, h2;
        return t3 in this.cache ? this.cache[t3] : (i2 = this.file.loca, e3 = this.file.contents, n2 = i2.indexOf(t3), 0 === (r4 = i2.lengthOf(t3)) ? this.cache[t3] = null : (e3.pos = this.offset + n2, a2 = (o2 = new Rt(e3.read(r4))).readShort(), u2 = o2.readShort(), h2 = o2.readShort(), s2 = o2.readShort(), c2 = o2.readShort(), this.cache[t3] = -1 === a2 ? new ee(o2, u2, h2, s2, c2) : new te(o2, a2, u2, h2, s2, c2), this.cache[t3]));
      }, e2.prototype.encode = function(t3, e3, n2) {
        var r4, i2, a2, o2, s2;
        for (a2 = [], i2 = [], o2 = 0, s2 = e3.length; o2 < s2; o2++)
          r4 = t3[e3[o2]], i2.push(a2.length), r4 && (a2 = a2.concat(r4.encode(n2)));
        return i2.push(a2.length), { table: a2, offsets: i2 };
      }, e2;
    }();
    te = function() {
      function t2(t3, e2, n2, r4, i2, a2) {
        this.raw = t3, this.numberOfContours = e2, this.xMin = n2, this.yMin = r4, this.xMax = i2, this.yMax = a2, this.compound = false;
      }
      return t2.prototype.encode = function() {
        return this.raw.data;
      }, t2;
    }();
    ee = function() {
      function t2(t3, e2, n2, r4, i2) {
        var a2, o2;
        for (this.raw = t3, this.xMin = e2, this.yMin = n2, this.xMax = r4, this.yMax = i2, this.compound = true, this.glyphIDs = [], this.glyphOffsets = [], a2 = this.raw; o2 = a2.readShort(), this.glyphOffsets.push(a2.pos), this.glyphIDs.push(a2.readUInt16()), 32 & o2; )
          a2.pos += 1 & o2 ? 4 : 2, 128 & o2 ? a2.pos += 8 : 64 & o2 ? a2.pos += 4 : 8 & o2 && (a2.pos += 2);
      }
      return 1, 8, 32, 64, 128, t2.prototype.encode = function() {
        var t3, e2, n2;
        for (e2 = new Rt($t.call(this.raw.data)), t3 = 0, n2 = this.glyphIDs.length; t3 < n2; ++t3)
          e2.pos = this.glyphOffsets[t3];
        return e2.data;
      }, t2;
    }();
    ne = function(t2) {
      function e2() {
        return e2.__super__.constructor.apply(this, arguments);
      }
      return Ut(e2, qt), e2.prototype.tag = "loca", e2.prototype.parse = function(t3) {
        var e3, n2;
        return t3.pos = this.offset, e3 = this.file.head.indexToLocFormat, this.offsets = 0 === e3 ? (function() {
          var e4, r4;
          for (r4 = [], n2 = 0, e4 = this.length; n2 < e4; n2 += 2)
            r4.push(2 * t3.readUInt16());
          return r4;
        }).call(this) : (function() {
          var e4, r4;
          for (r4 = [], n2 = 0, e4 = this.length; n2 < e4; n2 += 4)
            r4.push(t3.readUInt32());
          return r4;
        }).call(this);
      }, e2.prototype.indexOf = function(t3) {
        return this.offsets[t3];
      }, e2.prototype.lengthOf = function(t3) {
        return this.offsets[t3 + 1] - this.offsets[t3];
      }, e2.prototype.encode = function(t3, e3) {
        for (var n2 = new Uint32Array(this.offsets.length), r4 = 0, i2 = 0, a2 = 0; a2 < n2.length; ++a2)
          if (n2[a2] = r4, i2 < e3.length && e3[i2] == a2) {
            ++i2, n2[a2] = r4;
            var o2 = this.offsets[a2], s2 = this.offsets[a2 + 1] - o2;
            s2 > 0 && (r4 += s2);
          }
        for (var u2 = new Array(4 * n2.length), c2 = 0; c2 < n2.length; ++c2)
          u2[4 * c2 + 3] = 255 & n2[c2], u2[4 * c2 + 2] = (65280 & n2[c2]) >> 8, u2[4 * c2 + 1] = (16711680 & n2[c2]) >> 16, u2[4 * c2] = (4278190080 & n2[c2]) >> 24;
        return u2;
      }, e2;
    }();
    re = function() {
      function t2(t3) {
        this.font = t3, this.subset = {}, this.unicodes = {}, this.next = 33;
      }
      return t2.prototype.generateCmap = function() {
        var t3, e2, n2, r4, i2;
        for (e2 in r4 = this.font.cmap.tables[0].codeMap, t3 = {}, i2 = this.subset)
          n2 = i2[e2], t3[e2] = r4[n2];
        return t3;
      }, t2.prototype.glyphsFor = function(t3) {
        var e2, n2, r4, i2, a2, o2, s2;
        for (r4 = {}, a2 = 0, o2 = t3.length; a2 < o2; a2++)
          r4[i2 = t3[a2]] = this.font.glyf.glyphFor(i2);
        for (i2 in e2 = [], r4)
          (null != (n2 = r4[i2]) ? n2.compound : void 0) && e2.push.apply(e2, n2.glyphIDs);
        if (e2.length > 0)
          for (i2 in s2 = this.glyphsFor(e2))
            n2 = s2[i2], r4[i2] = n2;
        return r4;
      }, t2.prototype.encode = function(t3, e2) {
        var n2, r4, i2, a2, o2, s2, u2, c2, h2, l2, f2, d2, p2, g2, m2;
        for (r4 in n2 = Wt.encode(this.generateCmap(), "unicode"), a2 = this.glyphsFor(t3), f2 = { 0: 0 }, m2 = n2.charMap)
          f2[(s2 = m2[r4]).old] = s2.new;
        for (d2 in l2 = n2.maxGlyphID, a2)
          d2 in f2 || (f2[d2] = l2++);
        return c2 = function(t4) {
          var e3, n3;
          for (e3 in n3 = {}, t4)
            n3[t4[e3]] = e3;
          return n3;
        }(f2), h2 = Object.keys(c2).sort(function(t4, e3) {
          return t4 - e3;
        }), p2 = function() {
          var t4, e3, n3;
          for (n3 = [], t4 = 0, e3 = h2.length; t4 < e3; t4++)
            o2 = h2[t4], n3.push(c2[o2]);
          return n3;
        }(), i2 = this.font.glyf.encode(a2, p2, f2), u2 = this.font.loca.encode(i2.offsets, p2), g2 = { cmap: this.font.cmap.raw(), glyf: i2.table, loca: u2, hmtx: this.font.hmtx.raw(), hhea: this.font.hhea.raw(), maxp: this.font.maxp.raw(), post: this.font.post.raw(), name: this.font.name.raw(), head: this.font.head.encode(e2) }, this.font.os2.exists && (g2["OS/2"] = this.font.os2.raw()), this.font.directory.encode(g2);
      }, t2;
    }();
    g.API.PDFObject = function() {
      var t2;
      function e2() {
      }
      return t2 = function(t3, e3) {
        return (Array(e3 + 1).join("0") + t3).slice(-e3);
      }, e2.convert = function(n2) {
        var r4, i2, a2, o2;
        if (Array.isArray(n2))
          return "[" + function() {
            var t3, i3, a3;
            for (a3 = [], t3 = 0, i3 = n2.length; t3 < i3; t3++)
              r4 = n2[t3], a3.push(e2.convert(r4));
            return a3;
          }().join(" ") + "]";
        if ("string" == typeof n2)
          return "/" + n2;
        if (null != n2 ? n2.isString : void 0)
          return "(" + n2 + ")";
        if (n2 instanceof Date)
          return "(D:" + t2(n2.getUTCFullYear(), 4) + t2(n2.getUTCMonth(), 2) + t2(n2.getUTCDate(), 2) + t2(n2.getUTCHours(), 2) + t2(n2.getUTCMinutes(), 2) + t2(n2.getUTCSeconds(), 2) + "Z)";
        if ("[object Object]" === {}.toString.call(n2)) {
          for (i2 in a2 = ["<<"], n2)
            o2 = n2[i2], a2.push("/" + i2 + " " + e2.convert(o2));
          return a2.push(">>"), a2.join("\n");
        }
        return "" + n2;
      }, e2;
    }(), /**
     * @license
     * Copyright (c) 2012 chick307 <chick307@gmail.com>
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
    function(t2, e2) {
      t2.API.adler32cs = function() {
        var t3 = "function" == typeof ArrayBuffer && "function" == typeof Uint8Array, e3 = null, n2 = function() {
          if (!t3)
            return function() {
              return false;
            };
          try {
            var n3 = {};
            "function" == typeof n3.Buffer && (e3 = n3.Buffer);
          } catch (t4) {
          }
          return function(t4) {
            return t4 instanceof ArrayBuffer || null !== e3 && t4 instanceof e3;
          };
        }(), r4 = null !== e3 ? function(t4) {
          return new e3(t4, "utf8").toString("binary");
        } : function(t4) {
          return unescape(encodeURIComponent(t4));
        }, i2 = function(t4, e4) {
          for (var n3 = 65535 & t4, r5 = t4 >>> 16, i3 = 0, a3 = e4.length; i3 < a3; i3++)
            r5 = (r5 + (n3 = (n3 + (255 & e4.charCodeAt(i3))) % 65521)) % 65521;
          return (r5 << 16 | n3) >>> 0;
        }, a2 = function(t4, e4) {
          for (var n3 = 65535 & t4, r5 = t4 >>> 16, i3 = 0, a3 = e4.length; i3 < a3; i3++)
            r5 = (r5 + (n3 = (n3 + e4[i3]) % 65521)) % 65521;
          return (r5 << 16 | n3) >>> 0;
        }, o2 = {}, s2 = o2.Adler32 = (l2 = function(t4) {
          if (!(this instanceof l2))
            throw new TypeError("Constructor cannot called be as a function.");
          if (!isFinite(t4 = null === t4 ? 1 : +t4))
            throw new Error("First arguments needs to be a finite number.");
          this.checksum = t4 >>> 0;
        }, f2 = l2.prototype = {}, f2.constructor = l2, l2.from = ((u2 = function(t4) {
          if (!(this instanceof l2))
            throw new TypeError("Constructor cannot called be as a function.");
          if (null === t4)
            throw new Error("First argument needs to be a string.");
          this.checksum = i2(1, t4.toString());
        }).prototype = f2, u2), l2.fromUtf8 = ((c2 = function(t4) {
          if (!(this instanceof l2))
            throw new TypeError("Constructor cannot called be as a function.");
          if (null === t4)
            throw new Error("First argument needs to be a string.");
          var e4 = r4(t4.toString());
          this.checksum = i2(1, e4);
        }).prototype = f2, c2), t3 && (l2.fromBuffer = ((h2 = function(t4) {
          if (!(this instanceof l2))
            throw new TypeError("Constructor cannot called be as a function.");
          if (!n2(t4))
            throw new Error("First argument needs to be ArrayBuffer.");
          var e4 = new Uint8Array(t4);
          return this.checksum = a2(1, e4);
        }).prototype = f2, h2)), f2.update = function(t4) {
          if (null === t4)
            throw new Error("First argument needs to be a string.");
          return t4 = t4.toString(), this.checksum = i2(this.checksum, t4);
        }, f2.updateUtf8 = function(t4) {
          if (null === t4)
            throw new Error("First argument needs to be a string.");
          var e4 = r4(t4.toString());
          return this.checksum = i2(this.checksum, e4);
        }, t3 && (f2.updateBuffer = function(t4) {
          if (!n2(t4))
            throw new Error("First argument needs to be ArrayBuffer.");
          var e4 = new Uint8Array(t4);
          return this.checksum = a2(this.checksum, e4);
        }), f2.clone = function() {
          return new s2(this.checksum);
        }, l2);
        var u2, c2, h2, l2, f2;
        o2.from = function(t4) {
          if (null === t4)
            throw new Error("First argument needs to be a string.");
          return i2(1, t4.toString());
        }, o2.fromUtf8 = function(t4) {
          if (null === t4)
            throw new Error("First argument needs to be a string.");
          var e4 = r4(t4.toString());
          return i2(1, e4);
        }, t3 && (o2.fromBuffer = function(t4) {
          if (!n2(t4))
            throw new Error("First argument need to be ArrayBuffer.");
          var e4 = new Uint8Array(t4);
          return a2(1, e4);
        });
        return o2;
      }();
    }(g);
    jspdf_es_min_default = g;
  }
});

// node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js
var require_jspdf_plugin_autotable = __commonJS({
  "node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory(function webpackLoadOptionalExternalModule() {
          try {
            return init_jspdf_es_min(), __toCommonJS(jspdf_es_min_exports);
          } catch (e2) {
          }
        }());
      else if (typeof define === "function" && define.amd)
        define(["jspdf"], factory);
      else {
        var a2 = typeof exports === "object" ? factory(function webpackLoadOptionalExternalModule() {
          try {
            return init_jspdf_es_min(), __toCommonJS(jspdf_es_min_exports);
          } catch (e2) {
          }
        }()) : factory(root["jsPDF"]);
        for (var i2 in a2)
          (typeof exports === "object" ? exports : root)[i2] = a2[i2];
      }
    })(typeof exports !== "undefined" ? exports : window, function(__WEBPACK_EXTERNAL_MODULE__16__) {
      return (
        /******/
        function(modules) {
          var installedModules = {};
          function __webpack_require__(moduleId2) {
            if (installedModules[moduleId2]) {
              return installedModules[moduleId2].exports;
            }
            var module2 = installedModules[moduleId2] = {
              /******/
              i: moduleId2,
              /******/
              l: false,
              /******/
              exports: {}
              /******/
            };
            modules[moduleId2].call(module2.exports, module2, module2.exports, __webpack_require__);
            module2.l = true;
            return module2.exports;
          }
          __webpack_require__.m = modules;
          __webpack_require__.c = installedModules;
          __webpack_require__.d = function(exports2, name, getter) {
            if (!__webpack_require__.o(exports2, name)) {
              Object.defineProperty(exports2, name, { enumerable: true, get: getter });
            }
          };
          __webpack_require__.r = function(exports2) {
            if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
              Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
            }
            Object.defineProperty(exports2, "__esModule", { value: true });
          };
          __webpack_require__.t = function(value, mode) {
            if (mode & 1)
              value = __webpack_require__(value);
            if (mode & 8)
              return value;
            if (mode & 4 && typeof value === "object" && value && value.__esModule)
              return value;
            var ns2 = /* @__PURE__ */ Object.create(null);
            __webpack_require__.r(ns2);
            Object.defineProperty(ns2, "default", { enumerable: true, value });
            if (mode & 2 && typeof value != "string")
              for (var key in value)
                __webpack_require__.d(ns2, key, (function(key2) {
                  return value[key2];
                }).bind(null, key));
            return ns2;
          };
          __webpack_require__.n = function(module2) {
            var getter = module2 && module2.__esModule ? (
              /******/
              function getDefault() {
                return module2["default"];
              }
            ) : (
              /******/
              function getModuleExports() {
                return module2;
              }
            );
            __webpack_require__.d(getter, "a", getter);
            return getter;
          };
          __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
          };
          __webpack_require__.p = "";
          return __webpack_require__(__webpack_require__.s = 10);
        }([
          /* 0 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.parseSpacing = exports2.getFillStyle = exports2.addTableBorder = exports2.getStringWidth = void 0;
            function getStringWidth(text, styles, doc) {
              doc.applyStyles(styles, true);
              var textArr = Array.isArray(text) ? text : [text];
              var widestLineWidth = textArr.map(function(text2) {
                return doc.getTextWidth(text2);
              }).reduce(function(a2, b2) {
                return Math.max(a2, b2);
              }, 0);
              return widestLineWidth;
            }
            exports2.getStringWidth = getStringWidth;
            function addTableBorder(doc, table, startPos, cursor) {
              var lineWidth = table.settings.tableLineWidth;
              var lineColor = table.settings.tableLineColor;
              doc.applyStyles({ lineWidth, lineColor });
              var fillStyle = getFillStyle(lineWidth, false);
              if (fillStyle) {
                doc.rect(startPos.x, startPos.y, table.getWidth(doc.pageSize().width), cursor.y - startPos.y, fillStyle);
              }
            }
            exports2.addTableBorder = addTableBorder;
            function getFillStyle(lineWidth, fillColor) {
              var drawLine = lineWidth > 0;
              var drawBackground = fillColor || fillColor === 0;
              if (drawLine && drawBackground) {
                return "DF";
              } else if (drawLine) {
                return "S";
              } else if (drawBackground) {
                return "F";
              } else {
                return null;
              }
            }
            exports2.getFillStyle = getFillStyle;
            function parseSpacing(value, defaultValue) {
              var _a, _b, _c, _d;
              value = value || defaultValue;
              if (Array.isArray(value)) {
                if (value.length >= 4) {
                  return {
                    top: value[0],
                    right: value[1],
                    bottom: value[2],
                    left: value[3]
                  };
                } else if (value.length === 3) {
                  return {
                    top: value[0],
                    right: value[1],
                    bottom: value[2],
                    left: value[1]
                  };
                } else if (value.length === 2) {
                  return {
                    top: value[0],
                    right: value[1],
                    bottom: value[0],
                    left: value[1]
                  };
                } else if (value.length === 1) {
                  value = value[0];
                } else {
                  value = defaultValue;
                }
              }
              if (typeof value === "object") {
                if (typeof value.vertical === "number") {
                  value.top = value.vertical;
                  value.bottom = value.vertical;
                }
                if (typeof value.horizontal === "number") {
                  value.right = value.horizontal;
                  value.left = value.horizontal;
                }
                return {
                  left: (_a = value.left) !== null && _a !== void 0 ? _a : defaultValue,
                  top: (_b = value.top) !== null && _b !== void 0 ? _b : defaultValue,
                  right: (_c = value.right) !== null && _c !== void 0 ? _c : defaultValue,
                  bottom: (_d = value.bottom) !== null && _d !== void 0 ? _d : defaultValue
                };
              }
              if (typeof value !== "number") {
                value = defaultValue;
              }
              return { top: value, right: value, bottom: value, left: value };
            }
            exports2.parseSpacing = parseSpacing;
          },
          /* 1 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            var __extends = this && this.__extends || /* @__PURE__ */ function() {
              var extendStatics = function(d2, b2) {
                extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
                  d3.__proto__ = b3;
                } || function(d3, b3) {
                  for (var p2 in b3)
                    if (b3.hasOwnProperty(p2))
                      d3[p2] = b3[p2];
                };
                return extendStatics(d2, b2);
              };
              return function(d2, b2) {
                extendStatics(d2, b2);
                function __() {
                  this.constructor = d2;
                }
                d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
              };
            }();
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.getTheme = exports2.defaultStyles = exports2.HtmlRowInput = exports2.FONT_ROW_RATIO = void 0;
            exports2.FONT_ROW_RATIO = 1.15;
            var HtmlRowInput = (
              /** @class */
              function(_super) {
                __extends(HtmlRowInput2, _super);
                function HtmlRowInput2(element) {
                  var _this = _super.call(this) || this;
                  _this._element = element;
                  return _this;
                }
                return HtmlRowInput2;
              }(Array)
            );
            exports2.HtmlRowInput = HtmlRowInput;
            function defaultStyles(scaleFactor) {
              return {
                font: "helvetica",
                fontStyle: "normal",
                overflow: "linebreak",
                fillColor: false,
                textColor: 20,
                halign: "left",
                valign: "top",
                fontSize: 10,
                cellPadding: 5 / scaleFactor,
                lineColor: 200,
                lineWidth: 0,
                cellWidth: "auto",
                minCellHeight: 0,
                minCellWidth: 0
              };
            }
            exports2.defaultStyles = defaultStyles;
            function getTheme(name) {
              var themes = {
                striped: {
                  table: { fillColor: 255, textColor: 80, fontStyle: "normal" },
                  head: { textColor: 255, fillColor: [41, 128, 185], fontStyle: "bold" },
                  body: {},
                  foot: { textColor: 255, fillColor: [41, 128, 185], fontStyle: "bold" },
                  alternateRow: { fillColor: 245 }
                },
                grid: {
                  table: {
                    fillColor: 255,
                    textColor: 80,
                    fontStyle: "normal",
                    lineWidth: 0.1
                  },
                  head: {
                    textColor: 255,
                    fillColor: [26, 188, 156],
                    fontStyle: "bold",
                    lineWidth: 0
                  },
                  body: {},
                  foot: {
                    textColor: 255,
                    fillColor: [26, 188, 156],
                    fontStyle: "bold",
                    lineWidth: 0
                  },
                  alternateRow: {}
                },
                plain: {
                  head: { fontStyle: "bold" },
                  foot: { fontStyle: "bold" }
                }
              };
              return themes[name];
            }
            exports2.getTheme = getTheme;
          },
          /* 2 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.DocHandler = void 0;
            var globalDefaults = {};
            var DocHandler = (
              /** @class */
              function() {
                function DocHandler2(jsPDFDocument) {
                  this.jsPDFDocument = jsPDFDocument;
                  this.userStyles = {
                    // Black for versions of jspdf without getTextColor
                    textColor: jsPDFDocument.getTextColor ? this.jsPDFDocument.getTextColor() : 0,
                    fontSize: jsPDFDocument.internal.getFontSize(),
                    fontStyle: jsPDFDocument.internal.getFont().fontStyle,
                    font: jsPDFDocument.internal.getFont().fontName
                  };
                }
                DocHandler2.setDefaults = function(defaults2, doc) {
                  if (doc === void 0) {
                    doc = null;
                  }
                  if (doc) {
                    doc.__autoTableDocumentDefaults = defaults2;
                  } else {
                    globalDefaults = defaults2;
                  }
                };
                DocHandler2.unifyColor = function(c2) {
                  if (Array.isArray(c2)) {
                    return c2;
                  } else if (typeof c2 === "number") {
                    return [c2, c2, c2];
                  } else if (typeof c2 === "string") {
                    return [c2];
                  } else {
                    return null;
                  }
                };
                DocHandler2.prototype.applyStyles = function(styles, fontOnly) {
                  var _a, _b, _c;
                  if (fontOnly === void 0) {
                    fontOnly = false;
                  }
                  if (styles.fontStyle)
                    this.jsPDFDocument.setFontStyle && this.jsPDFDocument.setFontStyle(styles.fontStyle);
                  if (styles.font) {
                    var available = this.getFontList()[styles.font];
                    var fontStyle = styles.fontStyle;
                    if (available && fontStyle && available.indexOf(fontStyle) === -1) {
                      this.jsPDFDocument.setFontStyle(available[0]);
                    }
                    this.jsPDFDocument.setFont(styles.font, styles.fontStyle);
                  }
                  if (styles.fontSize)
                    this.jsPDFDocument.setFontSize(styles.fontSize);
                  if (fontOnly) {
                    return;
                  }
                  var color = DocHandler2.unifyColor(styles.fillColor);
                  if (color)
                    (_a = this.jsPDFDocument).setFillColor.apply(_a, color);
                  color = DocHandler2.unifyColor(styles.textColor);
                  if (color)
                    (_b = this.jsPDFDocument).setTextColor.apply(_b, color);
                  color = DocHandler2.unifyColor(styles.lineColor);
                  if (color)
                    (_c = this.jsPDFDocument).setDrawColor.apply(_c, color);
                  if (typeof styles.lineWidth === "number") {
                    this.jsPDFDocument.setLineWidth(styles.lineWidth);
                  }
                };
                DocHandler2.prototype.splitTextToSize = function(text, size, opts) {
                  return this.jsPDFDocument.splitTextToSize(text, size, opts);
                };
                DocHandler2.prototype.rect = function(x2, y2, width, height, fillStyle) {
                  return this.jsPDFDocument.rect(x2, y2, width, height, fillStyle);
                };
                DocHandler2.prototype.getLastAutoTable = function() {
                  return this.jsPDFDocument.lastAutoTable || null;
                };
                DocHandler2.prototype.getTextWidth = function(text) {
                  return this.jsPDFDocument.getTextWidth(text);
                };
                DocHandler2.prototype.getDocument = function() {
                  return this.jsPDFDocument;
                };
                DocHandler2.prototype.setPage = function(page) {
                  this.jsPDFDocument.setPage(page);
                };
                DocHandler2.prototype.addPage = function() {
                  return this.jsPDFDocument.addPage();
                };
                DocHandler2.prototype.getFontList = function() {
                  return this.jsPDFDocument.getFontList();
                };
                DocHandler2.prototype.getGlobalOptions = function() {
                  return globalDefaults || {};
                };
                DocHandler2.prototype.getDocumentOptions = function() {
                  return this.jsPDFDocument.__autoTableDocumentDefaults || {};
                };
                DocHandler2.prototype.pageSize = function() {
                  var pageSize = this.jsPDFDocument.internal.pageSize;
                  if (pageSize.width == null) {
                    pageSize = {
                      width: pageSize.getWidth(),
                      height: pageSize.getHeight()
                    };
                  }
                  return pageSize;
                };
                DocHandler2.prototype.scaleFactor = function() {
                  return this.jsPDFDocument.internal.scaleFactor;
                };
                DocHandler2.prototype.pageNumber = function() {
                  var pageInfo = this.jsPDFDocument.internal.getCurrentPageInfo();
                  if (!pageInfo) {
                    return this.jsPDFDocument.internal.getNumberOfPages();
                  }
                  return pageInfo.pageNumber;
                };
                return DocHandler2;
              }()
            );
            exports2.DocHandler = DocHandler;
          },
          /* 3 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.assign = void 0;
            function assign(target, s2, s1, s22, s3) {
              if (target == null) {
                throw new TypeError("Cannot convert undefined or null to object");
              }
              var to = Object(target);
              for (var index2 = 1; index2 < arguments.length; index2++) {
                var nextSource = arguments[index2];
                if (nextSource != null) {
                  for (var nextKey in nextSource) {
                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                      to[nextKey] = nextSource[nextKey];
                    }
                  }
                }
              }
              return to;
            }
            exports2.assign = assign;
          },
          /* 4 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.parseHtml = void 0;
            var cssParser_1 = __webpack_require__(12);
            var config_1 = __webpack_require__(1);
            function parseHtml(doc, input, window2, includeHiddenHtml, useCss) {
              var _a, _b;
              if (includeHiddenHtml === void 0) {
                includeHiddenHtml = false;
              }
              if (useCss === void 0) {
                useCss = false;
              }
              var tableElement;
              if (typeof input === "string") {
                tableElement = window2.document.querySelector(input);
              } else {
                tableElement = input;
              }
              var supportedFonts = Object.keys(doc.getFontList());
              var scaleFactor = doc.scaleFactor();
              var head = [], body = [], foot = [];
              if (!tableElement) {
                console.error("Html table could not be found with input: ", input);
                return { head, body, foot };
              }
              for (var i2 = 0; i2 < tableElement.rows.length; i2++) {
                var element = tableElement.rows[i2];
                var tagName = (_b = (_a = element === null || element === void 0 ? void 0 : element.parentElement) === null || _a === void 0 ? void 0 : _a.tagName) === null || _b === void 0 ? void 0 : _b.toLowerCase();
                var row = parseRowContent(supportedFonts, scaleFactor, window2, element, includeHiddenHtml, useCss);
                if (!row)
                  continue;
                if (tagName === "thead") {
                  head.push(row);
                } else if (tagName === "tfoot") {
                  foot.push(row);
                } else {
                  body.push(row);
                }
              }
              return { head, body, foot };
            }
            exports2.parseHtml = parseHtml;
            function parseRowContent(supportedFonts, scaleFactor, window2, row, includeHidden, useCss) {
              var resultRow = new config_1.HtmlRowInput(row);
              for (var i2 = 0; i2 < row.cells.length; i2++) {
                var cell = row.cells[i2];
                var style_1 = window2.getComputedStyle(cell);
                if (includeHidden || style_1.display !== "none") {
                  var cellStyles = void 0;
                  if (useCss) {
                    cellStyles = cssParser_1.parseCss(supportedFonts, cell, scaleFactor, style_1, window2);
                  }
                  resultRow.push({
                    rowSpan: cell.rowSpan,
                    colSpan: cell.colSpan,
                    styles: cellStyles,
                    _element: cell,
                    content: parseCellContent(cell)
                  });
                }
              }
              var style2 = window2.getComputedStyle(row);
              if (resultRow.length > 0 && (includeHidden || style2.display !== "none")) {
                return resultRow;
              }
            }
            function parseCellContent(orgCell) {
              var cell = orgCell.cloneNode(true);
              cell.innerHTML = cell.innerHTML.replace(/\n/g, "").replace(/ +/g, " ");
              cell.innerHTML = cell.innerHTML.split("<br>").map(function(part) {
                return part.trim();
              }).join("\n");
              return cell.innerText || cell.textContent || "";
            }
          },
          /* 5 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            function default_1(text, x2, y2, styles, doc) {
              styles = styles || {};
              var FONT_ROW_RATIO = 1.15;
              var k2 = doc.internal.scaleFactor;
              var fontSize = doc.internal.getFontSize() / k2;
              var splitRegex = /\r\n|\r|\n/g;
              var splitText = "";
              var lineCount = 1;
              if (styles.valign === "middle" || styles.valign === "bottom" || styles.halign === "center" || styles.halign === "right") {
                splitText = typeof text === "string" ? text.split(splitRegex) : text;
                lineCount = splitText.length || 1;
              }
              y2 += fontSize * (2 - FONT_ROW_RATIO);
              if (styles.valign === "middle")
                y2 -= lineCount / 2 * fontSize * FONT_ROW_RATIO;
              else if (styles.valign === "bottom")
                y2 -= lineCount * fontSize * FONT_ROW_RATIO;
              if (styles.halign === "center" || styles.halign === "right") {
                var alignSize = fontSize;
                if (styles.halign === "center")
                  alignSize *= 0.5;
                if (splitText && lineCount >= 1) {
                  for (var iLine = 0; iLine < splitText.length; iLine++) {
                    doc.text(splitText[iLine], x2 - doc.getStringUnitWidth(splitText[iLine]) * alignSize, y2);
                    y2 += fontSize * FONT_ROW_RATIO;
                  }
                  return doc;
                }
                x2 -= doc.getStringUnitWidth(text) * alignSize;
              }
              if (styles.halign === "justify") {
                doc.text(text, x2, y2, {
                  maxWidth: styles.maxWidth || 100,
                  align: "justify"
                });
              } else {
                doc.text(text, x2, y2);
              }
              return doc;
            }
            exports2.default = default_1;
          },
          /* 6 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.parseInput = void 0;
            var htmlParser_1 = __webpack_require__(4);
            var polyfills_1 = __webpack_require__(3);
            var common_1 = __webpack_require__(0);
            var documentHandler_1 = __webpack_require__(2);
            var inputValidator_1 = __webpack_require__(13);
            function parseInput(d2, current) {
              var doc = new documentHandler_1.DocHandler(d2);
              var document2 = doc.getDocumentOptions();
              var global2 = doc.getGlobalOptions();
              inputValidator_1.default(doc, global2, document2, current);
              var options = polyfills_1.assign({}, global2, document2, current);
              var win;
              if (typeof window !== "undefined") {
                win = window;
              }
              var styles = parseStyles(global2, document2, current);
              var hooks = parseHooks(global2, document2, current);
              var settings = parseSettings(doc, options);
              var content = parseContent(doc, options, win);
              return {
                id: current.tableId,
                content,
                hooks,
                styles,
                settings
              };
            }
            exports2.parseInput = parseInput;
            function parseStyles(gInput, dInput, cInput) {
              var styleOptions = {
                styles: {},
                headStyles: {},
                bodyStyles: {},
                footStyles: {},
                alternateRowStyles: {},
                columnStyles: {}
              };
              var _loop_1 = function(prop2) {
                if (prop2 === "columnStyles") {
                  var global_1 = gInput[prop2];
                  var document_1 = dInput[prop2];
                  var current = cInput[prop2];
                  styleOptions.columnStyles = polyfills_1.assign({}, global_1, document_1, current);
                } else {
                  var allOptions = [gInput, dInput, cInput];
                  var styles = allOptions.map(function(opts) {
                    return opts[prop2] || {};
                  });
                  styleOptions[prop2] = polyfills_1.assign({}, styles[0], styles[1], styles[2]);
                }
              };
              for (var _i = 0, _a = Object.keys(styleOptions); _i < _a.length; _i++) {
                var prop = _a[_i];
                _loop_1(prop);
              }
              return styleOptions;
            }
            function parseHooks(global2, document2, current) {
              var allOptions = [global2, document2, current];
              var result = {
                didParseCell: [],
                willDrawCell: [],
                didDrawCell: [],
                didDrawPage: []
              };
              for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {
                var options = allOptions_1[_i];
                if (options.didParseCell)
                  result.didParseCell.push(options.didParseCell);
                if (options.willDrawCell)
                  result.willDrawCell.push(options.willDrawCell);
                if (options.didDrawCell)
                  result.didDrawCell.push(options.didDrawCell);
                if (options.didDrawPage)
                  result.didDrawPage.push(options.didDrawPage);
              }
              return result;
            }
            function parseSettings(doc, options) {
              var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
              var margin = common_1.parseSpacing(options.margin, 40 / doc.scaleFactor());
              var startY = (_a = getStartY(doc, options.startY)) !== null && _a !== void 0 ? _a : margin.top;
              var showFoot;
              if (options.showFoot === true) {
                showFoot = "everyPage";
              } else if (options.showFoot === false) {
                showFoot = "never";
              } else {
                showFoot = (_b = options.showFoot) !== null && _b !== void 0 ? _b : "everyPage";
              }
              var showHead;
              if (options.showHead === true) {
                showHead = "everyPage";
              } else if (options.showHead === false) {
                showHead = "never";
              } else {
                showHead = (_c = options.showHead) !== null && _c !== void 0 ? _c : "everyPage";
              }
              var useCss = (_d = options.useCss) !== null && _d !== void 0 ? _d : false;
              var theme = options.theme || (useCss ? "plain" : "striped");
              return {
                includeHiddenHtml: (_e = options.includeHiddenHtml) !== null && _e !== void 0 ? _e : false,
                useCss,
                theme,
                startY,
                margin,
                pageBreak: (_f = options.pageBreak) !== null && _f !== void 0 ? _f : "auto",
                rowPageBreak: (_g = options.rowPageBreak) !== null && _g !== void 0 ? _g : "auto",
                tableWidth: (_h = options.tableWidth) !== null && _h !== void 0 ? _h : "auto",
                showHead,
                showFoot,
                tableLineWidth: (_j = options.tableLineWidth) !== null && _j !== void 0 ? _j : 0,
                tableLineColor: (_k = options.tableLineColor) !== null && _k !== void 0 ? _k : 200
              };
            }
            function getStartY(doc, userStartY) {
              var previous = doc.getLastAutoTable();
              var sf = doc.scaleFactor();
              var currentPage = doc.pageNumber();
              var isSamePageAsPreviousTable = false;
              if (previous && previous.startPageNumber) {
                var endingPage = previous.startPageNumber + previous.pageNumber - 1;
                isSamePageAsPreviousTable = endingPage === currentPage;
              }
              if (typeof userStartY === "number") {
                return userStartY;
              } else if (userStartY == null || userStartY === false) {
                if (isSamePageAsPreviousTable && (previous === null || previous === void 0 ? void 0 : previous.finalY) != null) {
                  return previous.finalY + 20 / sf;
                }
              }
              return null;
            }
            function parseContent(doc, options, window2) {
              var head = options.head || [];
              var body = options.body || [];
              var foot = options.foot || [];
              if (options.html) {
                var hidden = options.includeHiddenHtml;
                if (window2) {
                  var htmlContent = htmlParser_1.parseHtml(doc, options.html, window2, hidden, options.useCss) || {};
                  head = htmlContent.head || head;
                  body = htmlContent.body || head;
                  foot = htmlContent.foot || head;
                } else {
                  console.error("Cannot parse html in non browser environment");
                }
              }
              var columns = options.columns || parseColumns(head, body, foot);
              return {
                columns,
                head,
                body,
                foot
              };
            }
            function parseColumns(head, body, foot) {
              var firstRow = head[0] || body[0] || foot[0] || [];
              var result = [];
              Object.keys(firstRow).filter(function(key) {
                return key !== "_element";
              }).forEach(function(key) {
                var colSpan = 1;
                var input;
                if (Array.isArray(firstRow)) {
                  input = firstRow[parseInt(key)];
                } else {
                  input = firstRow[key];
                }
                if (typeof input === "object" && !Array.isArray(input)) {
                  colSpan = (input === null || input === void 0 ? void 0 : input.colSpan) || 1;
                }
                for (var i2 = 0; i2 < colSpan; i2++) {
                  var id = void 0;
                  if (Array.isArray(firstRow)) {
                    id = result.length;
                  } else {
                    id = key + (i2 > 0 ? "_" + i2 : "");
                  }
                  var rowResult = { dataKey: id };
                  result.push(rowResult);
                }
              });
              return result;
            }
          },
          /* 7 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.addPage = exports2.drawTable = void 0;
            var config_1 = __webpack_require__(1);
            var common_1 = __webpack_require__(0);
            var models_1 = __webpack_require__(8);
            var documentHandler_1 = __webpack_require__(2);
            var polyfills_1 = __webpack_require__(3);
            var autoTableText_1 = __webpack_require__(5);
            function drawTable(jsPDFDoc, table) {
              var settings = table.settings;
              var startY = settings.startY;
              var margin = settings.margin;
              var cursor = {
                x: margin.left,
                y: startY
              };
              var sectionsHeight = table.getHeadHeight(table.columns) + table.getFootHeight(table.columns);
              var minTableBottomPos = startY + margin.bottom + sectionsHeight;
              if (settings.pageBreak === "avoid") {
                var rows = table.allRows();
                var tableHeight = rows.reduce(function(acc, row) {
                  return acc + row.height;
                }, 0);
                minTableBottomPos += tableHeight;
              }
              var doc = new documentHandler_1.DocHandler(jsPDFDoc);
              if (settings.pageBreak === "always" || settings.startY != null && minTableBottomPos > doc.pageSize().height) {
                nextPage(doc);
                cursor.y = margin.top;
              }
              var startPos = polyfills_1.assign({}, cursor);
              table.startPageNumber = doc.pageNumber();
              doc.applyStyles(doc.userStyles);
              if (settings.showHead === "firstPage" || settings.showHead === "everyPage") {
                table.head.forEach(function(row) {
                  return printRow(doc, table, row, cursor);
                });
              }
              doc.applyStyles(doc.userStyles);
              table.body.forEach(function(row, index2) {
                var isLastRow = index2 === table.body.length - 1;
                printFullRow(doc, table, row, isLastRow, startPos, cursor);
              });
              doc.applyStyles(doc.userStyles);
              if (settings.showFoot === "lastPage" || settings.showFoot === "everyPage") {
                table.foot.forEach(function(row) {
                  return printRow(doc, table, row, cursor);
                });
              }
              common_1.addTableBorder(doc, table, startPos, cursor);
              table.callEndPageHooks(doc, cursor);
              table.finalY = cursor.y;
              jsPDFDoc.lastAutoTable = table;
              jsPDFDoc.previousAutoTable = table;
              if (jsPDFDoc.autoTable)
                jsPDFDoc.autoTable.previous = table;
              doc.applyStyles(doc.userStyles);
            }
            exports2.drawTable = drawTable;
            function getRemainingLineCount(cell, remainingPageSpace, doc) {
              var fontHeight = cell.styles.fontSize / doc.scaleFactor() * config_1.FONT_ROW_RATIO;
              var vPadding = cell.padding("vertical");
              var remainingLines = Math.floor((remainingPageSpace - vPadding) / fontHeight);
              return Math.max(0, remainingLines);
            }
            function modifyRowToFit(row, remainingPageSpace, table, doc) {
              var cells = {};
              row.spansMultiplePages = true;
              var rowHeight = 0;
              for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {
                var column = _a[_i];
                var cell = row.cells[column.index];
                if (!cell)
                  continue;
                if (!Array.isArray(cell.text)) {
                  cell.text = [cell.text];
                }
                var remainderCell = new models_1.Cell(cell.raw, cell.styles, cell.section);
                remainderCell = polyfills_1.assign(remainderCell, cell);
                remainderCell.text = [];
                var remainingLineCount = getRemainingLineCount(cell, remainingPageSpace, doc);
                if (cell.text.length > remainingLineCount) {
                  remainderCell.text = cell.text.splice(remainingLineCount, cell.text.length);
                }
                var scaleFactor = doc.scaleFactor();
                cell.contentHeight = cell.getContentHeight(scaleFactor);
                if (cell.contentHeight >= remainingPageSpace) {
                  cell.contentHeight = remainingPageSpace;
                  remainderCell.styles.minCellHeight -= remainingPageSpace;
                }
                if (cell.contentHeight > row.height) {
                  row.height = cell.contentHeight;
                }
                remainderCell.contentHeight = remainderCell.getContentHeight(scaleFactor);
                if (remainderCell.contentHeight > rowHeight) {
                  rowHeight = remainderCell.contentHeight;
                }
                cells[column.index] = remainderCell;
              }
              var remainderRow = new models_1.Row(row.raw, -1, row.section, cells, true);
              remainderRow.height = rowHeight;
              for (var _b = 0, _c = table.columns; _b < _c.length; _b++) {
                var column = _c[_b];
                var remainderCell = remainderRow.cells[column.index];
                if (remainderCell) {
                  remainderCell.height = remainderRow.height;
                }
                var cell = row.cells[column.index];
                if (cell) {
                  cell.height = row.height;
                }
              }
              return remainderRow;
            }
            function shouldPrintOnCurrentPage(doc, row, remainingPageSpace, table) {
              var pageHeight = doc.pageSize().height;
              var margin = table.settings.margin;
              var marginHeight = margin.top + margin.bottom;
              var maxRowHeight = pageHeight - marginHeight;
              if (row.section === "body") {
                maxRowHeight -= table.getHeadHeight(table.columns) + table.getFootHeight(table.columns);
              }
              var minRowHeight = row.getMinimumRowHeight(table.columns, doc);
              var minRowFits = minRowHeight < remainingPageSpace;
              if (minRowHeight > maxRowHeight) {
                console.error("Will not be able to print row " + row.index + " correctly since it's minimum height is larger than page height");
                return true;
              }
              if (!minRowFits) {
                return false;
              }
              var rowHasRowSpanCell = row.hasRowSpan(table.columns);
              var rowHigherThanPage = row.getMaxCellHeight(table.columns) > maxRowHeight;
              if (rowHigherThanPage) {
                if (rowHasRowSpanCell) {
                  console.error("The content of row " + row.index + " will not be drawn correctly since drawing rows with a height larger than the page height and has cells with rowspans is not supported.");
                }
                return true;
              }
              if (rowHasRowSpanCell) {
                return false;
              }
              if (table.settings.rowPageBreak === "avoid") {
                return false;
              }
              return true;
            }
            function printFullRow(doc, table, row, isLastRow, startPos, cursor) {
              var remainingSpace = getRemainingPageSpace(doc, table, isLastRow, cursor);
              if (row.canEntireRowFit(remainingSpace, table.columns)) {
                printRow(doc, table, row, cursor);
              } else {
                if (shouldPrintOnCurrentPage(doc, row, remainingSpace, table)) {
                  var remainderRow = modifyRowToFit(row, remainingSpace, table, doc);
                  printRow(doc, table, row, cursor);
                  addPage(doc, table, startPos, cursor);
                  printFullRow(doc, table, remainderRow, isLastRow, startPos, cursor);
                } else {
                  addPage(doc, table, startPos, cursor);
                  printFullRow(doc, table, row, isLastRow, startPos, cursor);
                }
              }
            }
            function printRow(doc, table, row, cursor) {
              cursor.x = table.settings.margin.left;
              for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {
                var column = _a[_i];
                var cell = row.cells[column.index];
                if (!cell) {
                  cursor.x += column.width;
                  continue;
                }
                doc.applyStyles(cell.styles);
                cell.x = cursor.x;
                cell.y = cursor.y;
                var result = table.callCellHooks(doc, table.hooks.willDrawCell, cell, row, column, cursor);
                if (result === false) {
                  cursor.x += column.width;
                  continue;
                }
                var cellStyles = cell.styles;
                var fillStyle = common_1.getFillStyle(cellStyles.lineWidth, cellStyles.fillColor);
                if (fillStyle) {
                  doc.rect(cell.x, cursor.y, cell.width, cell.height, fillStyle);
                }
                var textPos = cell.getTextPos();
                autoTableText_1.default(cell.text, textPos.x, textPos.y, {
                  halign: cell.styles.halign,
                  valign: cell.styles.valign,
                  maxWidth: Math.ceil(cell.width - cell.padding("left") - cell.padding("right"))
                }, doc.getDocument());
                table.callCellHooks(doc, table.hooks.didDrawCell, cell, row, column, cursor);
                cursor.x += column.width;
              }
              cursor.y += row.height;
            }
            function getRemainingPageSpace(doc, table, isLastRow, cursor) {
              var bottomContentHeight = table.settings.margin.bottom;
              var showFoot = table.settings.showFoot;
              if (showFoot === "everyPage" || showFoot === "lastPage" && isLastRow) {
                bottomContentHeight += table.getFootHeight(table.columns);
              }
              return doc.pageSize().height - cursor.y - bottomContentHeight;
            }
            function addPage(doc, table, startPos, cursor) {
              doc.applyStyles(doc.userStyles);
              if (table.settings.showFoot === "everyPage") {
                table.foot.forEach(function(row) {
                  return printRow(doc, table, row, cursor);
                });
              }
              table.callEndPageHooks(doc, cursor);
              var margin = table.settings.margin;
              common_1.addTableBorder(doc, table, startPos, cursor);
              nextPage(doc);
              table.pageNumber++;
              table.pageCount++;
              cursor.x = margin.left;
              cursor.y = margin.top;
              if (table.settings.showHead === "everyPage") {
                table.head.forEach(function(row) {
                  return printRow(doc, table, row, cursor);
                });
              }
            }
            exports2.addPage = addPage;
            function nextPage(doc) {
              var current = doc.pageNumber();
              doc.setPage(current + 1);
              var newCurrent = doc.pageNumber();
              if (newCurrent === current) {
                doc.addPage();
              }
            }
          },
          /* 8 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.Column = exports2.Cell = exports2.Row = exports2.Table = void 0;
            var config_1 = __webpack_require__(1);
            var HookData_1 = __webpack_require__(14);
            var common_1 = __webpack_require__(0);
            var Table = (
              /** @class */
              function() {
                function Table2(input, content) {
                  this.pageNumber = 1;
                  this.pageCount = 1;
                  this.id = input.id;
                  this.settings = input.settings;
                  this.styles = input.styles;
                  this.hooks = input.hooks;
                  this.columns = content.columns;
                  this.head = content.head;
                  this.body = content.body;
                  this.foot = content.foot;
                }
                Table2.prototype.getHeadHeight = function(columns) {
                  return this.head.reduce(function(acc, row) {
                    return acc + row.getMaxCellHeight(columns);
                  }, 0);
                };
                Table2.prototype.getFootHeight = function(columns) {
                  return this.foot.reduce(function(acc, row) {
                    return acc + row.getMaxCellHeight(columns);
                  }, 0);
                };
                Table2.prototype.allRows = function() {
                  return this.head.concat(this.body).concat(this.foot);
                };
                Table2.prototype.callCellHooks = function(doc, handlers, cell, row, column, cursor) {
                  for (var _i = 0, handlers_1 = handlers; _i < handlers_1.length; _i++) {
                    var handler = handlers_1[_i];
                    var data = new HookData_1.CellHookData(doc, this, cell, row, column, cursor);
                    var result = handler(data) === false;
                    cell.text = Array.isArray(cell.text) ? cell.text : [cell.text];
                    if (result) {
                      return false;
                    }
                  }
                  return true;
                };
                Table2.prototype.callEndPageHooks = function(doc, cursor) {
                  doc.applyStyles(doc.userStyles);
                  for (var _i = 0, _a = this.hooks.didDrawPage; _i < _a.length; _i++) {
                    var handler = _a[_i];
                    handler(new HookData_1.HookData(doc, this, cursor));
                  }
                };
                Table2.prototype.getWidth = function(pageWidth) {
                  if (typeof this.settings.tableWidth === "number") {
                    return this.settings.tableWidth;
                  } else if (this.settings.tableWidth === "wrap") {
                    var wrappedWidth = this.columns.reduce(function(total, col) {
                      return total + col.wrappedWidth;
                    }, 0);
                    return wrappedWidth;
                  } else {
                    var margin = this.settings.margin;
                    return pageWidth - margin.left - margin.right;
                  }
                };
                return Table2;
              }()
            );
            exports2.Table = Table;
            var Row = (
              /** @class */
              function() {
                function Row2(raw, index2, section, cells, spansMultiplePages) {
                  if (spansMultiplePages === void 0) {
                    spansMultiplePages = false;
                  }
                  this.height = 0;
                  this.raw = raw;
                  if (raw instanceof config_1.HtmlRowInput) {
                    this.raw = raw._element;
                    this.element = raw._element;
                  }
                  this.index = index2;
                  this.section = section;
                  this.cells = cells;
                  this.spansMultiplePages = spansMultiplePages;
                }
                Row2.prototype.getMaxCellHeight = function(columns) {
                  var _this = this;
                  return columns.reduce(function(acc, column) {
                    var _a;
                    return Math.max(acc, ((_a = _this.cells[column.index]) === null || _a === void 0 ? void 0 : _a.height) || 0);
                  }, 0);
                };
                Row2.prototype.hasRowSpan = function(columns) {
                  var _this = this;
                  return columns.filter(function(column) {
                    var cell = _this.cells[column.index];
                    if (!cell)
                      return false;
                    return cell.rowSpan > 1;
                  }).length > 0;
                };
                Row2.prototype.canEntireRowFit = function(height, columns) {
                  return this.getMaxCellHeight(columns) <= height;
                };
                Row2.prototype.getMinimumRowHeight = function(columns, doc) {
                  var _this = this;
                  return columns.reduce(function(acc, column) {
                    var cell = _this.cells[column.index];
                    if (!cell)
                      return 0;
                    var fontHeight = cell.styles.fontSize / doc.scaleFactor() * config_1.FONT_ROW_RATIO;
                    var vPadding = cell.padding("vertical");
                    var oneRowHeight = vPadding + fontHeight;
                    return oneRowHeight > acc ? oneRowHeight : acc;
                  }, 0);
                };
                return Row2;
              }()
            );
            exports2.Row = Row;
            var Cell = (
              /** @class */
              function() {
                function Cell2(raw, styles, section) {
                  var _a, _b;
                  this.contentHeight = 0;
                  this.contentWidth = 0;
                  this.wrappedWidth = 0;
                  this.minReadableWidth = 0;
                  this.minWidth = 0;
                  this.width = 0;
                  this.height = 0;
                  this.x = 0;
                  this.y = 0;
                  this.styles = styles;
                  this.section = section;
                  this.raw = raw;
                  var content = raw;
                  if (raw != null && typeof raw === "object" && !Array.isArray(raw)) {
                    this.rowSpan = raw.rowSpan || 1;
                    this.colSpan = raw.colSpan || 1;
                    content = (_b = (_a = raw.content) !== null && _a !== void 0 ? _a : raw.title) !== null && _b !== void 0 ? _b : raw;
                    if (raw._element) {
                      this.raw = raw._element;
                    }
                  } else {
                    this.rowSpan = 1;
                    this.colSpan = 1;
                  }
                  var text = content != null ? "" + content : "";
                  var splitRegex = /\r\n|\r|\n/g;
                  this.text = text.split(splitRegex);
                }
                Cell2.prototype.getTextPos = function() {
                  var y2;
                  if (this.styles.valign === "top") {
                    y2 = this.y + this.padding("top");
                  } else if (this.styles.valign === "bottom") {
                    y2 = this.y + this.height - this.padding("bottom");
                  } else {
                    var netHeight = this.height - this.padding("vertical");
                    y2 = this.y + netHeight / 2 + this.padding("top");
                  }
                  var x2;
                  if (this.styles.halign === "right") {
                    x2 = this.x + this.width - this.padding("right");
                  } else if (this.styles.halign === "center") {
                    var netWidth = this.width - this.padding("horizontal");
                    x2 = this.x + netWidth / 2 + this.padding("left");
                  } else {
                    x2 = this.x + this.padding("left");
                  }
                  return { x: x2, y: y2 };
                };
                Cell2.prototype.getContentHeight = function(scaleFactor) {
                  var lineCount = Array.isArray(this.text) ? this.text.length : 1;
                  var fontHeight = this.styles.fontSize / scaleFactor * config_1.FONT_ROW_RATIO;
                  var height = lineCount * fontHeight + this.padding("vertical");
                  return Math.max(height, this.styles.minCellHeight);
                };
                Cell2.prototype.padding = function(name) {
                  var padding = common_1.parseSpacing(this.styles.cellPadding, 0);
                  if (name === "vertical") {
                    return padding.top + padding.bottom;
                  } else if (name === "horizontal") {
                    return padding.left + padding.right;
                  } else {
                    return padding[name];
                  }
                };
                return Cell2;
              }()
            );
            exports2.Cell = Cell;
            var Column = (
              /** @class */
              function() {
                function Column2(dataKey, raw, index2) {
                  this.wrappedWidth = 0;
                  this.minReadableWidth = 0;
                  this.minWidth = 0;
                  this.width = 0;
                  this.dataKey = dataKey;
                  this.raw = raw;
                  this.index = index2;
                }
                Column2.prototype.getMaxCustomCellWidth = function(table) {
                  var max = 0;
                  for (var _i = 0, _a = table.allRows(); _i < _a.length; _i++) {
                    var row = _a[_i];
                    var cell = row.cells[this.index];
                    if (cell && typeof cell.styles.cellWidth === "number") {
                      max = Math.max(max, cell.styles.cellWidth);
                    }
                  }
                  return max;
                };
                return Column2;
              }()
            );
            exports2.Column = Column;
          },
          /* 9 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.createTable = void 0;
            var documentHandler_1 = __webpack_require__(2);
            var models_1 = __webpack_require__(8);
            var widthCalculator_1 = __webpack_require__(15);
            var config_1 = __webpack_require__(1);
            var polyfills_1 = __webpack_require__(3);
            function createTable(jsPDFDoc, input) {
              var doc = new documentHandler_1.DocHandler(jsPDFDoc);
              var content = parseContent(input, doc.scaleFactor());
              var table = new models_1.Table(input, content);
              widthCalculator_1.calculateWidths(doc, table);
              doc.applyStyles(doc.userStyles);
              return table;
            }
            exports2.createTable = createTable;
            function parseContent(input, sf) {
              var content = input.content;
              var columns = createColumns(content.columns);
              if (content.head.length === 0) {
                var sectionRow = generateSectionRow(columns, "head");
                if (sectionRow)
                  content.head.push(sectionRow);
              }
              if (content.foot.length === 0) {
                var sectionRow = generateSectionRow(columns, "foot");
                if (sectionRow)
                  content.foot.push(sectionRow);
              }
              var theme = input.settings.theme;
              var styles = input.styles;
              return {
                columns,
                head: parseSection("head", content.head, columns, styles, theme, sf),
                body: parseSection("body", content.body, columns, styles, theme, sf),
                foot: parseSection("foot", content.foot, columns, styles, theme, sf)
              };
            }
            function parseSection(sectionName, sectionRows, columns, styleProps, theme, scaleFactor) {
              var rowSpansLeftForColumn = {};
              var result = sectionRows.map(function(rawRow, rowIndex) {
                var skippedRowForRowSpans = 0;
                var cells = {};
                var colSpansAdded = 0;
                var columnSpansLeft = 0;
                for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {
                  var column = columns_1[_i];
                  if (rowSpansLeftForColumn[column.index] == null || rowSpansLeftForColumn[column.index].left === 0) {
                    if (columnSpansLeft === 0) {
                      var rawCell = void 0;
                      if (Array.isArray(rawRow)) {
                        rawCell = rawRow[column.index - colSpansAdded - skippedRowForRowSpans];
                      } else {
                        rawCell = rawRow[column.dataKey];
                      }
                      var cellInputStyles = {};
                      if (typeof rawCell === "object" && !Array.isArray(rawCell)) {
                        cellInputStyles = (rawCell === null || rawCell === void 0 ? void 0 : rawCell.styles) || {};
                      }
                      var styles = cellStyles(sectionName, column, rowIndex, theme, styleProps, scaleFactor, cellInputStyles);
                      var cell = new models_1.Cell(rawCell, styles, sectionName);
                      cells[column.dataKey] = cell;
                      cells[column.index] = cell;
                      columnSpansLeft = cell.colSpan - 1;
                      rowSpansLeftForColumn[column.index] = {
                        left: cell.rowSpan - 1,
                        times: columnSpansLeft
                      };
                    } else {
                      columnSpansLeft--;
                      colSpansAdded++;
                    }
                  } else {
                    rowSpansLeftForColumn[column.index].left--;
                    columnSpansLeft = rowSpansLeftForColumn[column.index].times;
                    skippedRowForRowSpans++;
                  }
                }
                return new models_1.Row(rawRow, rowIndex, sectionName, cells);
              });
              return result;
            }
            function generateSectionRow(columns, section) {
              var sectionRow = {};
              columns.forEach(function(col) {
                if (col.raw != null) {
                  var title = getSectionTitle(section, col.raw);
                  if (title != null)
                    sectionRow[col.dataKey] = title;
                }
              });
              return Object.keys(sectionRow).length > 0 ? sectionRow : null;
            }
            function getSectionTitle(section, column) {
              if (section === "head") {
                if (typeof column === "object") {
                  return column.header || column.title || null;
                } else if (typeof column === "string" || typeof column === "number") {
                  return column;
                }
              } else if (section === "foot" && typeof column === "object") {
                return column.footer;
              }
              return null;
            }
            function createColumns(columns) {
              return columns.map(function(input, index2) {
                var _a, _b;
                var key;
                if (typeof input === "object") {
                  key = (_b = (_a = input.dataKey) !== null && _a !== void 0 ? _a : input.key) !== null && _b !== void 0 ? _b : index2;
                } else {
                  key = index2;
                }
                return new models_1.Column(key, input, index2);
              });
            }
            function cellStyles(sectionName, column, rowIndex, themeName, styles, scaleFactor, cellInputStyles) {
              var theme = config_1.getTheme(themeName);
              var sectionStyles;
              if (sectionName === "head") {
                sectionStyles = styles.headStyles;
              } else if (sectionName === "body") {
                sectionStyles = styles.bodyStyles;
              } else if (sectionName === "foot") {
                sectionStyles = styles.footStyles;
              }
              var otherStyles = polyfills_1.assign({}, theme.table, theme[sectionName], styles.styles, sectionStyles);
              var columnStyles = styles.columnStyles[column.dataKey] || styles.columnStyles[column.index] || {};
              var colStyles = sectionName === "body" ? columnStyles : {};
              var rowStyles = sectionName === "body" && rowIndex % 2 === 0 ? polyfills_1.assign({}, theme.alternateRow, styles.alternateRowStyles) : {};
              var defaultStyle = config_1.defaultStyles(scaleFactor);
              var themeStyles = polyfills_1.assign({}, defaultStyle, otherStyles, rowStyles, colStyles);
              return polyfills_1.assign(themeStyles, cellInputStyles);
            }
          },
          /* 10 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.__drawTable = exports2.__createTable = exports2.applyPlugin = void 0;
            var applyPlugin_1 = __webpack_require__(11);
            var inputParser_1 = __webpack_require__(6);
            var tableDrawer_1 = __webpack_require__(7);
            var tableCalculator_1 = __webpack_require__(9);
            function applyPlugin(jsPDF2) {
              applyPlugin_1.default(jsPDF2);
            }
            exports2.applyPlugin = applyPlugin;
            function autoTable(d2, options) {
              var input = inputParser_1.parseInput(d2, options);
              var table = tableCalculator_1.createTable(d2, input);
              tableDrawer_1.drawTable(d2, table);
            }
            exports2.default = autoTable;
            function __createTable(d2, options) {
              var input = inputParser_1.parseInput(d2, options);
              return tableCalculator_1.createTable(d2, input);
            }
            exports2.__createTable = __createTable;
            function __drawTable(d2, table) {
              tableDrawer_1.drawTable(d2, table);
            }
            exports2.__drawTable = __drawTable;
            try {
              var jsPDF = __webpack_require__(16);
              if (jsPDF.jsPDF)
                jsPDF = jsPDF.jsPDF;
              applyPlugin(jsPDF);
            } catch (error2) {
            }
          },
          /* 11 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            var htmlParser_1 = __webpack_require__(4);
            var autoTableText_1 = __webpack_require__(5);
            var documentHandler_1 = __webpack_require__(2);
            var inputParser_1 = __webpack_require__(6);
            var tableDrawer_1 = __webpack_require__(7);
            var tableCalculator_1 = __webpack_require__(9);
            function default_1(jsPDF) {
              jsPDF.API.autoTable = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                  args[_i] = arguments[_i];
                }
                var options;
                if (args.length === 1) {
                  options = args[0];
                } else {
                  console.error("Use of deprecated autoTable initiation");
                  options = args[2] || {};
                  options.columns = args[0];
                  options.body = args[1];
                }
                var input = inputParser_1.parseInput(this, options);
                var table = tableCalculator_1.createTable(this, input);
                tableDrawer_1.drawTable(this, table);
                return this;
              };
              jsPDF.API.lastAutoTable = false;
              jsPDF.API.previousAutoTable = false;
              jsPDF.API.autoTable.previous = false;
              jsPDF.API.autoTableText = function(text, x2, y2, styles) {
                autoTableText_1.default(text, x2, y2, styles, this);
              };
              jsPDF.API.autoTableSetDefaults = function(defaults2) {
                documentHandler_1.DocHandler.setDefaults(defaults2, this);
                return this;
              };
              jsPDF.autoTableSetDefaults = function(defaults2, doc) {
                documentHandler_1.DocHandler.setDefaults(defaults2, doc);
              };
              jsPDF.API.autoTableHtmlToJson = function(tableElem, includeHiddenElements) {
                if (includeHiddenElements === void 0) {
                  includeHiddenElements = false;
                }
                if (typeof window === "undefined") {
                  console.error("Cannot run autoTableHtmlToJson in non browser environment");
                  return null;
                }
                var doc = new documentHandler_1.DocHandler(this);
                var _a = htmlParser_1.parseHtml(doc, tableElem, window, includeHiddenElements, false), head = _a.head, body = _a.body;
                var columns = head[0].map(function(c2) {
                  return c2.content;
                });
                return { columns, rows: body, data: body };
              };
              jsPDF.API.autoTableEndPosY = function() {
                console.error("Use of deprecated function: autoTableEndPosY. Use doc.lastAutoTable.finalY instead.");
                var prev = this.lastAutoTable;
                if (prev && prev.finalY) {
                  return prev.finalY;
                } else {
                  return 0;
                }
              };
              jsPDF.API.autoTableAddPageContent = function(hook) {
                console.error("Use of deprecated function: autoTableAddPageContent. Use jsPDF.autoTableSetDefaults({didDrawPage: () => {}}) instead.");
                if (!jsPDF.API.autoTable.globalDefaults) {
                  jsPDF.API.autoTable.globalDefaults = {};
                }
                jsPDF.API.autoTable.globalDefaults.addPageContent = hook;
                return this;
              };
              jsPDF.API.autoTableAddPage = function() {
                console.error("Use of deprecated function: autoTableAddPage. Use doc.addPage()");
                this.addPage();
                return this;
              };
            }
            exports2.default = default_1;
          },
          /* 12 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.parseCss = void 0;
            var common_1 = __webpack_require__(0);
            function parseCss(supportedFonts, element, scaleFactor, style2, window2) {
              var result = {};
              var pxScaleFactor = 96 / 72;
              var color = parseColor(element, function(elem) {
                return window2.getComputedStyle(elem)["backgroundColor"];
              });
              if (color != null)
                result.fillColor = color;
              color = parseColor(element, function(elem) {
                return window2.getComputedStyle(elem)["color"];
              });
              if (color != null)
                result.textColor = color;
              color = parseColor(element, function(elem) {
                return window2.getComputedStyle(elem)["borderTopColor"];
              });
              if (color != null)
                result.lineColor = color;
              var padding = parsePadding(style2, scaleFactor);
              if (padding)
                result.cellPadding = padding;
              var bw = parseInt(style2.borderTopWidth || "");
              bw = bw / pxScaleFactor / scaleFactor;
              if (bw)
                result.lineWidth = bw;
              var accepted = ["left", "right", "center", "justify"];
              if (accepted.indexOf(style2.textAlign) !== -1) {
                result.halign = style2.textAlign;
              }
              accepted = ["middle", "bottom", "top"];
              if (accepted.indexOf(style2.verticalAlign) !== -1) {
                result.valign = style2.verticalAlign;
              }
              var res = parseInt(style2.fontSize || "");
              if (!isNaN(res))
                result.fontSize = res / pxScaleFactor;
              var fontStyle = parseFontStyle(style2);
              if (fontStyle)
                result.fontStyle = fontStyle;
              var font = (style2.fontFamily || "").toLowerCase();
              if (supportedFonts.indexOf(font) !== -1) {
                result.font = font;
              }
              return result;
            }
            exports2.parseCss = parseCss;
            function parseFontStyle(style2) {
              var res = "";
              if (style2.fontWeight === "bold" || style2.fontWeight === "bolder" || parseInt(style2.fontWeight) >= 700) {
                res = "bold";
              }
              if (style2.fontStyle === "italic" || style2.fontStyle === "oblique") {
                res += "italic";
              }
              return res;
            }
            function parseColor(element, styleGetter) {
              var cssColor = realColor(element, styleGetter);
              if (!cssColor)
                return null;
              var rgba = cssColor.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d*\.?\d*))?\)$/);
              if (!rgba || !Array.isArray(rgba)) {
                return null;
              }
              var color = [
                parseInt(rgba[1]),
                parseInt(rgba[2]),
                parseInt(rgba[3])
              ];
              var alpha = parseInt(rgba[4]);
              if (alpha === 0 || isNaN(color[0]) || isNaN(color[1]) || isNaN(color[2])) {
                return null;
              }
              return color;
            }
            function realColor(elem, styleGetter) {
              var bg = styleGetter(elem);
              if (bg === "rgba(0, 0, 0, 0)" || bg === "transparent" || bg === "initial" || bg === "inherit") {
                if (elem.parentElement == null) {
                  return null;
                }
                return realColor(elem.parentElement, styleGetter);
              } else {
                return bg;
              }
            }
            function parsePadding(style2, scaleFactor) {
              var val = [
                style2.paddingTop,
                style2.paddingRight,
                style2.paddingBottom,
                style2.paddingLeft
              ];
              var pxScaleFactor = 96 / (72 / scaleFactor);
              var linePadding = (parseInt(style2.lineHeight) - parseInt(style2.fontSize)) / scaleFactor / 2;
              var inputPadding = val.map(function(n2) {
                return parseInt(n2) / pxScaleFactor;
              });
              var padding = common_1.parseSpacing(inputPadding, 0);
              if (linePadding > padding.top) {
                padding.top = linePadding;
              }
              if (linePadding > padding.bottom) {
                padding.bottom = linePadding;
              }
              return padding;
            }
          },
          /* 13 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            function default_1(doc, global2, document2, current) {
              var _loop_1 = function(options2) {
                if (options2 && typeof options2 !== "object") {
                  console.error("The options parameter should be of type object, is: " + typeof options2);
                }
                if (typeof options2.extendWidth !== "undefined") {
                  options2.tableWidth = options2.extendWidth ? "auto" : "wrap";
                  console.error("Use of deprecated option: extendWidth, use tableWidth instead.");
                }
                if (typeof options2.margins !== "undefined") {
                  if (typeof options2.margin === "undefined")
                    options2.margin = options2.margins;
                  console.error("Use of deprecated option: margins, use margin instead.");
                }
                if (options2.startY && typeof options2.startY !== "number") {
                  console.error("Invalid value for startY option", options2.startY);
                  delete options2.startY;
                }
                if (!options2.didDrawPage && (options2.afterPageContent || options2.beforePageContent || options2.afterPageAdd)) {
                  console.error("The afterPageContent, beforePageContent and afterPageAdd hooks are deprecated. Use didDrawPage instead");
                  options2.didDrawPage = function(data) {
                    doc.applyStyles(doc.userStyles);
                    if (options2.beforePageContent)
                      options2.beforePageContent(data);
                    doc.applyStyles(doc.userStyles);
                    if (options2.afterPageContent)
                      options2.afterPageContent(data);
                    doc.applyStyles(doc.userStyles);
                    if (options2.afterPageAdd && data.pageNumber > 1) {
                      ;
                      data.afterPageAdd(data);
                    }
                    doc.applyStyles(doc.userStyles);
                  };
                }
                ;
                [
                  "createdHeaderCell",
                  "drawHeaderRow",
                  "drawRow",
                  "drawHeaderCell"
                ].forEach(function(name) {
                  if (options2[name]) {
                    console.error('The "' + name + '" hook has changed in version 3.0, check the changelog for how to migrate.');
                  }
                });
                [
                  ["showFoot", "showFooter"],
                  ["showHead", "showHeader"],
                  ["didDrawPage", "addPageContent"],
                  ["didParseCell", "createdCell"],
                  ["headStyles", "headerStyles"]
                ].forEach(function(_a3) {
                  var current2 = _a3[0], deprecated = _a3[1];
                  if (options2[deprecated]) {
                    console.error("Use of deprecated option " + deprecated + ". Use " + current2 + " instead");
                    options2[current2] = options2[deprecated];
                  }
                });
                [
                  ["padding", "cellPadding"],
                  ["lineHeight", "rowHeight"],
                  "fontSize",
                  "overflow"
                ].forEach(function(o2) {
                  var deprecatedOption = typeof o2 === "string" ? o2 : o2[0];
                  var style2 = typeof o2 === "string" ? o2 : o2[1];
                  if (typeof options2[deprecatedOption] !== "undefined") {
                    if (typeof options2.styles[style2] === "undefined") {
                      options2.styles[style2] = options2[deprecatedOption];
                    }
                    console.error("Use of deprecated option: " + deprecatedOption + ", use the style " + style2 + " instead.");
                  }
                });
                for (var _i2 = 0, _a2 = [
                  "styles",
                  "bodyStyles",
                  "headStyles",
                  "footStyles"
                ]; _i2 < _a2.length; _i2++) {
                  var styleProp = _a2[_i2];
                  checkStyles(options2[styleProp] || {});
                }
                var columnStyles = options2["columnStyles"] || {};
                for (var _b = 0, _c = Object.keys(columnStyles); _b < _c.length; _b++) {
                  var key = _c[_b];
                  checkStyles(columnStyles[key] || {});
                }
              };
              for (var _i = 0, _a = [global2, document2, current]; _i < _a.length; _i++) {
                var options = _a[_i];
                _loop_1(options);
              }
            }
            exports2.default = default_1;
            function checkStyles(styles) {
              if (styles.rowHeight) {
                console.error("Use of deprecated style rowHeight. It is renamed to minCellHeight.");
                if (!styles.minCellHeight) {
                  styles.minCellHeight = styles.rowHeight;
                }
              } else if (styles.columnWidth) {
                console.error("Use of deprecated style columnWidth. It is renamed to cellWidth.");
                if (!styles.cellWidth) {
                  styles.cellWidth = styles.columnWidth;
                }
              }
            }
          },
          /* 14 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            var __extends = this && this.__extends || /* @__PURE__ */ function() {
              var extendStatics = function(d2, b2) {
                extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
                  d3.__proto__ = b3;
                } || function(d3, b3) {
                  for (var p2 in b3)
                    if (b3.hasOwnProperty(p2))
                      d3[p2] = b3[p2];
                };
                return extendStatics(d2, b2);
              };
              return function(d2, b2) {
                extendStatics(d2, b2);
                function __() {
                  this.constructor = d2;
                }
                d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
              };
            }();
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.CellHookData = exports2.HookData = void 0;
            var HookData = (
              /** @class */
              /* @__PURE__ */ function() {
                function HookData2(doc, table, cursor) {
                  this.table = table;
                  this.pageNumber = table.pageNumber;
                  this.pageCount = this.pageNumber;
                  this.settings = table.settings;
                  this.cursor = cursor;
                  this.doc = doc.getDocument();
                }
                return HookData2;
              }()
            );
            exports2.HookData = HookData;
            var CellHookData = (
              /** @class */
              function(_super) {
                __extends(CellHookData2, _super);
                function CellHookData2(doc, table, cell, row, column, cursor) {
                  var _this = _super.call(this, doc, table, cursor) || this;
                  _this.cell = cell;
                  _this.row = row;
                  _this.column = column;
                  _this.section = row.section;
                  return _this;
                }
                return CellHookData2;
              }(HookData)
            );
            exports2.CellHookData = CellHookData;
          },
          /* 15 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", { value: true });
            exports2.ellipsize = exports2.resizeColumns = exports2.calculateWidths = void 0;
            var common_1 = __webpack_require__(0);
            function calculateWidths(doc, table) {
              calculate(doc, table);
              var resizableColumns = [];
              var initialTableWidth = 0;
              table.columns.forEach(function(column) {
                var customWidth = column.getMaxCustomCellWidth(table);
                if (customWidth) {
                  column.width = customWidth;
                } else {
                  column.width = column.wrappedWidth;
                  resizableColumns.push(column);
                }
                initialTableWidth += column.width;
              });
              var resizeWidth = table.getWidth(doc.pageSize().width) - initialTableWidth;
              if (resizeWidth) {
                resizeWidth = resizeColumns(resizableColumns, resizeWidth, function(column) {
                  return Math.max(column.minReadableWidth, column.minWidth);
                });
              }
              if (resizeWidth) {
                resizeWidth = resizeColumns(resizableColumns, resizeWidth, function(column) {
                  return column.minWidth;
                });
              }
              resizeWidth = Math.abs(resizeWidth);
              if (resizeWidth > 0.1 / doc.scaleFactor()) {
                resizeWidth = resizeWidth < 1 ? resizeWidth : Math.round(resizeWidth);
                console.error("Of the table content, " + resizeWidth + " units width could not fit page");
              }
              applyColSpans(table);
              fitContent(table, doc);
              applyRowSpans(table);
            }
            exports2.calculateWidths = calculateWidths;
            function calculate(doc, table) {
              var sf = doc.scaleFactor();
              table.allRows().forEach(function(row) {
                for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {
                  var column = _a[_i];
                  var cell = row.cells[column.index];
                  if (!cell)
                    continue;
                  var hooks = table.hooks.didParseCell;
                  table.callCellHooks(doc, hooks, cell, row, column, null);
                  var padding = cell.padding("horizontal");
                  cell.contentWidth = common_1.getStringWidth(cell.text, cell.styles, doc) + padding;
                  var longestWordWidth = common_1.getStringWidth(cell.text.join(" ").split(/\s+/), cell.styles, doc);
                  cell.minReadableWidth = longestWordWidth + cell.padding("horizontal");
                  if (typeof cell.styles.cellWidth === "number") {
                    cell.minWidth = cell.styles.cellWidth;
                    cell.wrappedWidth = cell.styles.cellWidth;
                  } else if (cell.styles.cellWidth === "wrap") {
                    cell.minWidth = cell.contentWidth;
                    cell.wrappedWidth = cell.contentWidth;
                  } else {
                    var defaultMinWidth = 10 / sf;
                    cell.minWidth = cell.styles.minCellWidth || defaultMinWidth;
                    cell.wrappedWidth = cell.contentWidth;
                    if (cell.minWidth > cell.wrappedWidth) {
                      cell.wrappedWidth = cell.minWidth;
                    }
                  }
                }
              });
              table.allRows().forEach(function(row) {
                for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {
                  var column = _a[_i];
                  var cell = row.cells[column.index];
                  if (cell && cell.colSpan === 1) {
                    column.wrappedWidth = Math.max(column.wrappedWidth, cell.wrappedWidth);
                    column.minWidth = Math.max(column.minWidth, cell.minWidth);
                    column.minReadableWidth = Math.max(column.minReadableWidth, cell.minReadableWidth);
                  } else {
                    var columnStyles = table.styles.columnStyles[column.dataKey] || table.styles.columnStyles[column.index] || {};
                    var cellWidth = columnStyles.cellWidth;
                    if (cellWidth && typeof cellWidth === "number") {
                      column.minWidth = cellWidth;
                      column.wrappedWidth = cellWidth;
                    }
                  }
                  if (cell) {
                    if (cell.colSpan > 1 && !column.minWidth) {
                      column.minWidth = cell.minWidth;
                    }
                    if (cell.colSpan > 1 && !column.wrappedWidth) {
                      column.wrappedWidth = cell.minWidth;
                    }
                  }
                }
              });
            }
            function resizeColumns(columns, resizeWidth, getMinWidth) {
              var initialResizeWidth = resizeWidth;
              var sumWrappedWidth = columns.reduce(function(acc, column2) {
                return acc + column2.wrappedWidth;
              }, 0);
              for (var i2 = 0; i2 < columns.length; i2++) {
                var column = columns[i2];
                var ratio = column.wrappedWidth / sumWrappedWidth;
                var suggestedChange = initialResizeWidth * ratio;
                var suggestedWidth = column.width + suggestedChange;
                var minWidth = getMinWidth(column);
                var newWidth = suggestedWidth < minWidth ? minWidth : suggestedWidth;
                resizeWidth -= newWidth - column.width;
                column.width = newWidth;
              }
              resizeWidth = Math.round(resizeWidth * 1e10) / 1e10;
              if (resizeWidth) {
                var resizableColumns = columns.filter(function(column2) {
                  return resizeWidth < 0 ? column2.width > getMinWidth(column2) : true;
                });
                if (resizableColumns.length) {
                  resizeWidth = resizeColumns(resizableColumns, resizeWidth, getMinWidth);
                }
              }
              return resizeWidth;
            }
            exports2.resizeColumns = resizeColumns;
            function applyRowSpans(table) {
              var rowSpanCells = {};
              var colRowSpansLeft = 1;
              var all = table.allRows();
              for (var rowIndex = 0; rowIndex < all.length; rowIndex++) {
                var row = all[rowIndex];
                for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {
                  var column = _a[_i];
                  var data = rowSpanCells[column.index];
                  if (colRowSpansLeft > 1) {
                    colRowSpansLeft--;
                    delete row.cells[column.index];
                  } else if (data) {
                    data.cell.height += row.height;
                    colRowSpansLeft = data.cell.colSpan;
                    delete row.cells[column.index];
                    data.left--;
                    if (data.left <= 1) {
                      delete rowSpanCells[column.index];
                    }
                  } else {
                    var cell = row.cells[column.index];
                    if (!cell) {
                      continue;
                    }
                    cell.height = row.height;
                    if (cell.rowSpan > 1) {
                      var remaining = all.length - rowIndex;
                      var left = cell.rowSpan > remaining ? remaining : cell.rowSpan;
                      rowSpanCells[column.index] = { cell, left, row };
                    }
                  }
                }
              }
            }
            function applyColSpans(table) {
              var all = table.allRows();
              for (var rowIndex = 0; rowIndex < all.length; rowIndex++) {
                var row = all[rowIndex];
                var colSpanCell = null;
                var combinedColSpanWidth = 0;
                var colSpansLeft = 0;
                for (var columnIndex = 0; columnIndex < table.columns.length; columnIndex++) {
                  var column = table.columns[columnIndex];
                  colSpansLeft -= 1;
                  if (colSpansLeft > 1 && table.columns[columnIndex + 1]) {
                    combinedColSpanWidth += column.width;
                    delete row.cells[column.index];
                  } else if (colSpanCell) {
                    var cell = colSpanCell;
                    delete row.cells[column.index];
                    colSpanCell = null;
                    cell.width = column.width + combinedColSpanWidth;
                  } else {
                    var cell = row.cells[column.index];
                    if (!cell)
                      continue;
                    colSpansLeft = cell.colSpan;
                    combinedColSpanWidth = 0;
                    if (cell.colSpan > 1) {
                      colSpanCell = cell;
                      combinedColSpanWidth += column.width;
                      continue;
                    }
                    cell.width = column.width + combinedColSpanWidth;
                  }
                }
              }
            }
            function fitContent(table, doc) {
              var rowSpanHeight = { count: 0, height: 0 };
              for (var _i = 0, _a = table.allRows(); _i < _a.length; _i++) {
                var row = _a[_i];
                for (var _b = 0, _c = table.columns; _b < _c.length; _b++) {
                  var column = _c[_b];
                  var cell = row.cells[column.index];
                  if (!cell)
                    continue;
                  doc.applyStyles(cell.styles, true);
                  var textSpace = cell.width - cell.padding("horizontal");
                  if (cell.styles.overflow === "linebreak") {
                    cell.text = doc.splitTextToSize(cell.text, textSpace + 1 / doc.scaleFactor(), { fontSize: cell.styles.fontSize });
                  } else if (cell.styles.overflow === "ellipsize") {
                    cell.text = ellipsize(cell.text, textSpace, cell.styles, doc, "...");
                  } else if (cell.styles.overflow === "hidden") {
                    cell.text = ellipsize(cell.text, textSpace, cell.styles, doc, "");
                  } else if (typeof cell.styles.overflow === "function") {
                    cell.text = cell.styles.overflow(cell.text, textSpace);
                  }
                  cell.contentHeight = cell.getContentHeight(doc.scaleFactor());
                  var realContentHeight = cell.contentHeight / cell.rowSpan;
                  if (cell.rowSpan > 1 && rowSpanHeight.count * rowSpanHeight.height < realContentHeight * cell.rowSpan) {
                    rowSpanHeight = { height: realContentHeight, count: cell.rowSpan };
                  } else if (rowSpanHeight && rowSpanHeight.count > 0) {
                    if (rowSpanHeight.height > realContentHeight) {
                      realContentHeight = rowSpanHeight.height;
                    }
                  }
                  if (realContentHeight > row.height) {
                    row.height = realContentHeight;
                  }
                }
                rowSpanHeight.count--;
              }
            }
            function ellipsize(text, width, styles, doc, overflow) {
              return text.map(function(str) {
                return ellipsizeStr(str, width, styles, doc, overflow);
              });
            }
            exports2.ellipsize = ellipsize;
            function ellipsizeStr(text, width, styles, doc, overflow) {
              var precision = 1e4 * doc.scaleFactor();
              width = Math.ceil(width * precision) / precision;
              if (width >= common_1.getStringWidth(text, styles, doc)) {
                return text;
              }
              while (width < common_1.getStringWidth(text + overflow, styles, doc)) {
                if (text.length <= 1) {
                  break;
                }
                text = text.substring(0, text.length - 1);
              }
              return text.trim() + overflow;
            }
          },
          /* 16 */
          /***/
          function(module2, exports2) {
            if (typeof __WEBPACK_EXTERNAL_MODULE__16__ === "undefined") {
              var e2 = new Error("Cannot find module 'undefined'");
              e2.code = "MODULE_NOT_FOUND";
              throw e2;
            }
            module2.exports = __WEBPACK_EXTERNAL_MODULE__16__;
          }
          /******/
        ])
      );
    });
  }
});

// node_modules/material-table/dist/components/m-table-toolbar.js
var require_m_table_toolbar = __commonJS({
  "node_modules/material-table/dist/components/m-table-toolbar.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.styles = exports.default = exports.MTableToolbar = void 0;
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _slicedToArray2 = _interopRequireDefault(require_slicedToArray());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _Checkbox = _interopRequireDefault((init_Checkbox(), __toCommonJS(Checkbox_exports)));
    var _FormControlLabel = _interopRequireDefault((init_FormControlLabel(), __toCommonJS(FormControlLabel_exports)));
    var _IconButton = _interopRequireDefault((init_IconButton(), __toCommonJS(IconButton_exports)));
    var _InputAdornment = _interopRequireDefault((init_InputAdornment(), __toCommonJS(InputAdornment_exports)));
    var _Menu = _interopRequireDefault((init_Menu(), __toCommonJS(Menu_exports)));
    var _MenuItem = _interopRequireDefault((init_MenuItem(), __toCommonJS(MenuItem_exports)));
    var _TextField = _interopRequireDefault((init_TextField(), __toCommonJS(TextField_exports)));
    var _Toolbar = _interopRequireDefault((init_Toolbar(), __toCommonJS(Toolbar_exports)));
    var _Tooltip = _interopRequireDefault((init_Tooltip(), __toCommonJS(Tooltip_exports)));
    var _Typography = _interopRequireDefault((init_Typography(), __toCommonJS(Typography_exports)));
    var _styles = (init_styles(), __toCommonJS(styles_exports));
    var _styles2 = (init_styles2(), __toCommonJS(styles_exports2));
    var _classnames = _interopRequireDefault(require_classnames());
    var _filefy = require_dist();
    var _propTypes = _interopRequireWildcard(require_prop_types2());
    require_jspdf_plugin_autotable();
    var React62 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var jsPDF = typeof window !== "undefined" ? (init_jspdf_es_min(), __toCommonJS(jspdf_es_min_exports)).jsPDF : null;
    var MTableToolbar = function(_React$Component) {
      (0, _inherits2.default)(MTableToolbar2, _React$Component);
      var _super = _createSuper(MTableToolbar2);
      function MTableToolbar2(props) {
        var _this;
        (0, _classCallCheck2.default)(this, MTableToolbar2);
        _this = _super.call(this, props);
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onSearchChange", function(searchText) {
          _this.props.dataManager.changeSearchText(searchText);
          _this.setState({
            searchText
          }, _this.props.onSearchChanged(searchText));
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getTableData", function() {
          var columns = _this.props.columns.filter(function(columnDef) {
            return (!columnDef.hidden || columnDef.export === true) && columnDef.export !== false && columnDef.field;
          }).sort(function(a2, b2) {
            return a2.tableData.columnOrder > b2.tableData.columnOrder ? 1 : -1;
          });
          var data = (_this.props.exportAllData ? _this.props.data : _this.props.renderData).map(function(rowData) {
            return columns.map(function(columnDef) {
              return _this.props.getFieldValue(rowData, columnDef);
            });
          });
          return [columns, data];
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "defaultExportCsv", function() {
          var _this$getTableData = _this.getTableData(), _this$getTableData2 = (0, _slicedToArray2.default)(_this$getTableData, 2), columns = _this$getTableData2[0], data = _this$getTableData2[1];
          var fileName = _this.props.title || "data";
          if (_this.props.exportFileName) {
            fileName = typeof _this.props.exportFileName === "function" ? _this.props.exportFileName() : _this.props.exportFileName;
          }
          var builder = new _filefy.CsvBuilder(fileName + ".csv");
          builder.setDelimeter(_this.props.exportDelimiter).setColumns(columns.map(function(columnDef) {
            return columnDef.title;
          })).addRows(data).exportFile();
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "defaultExportPdf", function() {
          if (jsPDF !== null) {
            var _this$getTableData3 = _this.getTableData(), _this$getTableData4 = (0, _slicedToArray2.default)(_this$getTableData3, 2), columns = _this$getTableData4[0], data = _this$getTableData4[1];
            var content = {
              startY: 50,
              head: [columns.map(function(columnDef) {
                return columnDef.title;
              })],
              body: data
            };
            var unit = "pt";
            var size = "A4";
            var orientation = "landscape";
            var doc = new jsPDF(orientation, unit, size);
            doc.setFontSize(15);
            doc.text(_this.props.exportFileName || _this.props.title, 40, 40);
            doc.autoTable(content);
            doc.save((_this.props.exportFileName || _this.props.title || "data") + ".pdf");
          }
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "exportCsv", function() {
          if (_this.props.exportCsv) {
            _this.props.exportCsv(_this.props.columns, _this.props.data);
          } else {
            _this.defaultExportCsv();
          }
          _this.setState({
            exportButtonAnchorEl: null
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "exportPdf", function() {
          if (_this.props.exportPdf) {
            _this.props.exportPdf(_this.props.columns, _this.props.data);
          } else {
            _this.defaultExportPdf();
          }
          _this.setState({
            exportButtonAnchorEl: null
          });
        });
        _this.state = {
          columnsButtonAnchorEl: null,
          exportButtonAnchorEl: null,
          searchText: props.searchText
        };
        return _this;
      }
      (0, _createClass2.default)(MTableToolbar2, [{
        key: "renderSearch",
        value: function renderSearch() {
          var _this2 = this;
          var localization = (0, _objectSpread22.default)({}, MTableToolbar2.defaultProps.localization, this.props.localization);
          if (this.props.search) {
            return React62.createElement(_TextField.default, {
              autoFocus: this.props.searchAutoFocus,
              className: this.props.searchFieldAlignment === "left" && this.props.showTitle === false ? null : this.props.classes.searchField,
              value: this.state.searchText,
              onChange: function onChange(event) {
                return _this2.onSearchChange(event.target.value);
              },
              placeholder: localization.searchPlaceholder,
              variant: this.props.searchFieldVariant,
              InputProps: {
                startAdornment: React62.createElement(_InputAdornment.default, {
                  position: "start"
                }, React62.createElement(_Tooltip.default, {
                  title: localization.searchTooltip
                }, React62.createElement(this.props.icons.Search, {
                  fontSize: "small"
                }))),
                endAdornment: React62.createElement(_InputAdornment.default, {
                  position: "end"
                }, React62.createElement(_IconButton.default, {
                  disabled: !this.state.searchText,
                  onClick: function onClick() {
                    return _this2.onSearchChange("");
                  },
                  "aria-label": localization.clearSearchAriaLabel,
                  size: "large"
                }, React62.createElement(this.props.icons.ResetSearch, {
                  fontSize: "small",
                  "aria-label": "clear"
                }))),
                style: this.props.searchFieldStyle,
                inputProps: {
                  "aria-label": localization.searchAriaLabel
                }
              }
            });
          } else {
            return null;
          }
        }
      }, {
        key: "renderDefaultActions",
        value: function renderDefaultActions() {
          var _this3 = this;
          var localization = (0, _objectSpread22.default)({}, MTableToolbar2.defaultProps.localization, this.props.localization);
          var classes = this.props.classes;
          return React62.createElement("div", null, this.props.columnsButton && React62.createElement("span", null, React62.createElement(_Tooltip.default, {
            title: localization.showColumnsTitle
          }, React62.createElement(_IconButton.default, {
            color: "inherit",
            onClick: function onClick(event) {
              return _this3.setState({
                columnsButtonAnchorEl: event.currentTarget
              });
            },
            "aria-label": localization.showColumnsAriaLabel,
            size: "large"
          }, React62.createElement(this.props.icons.ViewColumn, null))), React62.createElement(_Menu.default, {
            anchorEl: this.state.columnsButtonAnchorEl,
            open: Boolean(this.state.columnsButtonAnchorEl),
            onClose: function onClose() {
              return _this3.setState({
                columnsButtonAnchorEl: null
              });
            }
          }, React62.createElement(_MenuItem.default, {
            key: "text",
            disabled: true,
            style: {
              opacity: 1,
              fontWeight: 600,
              fontSize: 12
            }
          }, localization.addRemoveColumns), this.props.columns.map(function(col) {
            if (!col.hidden || col.hiddenByColumnsButton) {
              return React62.createElement("li", {
                key: col.tableData.id
              }, React62.createElement(_MenuItem.default, {
                className: classes.formControlLabel,
                component: "label",
                htmlFor: "column-toggle-".concat(col.tableData.id),
                disabled: col.removable === false
              }, React62.createElement(_Checkbox.default, {
                checked: !col.hidden,
                id: "column-toggle-".concat(col.tableData.id),
                onChange: function onChange() {
                  return _this3.props.onColumnsChanged(col, !col.hidden);
                }
              }), React62.createElement("span", null, col.title)));
            }
            return null;
          }))), this.props.exportButton && React62.createElement("span", null, React62.createElement(_Tooltip.default, {
            title: localization.exportTitle
          }, React62.createElement(_IconButton.default, {
            color: "inherit",
            onClick: function onClick(event) {
              return _this3.setState({
                exportButtonAnchorEl: event.currentTarget
              });
            },
            "aria-label": localization.exportAriaLabel,
            size: "large"
          }, React62.createElement(this.props.icons.Export, null))), React62.createElement(_Menu.default, {
            anchorEl: this.state.exportButtonAnchorEl,
            open: Boolean(this.state.exportButtonAnchorEl),
            onClose: function onClose() {
              return _this3.setState({
                exportButtonAnchorEl: null
              });
            }
          }, (this.props.exportButton === true || this.props.exportButton.csv) && React62.createElement(_MenuItem.default, {
            key: "export-csv",
            onClick: this.exportCsv
          }, localization.exportCSVName), (this.props.exportButton === true || this.props.exportButton.pdf) && React62.createElement(_MenuItem.default, {
            key: "export-pdf",
            onClick: this.exportPdf
          }, localization.exportPDFName))), React62.createElement("span", null, React62.createElement(this.props.components.Actions, {
            actions: this.props.actions && this.props.actions.filter(function(a2) {
              return a2.position === "toolbar";
            }),
            components: this.props.components
          })));
        }
      }, {
        key: "renderSelectedActions",
        value: function renderSelectedActions() {
          return React62.createElement(React62.Fragment, null, React62.createElement(this.props.components.Actions, {
            actions: this.props.actions.filter(function(a2) {
              return a2.position === "toolbarOnSelect";
            }),
            data: this.props.selectedRows,
            components: this.props.components
          }));
        }
      }, {
        key: "renderActions",
        value: function renderActions() {
          var classes = this.props.classes;
          return React62.createElement("div", {
            className: classes.actions
          }, React62.createElement("div", null, this.props.selectedRows && this.props.selectedRows.length > 0 ? this.renderSelectedActions() : this.renderDefaultActions()));
        }
      }, {
        key: "renderToolbarTitle",
        value: function renderToolbarTitle(title) {
          var classes = this.props.classes;
          var toolBarTitle = typeof title === "string" ? React62.createElement(_Typography.default, {
            variant: "h6",
            style: {
              whiteSpace: "nowrap",
              overflow: "hidden",
              textOverflow: "ellipsis"
            }
          }, title) : title;
          return React62.createElement("div", {
            className: classes.title
          }, toolBarTitle);
        }
      }, {
        key: "render",
        value: function render() {
          var classes = this.props.classes;
          var localization = (0, _objectSpread22.default)({}, MTableToolbar2.defaultProps.localization, this.props.localization);
          var title = this.props.showTextRowsSelected && this.props.selectedRows && this.props.selectedRows.length > 0 ? typeof localization.nRowsSelected === "function" ? localization.nRowsSelected(this.props.selectedRows.length) : localization.nRowsSelected.replace("{0}", this.props.selectedRows.length) : this.props.showTitle ? this.props.title : null;
          return React62.createElement(_Toolbar.default, {
            className: (0, _classnames.default)(classes.root, (0, _defineProperty2.default)({}, classes.highlight, this.props.showTextRowsSelected && this.props.selectedRows && this.props.selectedRows.length > 0))
          }, title && this.renderToolbarTitle(title), this.props.searchFieldAlignment === "left" && this.renderSearch(), this.props.toolbarButtonAlignment === "left" && this.renderActions(), React62.createElement("div", {
            className: classes.spacer
          }), this.props.searchFieldAlignment === "right" && this.renderSearch(), this.props.toolbarButtonAlignment === "right" && this.renderActions());
        }
      }]);
      return MTableToolbar2;
    }(React62.Component);
    exports.MTableToolbar = MTableToolbar;
    MTableToolbar.defaultProps = {
      actions: [],
      columns: [],
      columnsButton: false,
      localization: {
        addRemoveColumns: "Add or remove columns",
        nRowsSelected: "{0} row(s) selected",
        showColumnsTitle: "Show Columns",
        showColumnsAriaLabel: "Show Columns",
        exportTitle: "Export",
        exportAriaLabel: "Export",
        exportCSVName: "Export as CSV",
        exportPDFName: "Export as PDF",
        searchTooltip: "Search",
        searchPlaceholder: "Search",
        searchAriaLabel: "Search",
        clearSearchAriaLabel: "Clear Search"
      },
      search: true,
      showTitle: true,
      searchText: "",
      showTextRowsSelected: true,
      toolbarButtonAlignment: "right",
      searchAutoFocus: false,
      searchFieldAlignment: "right",
      searchFieldVariant: "standard",
      selectedRows: [],
      title: "No Title!"
    };
    MTableToolbar.propTypes = {
      actions: _propTypes.default.array,
      columns: _propTypes.default.array,
      columnsButton: _propTypes.default.bool,
      components: _propTypes.default.object.isRequired,
      getFieldValue: _propTypes.default.func.isRequired,
      localization: _propTypes.default.object.isRequired,
      onColumnsChanged: _propTypes.default.func.isRequired,
      dataManager: _propTypes.default.object.isRequired,
      searchText: _propTypes.default.string,
      onSearchChanged: _propTypes.default.func.isRequired,
      search: _propTypes.default.bool.isRequired,
      searchFieldStyle: _propTypes.default.object,
      searchFieldVariant: _propTypes.default.string,
      selectedRows: _propTypes.default.array,
      title: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.string]),
      showTitle: _propTypes.default.bool.isRequired,
      showTextRowsSelected: _propTypes.default.bool.isRequired,
      toolbarButtonAlignment: _propTypes.default.string.isRequired,
      searchFieldAlignment: _propTypes.default.string.isRequired,
      renderData: _propTypes.default.array,
      data: _propTypes.default.array,
      exportAllData: _propTypes.default.bool,
      exportButton: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({
        csv: _propTypes.default.bool,
        pdf: _propTypes.default.bool
      })]),
      exportDelimiter: _propTypes.default.string,
      exportFileName: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
      exportCsv: _propTypes.default.func,
      exportPdf: _propTypes.default.func,
      classes: _propTypes.default.object,
      searchAutoFocus: _propTypes.default.bool
    };
    var styles = function styles2(theme) {
      return {
        root: {
          paddingRight: theme.spacing(1)
        },
        highlight: theme.palette.mode === "light" ? {
          color: theme.palette.secondary.main,
          backgroundColor: (0, _styles.lighten)(theme.palette.secondary.light, 0.85)
        } : {
          color: theme.palette.text.primary,
          backgroundColor: theme.palette.secondary.dark
        },
        spacer: {
          flex: "1 1 10%"
        },
        actions: {
          color: theme.palette.text.secondary
        },
        title: {
          overflow: "hidden"
        },
        searchField: {
          minWidth: 150,
          paddingLeft: theme.spacing(2)
        },
        formControlLabel: {
          paddingLeft: theme.spacing(1),
          paddingRight: theme.spacing(1)
        }
      };
    };
    exports.styles = styles;
    var _default = (0, _styles2.withStyles)(styles)(MTableToolbar);
    exports.default = _default;
  }
});

// node_modules/material-table/dist/components/index.js
var require_components = __commonJS({
  "node_modules/material-table/dist/components/index.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "MTableAction", {
      enumerable: true,
      get: function get2() {
        return _mTableAction.default;
      }
    });
    Object.defineProperty(exports, "MTableActions", {
      enumerable: true,
      get: function get2() {
        return _mTableActions.default;
      }
    });
    Object.defineProperty(exports, "MTableBody", {
      enumerable: true,
      get: function get2() {
        return _mTableBody.default;
      }
    });
    Object.defineProperty(exports, "MTableBodyRow", {
      enumerable: true,
      get: function get2() {
        return _mTableBodyRow.default;
      }
    });
    Object.defineProperty(exports, "MTableCell", {
      enumerable: true,
      get: function get2() {
        return _mTableCell.default;
      }
    });
    Object.defineProperty(exports, "MTableEditCell", {
      enumerable: true,
      get: function get2() {
        return _mTableEditCell.default;
      }
    });
    Object.defineProperty(exports, "MTableEditField", {
      enumerable: true,
      get: function get2() {
        return _mTableEditField.default;
      }
    });
    Object.defineProperty(exports, "MTableEditRow", {
      enumerable: true,
      get: function get2() {
        return _mTableEditRow.default;
      }
    });
    Object.defineProperty(exports, "MTableFilterRow", {
      enumerable: true,
      get: function get2() {
        return _mTableFilterRow.default;
      }
    });
    Object.defineProperty(exports, "MTableGroupRow", {
      enumerable: true,
      get: function get2() {
        return _mTableGroupRow.default;
      }
    });
    Object.defineProperty(exports, "MTableGroupbar", {
      enumerable: true,
      get: function get2() {
        return _mTableGroupbar.default;
      }
    });
    Object.defineProperty(exports, "MTableHeader", {
      enumerable: true,
      get: function get2() {
        return _mTableHeader.default;
      }
    });
    Object.defineProperty(exports, "MTablePagination", {
      enumerable: true,
      get: function get2() {
        return _mTablePagination.default;
      }
    });
    Object.defineProperty(exports, "MTableSteppedPagination", {
      enumerable: true,
      get: function get2() {
        return _mTableSteppedPagination.default;
      }
    });
    Object.defineProperty(exports, "MTableToolbar", {
      enumerable: true,
      get: function get2() {
        return _mTableToolbar.default;
      }
    });
    var _mTableAction = _interopRequireDefault(require_m_table_action());
    var _mTableActions = _interopRequireDefault(require_m_table_actions());
    var _mTableBody = _interopRequireDefault(require_m_table_body());
    var _mTableBodyRow = _interopRequireDefault(require_m_table_body_row());
    var _mTableGroupbar = _interopRequireDefault(require_m_table_groupbar());
    var _mTableGroupRow = _interopRequireDefault(require_m_table_group_row());
    var _mTableCell = _interopRequireDefault(require_m_table_cell());
    var _mTableEditCell = _interopRequireDefault(require_m_table_edit_cell());
    var _mTableEditRow = _interopRequireDefault(require_m_table_edit_row());
    var _mTableEditField = _interopRequireDefault(require_m_table_edit_field());
    var _mTableFilterRow = _interopRequireDefault(require_m_table_filter_row());
    var _mTableHeader = _interopRequireDefault(require_m_table_header());
    var _mTablePagination = _interopRequireDefault(require_m_table_pagination());
    var _mTableSteppedPagination = _interopRequireDefault(require_m_table_stepped_pagination());
    var _mTableToolbar = _interopRequireDefault(require_m_table_toolbar());
  }
});

// node_modules/material-table/dist/default-props.js
var require_default_props = __commonJS({
  "node_modules/material-table/dist/default-props.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof2 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.defaultProps = void 0;
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _extends2 = _interopRequireDefault(require_extends());
    var _react = _interopRequireDefault(require_react());
    var _CircularProgress = _interopRequireDefault((init_CircularProgress(), __toCommonJS(CircularProgress_exports)));
    var _Icon = _interopRequireDefault((init_Icon(), __toCommonJS(Icon_exports)));
    var _Paper = _interopRequireDefault((init_Paper(), __toCommonJS(Paper_exports)));
    var _TablePagination = _interopRequireDefault((init_TablePagination(), __toCommonJS(TablePagination_exports)));
    var MComponents = _interopRequireWildcard(require_components());
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var _styles = (init_styles(), __toCommonJS(styles_exports));
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    var OverlayLoading = function OverlayLoading2(props) {
      return _react.default.createElement("div", {
        style: {
          display: "table",
          width: "100%",
          height: "100%",
          backgroundColor: (0, _styles.alpha)(props.theme.palette.background.paper, 0.7)
        }
      }, _react.default.createElement("div", {
        style: {
          display: "table-cell",
          width: "100%",
          height: "100%",
          verticalAlign: "middle",
          textAlign: "center"
        }
      }, _react.default.createElement(_CircularProgress.default, null)));
    };
    OverlayLoading.propTypes = {
      theme: _propTypes.default.any
    };
    var OverlayError = function OverlayError2(props) {
      return _react.default.createElement("div", {
        style: {
          display: "table",
          width: "100%",
          height: "100%",
          backgroundColor: (0, _styles.alpha)(props.theme.palette.background.paper, 0.7)
        }
      }, _react.default.createElement("div", {
        style: {
          display: "table-cell",
          width: "100%",
          height: "100%",
          verticalAlign: "middle",
          textAlign: "center"
        }
      }, _react.default.createElement("span", null, props.error.message), " ", _react.default.createElement(props.icon, {
        onClick: props.retry,
        style: {
          cursor: "pointer",
          position: "relative",
          top: 5
        }
      })));
    };
    OverlayError.propTypes = {
      error: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
      retry: _propTypes.default.func,
      theme: _propTypes.default.any,
      icon: _propTypes.default.any
    };
    var Container = function Container2(props) {
      return _react.default.createElement(_Paper.default, (0, _extends2.default)({
        elevation: 2
      }, props));
    };
    var defaultProps2 = {
      actions: [],
      classes: {},
      columns: [],
      components: {
        Action: MComponents.MTableAction,
        Actions: MComponents.MTableActions,
        Body: MComponents.MTableBody,
        Cell: MComponents.MTableCell,
        Container,
        EditCell: MComponents.MTableEditCell,
        EditField: MComponents.MTableEditField,
        EditRow: MComponents.MTableEditRow,
        FilterRow: MComponents.MTableFilterRow,
        Groupbar: MComponents.MTableGroupbar,
        GroupRow: MComponents.MTableGroupRow,
        Header: MComponents.MTableHeader,
        OverlayLoading,
        OverlayError,
        Pagination: _TablePagination.default,
        Row: MComponents.MTableBodyRow,
        Toolbar: MComponents.MTableToolbar
      },
      data: [],
      icons: {
        /* eslint-disable react/display-name */
        Add: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "add_box");
        }),
        Check: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "check");
        }),
        Clear: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "clear");
        }),
        Delete: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "delete_outline");
        }),
        DetailPanel: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "chevron_right");
        }),
        Edit: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "edit");
        }),
        Export: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "save_alt");
        }),
        Filter: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "filter_list");
        }),
        FirstPage: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "first_page");
        }),
        LastPage: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "last_page");
        }),
        NextPage: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "chevron_right");
        }),
        PreviousPage: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "chevron_left");
        }),
        ResetSearch: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "clear");
        }),
        Resize: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2,
            style: (0, _objectSpread22.default)({}, props.style, {
              transform: "rotate(90deg)"
            })
          }), "drag_handle");
        }),
        Search: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "search");
        }),
        SortArrow: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "arrow_downward");
        }),
        ThirdStateCheck: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "remove");
        }),
        ViewColumn: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "view_column");
        }),
        Retry: _react.default.forwardRef(function(props, ref2) {
          return _react.default.createElement(_Icon.default, (0, _extends2.default)({}, props, {
            ref: ref2
          }), "replay");
        })
        /* eslint-enable react/display-name */
      },
      isLoading: false,
      title: "Table Title",
      options: {
        actionsColumnIndex: 0,
        addRowPosition: "last",
        columnsButton: false,
        detailPanelType: "multiple",
        debounceInterval: 200,
        doubleHorizontalScroll: false,
        emptyRowsWhenPaging: true,
        exportAllData: false,
        exportButton: false,
        exportDelimiter: ",",
        filtering: false,
        groupTitle: false,
        header: true,
        headerSelectionProps: {},
        hideFilterIcons: false,
        loadingType: "overlay",
        padding: "default",
        searchAutoFocus: false,
        paging: true,
        pageSize: 5,
        pageSizeOptions: [5, 10, 20],
        paginationType: "normal",
        paginationPosition: "bottom",
        showEmptyDataSourceMessage: true,
        showFirstLastPageButtons: true,
        showSelectAllCheckbox: true,
        search: true,
        showTitle: true,
        showTextRowsSelected: true,
        tableLayout: "auto",
        toolbarButtonAlignment: "right",
        searchFieldAlignment: "right",
        searchFieldStyle: {},
        searchFieldVariant: "standard",
        selection: false,
        selectionProps: {},
        sorting: true,
        toolbar: true,
        defaultExpanded: false,
        detailPanelColumnAlignment: "left",
        thirdSortClick: true,
        overflowY: "auto"
      },
      localization: {
        error: "Data could not be retrieved",
        grouping: {
          groupedBy: "Grouped By:",
          placeholder: "Drag headers here to group by"
        },
        pagination: {
          labelDisplayedRows: "{from}-{to} of {count}",
          labelRowsPerPage: "Rows per page:",
          labelRowsSelect: "rows"
        },
        toolbar: {},
        header: {},
        body: {
          filterRow: {},
          editRow: {
            saveTooltip: "Save",
            cancelTooltip: "Cancel",
            deleteText: "Are you sure you want to delete this row?"
          },
          addTooltip: "Add",
          deleteTooltip: "Delete",
          editTooltip: "Edit",
          bulkEditTooltip: "Edit All",
          bulkEditApprove: "Save all changes",
          bulkEditCancel: "Discard all changes"
        }
      },
      style: {}
    };
    exports.defaultProps = defaultProps2;
  }
});

// node_modules/material-table/dist/prop-types.js
var require_prop_types3 = __commonJS({
  "node_modules/material-table/dist/prop-types.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.propTypes = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types2());
    var RefComponent = _propTypes.default.shape({
      current: _propTypes.default.element
    });
    var StyledComponent = _propTypes.default.shape({
      classes: _propTypes.default.object,
      innerRef: RefComponent
    });
    var propTypes = {
      actions: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.shape({
        icon: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, _propTypes.default.string, RefComponent]).isRequired,
        isFreeAction: _propTypes.default.bool,
        position: _propTypes.default.oneOf(["auto", "toolbar", "toolbarOnSelect", "row"]),
        tooltip: _propTypes.default.string,
        onClick: _propTypes.default.func.isRequired,
        iconProps: _propTypes.default.object,
        disabled: _propTypes.default.bool,
        hidden: _propTypes.default.bool
      })])),
      columns: _propTypes.default.arrayOf(_propTypes.default.shape({
        cellStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
        currencySetting: _propTypes.default.shape({
          locale: _propTypes.default.string,
          currencyCode: _propTypes.default.string,
          minimumFractionDigits: _propTypes.default.number,
          maximumFractionDigits: _propTypes.default.number
        }),
        customFilterAndSearch: _propTypes.default.func,
        customSort: _propTypes.default.func,
        defaultFilter: _propTypes.default.any,
        defaultSort: _propTypes.default.oneOf(["asc", "desc"]),
        editComponent: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func]),
        emptyValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node, _propTypes.default.func]),
        export: _propTypes.default.bool,
        field: _propTypes.default.string,
        filtering: _propTypes.default.bool,
        filterCellStyle: _propTypes.default.object,
        filterPlaceholder: _propTypes.default.string,
        filterComponent: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func]),
        grouping: _propTypes.default.bool,
        headerStyle: _propTypes.default.object,
        hidden: _propTypes.default.bool,
        hideFilterIcon: _propTypes.default.bool,
        initialEditValue: _propTypes.default.any,
        lookup: _propTypes.default.object,
        editable: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.oneOf(["always", "onUpdate", "onAdd", "never"])]),
        removable: _propTypes.default.bool,
        render: _propTypes.default.func,
        searchable: _propTypes.default.bool,
        sorting: _propTypes.default.bool,
        title: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.string]),
        type: _propTypes.default.oneOf(["string", "boolean", "numeric", "date", "datetime", "time", "currency"])
      })).isRequired,
      components: _propTypes.default.shape({
        Action: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        Actions: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        Body: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        Cell: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        Container: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        EditField: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        EditRow: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        FilterRow: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        Groupbar: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        GroupRow: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        Header: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        OverlayLoading: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        OverlayError: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        Pagination: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        Row: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent]),
        Toolbar: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, StyledComponent])
      }),
      data: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.object), _propTypes.default.func]).isRequired,
      editable: _propTypes.default.shape({
        isEditable: _propTypes.default.func,
        isDeletable: _propTypes.default.func,
        onRowAdd: _propTypes.default.func,
        onRowUpdate: _propTypes.default.func,
        onRowDelete: _propTypes.default.func,
        onRowAddCancelled: _propTypes.default.func,
        onRowUpdateCancelled: _propTypes.default.func,
        isEditHidden: _propTypes.default.func,
        isDeleteHidden: _propTypes.default.func
      }),
      detailPanel: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.shape({
        disabled: _propTypes.default.bool,
        icon: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, _propTypes.default.string, RefComponent]),
        openIcon: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, _propTypes.default.string, RefComponent]),
        tooltip: _propTypes.default.string,
        render: _propTypes.default.func.isRequired
      })]))]),
      icons: _propTypes.default.shape({
        Add: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        Check: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        Clear: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        Delete: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        DetailPanel: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        Edit: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        Export: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        Filter: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        FirstPage: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        LastPage: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        NextPage: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        PreviousPage: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        Refresh: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        ResetSearch: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        Search: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        SortArrow: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        ThirdStateCheck: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent]),
        ViewColumn: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func, RefComponent])
      }),
      isLoading: _propTypes.default.bool,
      title: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.string]),
      options: _propTypes.default.shape({
        actionsCellStyle: _propTypes.default.object,
        editCellStyle: _propTypes.default.object,
        detailPanelColumnStyle: _propTypes.default.object,
        actionsColumnIndex: _propTypes.default.number,
        addRowPosition: _propTypes.default.oneOf(["first", "last"]),
        columnsButton: _propTypes.default.bool,
        defaultExpanded: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]),
        debounceInterval: _propTypes.default.number,
        detailPanelType: _propTypes.default.oneOf(["single", "multiple"]),
        doubleHorizontalScroll: _propTypes.default.bool,
        emptyRowsWhenPaging: _propTypes.default.bool,
        exportAllData: _propTypes.default.bool,
        exportButton: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({
          csv: _propTypes.default.bool,
          pdf: _propTypes.default.bool
        })]),
        exportDelimiter: _propTypes.default.string,
        exportFileName: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
        exportCsv: _propTypes.default.func,
        filtering: _propTypes.default.bool,
        filterCellStyle: _propTypes.default.object,
        filterRowStyle: _propTypes.default.object,
        header: _propTypes.default.bool,
        headerSelectionProps: _propTypes.default.object,
        headerStyle: _propTypes.default.object,
        hideFilterIcons: _propTypes.default.bool,
        initialPage: _propTypes.default.number,
        maxBodyHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
        minBodyHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
        loadingType: _propTypes.default.oneOf(["overlay", "linear"]),
        overflowY: _propTypes.default.oneOf(["visible", "hidden", "scroll", "auto", "initial", "inherit"]),
        padding: _propTypes.default.oneOf(["default", "dense"]),
        paging: _propTypes.default.bool,
        pageSize: _propTypes.default.number,
        pageSizeOptions: _propTypes.default.arrayOf(_propTypes.default.number),
        paginationType: _propTypes.default.oneOf(["normal", "stepped"]),
        paginationPosition: _propTypes.default.oneOf(["bottom", "top", "both"]),
        rowStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
        search: _propTypes.default.bool,
        searchText: _propTypes.default.string,
        toolbarButtonAlignment: _propTypes.default.oneOf(["left", "right"]),
        searchFieldAlignment: _propTypes.default.oneOf(["left", "right"]),
        searchFieldStyle: _propTypes.default.object,
        searchAutoFocus: _propTypes.default.bool,
        searchFieldVariant: _propTypes.default.oneOf(["standard", "filled", "outlined"]),
        selection: _propTypes.default.bool,
        selectionProps: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
        showEmptyDataSourceMessage: _propTypes.default.bool,
        showFirstLastPageButtons: _propTypes.default.bool,
        showSelectAllCheckbox: _propTypes.default.bool,
        showTitle: _propTypes.default.bool,
        showTextRowsSelected: _propTypes.default.bool,
        sorting: _propTypes.default.bool,
        toolbar: _propTypes.default.bool,
        thirdSortClick: _propTypes.default.bool
      }),
      localization: _propTypes.default.shape({
        grouping: _propTypes.default.shape({
          groupedBy: _propTypes.default.string,
          placeholder: _propTypes.default.string
        }),
        pagination: _propTypes.default.object,
        toolbar: _propTypes.default.object,
        header: _propTypes.default.object,
        body: _propTypes.default.object
      }),
      initialFormData: _propTypes.default.object,
      onSearchChange: _propTypes.default.func,
      onFilterChange: _propTypes.default.func,
      onColumnDragged: _propTypes.default.func,
      onGroupRemoved: _propTypes.default.func,
      onSelectionChange: _propTypes.default.func,
      onChangeRowsPerPage: _propTypes.default.func,
      onChangePage: _propTypes.default.func,
      onChangeColumnHidden: _propTypes.default.func,
      onOrderChange: _propTypes.default.func,
      onRowClick: _propTypes.default.func,
      onTreeExpandChange: _propTypes.default.func,
      onQueryChange: _propTypes.default.func,
      tableRef: _propTypes.default.any,
      style: _propTypes.default.object,
      page: _propTypes.default.number,
      totalCount: _propTypes.default.number
    };
    exports.propTypes = propTypes;
  }
});

// node_modules/react-double-scrollbar/dist/DoubleScrollbar.js
var require_DoubleScrollbar = __commonJS({
  "node_modules/react-double-scrollbar/dist/DoubleScrollbar.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory(require_react());
      else if (typeof define === "function" && define.amd)
        define("DoubleScrollbar", ["react"], factory);
      else if (typeof exports === "object")
        exports["DoubleScrollbar"] = factory(require_react());
      else
        root["DoubleScrollbar"] = factory(root["react"]);
    })(exports, function(__WEBPACK_EXTERNAL_MODULE_1__) {
      return (
        /******/
        function(modules) {
          var installedModules = {};
          function __webpack_require__(moduleId2) {
            if (installedModules[moduleId2])
              return installedModules[moduleId2].exports;
            var module2 = installedModules[moduleId2] = {
              /******/
              exports: {},
              /******/
              id: moduleId2,
              /******/
              loaded: false
              /******/
            };
            modules[moduleId2].call(module2.exports, module2, module2.exports, __webpack_require__);
            module2.loaded = true;
            return module2.exports;
          }
          __webpack_require__.m = modules;
          __webpack_require__.c = installedModules;
          __webpack_require__.p = "";
          return __webpack_require__(0);
        }([
          /* 0 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", {
              value: true
            });
            var _createClass2 = /* @__PURE__ */ function() {
              function defineProperties(target, props) {
                for (var i2 = 0; i2 < props.length; i2++) {
                  var descriptor = props[i2];
                  descriptor.enumerable = descriptor.enumerable || false;
                  descriptor.configurable = true;
                  if ("value" in descriptor)
                    descriptor.writable = true;
                  Object.defineProperty(target, descriptor.key, descriptor);
                }
              }
              return function(Constructor, protoProps, staticProps) {
                if (protoProps)
                  defineProperties(Constructor.prototype, protoProps);
                if (staticProps)
                  defineProperties(Constructor, staticProps);
                return Constructor;
              };
            }();
            var _react = __webpack_require__(1);
            var _react2 = _interopRequireDefault(_react);
            function _interopRequireDefault(obj) {
              return obj && obj.__esModule ? obj : { default: obj };
            }
            function _classCallCheck(instance, Constructor) {
              if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
              }
            }
            function _possibleConstructorReturn(self2, call) {
              if (!self2) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              }
              return call && (typeof call === "object" || typeof call === "function") ? call : self2;
            }
            function _inherits(subClass, superClass) {
              if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
              }
              subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
              if (superClass)
                Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
            }
            "use strict";
            var DoubleScrollbar = function(_React$Component) {
              _inherits(DoubleScrollbar2, _React$Component);
              function DoubleScrollbar2(props) {
                _classCallCheck(this, DoubleScrollbar2);
                var _this = _possibleConstructorReturn(this, (DoubleScrollbar2.__proto__ || Object.getPrototypeOf(DoubleScrollbar2)).call(this, props));
                _this.state = {
                  width: "auto"
                };
                _this.boundCalculateWidth = _this.calculateWidth.bind(_this);
                return _this;
              }
              _createClass2(DoubleScrollbar2, [{
                key: "componentDidMount",
                value: function componentDidMount() {
                  var outerDiv = this.refs.outerDiv;
                  var childWrapper = this.refs.childrenWrapper;
                  this.calculateWidth();
                  window.addEventListener("resize", this.boundCalculateWidth);
                  outerDiv.onscroll = function() {
                    childWrapper.scrollLeft = outerDiv.scrollLeft;
                  };
                  childWrapper.onscroll = function() {
                    outerDiv.scrollLeft = childWrapper.scrollLeft;
                  };
                }
              }, {
                key: "componentWillUnmount",
                value: function componentWillUnmount() {
                  window.removeEventListener("resize", this.boundCalculateWidth);
                }
              }, {
                key: "componentDidUpdate",
                value: function componentDidUpdate() {
                  this.calculateWidth();
                }
              }, {
                key: "calculateWidth",
                value: function calculateWidth() {
                  var width = this.getChildWrapperWidth();
                  if (width == null) {
                    width = "auto";
                  }
                  if (width !== this.state.width) {
                    this.setState({
                      width
                    });
                  }
                }
              }, {
                key: "getChildWrapperWidth",
                value: function getChildWrapperWidth() {
                  var width = null;
                  if (this.refs.childrenWrapper && this.refs.childrenWrapper.scrollWidth) {
                    width = this.refs.childrenWrapper.scrollWidth + "px";
                  }
                  return width;
                }
              }, {
                key: "render",
                value: function render() {
                  var outerDivStyle = { overflowX: "auto", overflowY: "hidden" };
                  var innerDivStyle = { paddingTop: "1px", width: this.state.width };
                  var childDivStyle = { overflow: "auto", overflowY: "hidden" };
                  return _react2.default.createElement(
                    "div",
                    null,
                    _react2.default.createElement(
                      "div",
                      { ref: "outerDiv", style: outerDivStyle },
                      _react2.default.createElement(
                        "div",
                        { ref: "innerDiv", style: innerDivStyle },
                        " "
                      )
                    ),
                    _react2.default.createElement(
                      "div",
                      { ref: "childrenWrapper", style: childDivStyle },
                      this.props.children
                    )
                  );
                }
              }]);
              return DoubleScrollbar2;
            }(_react2.default.Component);
            exports2.default = DoubleScrollbar;
            module2.exports = exports2["default"];
          },
          /* 1 */
          /***/
          function(module2, exports2) {
            module2.exports = __WEBPACK_EXTERNAL_MODULE_1__;
          }
          /******/
        ])
      );
    });
  }
});

// node_modules/date-fns/esm/isDate/index.js
function isDate2(value) {
  requiredArgs(1, arguments);
  return value instanceof Date || typeof value === "object" && Object.prototype.toString.call(value) === "[object Date]";
}
var init_isDate = __esm({
  "node_modules/date-fns/esm/isDate/index.js"() {
    init_requiredArgs();
  }
});

// node_modules/date-fns/esm/toDate/index.js
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || typeof argument === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule");
      console.warn(new Error().stack);
    }
    return /* @__PURE__ */ new Date(NaN);
  }
}
var init_toDate = __esm({
  "node_modules/date-fns/esm/toDate/index.js"() {
    init_requiredArgs();
  }
});

// node_modules/date-fns/esm/isValid/index.js
function isValid(dirtyDate) {
  requiredArgs(1, arguments);
  if (!isDate2(dirtyDate) && typeof dirtyDate !== "number") {
    return false;
  }
  var date = toDate(dirtyDate);
  return !isNaN(Number(date));
}
var init_isValid = __esm({
  "node_modules/date-fns/esm/isValid/index.js"() {
    init_isDate();
    init_toDate();
    init_requiredArgs();
  }
});

// node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
var formatDistanceLocale, formatDistance, formatDistance_default;
var init_formatDistance = __esm({
  "node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js"() {
    formatDistanceLocale = {
      lessThanXSeconds: {
        one: "less than a second",
        other: "less than {{count}} seconds"
      },
      xSeconds: {
        one: "1 second",
        other: "{{count}} seconds"
      },
      halfAMinute: "half a minute",
      lessThanXMinutes: {
        one: "less than a minute",
        other: "less than {{count}} minutes"
      },
      xMinutes: {
        one: "1 minute",
        other: "{{count}} minutes"
      },
      aboutXHours: {
        one: "about 1 hour",
        other: "about {{count}} hours"
      },
      xHours: {
        one: "1 hour",
        other: "{{count}} hours"
      },
      xDays: {
        one: "1 day",
        other: "{{count}} days"
      },
      aboutXWeeks: {
        one: "about 1 week",
        other: "about {{count}} weeks"
      },
      xWeeks: {
        one: "1 week",
        other: "{{count}} weeks"
      },
      aboutXMonths: {
        one: "about 1 month",
        other: "about {{count}} months"
      },
      xMonths: {
        one: "1 month",
        other: "{{count}} months"
      },
      aboutXYears: {
        one: "about 1 year",
        other: "about {{count}} years"
      },
      xYears: {
        one: "1 year",
        other: "{{count}} years"
      },
      overXYears: {
        one: "over 1 year",
        other: "over {{count}} years"
      },
      almostXYears: {
        one: "almost 1 year",
        other: "almost {{count}} years"
      }
    };
    formatDistance = function(token, count2, options) {
      var result;
      var tokenValue = formatDistanceLocale[token];
      if (typeof tokenValue === "string") {
        result = tokenValue;
      } else if (count2 === 1) {
        result = tokenValue.one;
      } else {
        result = tokenValue.other.replace("{{count}}", count2.toString());
      }
      if (options !== null && options !== void 0 && options.addSuffix) {
        if (options.comparison && options.comparison > 0) {
          return "in " + result;
        } else {
          return result + " ago";
        }
      }
      return result;
    };
    formatDistance_default = formatDistance;
  }
});

// node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format2 = args.formats[width] || args.formats[args.defaultWidth];
    return format2;
  };
}
var init_buildFormatLongFn = __esm({
  "node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js"() {
  }
});

// node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js
var dateFormats, timeFormats, dateTimeFormats, formatLong, formatLong_default;
var init_formatLong = __esm({
  "node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js"() {
    init_buildFormatLongFn();
    dateFormats = {
      full: "EEEE, MMMM do, y",
      long: "MMMM do, y",
      medium: "MMM d, y",
      short: "MM/dd/yyyy"
    };
    timeFormats = {
      full: "h:mm:ss a zzzz",
      long: "h:mm:ss a z",
      medium: "h:mm:ss a",
      short: "h:mm a"
    };
    dateTimeFormats = {
      full: "{{date}} 'at' {{time}}",
      long: "{{date}} 'at' {{time}}",
      medium: "{{date}}, {{time}}",
      short: "{{date}}, {{time}}"
    };
    formatLong = {
      date: buildFormatLongFn({
        formats: dateFormats,
        defaultWidth: "full"
      }),
      time: buildFormatLongFn({
        formats: timeFormats,
        defaultWidth: "full"
      }),
      dateTime: buildFormatLongFn({
        formats: dateTimeFormats,
        defaultWidth: "full"
      })
    };
    formatLong_default = formatLong;
  }
});

// node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
var formatRelativeLocale, formatRelative, formatRelative_default;
var init_formatRelative = __esm({
  "node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js"() {
    formatRelativeLocale = {
      lastWeek: "'last' eeee 'at' p",
      yesterday: "'yesterday at' p",
      today: "'today at' p",
      tomorrow: "'tomorrow at' p",
      nextWeek: "eeee 'at' p",
      other: "P"
    };
    formatRelative = function(token, _date, _baseDate, _options) {
      return formatRelativeLocale[token];
    };
    formatRelative_default = formatRelative;
  }
});

// node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function(dirtyIndex, dirtyOptions) {
    var options = dirtyOptions || {};
    var context = options.context ? String(options.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index2 = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index2];
  };
}
var init_buildLocalizeFn = __esm({
  "node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js"() {
  }
});

// node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js
var eraValues, quarterValues, monthValues, dayValues, dayPeriodValues, formattingDayPeriodValues, ordinalNumber, localize, localize_default;
var init_localize = __esm({
  "node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js"() {
    init_buildLocalizeFn();
    eraValues = {
      narrow: ["B", "A"],
      abbreviated: ["BC", "AD"],
      wide: ["Before Christ", "Anno Domini"]
    };
    quarterValues = {
      narrow: ["1", "2", "3", "4"],
      abbreviated: ["Q1", "Q2", "Q3", "Q4"],
      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
    };
    monthValues = {
      narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
      abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    };
    dayValues = {
      narrow: ["S", "M", "T", "W", "T", "F", "S"],
      short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
    };
    dayPeriodValues = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      }
    };
    formattingDayPeriodValues = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      }
    };
    ordinalNumber = function(dirtyNumber, _options) {
      var number = Number(dirtyNumber);
      var rem100 = number % 100;
      if (rem100 > 20 || rem100 < 10) {
        switch (rem100 % 10) {
          case 1:
            return number + "st";
          case 2:
            return number + "nd";
          case 3:
            return number + "rd";
        }
      }
      return number + "th";
    };
    localize = {
      ordinalNumber,
      era: buildLocalizeFn({
        values: eraValues,
        defaultWidth: "wide"
      }),
      quarter: buildLocalizeFn({
        values: quarterValues,
        defaultWidth: "wide",
        argumentCallback: function(quarter) {
          return quarter - 1;
        }
      }),
      month: buildLocalizeFn({
        values: monthValues,
        defaultWidth: "wide"
      }),
      day: buildLocalizeFn({
        values: dayValues,
        defaultWidth: "wide"
      }),
      dayPeriod: buildLocalizeFn({
        values: dayPeriodValues,
        defaultWidth: "wide",
        formattingValues: formattingDayPeriodValues,
        defaultFormattingWidth: "wide"
      })
    };
    localize_default = localize;
  }
});

// node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex2(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return void 0;
}
function findIndex2(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return void 0;
}
var init_buildMatchFn = __esm({
  "node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js"() {
  }
});

// node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
      return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
      return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
var init_buildMatchPatternFn = __esm({
  "node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js"() {
  }
});

// node_modules/date-fns/esm/locale/en-US/_lib/match/index.js
var matchOrdinalNumberPattern, parseOrdinalNumberPattern, matchEraPatterns, parseEraPatterns, matchQuarterPatterns, parseQuarterPatterns, matchMonthPatterns, parseMonthPatterns, matchDayPatterns, parseDayPatterns, matchDayPeriodPatterns, parseDayPeriodPatterns, match2, match_default;
var init_match = __esm({
  "node_modules/date-fns/esm/locale/en-US/_lib/match/index.js"() {
    init_buildMatchFn();
    init_buildMatchPatternFn();
    matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
    parseOrdinalNumberPattern = /\d+/i;
    matchEraPatterns = {
      narrow: /^(b|a)/i,
      abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
      wide: /^(before christ|before common era|anno domini|common era)/i
    };
    parseEraPatterns = {
      any: [/^b/i, /^(a|c)/i]
    };
    matchQuarterPatterns = {
      narrow: /^[1234]/i,
      abbreviated: /^q[1234]/i,
      wide: /^[1234](th|st|nd|rd)? quarter/i
    };
    parseQuarterPatterns = {
      any: [/1/i, /2/i, /3/i, /4/i]
    };
    matchMonthPatterns = {
      narrow: /^[jfmasond]/i,
      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
    };
    parseMonthPatterns = {
      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
    };
    matchDayPatterns = {
      narrow: /^[smtwf]/i,
      short: /^(su|mo|tu|we|th|fr|sa)/i,
      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
    };
    parseDayPatterns = {
      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
    };
    matchDayPeriodPatterns = {
      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
    };
    parseDayPeriodPatterns = {
      any: {
        am: /^a/i,
        pm: /^p/i,
        midnight: /^mi/i,
        noon: /^no/i,
        morning: /morning/i,
        afternoon: /afternoon/i,
        evening: /evening/i,
        night: /night/i
      }
    };
    match2 = {
      ordinalNumber: buildMatchPatternFn({
        matchPattern: matchOrdinalNumberPattern,
        parsePattern: parseOrdinalNumberPattern,
        valueCallback: function(value) {
          return parseInt(value, 10);
        }
      }),
      era: buildMatchFn({
        matchPatterns: matchEraPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseEraPatterns,
        defaultParseWidth: "any"
      }),
      quarter: buildMatchFn({
        matchPatterns: matchQuarterPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseQuarterPatterns,
        defaultParseWidth: "any",
        valueCallback: function(index2) {
          return index2 + 1;
        }
      }),
      month: buildMatchFn({
        matchPatterns: matchMonthPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseMonthPatterns,
        defaultParseWidth: "any"
      }),
      day: buildMatchFn({
        matchPatterns: matchDayPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseDayPatterns,
        defaultParseWidth: "any"
      }),
      dayPeriod: buildMatchFn({
        matchPatterns: matchDayPeriodPatterns,
        defaultMatchWidth: "any",
        parsePatterns: parseDayPeriodPatterns,
        defaultParseWidth: "any"
      })
    };
    match_default = match2;
  }
});

// node_modules/date-fns/esm/locale/en-US/index.js
var locale, en_US_default;
var init_en_US = __esm({
  "node_modules/date-fns/esm/locale/en-US/index.js"() {
    init_formatDistance();
    init_formatLong();
    init_formatRelative();
    init_localize();
    init_match();
    locale = {
      code: "en-US",
      formatDistance: formatDistance_default,
      formatLong: formatLong_default,
      formatRelative: formatRelative_default,
      localize: localize_default,
      match: match_default,
      options: {
        weekStartsOn: 0,
        firstWeekContainsDate: 1
      }
    };
    en_US_default = locale;
  }
});

// node_modules/date-fns/esm/addMilliseconds/index.js
function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}
var init_addMilliseconds = __esm({
  "node_modules/date-fns/esm/addMilliseconds/index.js"() {
    init_toInteger();
    init_toDate();
    init_requiredArgs();
  }
});

// node_modules/date-fns/esm/subMilliseconds/index.js
function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}
var init_subMilliseconds = __esm({
  "node_modules/date-fns/esm/subMilliseconds/index.js"() {
    init_toInteger();
    init_addMilliseconds();
    init_requiredArgs();
  }
});

// node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js
function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}
var MILLISECONDS_IN_DAY;
var init_getUTCDayOfYear = __esm({
  "node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js"() {
    init_toDate();
    init_requiredArgs();
    MILLISECONDS_IN_DAY = 864e5;
  }
});

// node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
var init_startOfUTCISOWeek = __esm({
  "node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js"() {
    init_toDate();
    init_requiredArgs();
  }
});

// node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
var init_getUTCISOWeekYear = __esm({
  "node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js"() {
    init_toDate();
    init_requiredArgs();
    init_startOfUTCISOWeek();
  }
});

// node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = /* @__PURE__ */ new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}
var init_startOfUTCISOWeekYear = __esm({
  "node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js"() {
    init_getUTCISOWeekYear();
    init_startOfUTCISOWeek();
    init_requiredArgs();
  }
});

// node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}
var MILLISECONDS_IN_WEEK;
var init_getUTCISOWeek = __esm({
  "node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js"() {
    init_toDate();
    init_startOfUTCISOWeek();
    init_startOfUTCISOWeekYear();
    init_requiredArgs();
    MILLISECONDS_IN_WEEK = 6048e5;
  }
});

// node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
function startOfUTCWeek(dirtyDate, dirtyOptions) {
  requiredArgs(1, arguments);
  var options = dirtyOptions || {};
  var locale2 = options.locale;
  var localeWeekStartsOn = locale2 && locale2.options && locale2.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
var init_startOfUTCWeek = __esm({
  "node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js"() {
    init_toDate();
    init_requiredArgs();
    init_toInteger();
  }
});

// node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
function getUTCWeekYear(dirtyDate, dirtyOptions) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var options = dirtyOptions || {};
  var locale2 = options.locale;
  var localeFirstWeekContainsDate = locale2 && locale2.options && locale2.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = /* @__PURE__ */ new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);
  var firstWeekOfThisYear = /* @__PURE__ */ new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
var init_getUTCWeekYear = __esm({
  "node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js"() {
    init_toDate();
    init_requiredArgs();
    init_startOfUTCWeek();
    init_toInteger();
  }
});

// node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
  requiredArgs(1, arguments);
  var options = dirtyOptions || {};
  var locale2 = options.locale;
  var localeFirstWeekContainsDate = locale2 && locale2.options && locale2.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
  var year = getUTCWeekYear(dirtyDate, dirtyOptions);
  var firstWeek = /* @__PURE__ */ new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, dirtyOptions);
  return date;
}
var init_startOfUTCWeekYear = __esm({
  "node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js"() {
    init_getUTCWeekYear();
    init_requiredArgs();
    init_startOfUTCWeek();
    init_toInteger();
  }
});

// node_modules/date-fns/esm/_lib/getUTCWeek/index.js
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK2) + 1;
}
var MILLISECONDS_IN_WEEK2;
var init_getUTCWeek = __esm({
  "node_modules/date-fns/esm/_lib/getUTCWeek/index.js"() {
    init_toDate();
    init_startOfUTCWeek();
    init_startOfUTCWeekYear();
    init_requiredArgs();
    MILLISECONDS_IN_WEEK2 = 6048e5;
  }
});

// node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? "-" : "";
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = "0" + output;
  }
  return sign + output;
}
var init_addLeadingZeros = __esm({
  "node_modules/date-fns/esm/_lib/addLeadingZeros/index.js"() {
  }
});

// node_modules/date-fns/esm/_lib/format/lightFormatters/index.js
var formatters, lightFormatters_default;
var init_lightFormatters = __esm({
  "node_modules/date-fns/esm/_lib/format/lightFormatters/index.js"() {
    init_addLeadingZeros();
    formatters = {
      // Year
      y: function(date, token) {
        var signedYear = date.getUTCFullYear();
        var year = signedYear > 0 ? signedYear : 1 - signedYear;
        return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
      },
      // Month
      M: function(date, token) {
        var month = date.getUTCMonth();
        return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);
      },
      // Day of the month
      d: function(date, token) {
        return addLeadingZeros(date.getUTCDate(), token.length);
      },
      // AM or PM
      a: function(date, token) {
        var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
        switch (token) {
          case "a":
          case "aa":
            return dayPeriodEnumValue.toUpperCase();
          case "aaa":
            return dayPeriodEnumValue;
          case "aaaaa":
            return dayPeriodEnumValue[0];
          case "aaaa":
          default:
            return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
        }
      },
      // Hour [1-12]
      h: function(date, token) {
        return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
      },
      // Hour [0-23]
      H: function(date, token) {
        return addLeadingZeros(date.getUTCHours(), token.length);
      },
      // Minute
      m: function(date, token) {
        return addLeadingZeros(date.getUTCMinutes(), token.length);
      },
      // Second
      s: function(date, token) {
        return addLeadingZeros(date.getUTCSeconds(), token.length);
      },
      // Fraction of second
      S: function(date, token) {
        var numberOfDigits = token.length;
        var milliseconds = date.getUTCMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
        return addLeadingZeros(fractionalSeconds, token.length);
      }
    };
    lightFormatters_default = formatters;
  }
});

// node_modules/date-fns/esm/_lib/format/formatters/index.js
function formatTimezoneShort(offset3, dirtyDelimiter) {
  var sign = offset3 > 0 ? "-" : "+";
  var absOffset = Math.abs(offset3);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter || "";
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset3, dirtyDelimiter) {
  if (offset3 % 60 === 0) {
    var sign = offset3 > 0 ? "-" : "+";
    return sign + addLeadingZeros(Math.abs(offset3) / 60, 2);
  }
  return formatTimezone(offset3, dirtyDelimiter);
}
function formatTimezone(offset3, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || "";
  var sign = offset3 > 0 ? "-" : "+";
  var absOffset = Math.abs(offset3);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
var dayPeriodEnum, formatters2, formatters_default;
var init_formatters = __esm({
  "node_modules/date-fns/esm/_lib/format/formatters/index.js"() {
    init_getUTCDayOfYear();
    init_getUTCISOWeek();
    init_getUTCISOWeekYear();
    init_getUTCWeek();
    init_getUTCWeekYear();
    init_addLeadingZeros();
    init_lightFormatters();
    dayPeriodEnum = {
      am: "am",
      pm: "pm",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    };
    formatters2 = {
      // Era
      G: function(date, token, localize2) {
        var era = date.getUTCFullYear() > 0 ? 1 : 0;
        switch (token) {
          case "G":
          case "GG":
          case "GGG":
            return localize2.era(era, {
              width: "abbreviated"
            });
          case "GGGGG":
            return localize2.era(era, {
              width: "narrow"
            });
          case "GGGG":
          default:
            return localize2.era(era, {
              width: "wide"
            });
        }
      },
      // Year
      y: function(date, token, localize2) {
        if (token === "yo") {
          var signedYear = date.getUTCFullYear();
          var year = signedYear > 0 ? signedYear : 1 - signedYear;
          return localize2.ordinalNumber(year, {
            unit: "year"
          });
        }
        return lightFormatters_default.y(date, token);
      },
      // Local week-numbering year
      Y: function(date, token, localize2, options) {
        var signedWeekYear = getUTCWeekYear(date, options);
        var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
        if (token === "YY") {
          var twoDigitYear = weekYear % 100;
          return addLeadingZeros(twoDigitYear, 2);
        }
        if (token === "Yo") {
          return localize2.ordinalNumber(weekYear, {
            unit: "year"
          });
        }
        return addLeadingZeros(weekYear, token.length);
      },
      // ISO week-numbering year
      R: function(date, token) {
        var isoWeekYear = getUTCISOWeekYear(date);
        return addLeadingZeros(isoWeekYear, token.length);
      },
      // Extended year. This is a single number designating the year of this calendar system.
      // The main difference between `y` and `u` localizers are B.C. years:
      // | Year | `y` | `u` |
      // |------|-----|-----|
      // | AC 1 |   1 |   1 |
      // | BC 1 |   1 |   0 |
      // | BC 2 |   2 |  -1 |
      // Also `yy` always returns the last two digits of a year,
      // while `uu` pads single digit years to 2 characters and returns other years unchanged.
      u: function(date, token) {
        var year = date.getUTCFullYear();
        return addLeadingZeros(year, token.length);
      },
      // Quarter
      Q: function(date, token, localize2) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch (token) {
          case "Q":
            return String(quarter);
          case "QQ":
            return addLeadingZeros(quarter, 2);
          case "Qo":
            return localize2.ordinalNumber(quarter, {
              unit: "quarter"
            });
          case "QQQ":
            return localize2.quarter(quarter, {
              width: "abbreviated",
              context: "formatting"
            });
          case "QQQQQ":
            return localize2.quarter(quarter, {
              width: "narrow",
              context: "formatting"
            });
          case "QQQQ":
          default:
            return localize2.quarter(quarter, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // Stand-alone quarter
      q: function(date, token, localize2) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch (token) {
          case "q":
            return String(quarter);
          case "qq":
            return addLeadingZeros(quarter, 2);
          case "qo":
            return localize2.ordinalNumber(quarter, {
              unit: "quarter"
            });
          case "qqq":
            return localize2.quarter(quarter, {
              width: "abbreviated",
              context: "standalone"
            });
          case "qqqqq":
            return localize2.quarter(quarter, {
              width: "narrow",
              context: "standalone"
            });
          case "qqqq":
          default:
            return localize2.quarter(quarter, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      // Month
      M: function(date, token, localize2) {
        var month = date.getUTCMonth();
        switch (token) {
          case "M":
          case "MM":
            return lightFormatters_default.M(date, token);
          case "Mo":
            return localize2.ordinalNumber(month + 1, {
              unit: "month"
            });
          case "MMM":
            return localize2.month(month, {
              width: "abbreviated",
              context: "formatting"
            });
          case "MMMMM":
            return localize2.month(month, {
              width: "narrow",
              context: "formatting"
            });
          case "MMMM":
          default:
            return localize2.month(month, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // Stand-alone month
      L: function(date, token, localize2) {
        var month = date.getUTCMonth();
        switch (token) {
          case "L":
            return String(month + 1);
          case "LL":
            return addLeadingZeros(month + 1, 2);
          case "Lo":
            return localize2.ordinalNumber(month + 1, {
              unit: "month"
            });
          case "LLL":
            return localize2.month(month, {
              width: "abbreviated",
              context: "standalone"
            });
          case "LLLLL":
            return localize2.month(month, {
              width: "narrow",
              context: "standalone"
            });
          case "LLLL":
          default:
            return localize2.month(month, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      // Local week of year
      w: function(date, token, localize2, options) {
        var week = getUTCWeek(date, options);
        if (token === "wo") {
          return localize2.ordinalNumber(week, {
            unit: "week"
          });
        }
        return addLeadingZeros(week, token.length);
      },
      // ISO week of year
      I: function(date, token, localize2) {
        var isoWeek = getUTCISOWeek(date);
        if (token === "Io") {
          return localize2.ordinalNumber(isoWeek, {
            unit: "week"
          });
        }
        return addLeadingZeros(isoWeek, token.length);
      },
      // Day of the month
      d: function(date, token, localize2) {
        if (token === "do") {
          return localize2.ordinalNumber(date.getUTCDate(), {
            unit: "date"
          });
        }
        return lightFormatters_default.d(date, token);
      },
      // Day of year
      D: function(date, token, localize2) {
        var dayOfYear = getUTCDayOfYear(date);
        if (token === "Do") {
          return localize2.ordinalNumber(dayOfYear, {
            unit: "dayOfYear"
          });
        }
        return addLeadingZeros(dayOfYear, token.length);
      },
      // Day of week
      E: function(date, token, localize2) {
        var dayOfWeek = date.getUTCDay();
        switch (token) {
          case "E":
          case "EE":
          case "EEE":
            return localize2.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "EEEEE":
            return localize2.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "EEEEEE":
            return localize2.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "EEEE":
          default:
            return localize2.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // Local day of week
      e: function(date, token, localize2, options) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
        switch (token) {
          case "e":
            return String(localDayOfWeek);
          case "ee":
            return addLeadingZeros(localDayOfWeek, 2);
          case "eo":
            return localize2.ordinalNumber(localDayOfWeek, {
              unit: "day"
            });
          case "eee":
            return localize2.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "eeeee":
            return localize2.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "eeeeee":
            return localize2.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "eeee":
          default:
            return localize2.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // Stand-alone local day of week
      c: function(date, token, localize2, options) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
        switch (token) {
          case "c":
            return String(localDayOfWeek);
          case "cc":
            return addLeadingZeros(localDayOfWeek, token.length);
          case "co":
            return localize2.ordinalNumber(localDayOfWeek, {
              unit: "day"
            });
          case "ccc":
            return localize2.day(dayOfWeek, {
              width: "abbreviated",
              context: "standalone"
            });
          case "ccccc":
            return localize2.day(dayOfWeek, {
              width: "narrow",
              context: "standalone"
            });
          case "cccccc":
            return localize2.day(dayOfWeek, {
              width: "short",
              context: "standalone"
            });
          case "cccc":
          default:
            return localize2.day(dayOfWeek, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      // ISO day of week
      i: function(date, token, localize2) {
        var dayOfWeek = date.getUTCDay();
        var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
        switch (token) {
          case "i":
            return String(isoDayOfWeek);
          case "ii":
            return addLeadingZeros(isoDayOfWeek, token.length);
          case "io":
            return localize2.ordinalNumber(isoDayOfWeek, {
              unit: "day"
            });
          case "iii":
            return localize2.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "iiiii":
            return localize2.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "iiiiii":
            return localize2.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "iiii":
          default:
            return localize2.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // AM or PM
      a: function(date, token, localize2) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
        switch (token) {
          case "a":
          case "aa":
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "aaa":
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            }).toLowerCase();
          case "aaaaa":
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "aaaa":
          default:
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // AM, PM, midnight, noon
      b: function(date, token, localize2) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;
        if (hours === 12) {
          dayPeriodEnumValue = dayPeriodEnum.noon;
        } else if (hours === 0) {
          dayPeriodEnumValue = dayPeriodEnum.midnight;
        } else {
          dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
        }
        switch (token) {
          case "b":
          case "bb":
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "bbb":
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            }).toLowerCase();
          case "bbbbb":
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "bbbb":
          default:
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // in the morning, in the afternoon, in the evening, at night
      B: function(date, token, localize2) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;
        if (hours >= 17) {
          dayPeriodEnumValue = dayPeriodEnum.evening;
        } else if (hours >= 12) {
          dayPeriodEnumValue = dayPeriodEnum.afternoon;
        } else if (hours >= 4) {
          dayPeriodEnumValue = dayPeriodEnum.morning;
        } else {
          dayPeriodEnumValue = dayPeriodEnum.night;
        }
        switch (token) {
          case "B":
          case "BB":
          case "BBB":
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "BBBBB":
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "BBBB":
          default:
            return localize2.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // Hour [1-12]
      h: function(date, token, localize2) {
        if (token === "ho") {
          var hours = date.getUTCHours() % 12;
          if (hours === 0)
            hours = 12;
          return localize2.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return lightFormatters_default.h(date, token);
      },
      // Hour [0-23]
      H: function(date, token, localize2) {
        if (token === "Ho") {
          return localize2.ordinalNumber(date.getUTCHours(), {
            unit: "hour"
          });
        }
        return lightFormatters_default.H(date, token);
      },
      // Hour [0-11]
      K: function(date, token, localize2) {
        var hours = date.getUTCHours() % 12;
        if (token === "Ko") {
          return localize2.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return addLeadingZeros(hours, token.length);
      },
      // Hour [1-24]
      k: function(date, token, localize2) {
        var hours = date.getUTCHours();
        if (hours === 0)
          hours = 24;
        if (token === "ko") {
          return localize2.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return addLeadingZeros(hours, token.length);
      },
      // Minute
      m: function(date, token, localize2) {
        if (token === "mo") {
          return localize2.ordinalNumber(date.getUTCMinutes(), {
            unit: "minute"
          });
        }
        return lightFormatters_default.m(date, token);
      },
      // Second
      s: function(date, token, localize2) {
        if (token === "so") {
          return localize2.ordinalNumber(date.getUTCSeconds(), {
            unit: "second"
          });
        }
        return lightFormatters_default.s(date, token);
      },
      // Fraction of second
      S: function(date, token) {
        return lightFormatters_default.S(date, token);
      },
      // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
      X: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        if (timezoneOffset === 0) {
          return "Z";
        }
        switch (token) {
          case "X":
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          case "XXXX":
          case "XX":
            return formatTimezone(timezoneOffset);
          case "XXXXX":
          case "XXX":
          default:
            return formatTimezone(timezoneOffset, ":");
        }
      },
      // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
      x: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "x":
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          case "xxxx":
          case "xx":
            return formatTimezone(timezoneOffset);
          case "xxxxx":
          case "xxx":
          default:
            return formatTimezone(timezoneOffset, ":");
        }
      },
      // Timezone (GMT)
      O: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "O":
          case "OO":
          case "OOO":
            return "GMT" + formatTimezoneShort(timezoneOffset, ":");
          case "OOOO":
          default:
            return "GMT" + formatTimezone(timezoneOffset, ":");
        }
      },
      // Timezone (specific non-location)
      z: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "z":
          case "zz":
          case "zzz":
            return "GMT" + formatTimezoneShort(timezoneOffset, ":");
          case "zzzz":
          default:
            return "GMT" + formatTimezone(timezoneOffset, ":");
        }
      },
      // Seconds timestamp
      t: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timestamp = Math.floor(originalDate.getTime() / 1e3);
        return addLeadingZeros(timestamp, token.length);
      },
      // Milliseconds timestamp
      T: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timestamp = originalDate.getTime();
        return addLeadingZeros(timestamp, token.length);
      }
    };
    formatters_default = formatters2;
  }
});

// node_modules/date-fns/esm/_lib/format/longFormatters/index.js
function dateLongFormatter(pattern, formatLong2) {
  switch (pattern) {
    case "P":
      return formatLong2.date({
        width: "short"
      });
    case "PP":
      return formatLong2.date({
        width: "medium"
      });
    case "PPP":
      return formatLong2.date({
        width: "long"
      });
    case "PPPP":
    default:
      return formatLong2.date({
        width: "full"
      });
  }
}
function timeLongFormatter(pattern, formatLong2) {
  switch (pattern) {
    case "p":
      return formatLong2.time({
        width: "short"
      });
    case "pp":
      return formatLong2.time({
        width: "medium"
      });
    case "ppp":
      return formatLong2.time({
        width: "long"
      });
    case "pppp":
    default:
      return formatLong2.time({
        width: "full"
      });
  }
}
function dateTimeLongFormatter(pattern, formatLong2) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong2);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong2.dateTime({
        width: "short"
      });
      break;
    case "PP":
      dateTimeFormat = formatLong2.dateTime({
        width: "medium"
      });
      break;
    case "PPP":
      dateTimeFormat = formatLong2.dateTime({
        width: "long"
      });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong2.dateTime({
        width: "full"
      });
      break;
  }
  return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong2)).replace("{{time}}", timeLongFormatter(timePattern, formatLong2));
}
var longFormatters, longFormatters_default;
var init_longFormatters = __esm({
  "node_modules/date-fns/esm/_lib/format/longFormatters/index.js"() {
    longFormatters = {
      p: timeLongFormatter,
      P: dateTimeLongFormatter
    };
    longFormatters_default = longFormatters;
  }
});

// node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}
var init_getTimezoneOffsetInMilliseconds = __esm({
  "node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js"() {
  }
});

// node_modules/date-fns/esm/_lib/protectedTokens/index.js
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format2, input) {
  if (token === "YYYY") {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  } else if (token === "YY") {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  } else if (token === "D") {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  } else if (token === "DD") {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  }
}
var protectedDayOfYearTokens, protectedWeekYearTokens;
var init_protectedTokens = __esm({
  "node_modules/date-fns/esm/_lib/protectedTokens/index.js"() {
    protectedDayOfYearTokens = ["D", "DD"];
    protectedWeekYearTokens = ["YY", "YYYY"];
  }
});

// node_modules/date-fns/esm/format/index.js
var format_exports = {};
__export(format_exports, {
  default: () => format
});
function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var options = dirtyOptions || {};
  var locale2 = options.locale || en_US_default;
  var localeFirstWeekContainsDate = locale2.options && locale2.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var localeWeekStartsOn = locale2.options && locale2.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  if (!locale2.localize) {
    throw new RangeError("locale must contain localize property");
  }
  if (!locale2.formatLong) {
    throw new RangeError("locale must contain formatLong property");
  }
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate)) {
    throw new RangeError("Invalid time value");
  }
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale: locale2,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === "p" || firstCharacter === "P") {
      var longFormatter = longFormatters_default[firstCharacter];
      return longFormatter(substring, locale2.formatLong, formatterOptions);
    }
    return substring;
  }).join("").match(formattingTokensRegExp).map(function(substring) {
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }
    var formatter = formatters_default[firstCharacter];
    if (formatter) {
      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, dirtyDate);
      }
      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, dirtyDate);
      }
      return formatter(utcDate, substring, locale2.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
    }
    return substring;
  }).join("");
  return result;
}
function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}
var formattingTokensRegExp, longFormattingTokensRegExp, escapedStringRegExp, doubleQuoteRegExp, unescapedLatinCharacterRegExp;
var init_format = __esm({
  "node_modules/date-fns/esm/format/index.js"() {
    init_isValid();
    init_en_US();
    init_subMilliseconds();
    init_toDate();
    init_formatters();
    init_longFormatters();
    init_getTimezoneOffsetInMilliseconds();
    init_protectedTokens();
    init_toInteger();
    init_requiredArgs();
    formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
    longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
    escapedStringRegExp = /^'([^]*?)'?$/;
    doubleQuoteRegExp = /''/g;
    unescapedLatinCharacterRegExp = /[a-zA-Z]/;
  }
});

// node_modules/material-table/dist/utils/data-manager.js
var require_data_manager = __commonJS({
  "node_modules/material-table/dist/utils/data-manager.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _toConsumableArray2 = _interopRequireDefault(require_toConsumableArray());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _format = _interopRequireDefault((init_format(), __toCommonJS(format_exports)));
    var _2 = require_utils();
    var DataManager = function() {
      function DataManager2() {
        var _this = this;
        (0, _classCallCheck2.default)(this, DataManager2);
        (0, _defineProperty2.default)(this, "applyFilters", false);
        (0, _defineProperty2.default)(this, "applySearch", false);
        (0, _defineProperty2.default)(this, "applySort", false);
        (0, _defineProperty2.default)(this, "currentPage", 0);
        (0, _defineProperty2.default)(this, "detailPanelType", "multiple");
        (0, _defineProperty2.default)(this, "lastDetailPanelRow", void 0);
        (0, _defineProperty2.default)(this, "lastEditingRow", void 0);
        (0, _defineProperty2.default)(this, "orderBy", -1);
        (0, _defineProperty2.default)(this, "orderDirection", "");
        (0, _defineProperty2.default)(this, "pageSize", 5);
        (0, _defineProperty2.default)(this, "paging", true);
        (0, _defineProperty2.default)(this, "parentFunc", null);
        (0, _defineProperty2.default)(this, "searchText", "");
        (0, _defineProperty2.default)(this, "selectedCount", 0);
        (0, _defineProperty2.default)(this, "treefiedDataLength", 0);
        (0, _defineProperty2.default)(this, "treeDataMaxLevel", 0);
        (0, _defineProperty2.default)(this, "groupedDataLength", 0);
        (0, _defineProperty2.default)(this, "defaultExpanded", false);
        (0, _defineProperty2.default)(this, "bulkEditOpen", false);
        (0, _defineProperty2.default)(this, "bulkEditChangedRows", {});
        (0, _defineProperty2.default)(this, "data", []);
        (0, _defineProperty2.default)(this, "columns", []);
        (0, _defineProperty2.default)(this, "filteredData", []);
        (0, _defineProperty2.default)(this, "searchedData", []);
        (0, _defineProperty2.default)(this, "groupedData", []);
        (0, _defineProperty2.default)(this, "treefiedData", []);
        (0, _defineProperty2.default)(this, "sortedData", []);
        (0, _defineProperty2.default)(this, "pagedData", []);
        (0, _defineProperty2.default)(this, "renderData", []);
        (0, _defineProperty2.default)(this, "filtered", false);
        (0, _defineProperty2.default)(this, "searched", false);
        (0, _defineProperty2.default)(this, "grouped", false);
        (0, _defineProperty2.default)(this, "treefied", false);
        (0, _defineProperty2.default)(this, "sorted", false);
        (0, _defineProperty2.default)(this, "paged", false);
        (0, _defineProperty2.default)(this, "rootGroupsIndex", {});
        (0, _defineProperty2.default)(this, "startCellEditable", function(rowData, columnDef) {
          rowData.tableData.editCellList = [].concat((0, _toConsumableArray2.default)(rowData.tableData.editCellList || []), [columnDef]);
        });
        (0, _defineProperty2.default)(this, "finishCellEditable", function(rowData, columnDef) {
          if (rowData.tableData.editCellList) {
            var index2 = rowData.tableData.editCellList.findIndex(function(c2) {
              return c2.tableData.id === columnDef.tableData.id;
            });
            if (index2 !== -1) {
              rowData.tableData.editCellList.splice(index2, 1);
            }
          }
        });
        (0, _defineProperty2.default)(this, "clearBulkEditChangedRows", function() {
          _this.bulkEditChangedRows = {};
        });
        (0, _defineProperty2.default)(this, "onBulkEditRowChanged", function(oldData, newData) {
          _this.bulkEditChangedRows[oldData.tableData.id] = {
            oldData,
            newData
          };
        });
        (0, _defineProperty2.default)(this, "expandTreeForNodes", function(data) {
          data.forEach(function(row) {
            var currentRow = row;
            while (_this.parentFunc(currentRow, _this.data)) {
              var parent = _this.parentFunc(currentRow, _this.data);
              if (parent) {
                parent.tableData.isTreeExpanded = true;
              }
              currentRow = parent;
            }
          });
        });
        (0, _defineProperty2.default)(this, "findDataByPath", function(renderData, path) {
          if (_this.isDataType("tree")) {
            var node = path.reduce(function(result, current) {
              return result && result.tableData && result.tableData.childRows && result.tableData.childRows[current];
            }, {
              tableData: {
                childRows: renderData
              }
            });
            return node;
          } else {
            var data = {
              groups: renderData
            };
            var _node = path.reduce(function(result, current) {
              if (result.groups.length > 0) {
                return result.groups[current];
              } else if (result.data) {
                return result.data[current];
              } else {
                return void 0;
              }
            }, data);
            return _node;
          }
        });
        (0, _defineProperty2.default)(this, "getFieldValue", function(rowData, columnDef) {
          var lookup = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
          var value = typeof rowData[columnDef.field] !== "undefined" ? rowData[columnDef.field] : (0, _2.byString)(rowData, columnDef.field);
          if (columnDef.lookup && lookup) {
            value = columnDef.lookup[value];
          }
          return value;
        });
        (0, _defineProperty2.default)(this, "getRenderState", function() {
          if (_this.filtered === false) {
            _this.filterData();
          }
          if (_this.searched === false) {
            _this.searchData();
          }
          if (_this.grouped === false && _this.isDataType("group")) {
            _this.groupData();
          }
          if (_this.treefied === false && _this.isDataType("tree")) {
            _this.treefyData();
          }
          if (_this.sorted === false) {
            _this.sortData();
          }
          if (_this.paged === false) {
            _this.pageData();
          }
          return {
            columns: _this.columns,
            currentPage: _this.currentPage,
            data: _this.sortedData,
            lastEditingRow: _this.lastEditingRow,
            orderBy: _this.orderBy,
            orderDirection: _this.orderDirection,
            originalData: _this.data,
            pageSize: _this.pageSize,
            renderData: _this.pagedData,
            searchText: _this.searchText,
            selectedCount: _this.selectedCount,
            treefiedDataLength: _this.treefiedDataLength,
            treeDataMaxLevel: _this.treeDataMaxLevel,
            groupedDataLength: _this.groupedDataLength
          };
        });
        (0, _defineProperty2.default)(this, "filterData", function() {
          _this.searched = _this.grouped = _this.treefied = _this.sorted = _this.paged = false;
          _this.filteredData = (0, _toConsumableArray2.default)(_this.data);
          if (_this.applyFilters) {
            _this.columns.filter(function(columnDef) {
              return columnDef.tableData.filterValue;
            }).forEach(function(columnDef) {
              var lookup = columnDef.lookup, type = columnDef.type, tableData = columnDef.tableData;
              if (columnDef.customFilterAndSearch) {
                _this.filteredData = _this.filteredData.filter(function(row) {
                  return !!columnDef.customFilterAndSearch(tableData.filterValue, row, columnDef);
                });
              } else {
                if (lookup) {
                  _this.filteredData = _this.filteredData.filter(function(row) {
                    var value = _this.getFieldValue(row, columnDef, false);
                    return !tableData.filterValue || tableData.filterValue.length === 0 || tableData.filterValue.indexOf(value !== void 0 && value !== null && value.toString()) > -1;
                  });
                } else if (type === "numeric") {
                  _this.filteredData = _this.filteredData.filter(function(row) {
                    var value = _this.getFieldValue(row, columnDef);
                    return value + "" === tableData.filterValue;
                  });
                } else if (type === "boolean" && tableData.filterValue) {
                  _this.filteredData = _this.filteredData.filter(function(row) {
                    var value = _this.getFieldValue(row, columnDef);
                    return value && tableData.filterValue === "checked" || !value && tableData.filterValue === "unchecked";
                  });
                } else if (["date", "datetime"].includes(type)) {
                  _this.filteredData = _this.filteredData.filter(function(row) {
                    var value = _this.getFieldValue(row, columnDef);
                    var currentDate = value ? new Date(value) : null;
                    if (currentDate && currentDate.toString() !== "Invalid Date") {
                      var selectedDate = tableData.filterValue;
                      var currentDateToCompare = "";
                      var selectedDateToCompare = "";
                      if (type === "date") {
                        currentDateToCompare = (0, _format.default)(currentDate, "MM/dd/yyyy");
                        selectedDateToCompare = (0, _format.default)(selectedDate, "MM/dd/yyyy");
                      } else if (type === "datetime") {
                        currentDateToCompare = (0, _format.default)(currentDate, "MM/dd/yyyy - HH:mm");
                        selectedDateToCompare = (0, _format.default)(selectedDate, "MM/dd/yyyy - HH:mm");
                      }
                      return currentDateToCompare === selectedDateToCompare;
                    }
                    return true;
                  });
                } else if (type === "time") {
                  _this.filteredData = _this.filteredData.filter(function(row) {
                    var value = _this.getFieldValue(row, columnDef);
                    var currentHour = value || null;
                    if (currentHour) {
                      var selectedHour = tableData.filterValue;
                      var currentHourToCompare = (0, _format.default)(selectedHour, "HH:mm");
                      return currentHour === currentHourToCompare;
                    }
                    return true;
                  });
                } else {
                  _this.filteredData = _this.filteredData.filter(function(row) {
                    var value = _this.getFieldValue(row, columnDef);
                    return value && value.toString().toUpperCase().includes(tableData.filterValue.toUpperCase());
                  });
                }
              }
            });
          }
          _this.filtered = true;
        });
        (0, _defineProperty2.default)(this, "searchData", function() {
          _this.grouped = _this.treefied = _this.sorted = _this.paged = false;
          _this.searchedData = (0, _toConsumableArray2.default)(_this.filteredData);
          if (_this.searchText && _this.applySearch) {
            var trimmedSearchText = _this.searchText.trim();
            _this.searchedData = _this.searchedData.filter(function(row) {
              return _this.columns.filter(function(columnDef) {
                return columnDef.searchable === void 0 ? !columnDef.hidden : columnDef.searchable;
              }).some(function(columnDef) {
                if (columnDef.customFilterAndSearch) {
                  return !!columnDef.customFilterAndSearch(trimmedSearchText, row, columnDef);
                } else if (columnDef.field) {
                  var value = _this.getFieldValue(row, columnDef);
                  if (value) {
                    return value.toString().toUpperCase().includes(trimmedSearchText.toUpperCase());
                  }
                }
              });
            });
          }
          _this.searched = true;
        });
      }
      (0, _createClass2.default)(DataManager2, [{
        key: "setData",
        value: function setData(data) {
          var _this2 = this;
          this.selectedCount = 0;
          this.data = data.map(function(row, index2) {
            row.tableData = (0, _objectSpread22.default)({}, row.tableData, {
              id: index2
            });
            if (row.tableData.checked) {
              _this2.selectedCount++;
            }
            return row;
          });
          this.filtered = false;
        }
      }, {
        key: "setColumns",
        value: function setColumns(columns) {
          var undefinedWidthColumns = columns.filter(function(c2) {
            return c2.width === void 0 && c2.columnDef ? c2.columnDef.tableData.width === void 0 : !c2.hidden;
          });
          var usedWidth = ["0px"];
          this.columns = columns.map(function(columnDef, index2) {
            columnDef.tableData = (0, _objectSpread22.default)({
              columnOrder: index2,
              filterValue: columnDef.defaultFilter,
              groupOrder: columnDef.defaultGroupOrder,
              groupSort: columnDef.defaultGroupSort || "asc",
              width: typeof columnDef.width === "number" ? columnDef.width + "px" : columnDef.width,
              initialWidth: typeof columnDef.width === "number" ? columnDef.width + "px" : columnDef.width,
              additionalWidth: 0
            }, columnDef.tableData, {
              id: index2
            });
            if (columnDef.tableData.initialWidth !== void 0) {
              usedWidth.push(columnDef.tableData.initialWidth);
            }
            return columnDef;
          });
          usedWidth = "(" + usedWidth.join(" + ") + ")";
          undefinedWidthColumns.forEach(function(columnDef) {
            columnDef.tableData.width = "calc((100% - ".concat(usedWidth, ") / ").concat(undefinedWidthColumns.length, ")");
          });
        }
      }, {
        key: "setDefaultExpanded",
        value: function setDefaultExpanded(expanded) {
          this.defaultExpanded = expanded;
        }
      }, {
        key: "changeApplySearch",
        value: function changeApplySearch(applySearch) {
          this.applySearch = applySearch;
          this.searched = false;
        }
      }, {
        key: "changeApplyFilters",
        value: function changeApplyFilters(applyFilters) {
          this.applyFilters = applyFilters;
          this.filtered = false;
        }
      }, {
        key: "changeApplySort",
        value: function changeApplySort(applySort) {
          this.applySort = applySort;
          this.sorted = false;
        }
      }, {
        key: "changePaging",
        value: function changePaging(paging) {
          this.paging = paging;
          this.paged = false;
        }
      }, {
        key: "changeCurrentPage",
        value: function changeCurrentPage(currentPage) {
          this.currentPage = currentPage;
          this.paged = false;
        }
      }, {
        key: "changePageSize",
        value: function changePageSize(pageSize) {
          this.pageSize = pageSize;
          this.paged = false;
        }
      }, {
        key: "changeParentFunc",
        value: function changeParentFunc(parentFunc) {
          this.parentFunc = parentFunc;
        }
      }, {
        key: "changeFilterValue",
        value: function changeFilterValue(columnId, value) {
          this.columns[columnId].tableData.filterValue = value;
          this.filtered = false;
        }
      }, {
        key: "changeRowSelected",
        value: function changeRowSelected(checked, path) {
          var _this3 = this;
          var rowData = this.findDataByPath(this.sortedData, path);
          rowData.tableData.checked = checked;
          this.selectedCount = this.selectedCount + (checked ? 1 : -1);
          var checkChildRows = function checkChildRows2(rowData2) {
            if (rowData2.tableData.childRows) {
              rowData2.tableData.childRows.forEach(function(childRow) {
                if (childRow.tableData.checked !== checked) {
                  childRow.tableData.checked = checked;
                  _this3.selectedCount = _this3.selectedCount + (checked ? 1 : -1);
                }
                checkChildRows2(childRow);
              });
            }
          };
          checkChildRows(rowData);
          this.filtered = false;
        }
      }, {
        key: "changeDetailPanelVisibility",
        value: function changeDetailPanelVisibility(path, render) {
          var rowData = this.findDataByPath(this.sortedData, path);
          if ((rowData.tableData.showDetailPanel || "").toString() === render.toString()) {
            rowData.tableData.showDetailPanel = void 0;
          } else {
            rowData.tableData.showDetailPanel = render;
          }
          if (this.detailPanelType === "single" && this.lastDetailPanelRow && this.lastDetailPanelRow != rowData) {
            this.lastDetailPanelRow.tableData.showDetailPanel = void 0;
          }
          this.lastDetailPanelRow = rowData;
        }
      }, {
        key: "changeGroupExpand",
        value: function changeGroupExpand(path) {
          var rowData = this.findDataByPath(this.sortedData, path);
          rowData.isExpanded = !rowData.isExpanded;
        }
      }, {
        key: "changeSearchText",
        value: function changeSearchText(searchText) {
          this.searchText = searchText;
          this.searched = false;
          this.currentPage = 0;
        }
      }, {
        key: "changeRowEditing",
        value: function changeRowEditing(rowData, mode) {
          if (rowData) {
            rowData.tableData.editing = mode;
            if (this.lastEditingRow && this.lastEditingRow != rowData) {
              this.lastEditingRow.tableData.editing = void 0;
            }
            if (mode) {
              this.lastEditingRow = rowData;
            } else {
              this.lastEditingRow = void 0;
            }
          } else if (this.lastEditingRow) {
            this.lastEditingRow.tableData.editing = void 0;
            this.lastEditingRow = void 0;
          }
        }
      }, {
        key: "changeBulkEditOpen",
        value: function changeBulkEditOpen(bulkEditOpen) {
          this.bulkEditOpen = bulkEditOpen;
        }
      }, {
        key: "changeAllSelected",
        value: function changeAllSelected(checked) {
          var selectedCount = 0;
          if (this.isDataType("group")) {
            var setCheck = function setCheck2(data) {
              data.forEach(function(element) {
                if (element.groups.length > 0) {
                  setCheck2(element.groups);
                } else {
                  element.data.forEach(function(d2) {
                    d2.tableData.checked = d2.tableData.disabled ? false : checked;
                    selectedCount++;
                  });
                }
              });
            };
            setCheck(this.groupedData);
          } else {
            this.searchedData.map(function(row) {
              row.tableData.checked = row.tableData.disabled ? false : checked;
              return row;
            });
            selectedCount = this.searchedData.length;
          }
          this.selectedCount = checked ? selectedCount : 0;
        }
      }, {
        key: "changeOrder",
        value: function changeOrder(orderBy, orderDirection) {
          this.orderBy = orderBy;
          this.orderDirection = orderDirection;
          this.currentPage = 0;
          this.sorted = false;
        }
      }, {
        key: "changeGroupOrder",
        value: function changeGroupOrder(columnId) {
          var column = this.columns.find(function(c2) {
            return c2.tableData.id === columnId;
          });
          if (column.tableData.groupSort === "asc") {
            column.tableData.groupSort = "desc";
          } else {
            column.tableData.groupSort = "asc";
          }
          this.sorted = false;
        }
      }, {
        key: "changeColumnHidden",
        value: function changeColumnHidden(column, hidden) {
          column.hidden = hidden;
          column.hiddenByColumnsButton = hidden;
        }
      }, {
        key: "changeTreeExpand",
        value: function changeTreeExpand(path) {
          var rowData = this.findDataByPath(this.sortedData, path);
          rowData.tableData.isTreeExpanded = !rowData.tableData.isTreeExpanded;
        }
      }, {
        key: "changeDetailPanelType",
        value: function changeDetailPanelType(type) {
          this.detailPanelType = type;
        }
      }, {
        key: "changeByDrag",
        value: function changeByDrag(result) {
          var start3 = 0;
          var groups = this.columns.filter(function(col) {
            return col.tableData.groupOrder > -1;
          }).sort(function(col1, col2) {
            return col1.tableData.groupOrder - col2.tableData.groupOrder;
          });
          if (result.destination.droppableId === "groups" && result.source.droppableId === "groups") {
            start3 = Math.min(result.destination.index, result.source.index);
            var end2 = Math.max(result.destination.index, result.source.index);
            groups = groups.slice(start3, end2 + 1);
            if (result.destination.index < result.source.index) {
              var last = groups.pop();
              groups.unshift(last);
            } else {
              var _last = groups.shift();
              groups.push(_last);
            }
          } else if (result.destination.droppableId === "groups" && result.source.droppableId === "headers") {
            var newGroup = this.columns.find(function(c2) {
              return c2.tableData.id == result.draggableId;
            });
            if (newGroup.grouping === false || !newGroup.field) {
              return;
            }
            groups.splice(result.destination.index, 0, newGroup);
          } else if (result.destination.droppableId === "headers" && result.source.droppableId === "groups") {
            var removeGroup = this.columns.find(function(c2) {
              return c2.tableData.id == result.draggableId;
            });
            removeGroup.tableData.groupOrder = void 0;
            groups.splice(result.source.index, 1);
          } else if (result.destination.droppableId === "headers" && result.source.droppableId === "headers") {
            start3 = Math.min(result.destination.index, result.source.index);
            var _end = Math.max(result.destination.index, result.source.index);
            var sorted = this.columns.sort(function(a2, b2) {
              return a2.tableData.columnOrder - b2.tableData.columnOrder;
            }).filter(function(column) {
              return column.tableData.groupOrder === void 0;
            });
            var numHiddenBeforeStart = 0;
            var numVisibleBeforeStart = 0;
            for (var i2 = 0; i2 < sorted.length && numVisibleBeforeStart <= start3; i2++) {
              if (sorted[i2].hidden) {
                numHiddenBeforeStart++;
              } else {
                numVisibleBeforeStart++;
              }
            }
            var effectiveStart = start3 + numHiddenBeforeStart;
            var effectiveEnd = effectiveStart;
            for (var numVisibleInRange = 0; numVisibleInRange < _end - start3 && effectiveEnd < sorted.length; effectiveEnd++) {
              if (!sorted[effectiveEnd].hidden) {
                numVisibleInRange++;
              }
            }
            var colsToMov = sorted.slice(effectiveStart, effectiveEnd + 1);
            if (result.destination.index < result.source.index) {
              var _last2 = colsToMov.pop();
              colsToMov.unshift(_last2);
            } else {
              var _last3 = colsToMov.shift();
              colsToMov.push(_last3);
            }
            for (var _i = 0; _i < colsToMov.length; _i++) {
              colsToMov[_i].tableData.columnOrder = effectiveStart + _i;
            }
            return;
          } else {
            return;
          }
          for (var _i2 = 0; _i2 < groups.length; _i2++) {
            groups[_i2].tableData.groupOrder = start3 + _i2;
          }
          this.sorted = this.grouped = false;
        }
      }, {
        key: "onColumnResized",
        value: function onColumnResized(id, additionalWidth) {
          var column = this.columns.find(function(c2) {
            return c2.tableData.id === id;
          });
          if (!column)
            return;
          var nextColumn = this.columns.find(function(c2) {
            return c2.tableData.id === id + 1;
          });
          if (!nextColumn)
            return;
          column.tableData.additionalWidth = additionalWidth;
          column.tableData.width = "calc(".concat(column.tableData.initialWidth, " + ").concat(column.tableData.additionalWidth, "px)");
        }
      }, {
        key: "findGroupByGroupPath",
        value: function findGroupByGroupPath(renderData, path) {
          var data = {
            groups: renderData,
            groupsIndex: this.rootGroupsIndex
          };
          var node = path.reduce(function(result, current) {
            if (!result) {
              return void 0;
            }
            if (result.groupsIndex[current] !== void 0) {
              return result.groups[result.groupsIndex[current]];
            }
            return void 0;
          }, data);
          return node;
        }
      }, {
        key: "isDataType",
        value: function isDataType(type) {
          var dataType = "normal";
          if (this.parentFunc) {
            dataType = "tree";
          } else if (this.columns.find(function(a2) {
            return a2.tableData.groupOrder > -1;
          })) {
            dataType = "group";
          }
          return type === dataType;
        }
      }, {
        key: "sort",
        value: function sort(a2, b2, type) {
          if (type === "numeric") {
            return a2 - b2;
          } else {
            if (a2 !== b2) {
              if (!a2)
                return -1;
              if (!b2)
                return 1;
            }
            return a2 < b2 ? -1 : a2 > b2 ? 1 : 0;
          }
        }
      }, {
        key: "sortList",
        value: function sortList(list) {
          var _this4 = this;
          var columnDef = this.columns.find(function(_3) {
            return _3.tableData.id === _this4.orderBy;
          });
          var result = list;
          if (columnDef.customSort) {
            if (this.orderDirection === "desc") {
              result = list.sort(function(a2, b2) {
                return columnDef.customSort(b2, a2, "row", "desc");
              });
            } else {
              result = list.sort(function(a2, b2) {
                return columnDef.customSort(a2, b2, "row");
              });
            }
          } else {
            result = list.sort(this.orderDirection === "desc" ? function(a2, b2) {
              return _this4.sort(_this4.getFieldValue(b2, columnDef), _this4.getFieldValue(a2, columnDef), columnDef.type);
            } : function(a2, b2) {
              return _this4.sort(_this4.getFieldValue(a2, columnDef), _this4.getFieldValue(b2, columnDef), columnDef.type);
            });
          }
          return result;
        }
        // =====================================================================================================
        // DATA MANUPULATIONS
        // =====================================================================================================
      }, {
        key: "groupData",
        value: function groupData() {
          var _this5 = this;
          this.sorted = this.paged = false;
          this.groupedDataLength = 0;
          var tmpData = (0, _toConsumableArray2.default)(this.searchedData);
          var groups = this.columns.filter(function(col) {
            return col.tableData.groupOrder > -1;
          }).sort(function(col1, col2) {
            return col1.tableData.groupOrder - col2.tableData.groupOrder;
          });
          var subData = tmpData.reduce(function(result, currentRow) {
            var object = result;
            object = groups.reduce(function(o2, colDef) {
              var value = currentRow[colDef.field] || (0, _2.byString)(currentRow, colDef.field);
              var group;
              if (o2.groupsIndex[value] !== void 0) {
                group = o2.groups[o2.groupsIndex[value]];
              }
              if (!group) {
                var path = [].concat((0, _toConsumableArray2.default)(o2.path || []), [value]);
                var oldGroup = _this5.findGroupByGroupPath(_this5.groupedData, path) || {
                  isExpanded: typeof _this5.defaultExpanded === "boolean" ? _this5.defaultExpanded : false
                };
                group = {
                  value,
                  groups: [],
                  groupsIndex: {},
                  data: [],
                  isExpanded: oldGroup.isExpanded,
                  path
                };
                o2.groups.push(group);
                o2.groupsIndex[value] = o2.groups.length - 1;
              }
              return group;
            }, object);
            object.data.push(currentRow);
            _this5.groupedDataLength++;
            return result;
          }, {
            groups: [],
            groupsIndex: {}
          });
          this.groupedData = subData.groups;
          this.grouped = true;
          this.rootGroupsIndex = subData.groupsIndex;
        }
      }, {
        key: "treefyData",
        value: function treefyData() {
          var _this6 = this;
          this.sorted = this.paged = false;
          this.data.forEach(function(a2) {
            return a2.tableData.childRows = null;
          });
          this.treefiedData = [];
          this.treefiedDataLength = 0;
          this.treeDataMaxLevel = 0;
          if (this.searchText || this.columns.some(function(columnDef) {
            return columnDef.tableData.filterValue;
          })) {
            this.data.forEach(function(row) {
              row.tableData.isTreeExpanded = false;
            });
            this.expandTreeForNodes(this.searchedData);
          }
          var addRow = function addRow2(rowData) {
            rowData.tableData.markedForTreeRemove = false;
            var parent = _this6.parentFunc(rowData, _this6.data);
            if (parent) {
              parent.tableData.childRows = parent.tableData.childRows || [];
              if (!parent.tableData.childRows.includes(rowData)) {
                parent.tableData.childRows.push(rowData);
                _this6.treefiedDataLength++;
              }
              addRow2(parent);
              rowData.tableData.path = [].concat((0, _toConsumableArray2.default)(parent.tableData.path), [parent.tableData.childRows.length - 1]);
              _this6.treeDataMaxLevel = Math.max(_this6.treeDataMaxLevel, rowData.tableData.path.length);
            } else {
              if (!_this6.treefiedData.includes(rowData)) {
                _this6.treefiedData.push(rowData);
                _this6.treefiedDataLength++;
                rowData.tableData.path = [_this6.treefiedData.length - 1];
              }
            }
          };
          this.data.forEach(function(rowData) {
            addRow(rowData);
          });
          var markForTreeRemove = function markForTreeRemove2(rowData) {
            var pointer = _this6.treefiedData;
            rowData.tableData.path.forEach(function(pathPart) {
              if (pointer.tableData && pointer.tableData.childRows) {
                pointer = pointer.tableData.childRows;
              }
              pointer = pointer[pathPart];
            });
            pointer.tableData.markedForTreeRemove = true;
          };
          var traverseChildrenAndUnmark = function traverseChildrenAndUnmark2(rowData) {
            if (rowData.tableData.childRows) {
              rowData.tableData.childRows.forEach(function(row) {
                traverseChildrenAndUnmark2(row);
              });
            }
            rowData.tableData.markedForTreeRemove = false;
          };
          this.data.forEach(function(rowData) {
            if (!_this6.searchText && !_this6.columns.some(function(columnDef) {
              return columnDef.tableData.filterValue;
            })) {
              if (rowData.tableData.isTreeExpanded === void 0) {
                var isExpanded = typeof _this6.defaultExpanded === "boolean" ? _this6.defaultExpanded : _this6.defaultExpanded(rowData);
                rowData.tableData.isTreeExpanded = isExpanded;
              }
            }
            var hasSearchMatchedChildren = rowData.tableData.isTreeExpanded;
            if (!hasSearchMatchedChildren && _this6.searchedData.indexOf(rowData) < 0) {
              markForTreeRemove(rowData);
            }
          });
          this.data.forEach(function(rowData) {
            if (_this6.searchedData.indexOf(rowData) > -1) {
              traverseChildrenAndUnmark(rowData);
            }
          });
          var traverseTreeAndDeleteMarked = function traverseTreeAndDeleteMarked2(rowDataArray) {
            for (var i2 = rowDataArray.length - 1; i2 >= 0; i2--) {
              var item = rowDataArray[i2];
              if (item.tableData.childRows) {
                traverseTreeAndDeleteMarked2(item.tableData.childRows);
              }
              if (item.tableData.markedForTreeRemove)
                rowDataArray.splice(i2, 1);
            }
          };
          traverseTreeAndDeleteMarked(this.treefiedData);
          this.treefied = true;
        }
      }, {
        key: "sortData",
        value: function sortData() {
          var _this7 = this;
          this.paged = false;
          if (this.isDataType("group")) {
            this.sortedData = (0, _toConsumableArray2.default)(this.groupedData);
            var groups = this.columns.filter(function(col) {
              return col.tableData.groupOrder > -1;
            }).sort(function(col1, col2) {
              return col1.tableData.groupOrder - col2.tableData.groupOrder;
            });
            var sortGroups = function sortGroups2(list, columnDef) {
              if (columnDef.customSort) {
                return list.sort(columnDef.tableData.groupSort === "desc" ? function(a2, b2) {
                  return columnDef.customSort(b2.value, a2.value, "group");
                } : function(a2, b2) {
                  return columnDef.customSort(a2.value, b2.value, "group");
                });
              } else {
                return list.sort(columnDef.tableData.groupSort === "desc" ? function(a2, b2) {
                  return _this7.sort(b2.value, a2.value, columnDef.type);
                } : function(a2, b2) {
                  return _this7.sort(a2.value, b2.value, columnDef.type);
                });
              }
            };
            this.sortedData = sortGroups(this.sortedData, groups[0]);
            var sortGroupData = function sortGroupData2(list, level) {
              list.forEach(function(element) {
                if (element.groups.length > 0) {
                  var column = groups[level];
                  element.groups = sortGroups(element.groups, column);
                  sortGroupData2(element.groups, level + 1);
                } else {
                  if (_this7.orderBy >= 0 && _this7.orderDirection) {
                    element.data = _this7.sortList(element.data);
                  }
                }
              });
            };
            sortGroupData(this.sortedData, 1);
          } else if (this.isDataType("tree")) {
            this.sortedData = (0, _toConsumableArray2.default)(this.treefiedData);
            if (this.orderBy != -1) {
              this.sortedData = this.sortList(this.sortedData);
              var sortTree = function sortTree2(list) {
                list.forEach(function(item) {
                  if (item.tableData.childRows) {
                    item.tableData.childRows = _this7.sortList(item.tableData.childRows);
                    sortTree2(item.tableData.childRows);
                  }
                });
              };
              sortTree(this.sortedData);
            }
          } else if (this.isDataType("normal")) {
            this.sortedData = (0, _toConsumableArray2.default)(this.searchedData);
            if (this.orderBy != -1 && this.applySort) {
              this.sortedData = this.sortList(this.sortedData);
            }
          }
          this.sorted = true;
        }
      }, {
        key: "pageData",
        value: function pageData() {
          this.pagedData = (0, _toConsumableArray2.default)(this.sortedData);
          if (this.paging) {
            var startIndex = this.currentPage * this.pageSize;
            var endIndex = startIndex + this.pageSize;
            this.pagedData = this.pagedData.slice(startIndex, endIndex);
          }
          this.paged = true;
        }
      }]);
      return DataManager2;
    }();
    exports.default = DataManager;
  }
});

// node_modules/debounce/index.js
var require_debounce = __commonJS({
  "node_modules/debounce/index.js"(exports, module) {
    function debounce(func, wait, immediate2) {
      var timeout, args, context, timestamp, result;
      if (null == wait)
        wait = 100;
      function later() {
        var last = Date.now() - timestamp;
        if (last < wait && last >= 0) {
          timeout = setTimeout(later, wait - last);
        } else {
          timeout = null;
          if (!immediate2) {
            result = func.apply(context, args);
            context = args = null;
          }
        }
      }
      ;
      var debounced = function() {
        context = this;
        args = arguments;
        timestamp = Date.now();
        var callNow = immediate2 && !timeout;
        if (!timeout)
          timeout = setTimeout(later, wait);
        if (callNow) {
          result = func.apply(context, args);
          context = args = null;
        }
        return result;
      };
      debounced.clear = function() {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }
      };
      debounced.flush = function() {
        if (timeout) {
          result = func.apply(context, args);
          context = args = null;
          clearTimeout(timeout);
          timeout = null;
        }
      };
      return debounced;
    }
    debounce.debounce = debounce;
    module.exports = debounce;
  }
});

// node_modules/material-table/dist/material-table.js
var require_material_table = __commonJS({
  "node_modules/material-table/dist/material-table.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof3 = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _extends2 = _interopRequireDefault(require_extends());
    var _toConsumableArray2 = _interopRequireDefault(require_toConsumableArray());
    var _typeof2 = _interopRequireDefault(require_typeof());
    var _objectSpread22 = _interopRequireDefault(require_objectSpread());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _Table = _interopRequireDefault((init_Table(), __toCommonJS(Table_exports)));
    var _TableFooter = _interopRequireDefault((init_TableFooter(), __toCommonJS(TableFooter_exports)));
    var _TableRow = _interopRequireDefault((init_TableRow(), __toCommonJS(TableRow_exports)));
    var _LinearProgress = _interopRequireDefault((init_LinearProgress(), __toCommonJS(LinearProgress_exports)));
    var _reactDoubleScrollbar = _interopRequireDefault(require_DoubleScrollbar());
    var React62 = _interopRequireWildcard(require_react());
    var _components = require_components();
    var _reactBeautifulDnd = (init_react_beautiful_dnd_esm(), __toCommonJS(react_beautiful_dnd_esm_exports));
    var _dataManager = _interopRequireDefault(require_data_manager());
    var _debounce = require_debounce();
    var _fastDeepEqual = _interopRequireDefault(require_fast_deep_equal());
    var _styles = (init_styles2(), __toCommonJS(styles_exports2));
    var CommonValues = _interopRequireWildcard(require_common_values());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache3 = _getRequireWildcardCache(nodeInterop);
      if (cache3 && cache3.has(obj)) {
        return cache3.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache3) {
        cache3.set(obj, newObj);
      }
      return newObj;
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = (0, _getPrototypeOf2.default)(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return (0, _possibleConstructorReturn2.default)(this, result);
      };
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e2) {
        return false;
      }
    }
    var MaterialTable = function(_React$Component) {
      (0, _inherits2.default)(MaterialTable2, _React$Component);
      var _super = _createSuper(MaterialTable2);
      function MaterialTable2(_props) {
        var _this;
        (0, _classCallCheck2.default)(this, MaterialTable2);
        _this = _super.call(this, _props);
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "dataManager", new _dataManager.default());
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isRemoteData", function(props) {
          return !Array.isArray((props || _this.props).data);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isOutsidePageNumbers", function(props) {
          return props.page !== void 0 && props.totalCount !== void 0;
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onAllSelected", function(checked) {
          _this.dataManager.changeAllSelected(checked);
          _this.setState(_this.dataManager.getRenderState(), function() {
            return _this.onSelectionChange();
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChangeColumnHidden", function(column, hidden) {
          _this.dataManager.changeColumnHidden(column, hidden);
          _this.setState(_this.dataManager.getRenderState(), function() {
            _this.props.onChangeColumnHidden && _this.props.onChangeColumnHidden(column, hidden);
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChangeGroupOrder", function(groupedColumn) {
          _this.dataManager.changeGroupOrder(groupedColumn.tableData.id);
          _this.setState(_this.dataManager.getRenderState());
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChangeOrder", function(orderBy, orderDirection) {
          var newOrderBy = orderDirection === "" ? -1 : orderBy;
          _this.dataManager.changeOrder(newOrderBy, orderDirection);
          if (_this.isRemoteData()) {
            var query = (0, _objectSpread22.default)({}, _this.state.query);
            query.page = 0;
            query.orderBy = _this.state.columns.find(function(a2) {
              return a2.tableData.id === newOrderBy;
            });
            query.orderDirection = orderDirection;
            _this.onQueryChange(query, function() {
              _this.props.onOrderChange && _this.props.onOrderChange(newOrderBy, orderDirection);
            });
          } else {
            _this.setState(_this.dataManager.getRenderState(), function() {
              _this.props.onOrderChange && _this.props.onOrderChange(newOrderBy, orderDirection);
            });
          }
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChangePage", function(event, page) {
          if (_this.isRemoteData()) {
            var query = (0, _objectSpread22.default)({}, _this.state.query);
            query.page = page;
            _this.onQueryChange(query, function() {
              _this.props.onChangePage && _this.props.onChangePage(page, query.pageSize);
            });
          } else {
            if (!_this.isOutsidePageNumbers(_this.props)) {
              _this.dataManager.changeCurrentPage(page);
            }
            _this.setState(_this.dataManager.getRenderState(), function() {
              _this.props.onChangePage && _this.props.onChangePage(page, _this.state.pageSize);
            });
          }
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChangeRowsPerPage", function(event) {
          var pageSize = event.target.value;
          _this.dataManager.changePageSize(pageSize);
          _this.props.onChangePage && _this.props.onChangePage(0, pageSize);
          if (_this.isRemoteData()) {
            var query = (0, _objectSpread22.default)({}, _this.state.query);
            query.pageSize = event.target.value;
            query.page = 0;
            _this.onQueryChange(query, function() {
              _this.props.onChangeRowsPerPage && _this.props.onChangeRowsPerPage(pageSize);
            });
          } else {
            _this.dataManager.changeCurrentPage(0);
            _this.setState(_this.dataManager.getRenderState(), function() {
              _this.props.onChangeRowsPerPage && _this.props.onChangeRowsPerPage(pageSize);
            });
          }
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onDragEnd", function(result) {
          if (!result || !result.source || !result.destination)
            return;
          _this.dataManager.changeByDrag(result);
          _this.setState(_this.dataManager.getRenderState(), function() {
            if (_this.props.onColumnDragged && result.destination.droppableId === "headers" && result.source.droppableId === "headers") {
              _this.props.onColumnDragged(result.source.index, result.destination.index);
            }
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onGroupExpandChanged", function(path) {
          _this.dataManager.changeGroupExpand(path);
          _this.setState(_this.dataManager.getRenderState());
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onGroupRemoved", function(groupedColumn, index2) {
          var result = {
            combine: null,
            destination: {
              droppableId: "headers",
              index: 0
            },
            draggableId: groupedColumn.tableData.id,
            mode: "FLUID",
            reason: "DROP",
            source: {
              index: index2,
              droppableId: "groups"
            },
            type: "DEFAULT"
          };
          _this.dataManager.changeByDrag(result);
          _this.setState(_this.dataManager.getRenderState(), function() {
            _this.props.onGroupRemoved && _this.props.onGroupRemoved(groupedColumn, index2);
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onEditingApproved", function(mode, newData, oldData) {
          if (mode === "add" && _this.props.editable && _this.props.editable.onRowAdd) {
            _this.setState({
              isLoading: true
            }, function() {
              _this.props.editable.onRowAdd(newData).then(function(result) {
                _this.setState({
                  isLoading: false,
                  showAddRow: false
                }, function() {
                  if (_this.isRemoteData()) {
                    _this.onQueryChange(_this.state.query);
                  }
                });
              }).catch(function(reason) {
                var errorState = {
                  message: reason,
                  errorCause: "add"
                };
                _this.setState({
                  isLoading: false,
                  errorState
                });
              });
            });
          } else if (mode === "update" && _this.props.editable && _this.props.editable.onRowUpdate) {
            _this.setState({
              isLoading: true
            }, function() {
              _this.props.editable.onRowUpdate(newData, oldData).then(function(result) {
                _this.dataManager.changeRowEditing(oldData);
                _this.setState((0, _objectSpread22.default)({
                  isLoading: false
                }, _this.dataManager.getRenderState()), function() {
                  if (_this.isRemoteData()) {
                    _this.onQueryChange(_this.state.query);
                  }
                });
              }).catch(function(reason) {
                var errorState = {
                  message: reason,
                  errorCause: "update"
                };
                _this.setState({
                  isLoading: false,
                  errorState
                });
              });
            });
          } else if (mode === "delete" && _this.props.editable && _this.props.editable.onRowDelete) {
            _this.setState({
              isLoading: true
            }, function() {
              _this.props.editable.onRowDelete(oldData).then(function(result) {
                _this.dataManager.changeRowEditing(oldData);
                _this.setState((0, _objectSpread22.default)({
                  isLoading: false
                }, _this.dataManager.getRenderState()), function() {
                  if (_this.isRemoteData()) {
                    _this.onQueryChange(_this.state.query);
                  }
                });
              }).catch(function(reason) {
                var errorState = {
                  message: reason,
                  errorCause: "delete"
                };
                _this.setState({
                  isLoading: false,
                  errorState
                });
              });
            });
          } else if (mode === "bulk" && _this.props.editable && _this.props.editable.onBulkUpdate) {
            _this.setState({
              isLoading: true
            }, function() {
              _this.props.editable.onBulkUpdate(_this.dataManager.bulkEditChangedRows).then(function(result) {
                _this.dataManager.changeBulkEditOpen(false);
                _this.dataManager.clearBulkEditChangedRows();
                _this.setState((0, _objectSpread22.default)({
                  isLoading: false
                }, _this.dataManager.getRenderState()), function() {
                  if (_this.isRemoteData()) {
                    _this.onQueryChange(_this.state.query);
                  }
                });
              }).catch(function(reason) {
                var errorState = {
                  message: reason,
                  errorCause: "bulk edit"
                };
                _this.setState({
                  isLoading: false,
                  errorState
                });
              });
            });
          }
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onEditingCanceled", function(mode, rowData) {
          if (mode === "add") {
            _this.props.editable.onRowAddCancelled && _this.props.editable.onRowAddCancelled();
            _this.setState({
              showAddRow: false
            });
          } else if (mode === "update") {
            _this.props.editable.onRowUpdateCancelled && _this.props.editable.onRowUpdateCancelled();
            _this.dataManager.changeRowEditing(rowData);
            _this.setState(_this.dataManager.getRenderState());
          } else if (mode === "delete") {
            _this.dataManager.changeRowEditing(rowData);
            _this.setState(_this.dataManager.getRenderState());
          }
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "retry", function() {
          _this.onQueryChange(_this.state.query);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onQueryChange", function(query, callback) {
          query = (0, _objectSpread22.default)({}, _this.state.query, query, {
            error: _this.state.errorState
          });
          _this.setState({
            isLoading: true,
            errorState: void 0
          }, function() {
            _this.props.data(query).then(function(result) {
              query.totalCount = result.totalCount;
              query.page = result.page;
              _this.dataManager.setData(result.data);
              _this.setState((0, _objectSpread22.default)({
                isLoading: false,
                errorState: false
              }, _this.dataManager.getRenderState(), {
                query
              }), function() {
                callback && callback();
              });
            }).catch(function(error2) {
              var localization = (0, _objectSpread22.default)({}, MaterialTable2.defaultProps.localization, _this.props.localization);
              var errorState = {
                message: (0, _typeof2.default)(error2) === "object" ? error2.message : error2 !== void 0 ? error2 : localization.error,
                errorCause: "query"
              };
              _this.setState((0, _objectSpread22.default)({
                isLoading: false,
                errorState
              }, _this.dataManager.getRenderState()));
            });
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onRowSelected", function(event, path, dataClicked) {
          _this.dataManager.changeRowSelected(event.target.checked, path);
          _this.setState(_this.dataManager.getRenderState(), function() {
            return _this.onSelectionChange(dataClicked);
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onSelectionChange", function(dataClicked) {
          if (_this.props.onSelectionChange) {
            var selectedRows = [];
            var findSelecteds = function findSelecteds2(list) {
              list.forEach(function(row) {
                if (row.tableData.checked) {
                  selectedRows.push(row);
                }
              });
            };
            findSelecteds(_this.state.originalData);
            _this.props.onSelectionChange(selectedRows, dataClicked);
          }
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onSearchChangeDebounce", (0, _debounce.debounce)(function(searchText) {
          if (_this.isRemoteData()) {
            var query = (0, _objectSpread22.default)({}, _this.state.query);
            query.page = 0;
            query.search = searchText;
            _this.onQueryChange(query);
          } else {
            _this.setState(_this.dataManager.getRenderState(), function() {
              _this.props.onSearchChange && _this.props.onSearchChange(searchText);
            });
          }
        }, _this.props.options.debounceInterval));
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onFilterChange", function(columnId, value) {
          _this.dataManager.changeFilterValue(columnId, value);
          _this.setState({}, _this.onFilterChangeDebounce);
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onFilterChangeDebounce", (0, _debounce.debounce)(function() {
          if (_this.isRemoteData()) {
            var query = (0, _objectSpread22.default)({}, _this.state.query);
            query.page = 0;
            query.filters = _this.state.columns.filter(function(a2) {
              return a2.tableData.filterValue;
            }).map(function(a2) {
              return {
                column: a2,
                operator: "=",
                value: a2.tableData.filterValue
              };
            });
            _this.onQueryChange(query);
          } else {
            _this.setState(_this.dataManager.getRenderState(), function() {
              if (_this.props.onFilterChange) {
                var appliedFilters = _this.state.columns.filter(function(a2) {
                  return a2.tableData.filterValue;
                }).map(function(a2) {
                  return {
                    column: a2,
                    operator: "=",
                    value: a2.tableData.filterValue
                  };
                });
                _this.props.onFilterChange(appliedFilters);
              }
            });
          }
        }, _this.props.options.debounceInterval));
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onTreeExpandChanged", function(path, data) {
          _this.dataManager.changeTreeExpand(path);
          _this.setState(_this.dataManager.getRenderState(), function() {
            _this.props.onTreeExpandChange && _this.props.onTreeExpandChange(data, data.tableData.isTreeExpanded);
          });
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onToggleDetailPanel", function(path, render) {
          _this.dataManager.changeDetailPanelVisibility(path, render);
          _this.setState(_this.dataManager.getRenderState());
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onCellEditStarted", function(rowData, columnDef) {
          _this.dataManager.startCellEditable(rowData, columnDef);
          _this.setState(_this.dataManager.getRenderState());
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onCellEditFinished", function(rowData, columnDef) {
          _this.dataManager.finishCellEditable(rowData, columnDef);
          _this.setState(_this.dataManager.getRenderState());
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onEditRowDataChanged", function(rowData, newData) {
          _this.dataManager.setEditRowData(rowData, newData);
          _this.setState(_this.dataManager.getRenderState());
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onColumnResized", function(id, additionalWidth) {
          _this.dataManager.onColumnResized(id, additionalWidth);
          _this.setState(_this.dataManager.getRenderState());
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderTable", function(props) {
          return React62.createElement(_Table.default, {
            style: {
              tableLayout: props.options.fixedColumns && (props.options.fixedColumns.left || props.options.fixedColumns.right) ? "fixed" : props.options.tableLayout
            }
          }, props.options.header && React62.createElement(props.components.Header, {
            actions: props.actions,
            localization: (0, _objectSpread22.default)({}, MaterialTable2.defaultProps.localization.header, _this.props.localization.header),
            columns: _this.state.columns,
            hasSelection: props.options.selection,
            headerStyle: props.options.headerStyle,
            icons: props.icons,
            selectedCount: _this.state.selectedCount,
            dataCount: props.parentChildData ? _this.state.treefiedDataLength : _this.state.columns.filter(function(col) {
              return col.tableData.groupOrder > -1;
            }).length > 0 ? _this.state.groupedDataLength : _this.state.data.length,
            hasDetailPanel: !!props.detailPanel,
            detailPanelColumnAlignment: props.options.detailPanelColumnAlignment,
            showActionsColumn: props.actions && props.actions.filter(function(a2) {
              return a2.position === "row" || typeof a2 === "function";
            }).length > 0,
            showSelectAllCheckbox: props.options.showSelectAllCheckbox,
            orderBy: _this.state.orderBy,
            orderDirection: _this.state.orderDirection,
            onAllSelected: _this.onAllSelected,
            onOrderChange: _this.onChangeOrder,
            actionsHeaderIndex: props.options.actionsColumnIndex,
            sorting: props.options.sorting,
            grouping: props.options.grouping,
            isTreeData: _this.props.parentChildData !== void 0,
            draggable: props.options.draggable,
            thirdSortClick: props.options.thirdSortClick,
            treeDataMaxLevel: _this.state.treeDataMaxLevel,
            options: props.options,
            onColumnResized: _this.onColumnResized,
            scrollWidth: _this.state.width
          }), React62.createElement(props.components.Body, {
            actions: props.actions,
            components: props.components,
            icons: props.icons,
            renderData: _this.state.renderData,
            currentPage: _this.state.currentPage,
            initialFormData: props.initialFormData,
            pageSize: _this.state.pageSize,
            columns: _this.state.columns,
            errorState: _this.state.errorState,
            detailPanel: props.detailPanel,
            options: props.options,
            getFieldValue: _this.dataManager.getFieldValue,
            isTreeData: _this.props.parentChildData !== void 0,
            onFilterChanged: _this.onFilterChange,
            onRowSelected: _this.onRowSelected,
            onToggleDetailPanel: _this.onToggleDetailPanel,
            onGroupExpandChanged: _this.onGroupExpandChanged,
            onTreeExpandChanged: _this.onTreeExpandChanged,
            onEditingCanceled: _this.onEditingCanceled,
            onEditingApproved: _this.onEditingApproved,
            localization: (0, _objectSpread22.default)({}, MaterialTable2.defaultProps.localization.body, _this.props.localization.body),
            onRowClick: _this.props.onRowClick,
            showAddRow: _this.state.showAddRow,
            hasAnyEditingRow: !!(_this.state.lastEditingRow || _this.state.showAddRow),
            hasDetailPanel: !!props.detailPanel,
            treeDataMaxLevel: _this.state.treeDataMaxLevel,
            cellEditable: props.cellEditable,
            onCellEditStarted: _this.onCellEditStarted,
            onCellEditFinished: _this.onCellEditFinished,
            bulkEditOpen: _this.dataManager.bulkEditOpen,
            onBulkEditRowChanged: _this.dataManager.onBulkEditRowChanged,
            scrollWidth: _this.state.width
          }));
        });
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getColumnsWidth", function(props, count2) {
          var result = [];
          var actionsWidth = CommonValues.actionsColumnWidth(props);
          if (actionsWidth > 0) {
            if (count2 > 0 && props.options.actionsColumnIndex >= 0 && props.options.actionsColumnIndex < count2) {
              result.push(actionsWidth + "px");
            } else if (count2 < 0 && props.options.actionsColumnIndex < 0 && props.options.actionsColumnIndex >= count2) {
              result.push(actionsWidth + "px");
            }
          }
          if (props.options.selection && count2 > 0) {
            var selectionWidth = CommonValues.selectionMaxWidth(props, _this.state.treeDataMaxLevel);
            result.push(selectionWidth + "px");
          }
          for (var i2 = 0; i2 < Math.abs(count2) && i2 < props.columns.length; i2++) {
            var colDef = props.columns[count2 >= 0 ? i2 : props.columns.length - 1 - i2];
            if (colDef.tableData) {
              if (typeof colDef.tableData.width === "number") {
                result.push(colDef.tableData.width + "px");
              } else {
                result.push(colDef.tableData.width);
              }
            }
          }
          return "calc(" + result.join(" + ") + ")";
        });
        var calculatedProps = _this.getProps(_props);
        _this.setDataManagerFields(calculatedProps, true);
        var renderState = _this.dataManager.getRenderState();
        _this.state = (0, _objectSpread22.default)({
          data: [],
          errorState: void 0
        }, renderState, {
          query: {
            filters: renderState.columns.filter(function(a2) {
              return a2.tableData.filterValue;
            }).map(function(a2) {
              return {
                column: a2,
                operator: "=",
                value: a2.tableData.filterValue
              };
            }),
            orderBy: renderState.columns.find(function(a2) {
              return a2.tableData.id === renderState.orderBy;
            }),
            orderDirection: renderState.orderDirection,
            page: 0,
            pageSize: calculatedProps.options.pageSize,
            search: renderState.searchText,
            totalCount: 0
          },
          showAddRow: false,
          bulkEditOpen: false,
          width: 0
        });
        _this.tableContainerDiv = React62.createRef();
        return _this;
      }
      (0, _createClass2.default)(MaterialTable2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this2 = this;
          this.setState((0, _objectSpread22.default)({}, this.dataManager.getRenderState(), {
            width: this.tableContainerDiv.current.scrollWidth
          }), function() {
            if (_this2.isRemoteData()) {
              _this2.onQueryChange(_this2.state.query);
            }
          });
        }
      }, {
        key: "setDataManagerFields",
        value: function setDataManagerFields(props, isInit) {
          var defaultSortColumnIndex = -1;
          var defaultSortDirection = "";
          if (props && props.options.sorting !== false) {
            defaultSortColumnIndex = props.columns.findIndex(function(a2) {
              return a2.defaultSort && a2.sorting !== false;
            });
            defaultSortDirection = defaultSortColumnIndex > -1 ? props.columns[defaultSortColumnIndex].defaultSort : "";
          }
          this.dataManager.setColumns(props.columns);
          this.dataManager.setDefaultExpanded(props.options.defaultExpanded);
          this.dataManager.changeRowEditing();
          if (this.isRemoteData(props)) {
            this.dataManager.changeApplySearch(false);
            this.dataManager.changeApplyFilters(false);
            this.dataManager.changeApplySort(false);
          } else {
            this.dataManager.changeApplySearch(true);
            this.dataManager.changeApplyFilters(true);
            this.dataManager.changeApplySort(true);
            this.dataManager.setData(props.data);
          }
          var shouldReorder = isInit || defaultSortColumnIndex !== this.dataManager.orderBy && !this.isRemoteData() && defaultSortDirection !== this.dataManager.orderDirection;
          shouldReorder && this.dataManager.changeOrder(defaultSortColumnIndex, defaultSortDirection);
          isInit && this.dataManager.changeSearchText(props.options.searchText || "");
          isInit && this.dataManager.changeCurrentPage(props.options.initialPage ? props.options.initialPage : 0);
          (isInit || this.isRemoteData()) && this.dataManager.changePageSize(props.options.pageSize);
          this.dataManager.changePaging(props.options.paging);
          isInit && this.dataManager.changeParentFunc(props.parentChildData);
          this.dataManager.changeDetailPanelType(props.options.detailPanelType);
        }
      }, {
        key: "cleanColumns",
        value: function cleanColumns(columns) {
          return columns.map(function(col) {
            var colClone = (0, _objectSpread22.default)({}, col);
            delete colClone.tableData;
            return colClone;
          });
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          var fixedPrevColumns = this.cleanColumns(prevProps.columns);
          var fixedPropsColumns = this.cleanColumns(this.props.columns);
          var propsChanged = !(0, _fastDeepEqual.default)(fixedPrevColumns, fixedPropsColumns);
          propsChanged = propsChanged || !(0, _fastDeepEqual.default)(prevProps.options, this.props.options);
          if (!this.isRemoteData()) {
            propsChanged = propsChanged || !(0, _fastDeepEqual.default)(prevProps.data, this.props.data);
          }
          if (propsChanged) {
            var props = this.getProps(this.props);
            this.setDataManagerFields(props);
            this.setState(this.dataManager.getRenderState());
          }
          var count2 = this.isRemoteData() ? this.state.query.totalCount : this.state.data.length;
          var currentPage = this.isRemoteData() ? this.state.query.page : this.state.currentPage;
          var pageSize = this.isRemoteData() ? this.state.query.pageSize : this.state.pageSize;
          if (count2 <= pageSize * currentPage && currentPage !== 0) {
            this.onChangePage(null, Math.max(0, Math.ceil(count2 / pageSize) - 1));
          }
        }
      }, {
        key: "getProps",
        value: function getProps(props) {
          var _this3 = this;
          var calculatedProps = (0, _objectSpread22.default)({}, props || this.props);
          calculatedProps.components = (0, _objectSpread22.default)({}, MaterialTable2.defaultProps.components, calculatedProps.components);
          calculatedProps.icons = (0, _objectSpread22.default)({}, MaterialTable2.defaultProps.icons, calculatedProps.icons);
          calculatedProps.options = (0, _objectSpread22.default)({}, MaterialTable2.defaultProps.options, calculatedProps.options);
          var localization = (0, _objectSpread22.default)({}, MaterialTable2.defaultProps.localization.body, calculatedProps.localization.body);
          calculatedProps.actions = (0, _toConsumableArray2.default)(calculatedProps.actions || []);
          if (calculatedProps.options.selection)
            calculatedProps.actions = calculatedProps.actions.filter(function(a2) {
              return a2;
            }).map(function(action) {
              if (action.position === "auto" || action.isFreeAction === false || action.position === void 0 && action.isFreeAction === void 0) {
                if (typeof action === "function")
                  return {
                    action,
                    position: "toolbarOnSelect"
                  };
                else
                  return (0, _objectSpread22.default)({}, action, {
                    position: "toolbarOnSelect"
                  });
              } else if (action.isFreeAction) {
                if (typeof action === "function")
                  return {
                    action,
                    position: "toolbar"
                  };
                else
                  return (0, _objectSpread22.default)({}, action, {
                    position: "toolbar"
                  });
              } else
                return action;
            });
          else
            calculatedProps.actions = calculatedProps.actions.filter(function(a2) {
              return a2;
            }).map(function(action) {
              if (action.position === "auto" || action.isFreeAction === false || action.position === void 0 && action.isFreeAction === void 0) {
                if (typeof action === "function")
                  return {
                    action,
                    position: "row"
                  };
                else
                  return (0, _objectSpread22.default)({}, action, {
                    position: "row"
                  });
              } else if (action.isFreeAction) {
                if (typeof action === "function")
                  return {
                    action,
                    position: "toolbar"
                  };
                else
                  return (0, _objectSpread22.default)({}, action, {
                    position: "toolbar"
                  });
              } else
                return action;
            });
          if (calculatedProps.editable) {
            if (calculatedProps.editable.onRowAdd) {
              calculatedProps.actions.push({
                icon: calculatedProps.icons.Add,
                tooltip: localization.addTooltip,
                position: "toolbar",
                disabled: !!this.dataManager.lastEditingRow,
                onClick: function onClick() {
                  _this3.dataManager.changeRowEditing();
                  _this3.setState((0, _objectSpread22.default)({}, _this3.dataManager.getRenderState(), {
                    showAddRow: !_this3.state.showAddRow
                  }));
                }
              });
            }
            if (calculatedProps.editable.onRowUpdate) {
              calculatedProps.actions.push(function(rowData) {
                return {
                  icon: calculatedProps.icons.Edit,
                  tooltip: calculatedProps.editable.editTooltip ? calculatedProps.editable.editTooltip(rowData) : localization.editTooltip,
                  disabled: calculatedProps.editable.isEditable && !calculatedProps.editable.isEditable(rowData),
                  hidden: calculatedProps.editable.isEditHidden && calculatedProps.editable.isEditHidden(rowData),
                  onClick: function onClick(e2, rowData2) {
                    _this3.dataManager.changeRowEditing(rowData2, "update");
                    _this3.setState((0, _objectSpread22.default)({}, _this3.dataManager.getRenderState(), {
                      showAddRow: false
                    }));
                  }
                };
              });
            }
            if (calculatedProps.editable.onRowDelete) {
              calculatedProps.actions.push(function(rowData) {
                return {
                  icon: calculatedProps.icons.Delete,
                  tooltip: calculatedProps.editable.deleteTooltip ? calculatedProps.editable.deleteTooltip(rowData) : localization.deleteTooltip,
                  disabled: calculatedProps.editable.isDeletable && !calculatedProps.editable.isDeletable(rowData),
                  hidden: calculatedProps.editable.isDeleteHidden && calculatedProps.editable.isDeleteHidden(rowData),
                  onClick: function onClick(e2, rowData2) {
                    _this3.dataManager.changeRowEditing(rowData2, "delete");
                    _this3.setState((0, _objectSpread22.default)({}, _this3.dataManager.getRenderState(), {
                      showAddRow: false
                    }));
                  }
                };
              });
            }
            if (calculatedProps.editable.onBulkUpdate) {
              calculatedProps.actions.push({
                icon: calculatedProps.icons.Edit,
                tooltip: localization.bulkEditTooltip,
                position: "toolbar",
                hidden: this.dataManager.bulkEditOpen,
                onClick: function onClick() {
                  _this3.dataManager.changeBulkEditOpen(true);
                  _this3.setState(_this3.dataManager.getRenderState());
                }
              });
              calculatedProps.actions.push({
                icon: calculatedProps.icons.Check,
                tooltip: localization.bulkEditApprove,
                position: "toolbar",
                hidden: !this.dataManager.bulkEditOpen,
                onClick: function onClick() {
                  return _this3.onEditingApproved("bulk");
                }
              });
              calculatedProps.actions.push({
                icon: calculatedProps.icons.Clear,
                tooltip: localization.bulkEditCancel,
                position: "toolbar",
                hidden: !this.dataManager.bulkEditOpen,
                onClick: function onClick() {
                  _this3.dataManager.changeBulkEditOpen(false);
                  _this3.dataManager.clearBulkEditChangedRows();
                  _this3.setState(_this3.dataManager.getRenderState());
                }
              });
            }
          }
          return calculatedProps;
        }
      }, {
        key: "renderFooter",
        value: function renderFooter() {
          var props = this.getProps();
          if (props.options.paging) {
            var localization = (0, _objectSpread22.default)({}, MaterialTable2.defaultProps.localization.pagination, this.props.localization.pagination);
            var isOutsidePageNumbers = this.isOutsidePageNumbers(props);
            var currentPage = isOutsidePageNumbers ? Math.min(props.page, Math.floor(props.totalCount / this.state.pageSize)) : this.state.currentPage;
            var totalCount = isOutsidePageNumbers ? props.totalCount : this.state.data.length;
            return React62.createElement(_Table.default, null, React62.createElement(_TableFooter.default, {
              style: {
                display: "grid"
              }
            }, React62.createElement(_TableRow.default, null, React62.createElement(props.components.Pagination, {
              classes: {
                root: props.classes.paginationRoot,
                toolbar: props.classes.paginationToolbar,
                caption: props.classes.paginationCaption,
                selectRoot: props.classes.paginationSelectRoot
              },
              style: {
                float: props.theme.direction === "rtl" ? "" : "right",
                overflowX: "auto"
              },
              colSpan: 3,
              count: this.isRemoteData() ? this.state.query.totalCount : totalCount,
              icons: props.icons,
              rowsPerPage: this.state.pageSize,
              rowsPerPageOptions: props.options.pageSizeOptions,
              SelectProps: {
                renderValue: function renderValue(value) {
                  return React62.createElement("div", {
                    style: {
                      padding: "0px 5px"
                    }
                  }, value + " " + localization.labelRowsSelect + " ");
                }
              },
              page: this.isRemoteData() ? this.state.query.page : currentPage,
              onPageChange: this.onChangePage,
              onRowsPerPageChange: this.onChangeRowsPerPage,
              ActionsComponent: function ActionsComponent(subProps) {
                return props.options.paginationType === "normal" ? React62.createElement(_components.MTablePagination, (0, _extends2.default)({}, subProps, {
                  icons: props.icons,
                  localization,
                  showFirstLastPageButtons: props.options.showFirstLastPageButtons
                })) : React62.createElement(_components.MTableSteppedPagination, (0, _extends2.default)({}, subProps, {
                  icons: props.icons,
                  localization,
                  showFirstLastPageButtons: props.options.showFirstLastPageButtons
                }));
              },
              labelDisplayedRows: function labelDisplayedRows(row) {
                return localization.labelDisplayedRows.replace("{from}", row.from).replace("{to}", row.to).replace("{count}", row.count);
              },
              labelRowsPerPage: localization.labelRowsPerPage
            }))));
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this4 = this;
          var props = this.getProps();
          return React62.createElement(_reactBeautifulDnd.DragDropContext, {
            onDragEnd: this.onDragEnd,
            nonce: props.options.cspNonce
          }, React62.createElement(props.components.Container, {
            style: (0, _objectSpread22.default)({
              position: "relative"
            }, props.style)
          }, props.options.paginationPosition === "top" || props.options.paginationPosition === "both" ? this.renderFooter() : null, props.options.toolbar && React62.createElement(props.components.Toolbar, {
            actions: props.actions,
            components: props.components,
            selectedRows: this.state.selectedCount > 0 ? this.state.originalData.filter(function(a2) {
              return a2.tableData.checked;
            }) : [],
            columns: this.state.columns,
            columnsButton: props.options.columnsButton,
            icons: props.icons,
            exportAllData: props.options.exportAllData,
            exportButton: props.options.exportButton,
            exportDelimiter: props.options.exportDelimiter,
            exportFileName: props.options.exportFileName,
            exportCsv: props.options.exportCsv,
            exportPdf: props.options.exportPdf,
            getFieldValue: this.dataManager.getFieldValue,
            data: this.state.data,
            renderData: this.state.renderData,
            search: props.options.search,
            showTitle: props.options.showTitle,
            showTextRowsSelected: props.options.showTextRowsSelected,
            toolbarButtonAlignment: props.options.toolbarButtonAlignment,
            searchFieldAlignment: props.options.searchFieldAlignment,
            searchAutoFocus: props.options.searchAutoFocus,
            searchFieldStyle: props.options.searchFieldStyle,
            searchFieldVariant: props.options.searchFieldVariant,
            title: props.title,
            searchText: this.dataManager.searchText,
            onSearchChanged: this.onSearchChangeDebounce,
            dataManager: this.dataManager,
            onColumnsChanged: this.onChangeColumnHidden,
            localization: (0, _objectSpread22.default)({}, MaterialTable2.defaultProps.localization.toolbar, this.props.localization.toolbar)
          }), props.options.grouping && React62.createElement(props.components.Groupbar, {
            icons: props.icons,
            localization: (0, _objectSpread22.default)({}, MaterialTable2.defaultProps.localization.grouping, props.localization.grouping),
            groupColumns: this.state.columns.filter(function(col) {
              return col.tableData.groupOrder > -1;
            }).sort(function(col1, col2) {
              return col1.tableData.groupOrder - col2.tableData.groupOrder;
            }),
            onSortChanged: this.onChangeGroupOrder,
            onGroupRemoved: this.onGroupRemoved
          }), React62.createElement(ScrollBar, {
            double: props.options.doubleHorizontalScroll
          }, React62.createElement(_reactBeautifulDnd.Droppable, {
            droppableId: "headers",
            direction: "horizontal"
          }, function(provided, snapshot) {
            var table = _this4.renderTable(props);
            return React62.createElement("div", {
              ref: provided.innerRef
            }, React62.createElement("div", {
              ref: _this4.tableContainerDiv,
              style: {
                maxHeight: props.options.maxBodyHeight,
                minHeight: props.options.minBodyHeight,
                overflowY: props.options.overflowY
              }
            }, _this4.state.width && props.options.fixedColumns && props.options.fixedColumns.right ? React62.createElement("div", {
              style: {
                width: _this4.getColumnsWidth(props, -1 * props.options.fixedColumns.right),
                position: "absolute",
                top: 0,
                right: 0,
                boxShadow: "-2px 0px 15px rgba(125,147,178,.25)",
                overflowX: "hidden",
                zIndex: 11
              }
            }, React62.createElement("div", {
              style: {
                width: _this4.state.width,
                background: "white",
                transform: "translateX(calc(".concat(_this4.getColumnsWidth(props, -1 * props.options.fixedColumns.right), " - 100%))")
              }
            }, table)) : null, React62.createElement("div", null, table), _this4.state.width && props.options.fixedColumns && props.options.fixedColumns.left ? React62.createElement("div", {
              style: {
                width: _this4.getColumnsWidth(props, props.options.fixedColumns.left),
                position: "absolute",
                top: 0,
                left: 0,
                boxShadow: "2px 0px 15px rgba(125,147,178,.25)",
                overflowX: "hidden",
                zIndex: 11
              }
            }, React62.createElement("div", {
              style: {
                width: _this4.state.width,
                background: "white"
              }
            }, table)) : null), provided.placeholder);
          })), (this.state.isLoading || props.isLoading) && props.options.loadingType === "linear" && React62.createElement("div", {
            style: {
              position: "relative",
              width: "100%"
            }
          }, React62.createElement("div", {
            style: {
              position: "absolute",
              top: 0,
              left: 0,
              height: "100%",
              width: "100%"
            }
          }, React62.createElement(_LinearProgress.default, null))), props.options.paginationPosition === "bottom" || props.options.paginationPosition === "both" ? this.renderFooter() : null, (this.state.isLoading || props.isLoading) && props.options.loadingType === "overlay" && React62.createElement("div", {
            style: {
              position: "absolute",
              top: 0,
              left: 0,
              height: "100%",
              width: "100%",
              zIndex: 11
            }
          }, React62.createElement(props.components.OverlayLoading, {
            theme: props.theme
          })), this.state.errorState && this.state.errorState.errorCause === "query" && React62.createElement("div", {
            style: {
              position: "absolute",
              top: 0,
              left: 0,
              height: "100%",
              width: "100%",
              zIndex: 11
            }
          }, React62.createElement(props.components.OverlayError, {
            error: this.state.errorState,
            retry: this.retry,
            theme: props.theme,
            icon: props.icons.Retry
          }))));
        }
      }]);
      return MaterialTable2;
    }(React62.Component);
    exports.default = MaterialTable;
    var style2 = function style3() {
      return {
        horizontalScrollContainer: {
          "& ::-webkit-scrollbar": {
            "-webkit-appearance": "none"
          },
          "& ::-webkit-scrollbar:horizontal": {
            height: 8
          },
          "& ::-webkit-scrollbar-thumb": {
            borderRadius: 4,
            border: "2px solid white",
            backgroundColor: "rgba(0, 0, 0, .3)"
          }
        }
      };
    };
    var ScrollBar = (0, _styles.withStyles)(style2)(function(_ref) {
      var double = _ref.double, children = _ref.children, classes = _ref.classes;
      if (double) {
        return React62.createElement(_reactDoubleScrollbar.default, null, children);
      } else {
        return React62.createElement("div", {
          className: classes.horizontalScrollContainer,
          style: {
            overflowX: "auto",
            position: "relative"
          }
        }, children);
      }
    });
  }
});

// node_modules/material-table/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/material-table/dist/index.js"(exports) {
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      MTable: true
    };
    Object.defineProperty(exports, "MTable", {
      enumerable: true,
      get: function get2() {
        return _materialTable.default;
      }
    });
    exports.default = void 0;
    var _extends2 = _interopRequireDefault(require_extends());
    require_polyfill();
    var _react = _interopRequireDefault(require_react());
    var _defaultProps = require_default_props();
    var _propTypes = require_prop_types3();
    var _materialTable = _interopRequireDefault(require_material_table());
    var _styles = (init_styles2(), __toCommonJS(styles_exports2));
    var _components = require_components();
    Object.keys(_components).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key))
        return;
      if (key in exports && exports[key] === _components[key])
        return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get2() {
          return _components[key];
        }
      });
    });
    _materialTable.default.defaultProps = _defaultProps.defaultProps;
    _materialTable.default.propTypes = _propTypes.propTypes;
    var styles = function styles2(theme) {
      return {
        paginationRoot: {
          width: "100%"
        },
        paginationToolbar: {
          padding: 0,
          width: "100%"
        },
        paginationCaption: {
          display: "none"
        },
        paginationSelectRoot: {
          margin: 0
        }
      };
    };
    var _default = (0, _styles.withStyles)(styles, {
      withTheme: true
    })(function(props) {
      return _react.default.createElement(_materialTable.default, (0, _extends2.default)({}, props, {
        ref: props.tableRef
      }));
    });
    exports.default = _default;
  }
});
export default require_dist2();
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v17.0.2
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

jss/dist/jss.esm.js:
  (**
   * A better abstraction over CSS.
   *
   * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
   * @website https://github.com/cssinjs/jss
   * @license MIT
   *)

@mui/styles/index.js:
  (**
   * @mui/styles v5.15.14
   *
   * @license MIT
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@mui/lab/index.js:
  (**
   * @mui/lab v5.0.0-alpha.169
   *
   * @license MIT
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

classnames/index.js:
  (*!
    Copyright (c) 2017 Jed Watson.
    Licensed under the MIT License (MIT), see
    http://jedwatson.github.io/classnames
  *)

jspdf/dist/jspdf.es.min.js:
  (** @license
   *
   * jsPDF - PDF Document creation from JavaScript
   * Version 2.1.0 Built on 2020-08-25T16:02:38.141Z
   *                      CommitID 00000000
   *
   * Copyright (c) 2010-2020 James Hall <james@parall.ax>, https://github.com/MrRio/jsPDF
   *               2015-2020 yWorks GmbH, http://www.yworks.com
   *               2015-2020 Lukas Holländer <lukas.hollaender@yworks.com>, https://github.com/HackbrettXXX
   *               2016-2018 Aras Abbasi <aras.abbasi@gmail.com>
   *               2010 Aaron Spike, https://github.com/acspike
   *               2012 Willow Systems Corporation, willow-systems.com
   *               2012 Pablo Hess, https://github.com/pablohess
   *               2012 Florian Jenett, https://github.com/fjenett
   *               2013 Warren Weckesser, https://github.com/warrenweckesser
   *               2013 Youssef Beddad, https://github.com/lifof
   *               2013 Lee Driscoll, https://github.com/lsdriscoll
   *               2013 Stefan Slonevskiy, https://github.com/stefslon
   *               2013 Jeremy Morel, https://github.com/jmorel
   *               2013 Christoph Hartmann, https://github.com/chris-rock
   *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
   *               2014 James Makes, https://github.com/dollaruw
   *               2014 Diego Casorran, https://github.com/diegocr
   *               2014 Steven Spungin, https://github.com/Flamenco
   *               2014 Kenneth Glassey, https://github.com/Gavvers
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
   * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
   * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
   * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
   *
   * Contributor(s):
   *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,
   *    kim3er, mfo, alnorth, Flamenco
   *)
  (**
   * @license
   * FileSaver.js
   * A saveAs() FileSaver implementation.
   *
   * By Eli Grey, http://eligrey.com
   *
   * License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)
   * source  : http://purl.eligrey.com/github/FileSaver.js
   *)
  (**
   * A class to parse color values
   * @author Stoyan Stefanov <sstoo@gmail.com>
   * {@link   http://www.phpied.com/rgb-color-parser-in-javascript/}
   * @license Use it if you like it
   *)
  (** @license
   * jsPDF addImage plugin
   * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/
   *               2013 Chris Dowling, https://github.com/gingerchris
   *               2013 Trinh Ho, https://github.com/ineedfat
   *               2013 Edwin Alejandro Perez, https://github.com/eaparango
   *               2013 Norah Smith, https://github.com/burnburnrocket
   *               2014 Diego Casorran, https://github.com/diegocr
   *               2014 James Robb, https://github.com/jamesbrobb
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
   * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
   * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
   * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
   *)
  (**
   * @license
   Copyright (c) 2013 Gildas Lormeau. All rights reserved.
  
   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions are met:
  
   1. Redistributions of source code must retain the above copyright notice,
   this list of conditions and the following disclaimer.
  
   2. Redistributions in binary form must reproduce the above copyright 
   notice, this list of conditions and the following disclaimer in 
   the documentation and/or other materials provided with the distribution.
  
   3. The names of the authors may not be used to endorse or promote products
   derived from this software without specific prior written permission.
  
   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,
   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
   FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,
   INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,
   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
   OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
   EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   *)
  (**
   * @license
   * jsPDF filters PlugIn
   * Copyright (c) 2014 Aras Abbasi
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   *)
  (**
   * @license
   * Extracted from pdf.js
   * https://github.com/andreasgal/pdf.js
   *
   * Copyright (c) 2011 Mozilla Foundation
   *
   * Contributors: Andreas Gal <gal@mozilla.com>
   *               Chris G Jones <cjones@mozilla.com>
   *               Shaon Barman <shaon.barman@gmail.com>
   *               Vivien Nicolas <21@vingtetun.org>
   *               Justin D'Arcangelo <justindarc@gmail.com>
   *               Yury Delendik
   *
   * Permission is hereby granted, free of charge, to any person obtaining a
   * copy of this software and associated documentation files (the "Software"),
   * to deal in the Software without restriction, including without limitation
   * the rights to use, copy, modify, merge, publish, distribute, sublicense,
   * and/or sell copies of the Software, and to permit persons to whom the
   * Software is furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   * DEALINGS IN THE SOFTWARE.
   *)
  (**
   * @license
   * (c) Dean McNamee <dean@gmail.com>, 2013.
   *
   * https://github.com/deanm/omggif
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to
   * deal in the Software without restriction, including without limitation the
   * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
   * sell copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
   * IN THE SOFTWARE.
   *
   * omggif is a JavaScript implementation of a GIF 89a encoder and decoder,
   * including animation and compression.  It does not rely on any specific
   * underlying system, so should run in the browser, Node, or Plask.
   *)
  (**
   * @license
    Copyright (c) 2008, Adobe Systems Incorporated
    All rights reserved.
  
    Redistribution and use in source and binary forms, with or without 
    modification, are permitted provided that the following conditions are
    met:
  
    * Redistributions of source code must retain the above copyright notice, 
      this list of conditions and the following disclaimer.
    
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the 
      documentation and/or other materials provided with the distribution.
    
    * Neither the name of Adobe Systems Incorporated nor the names of its 
      contributors may be used to endorse or promote products derived from 
      this software without specific prior written permission.
  
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
    IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
    CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *)
  (**
   * @license
   * Copyright (c) 2017 Aras Abbasi
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   *)
  (**
   * @license
   *
   * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
   * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
   * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
   * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
   * ====================================================================
   *)

jspdf-autotable/dist/jspdf.plugin.autotable.js:
  (*!
   * 
   *             jsPDF AutoTable plugin v3.5.9
   *             
   *             Copyright (c) 2020 Simon Bengtsson, https://github.com/simonbengtsson/jsPDF-AutoTable
   *             Licensed under the MIT License.
   *             http://opensource.org/licenses/mit-license
   *         
   *)
*/
//# sourceMappingURL=material-table.js.map
